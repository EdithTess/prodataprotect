{"version":3,"sources":["webpack:///src/@fury/animations/scale-in.animation.ts","webpack:///src/app/pages/forms/form-wizard/form-wizard-routing.module.ts","webpack:///src/app/pages/forms/form-wizard/form-wizard.component.ts","webpack:///src/app/pages/forms/form-wizard/form-wizard.component.html"],"names":["scaleInAnimation","transform","routes","path","component","FormWizardRoutingModule","forChild","imports","exports","FormWizardComponent","fb","cd","snackbar","phonePrefixOptions","passwordInputType","accountFormGroup","group","username","required","name","email","phonePrefix","phone","passwordFormGroup","password","compose","minLength","passwordConfirm","confirmFormGroup","terms","requiredTrue","verticalAccountFormGroup","verticalPasswordFormGroup","verticalConfirmFormGroup","markForCheck","open","duration","submit","selector","templateUrl","styleUrls","animations"],"mappings":"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","file":"default~modules-company-registration-company-registration-module~modules-complaints-complaints-modul~f6349a0e-es5.js","sourcesContent":["import { animate, style, transition, trigger } from '@angular/animations';\n\nexport const scaleInAnimation = trigger('scaleIn', [\n  transition(':enter', [\n    style({\n      transform: 'scale(0)'\n    }),\n    animate('400ms cubic-bezier(0.35, 0, 0.25, 1)', style({\n      transform: 'scale(1)'\n    }))\n  ])\n]);\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FormWizardComponent } from './form-wizard.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: FormWizardComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class FormWizardRoutingModule {\n}\n","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { fadeInRightAnimation } from '../../../../@fury/animations/fade-in-right.animation';\nimport { scaleInAnimation } from '../../../../@fury/animations/scale-in.animation';\nimport { fadeInUpAnimation } from '../../../../@fury/animations/fade-in-up.animation';\n\n@Component({\n  selector: 'fury-form-wizard',\n  templateUrl: './form-wizard.component.html',\n  styleUrls: ['./form-wizard.component.scss'],\n  animations: [fadeInUpAnimation, fadeInRightAnimation, scaleInAnimation]\n})\nexport class FormWizardComponent implements OnInit {\n\n  accountFormGroup: FormGroup;\n  passwordFormGroup: FormGroup;\n  confirmFormGroup: FormGroup;\n\n  verticalAccountFormGroup: FormGroup;\n  verticalPasswordFormGroup: FormGroup;\n  verticalConfirmFormGroup: FormGroup;\n\n  phonePrefixOptions = ['+1', '+27', '+44', '+49', '+61', '+91'];\n\n  passwordInputType = 'password';\n\n  constructor(private fb: FormBuilder,\n              private cd: ChangeDetectorRef,\n              private snackbar: MatSnackBar) {\n  }\n\n  ngOnInit() {\n    /**\n     * Horizontal Stepper\n     * @type {FormGroup}\n     */\n    this.accountFormGroup = this.fb.group({\n      username: [null, Validators.required],\n      name: [null, Validators.required],\n      email: [null, Validators.required],\n      phonePrefix: [this.phonePrefixOptions[3]],\n      phone: [],\n    });\n\n    this.passwordFormGroup = this.fb.group({\n      password: [\n        null,\n        Validators.compose(\n          [\n            Validators.required,\n            Validators.minLength(6)\n          ]\n        )\n      ],\n      passwordConfirm: [null, Validators.required]\n    });\n\n    this.confirmFormGroup = this.fb.group({\n      terms: [null, Validators.requiredTrue]\n    });\n\n    /**\n     * Vertical Stepper\n     * @type {FormGroup}\n     */\n    this.verticalAccountFormGroup = this.fb.group({\n      username: [null, Validators.required],\n      name: [null, Validators.required],\n      email: [null, Validators.required],\n      phonePrefix: [this.phonePrefixOptions[3]],\n      phone: [],\n    });\n\n    this.verticalPasswordFormGroup = this.fb.group({\n      password: [\n        null,\n        Validators.compose(\n          [\n            Validators.required,\n            Validators.minLength(6)\n          ]\n        )\n      ],\n      passwordConfirm: [null, Validators.required]\n    });\n\n    this.verticalConfirmFormGroup = this.fb.group({\n      terms: [null, Validators.requiredTrue]\n    });\n  }\n\n  showPassword() {\n    this.passwordInputType = 'text';\n    this.cd.markForCheck();\n  }\n\n  hidePassword() {\n    this.passwordInputType = 'password';\n    this.cd.markForCheck();\n  }\n\n  submit() {\n    this.snackbar.open('Hooray! You successfully created your account.', null, {\n      duration: 5000\n    });\n  }\n}\n","<fury-page>\n  <fury-title class=\"title\">\n    <mat-icon [@scaleIn]>description</mat-icon>\n    <span [@fadeInRight]>Form Wizard</span>\n  </fury-title>\n\n  <div fxLayout=\"column\" fxLayoutAlign=\"start center\">\n\n    <div [@fadeInUp] class=\"card\">\n      <mat-horizontal-stepper #stepper=\"matHorizontalStepper\" [linear]=\"true\">\n        <mat-step [stepControl]=\"accountFormGroup\">\n          <form [formGroup]=\"accountFormGroup\">\n            <ng-template matStepLabel>Create Account</ng-template>\n\n            <div class=\"heading\">Create Account</div>\n            <div class=\"subheading\">Set up your account for testing purposes.</div>\n\n            <div class=\"content\" fxLayout=\"column\" fxLayoutGap=\"8px\">\n              <mat-form-field fxFlex=\"auto\">\n                <mat-label>Account Username</mat-label>\n                <input formControlName=\"username\" matInput required>\n                <mat-hint>This will be your unique login name.</mat-hint>\n              </mat-form-field>\n\n              <mat-form-field fxFlex=\"auto\">\n                <mat-label>Name</mat-label>\n                <input formControlName=\"name\" matInput required>\n                <mat-hint>How may we call you?</mat-hint>\n              </mat-form-field>\n\n              <div fxLayout=\"column\" fxLayout.gt-xs=\"row\" fxLayoutGap=\"8px\" fxLayoutGap.gt-xs=\"24px\">\n                <mat-form-field fxFlex=\"auto\">\n                  <mat-label>E-Mail</mat-label>\n                  <input formControlName=\"email\" matInput required>\n                  <mat-hint align=\"end\">example@example.com</mat-hint>\n                </mat-form-field>\n\n                <div fxFlex=\"auto\" fxLayout=\"row\" fxLayoutGap=\"8px\">\n                  <mat-form-field fxFlex=\"1 1 auto\">\n                    <mat-label>Code</mat-label>\n                    <mat-select formControlName=\"phonePrefix\">\n                      <mat-option *ngFor=\"let option of phonePrefixOptions\" [value]=\"option\">{{ option }}</mat-option>\n                    </mat-select>\n                  </mat-form-field>\n                  <mat-form-field fxFlex=\"2 1 auto\">\n                    <mat-label>Phone Number</mat-label>\n                    <input formControlName=\"phone\" matInput>\n                    <mat-hint align=\"end\"></mat-hint>\n                  </mat-form-field>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"actions\" fxLayout=\"row\" fxLayoutAlign=\"end center\" fxLayoutGap=\"8px\">\n              <button (click)=\"stepper.reset()\" [disabled]=\"accountFormGroup.pristine\" color=\"primary\" mat-button\n                      type=\"button\">RESET\n              </button>\n              <button [disabled]=\"accountFormGroup.invalid\" color=\"primary\" mat-raised-button matStepperNext>NEXT\n              </button>\n            </div>\n          </form>\n        </mat-step>\n\n        <mat-step [stepControl]=\"passwordFormGroup\">\n          <form [formGroup]=\"passwordFormGroup\">\n            <ng-template matStepLabel>Select a Password</ng-template>\n\n            <div class=\"heading\">Select a Password</div>\n            <div class=\"subheading\">Enter your password you will use to log in.</div>\n\n            <div class=\"content\" fxLayout=\"column\" fxLayoutGap=\"8px\">\n              <mat-form-field fxFlex=\"auto\">\n                <mat-label>Password</mat-label>\n                <input [type]=\"passwordInputType\" formControlName=\"password\" matInput required>\n                <button (click)=\"showPassword()\" *ngIf=\"passwordInputType === 'password'\" mat-icon-button matSuffix\n                        type=\"button\">\n                  <mat-icon>visibility</mat-icon>\n                </button>\n                <button (click)=\"hidePassword()\" *ngIf=\"passwordInputType === 'text'\" mat-icon-button matSuffix\n                        type=\"button\">\n                  <mat-icon>visibility_off</mat-icon>\n                </button>\n                <mat-hint>Your password should be atleast 6 characters long.</mat-hint>\n              </mat-form-field>\n\n              <mat-form-field fxFlex=\"auto\">\n                <mat-label>Confirm Password</mat-label>\n                <input [type]=\"passwordInputType\" formControlName=\"passwordConfirm\" matInput required>\n                <button (click)=\"showPassword()\" *ngIf=\"passwordInputType === 'password'\" mat-icon-button matSuffix\n                        type=\"button\">\n                  <mat-icon>visibility</mat-icon>\n                </button>\n                <button (click)=\"hidePassword()\" *ngIf=\"passwordInputType === 'text'\" mat-icon-button matSuffix\n                        type=\"button\">\n                  <mat-icon>visibility_off</mat-icon>\n                </button>\n                <mat-hint>Please type in your password again.</mat-hint>\n              </mat-form-field>\n            </div>\n\n            <div class=\"actions\" fxLayout=\"row\" fxLayoutAlign=\"end center\" fxLayoutGap=\"8px\">\n              <button color=\"primary\" mat-button matStepperPrevious type=\"button\">PREVIOUS</button>\n              <button [disabled]=\"passwordFormGroup.invalid\" color=\"primary\" mat-raised-button matStepperNext>NEXT\n              </button>\n            </div>\n          </form>\n        </mat-step>\n\n        <mat-step [stepControl]=\"confirmFormGroup\">\n          <form [formGroup]=\"confirmFormGroup\">\n            <ng-template matStepLabel>Confirm Creation</ng-template>\n\n            <div class=\"heading\">You're almost there!</div>\n            <div class=\"subheading\">To finish registration, accept our terms of service and click on \"Create Account\".\n            </div>\n\n            <div class=\"content\" fxLayout=\"column\" fxLayoutGap=\"8px\">\n              <mat-checkbox class=\"checkbox\" formControlName=\"terms\">\n                I agree to the terms of service and the usual stuff. *\n              </mat-checkbox>\n            </div>\n\n            <div class=\"actions\" fxLayout=\"row\" fxLayoutAlign=\"end center\" fxLayoutGap=\"8px\">\n              <button color=\"primary\" mat-button matStepperPrevious type=\"button\">PREVIOUS</button>\n              <button (click)=\"submit()\" [disabled]=\"confirmFormGroup.invalid\" color=\"primary\" mat-raised-button\n                      matStepperNext>\n                CREATE ACCOUNT\n              </button>\n            </div>\n          </form>\n\n        </mat-step>\n      </mat-horizontal-stepper>\n    </div>\n\n    <div [@fadeInUp] class=\"card\">\n      <mat-vertical-stepper #verticalStepper=\"matVerticalStepper\" [linear]=\"true\">\n        <mat-step [stepControl]=\"verticalAccountFormGroup\">\n          <form [formGroup]=\"verticalAccountFormGroup\">\n            <ng-template matStepLabel>Create Account</ng-template>\n\n            <div class=\"heading\">Create Account</div>\n            <div class=\"subheading\">Set up your account for testing purposes.</div>\n\n            <div class=\"content\" fxLayout=\"column\" fxLayoutGap=\"8px\">\n              <mat-form-field fxFlex=\"auto\">\n                <mat-label>Account Username</mat-label>\n                <input formControlName=\"username\" matInput required>\n                <mat-hint>This will be your unique login name.</mat-hint>\n              </mat-form-field>\n\n              <mat-form-field fxFlex=\"auto\">\n                <mat-label>Name</mat-label>\n                <input formControlName=\"name\" matInput required>\n                <mat-hint>How may we call you?</mat-hint>\n              </mat-form-field>\n\n              <div fxLayout=\"column\" fxLayout.gt-xs=\"row\" fxLayoutGap=\"8px\" fxLayoutGap.gt-xs=\"24px\">\n                <mat-form-field fxFlex=\"auto\">\n                  <mat-label>E-Mail</mat-label>\n                  <input formControlName=\"email\" matInput required>\n                  <mat-hint align=\"end\">example@example.com</mat-hint>\n                </mat-form-field>\n\n                <div fxFlex=\"auto\" fxLayout=\"row\" fxLayoutGap=\"8px\">\n                  <mat-form-field fxFlex=\"1 1 auto\">\n                    <mat-label>Code</mat-label>\n                    <mat-select formControlName=\"phonePrefix\">\n                      <mat-option *ngFor=\"let option of phonePrefixOptions\" [value]=\"option\">{{ option }}</mat-option>\n                    </mat-select>\n                  </mat-form-field>\n                  <mat-form-field fxFlex=\"2 1 auto\">\n                    <mat-label>Phone Number</mat-label>\n                    <input formControlName=\"phone\" matInput>\n                    <mat-hint align=\"end\"></mat-hint>\n                  </mat-form-field>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"actions\" fxLayout=\"row\" fxLayoutAlign=\"end center\" fxLayoutGap=\"8px\">\n              <button (click)=\"verticalStepper.reset()\" [disabled]=\"verticalAccountFormGroup.pristine\" color=\"primary\"\n                      mat-button\n                      type=\"button\">RESET\n              </button>\n              <button [disabled]=\"verticalAccountFormGroup.invalid\" color=\"primary\" mat-raised-button matStepperNext>\n                NEXT\n              </button>\n            </div>\n          </form>\n        </mat-step>\n\n        <mat-step [stepControl]=\"verticalPasswordFormGroup\">\n          <form [formGroup]=\"verticalPasswordFormGroup\">\n            <ng-template matStepLabel>Select a Password</ng-template>\n\n            <div class=\"heading\">Select a Password</div>\n            <div class=\"subheading\">Enter your password you will use to log in.</div>\n\n            <div class=\"content\" fxLayout=\"column\" fxLayoutGap=\"8px\">\n              <mat-form-field fxFlex=\"auto\">\n                <mat-label>Password</mat-label>\n                <input [type]=\"passwordInputType\" formControlName=\"password\" matInput required>\n                <button (click)=\"showPassword()\" *ngIf=\"passwordInputType === 'password'\" mat-icon-button matSuffix\n                        type=\"button\">\n                  <mat-icon>visibility</mat-icon>\n                </button>\n                <button (click)=\"hidePassword()\" *ngIf=\"passwordInputType === 'text'\" mat-icon-button matSuffix\n                        type=\"button\">\n                  <mat-icon>visibility_off</mat-icon>\n                </button>\n                <mat-hint>Your password should be atleast 6 characters long.</mat-hint>\n              </mat-form-field>\n\n              <mat-form-field fxFlex=\"auto\">\n                <mat-label>Confirm Password</mat-label>\n                <input [type]=\"passwordInputType\" formControlName=\"passwordConfirm\" matInput required>\n                <button (click)=\"showPassword()\" *ngIf=\"passwordInputType === 'password'\" mat-icon-button matSuffix\n                        type=\"button\">\n                  <mat-icon>visibility</mat-icon>\n                </button>\n                <button (click)=\"hidePassword()\" *ngIf=\"passwordInputType === 'text'\" mat-icon-button matSuffix\n                        type=\"button\">\n                  <mat-icon>visibility_off</mat-icon>\n                </button>\n                <mat-hint>Please type in your password again.</mat-hint>\n              </mat-form-field>\n            </div>\n\n            <div class=\"actions\" fxLayout=\"row\" fxLayoutAlign=\"end center\" fxLayoutGap=\"8px\">\n              <button color=\"primary\" mat-button matStepperPrevious type=\"button\">PREVIOUS</button>\n              <button [disabled]=\"verticalPasswordFormGroup.invalid\" color=\"primary\" mat-raised-button matStepperNext>\n                NEXT\n              </button>\n            </div>\n          </form>\n        </mat-step>\n\n        <mat-step [stepControl]=\"verticalConfirmFormGroup\">\n          <form [formGroup]=\"verticalConfirmFormGroup\">\n            <ng-template matStepLabel>Confirm Creation</ng-template>\n\n            <div class=\"heading\">You're almost there!</div>\n            <div class=\"subheading\">To finish registration, accept our terms of service and click on \"Create Account\".\n            </div>\n\n            <div class=\"content\" fxLayout=\"column\" fxLayoutGap=\"8px\">\n              <mat-checkbox class=\"checkbox\" formControlName=\"terms\">\n                I agree to the terms of service and the usual stuff. *\n              </mat-checkbox>\n            </div>\n\n            <div class=\"actions\" fxLayout=\"row\" fxLayoutAlign=\"end center\" fxLayoutGap=\"8px\">\n              <button color=\"primary\" mat-button matStepperPrevious type=\"button\">PREVIOUS</button>\n              <button (click)=\"submit()\" [disabled]=\"verticalConfirmFormGroup.invalid\" color=\"primary\" mat-raised-button\n                      matStepperNext>\n                CREATE ACCOUNT\n              </button>\n            </div>\n          </form>\n\n        </mat-step>\n      </mat-vertical-stepper>\n    </div>\n  </div>\n\n</fury-page>\n"]}