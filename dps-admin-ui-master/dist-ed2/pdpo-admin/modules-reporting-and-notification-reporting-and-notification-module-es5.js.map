{"version":3,"sources":["webpack:///src/app/modules/reporting-and-notification/components/data-breach-impact/data-breach-impact.component.ts","webpack:///src/app/modules/reporting-and-notification/components/data-breach-impact/data-breach-impact.component.html","webpack:///src/app/modules/reporting-and-notification/components/data-breach-additional-info/data-breach-additional-info.component.ts","webpack:///src/app/modules/reporting-and-notification/components/data-breach-additional-info/data-breach-additional-info.component.html","webpack:///src/app/modules/reporting-and-notification/breach-model.ts","webpack:///src/app/modules/reporting-and-notification/components/breach-comments/breach-comments.component.ts","webpack:///src/app/modules/reporting-and-notification/components/breach-comments/breach-comments.component.html","webpack:///src/app/modules/reporting-and-notification/components/data-breach-edit/data-breach-edit.component.ts","webpack:///src/app/modules/reporting-and-notification/components/data-breach-edit/data-breach-edit.component.html","webpack:///src/app/modules/reporting-and-notification/components/data-breach-personal-data-itemised/data-breach-personal-data-itemised.component.ts","webpack:///src/app/modules/reporting-and-notification/components/data-breach-personal-data-itemised/data-breach-personal-data-itemised.component.html","webpack:///src/app/modules/reporting-and-notification/components/data-breach-policy-item/data-breach-policy-item.component.ts","webpack:///src/app/modules/reporting-and-notification/components/data-breach-policy-item/data-breach-policy-item.component.html","webpack:///src/app/modules/reporting-and-notification/components/data-breach-controls/data-breach-controls.component.ts","webpack:///src/app/modules/reporting-and-notification/components/data-breach-controls/data-breach-controls.component.html","webpack:///src/app/modules/reporting-and-notification/reporting-and-notification-routing.module.ts","webpack:///src/app/modules/reporting-and-notification/components/data-breach-consquences/data-breach-consquences.component.ts","webpack:///src/app/modules/reporting-and-notification/components/data-breach-consquences/data-breach-consquences.component.html","webpack:///src/app/modules/reporting-and-notification/components/find-reported-breaches/find-reported-breaches.component.ts","webpack:///src/app/modules/reporting-and-notification/components/find-reported-breaches/find-reported-breaches.component.html","webpack:///src/app/modules/reporting-and-notification/data-breach.service.ts","webpack:///src/app/modules/reporting-and-notification/components/data-breach-potential-consquences/data-breach-potential-consquences.component.ts","webpack:///src/app/modules/reporting-and-notification/components/data-breach-potential-consquences/data-breach-potential-consquences.component.html","webpack:///src/app/modules/reporting-and-notification/reporting-and-notification.module.ts","webpack:///src/app/modules/reporting-and-notification/components/data-breach-accessment/data-breach-accessment.component.ts","webpack:///src/app/modules/reporting-and-notification/components/data-breach-accessment/data-breach-accessment.component.html"],"names":["DataBreachImpactComponent","fb","auth","utilService","snackBar","subject$","data$","asObservable","impactOfBreachEvent","impactOfBreach","subscriptions","errors","list","displayColumns","$impactOfBreaches","$processingEvent","$errorsEvent","buttonIcon","buttonLabel","isEditingImpactOfBreach","tableEditable","impactOfBreachIndex","impactOfBreachNumber","initForms","impactOfBreaches","forEach","push","getSampleJson","subscribe","dataCategories","initMainObject","impactOfBreachFormGroup","group","potentialImpact","required","option","valid","checkForDuplicates","snackBarAlert","duration","mapFormControlToControl","resetImpactOfBreach","console","log","reset","validatePolicyLabels","manageImpactOfBreach","id","impact","get","value","find","item","rating","index","splice","emit","setValue","formValid","map","document","selector","templateUrl","styleUrls","isViewOnly","DataBreachAdditionalInfoComponent","BreachModel","TableBreachModel","breach","BreachStatusID","DataBreachID","DataBreachTrackingNo","CategoriesOfDataSubjectAffected","IncidentDate","DataBreachType","NumberOfDataSubjects","NumberOfRecordsHeld","OrganisationID","OrganisationName","StatusName","PolicyModel","PersonalDataRisk","PersonalDataModel","PersonalData","ContainmentAndRecoveryModel","MiscellaneousModel","DataProtectionOfficerModel","ImpactOfBreachModel","CauseOfBreach","BreachCauses","PotentialHarms","ConsequenceModel","BreachDescriptionQuestions","PotentialConsequenceModel","CAUSE_OF_BREACH","IMPACT_OF_BREACH","CONSQUENCES","POTENTIAL_CONSQUENCES","BreachControlReferenceModel","BreachControlCategoryReferenceModel","BreachControlModel","BREACH_CONTROL","CONTROLS","BREACHES_JSON","BREACH_JSON","BreachCommentsComponent","endpoints","http","service","dialog","route","allDialogRef","parent_data","BreachCommentsFormGroup","$resultBreachesEvent","processing","Comments","TechnicalForwardedComments","LegalForwardedComments","TechnicalComments","LegalComments","DataBreachTrackingNumber","Status","getBreachData","httpSub","post","updateBreachStatus","pipe","handleError","response","dialogRef","open","panelClass","disableClose","data","title","message","status","code","afterClosed","closeAll","navigate","error","technicalErrorResponse","determineErrorResponse","multiple","maxSize","result","evidenceDocument","row","onUploadAttachments","onSubmit","DataBreachEditComponent","cd","activateRoute","authService","_auth","_workflowService","registrationService","complaintService","dataBreachService","snackbar","$resultComplaintsEvent","showManageRequestInfo","showManageButtons","disableResolve","disableForward","isDirector","ActionTakenCheckboxValue","DataRecoveredCheckboxValue","DataSubjectsCategories","CausesOfBreach","selectedBreachDescriptionQuestions","notSelectedBreachDescriptionQuestions","selectedPotentialHarms","notSelectedPotentialHarms","application","policy","policies","personalData","personalDataAffected","causeOfBreaches","controls","_controls","pontentialConsequences","isLinear","phonePrefixOptions","passwordInputType","_displayColumns","levels","operationType","routeConfig","action","accesses","getKeycloakInstance","resourceAccess","roles","getUser","isEditMode","potentialConsequences","maxDate","Date","history","state","OrganisationDetails","RegNo","DPOEmail","DPONumber","pattern","isOfficer","isUserInRole","isCompanyOfficer","getCauseOfBreachJson","breachDetails","incidentDate","delayInReporting","delayInReportings","reasonForDelay","causesOfBreach","measures","FullDetailsOfComplaint","DetailsOfComplaint","containmentAndRecovery","actionTaken","detailsOfActionTaken","hasDataBeenRecovered","detailsOfRecovery","dateOfRecovery","preventionSteps","breachConsequences","additionalInfo","potentialHarms","OtherpotentialHarms","includes","disableAllControls","getBreach","TotalSelectedBreachDescription","PotentialConsequences","QuestionCount","length","middleIndex","Math","ceil","FirstSelectedBreachDescription","slice","SecondSelectedBreachDescription","TotalSelectedPotentialHarms","fetchOrganisation","responseList","mapFields","fetchMultiple","breachDescriptionQuestionsCount","BreachDescriptionQuestionsFirst","BreachDescriptionQuestionsSecond","concat","PotentialHarmsCount","middleIndex2","PotentialHarmsFirst","PotentialHarmsSecond","PotentialHarmsQuestions","prefillOrganisationDetails","event","question","questionValue","startsWith","questionID","substring","indexOf","getOrgDetailsById","organisation_id","getBreachDescriptionDetails","getBreachCauses","getPotentialHarms","organisation","RegTrackingNo","EmailAddress","PhoneNumber","split","toString","DetailedDataBreachCause","RemedialActionsTaken","ActionTakenToMinimizeDetails","DataPlacedAtRiskRecoveredDetails","DataRecoveryDate","PreventiveStepsToPreventRecurrence","disable","markForCheck","$event","operation","momentDate","formattedDate","format","momentDates2","formattedDate2","parseInt","ActualOrganisationID","organisation_name","email","IsActionTakenToMinimize","IsDataPlacedAtRiskRecovered","PersonalDataAffected","download","getFormData","reportBreach","width","height","statusID","isLegal","dialogResult","checked","BreachTrackingNumber","Cause","source","_selected","getOrganisationDetailsById","CheckBreachRequestForInfo","RequestedInformation","AdultDataSubjectCategoryChange","ChildrenDataSubjectCategoryChange","acceptData","onPersonalDataChange","ActionTakenCheckboxChange","DataRecoveredCheckboxChange","animations","autosize","DataBreachPersonalDataItemisedComponent","personalDataEvent","$dataCategories","$subCategories","isEditingPersonalData","personalDataIndex","personalNumber","personalDataList","personalDataFormGroup","dataCategory","dataSubCategory","toWhatExtent","affectedIndividuals","recordsInvolved","individualAwareness","individualComplain","resetPersonalData","managePersonalData","category","categories","subCategories","element","enable","_personalData","DataBreachPolicyItemComponent","_formBuilder","policyEvent","displayedColumns","isEditingPolicy","policyIndex","policyNumber","policyId","policyForm","implementationDate","explanation","mapFromControlToControl","resetPolicy","managePolicy","policyName","DataBreachControlsComponent","breachControlEvent","breachControl","$breachControls","$breachControlCategories","$controls","$controlCategories","isEditingControl","breachControls","getBreachControlJson","breachControlFormGroup","control","controlCategory","controlCategoryDesc","resetControl","manageControl","controlCategories","filter","controlName","name","subCategoryDesc","subCategoryName","onSelectControl","onSelectControlCategoryDesc","addOrUpdateControl","routes","path","component","canActivate","ReportingAndNotificationRoutingModule","forChild","imports","exports","DataBreachConsquencesComponent","stopPropagation","FindReportedBreachesComponent","router","statusList","columns","property","visible","isModelProperty","pageSize","dataSource","getBreaches","breaches","paginator","sort","searchFields","label","fieldName","operators","dataType","TEXT","BOOLEAN","lookupOptions","DATETIME","then","column","DataBreachService","baseAPIUri","backend","httpUtils","processingEvent","resultEvent","errorsEvent","api","invokeGet","providedIn","DataBreachPotentialConsquencesComponent","consquenceEvent","consquence","$consquences","$potentialConsquences","$additionalDetails","isEditingConsquence","consquenceIndex","consquenceNumber","consquences","counsquences","getPotentialConsquences","potentialConsquences","consquenceFormGroup","potentialConsequence","details","resetConsquence","validateConsquenceLabels","manageConsquence","potentialConsquence","additional","ReportingAndNotificationModule","declarations","DataBreachAccessmentComponent"],"mappings":"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","file":"modules-reporting-and-notification-reporting-and-notification-module-es5.js","sourcesContent":["import {Component, EventEmitter, Input, OnInit} from '@angular/core';\nimport {Observable, of, ReplaySubject, Subscription} from 'rxjs';\nimport {DataAffectedCategoryModel, PERSONAL_DATA_AFFECTED} from '../../../models/personal-data-affected.model';\nimport {IMPACT_OF_BREACH, ImpactOfBreachModel, PersonalDataModel} from '../../breach-model';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {DataServiceError} from '../../../../../@fury/shared/HttpModel';\nimport {KeycloakService} from 'keycloak-angular';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {UtilService} from '../../../../../@fury/services/util.service';\nimport {SnackBarService} from '../../../../pages/services/snack-bar.service';\n\n@Component({\n  selector: 'fury-data-breach-impact',\n  templateUrl: './data-breach-impact.component.html',\n  styleUrls: ['./data-breach-impact.component.scss']\n})\nexport class DataBreachImpactComponent implements OnInit {\n\n  // Simulating A DataCategory and SubCategory\n  subject$: ReplaySubject<ImpactOfBreachModel> = new ReplaySubject<ImpactOfBreachModel>(1);\n  data$: Observable<ImpactOfBreachModel> = this.subject$.asObservable();\n\n  @Input() impactOfBreaches: ImpactOfBreachModel[];\n  @Input() isViewOnly: boolean;\n  @Input() impactOfBreachEvent = new EventEmitter<ImpactOfBreachModel[]>();\n\n  impactOfBreach: ImpactOfBreachModel = new ImpactOfBreachModel();\n\n  impactOfBreachFormGroup: FormGroup;\n\n  subscriptions: Subscription[] = [];\n\n  //arrays\n  errors: string[] = [];\n  list = [];\n  displayColumns: string [] = ['nber', 'impact', 'actions'];\n  $impactOfBreaches: ImpactOfBreachModel [] = [];\n\n  //events\n  $processingEvent: EventEmitter<boolean> = new EventEmitter();\n  $errorsEvent: EventEmitter<DataServiceError[]> = new EventEmitter();\n  //Button Config\n  buttonIcon = 'add_circle_outline';\n  buttonLabel = 'Add';\n  //boolean\n  isEditingImpactOfBreach = false;\n  tableEditable: boolean = true;\n  // int\n  impactOfBreachIndex = 0;\n  impactOfBreachNumber = 1;\n\n  constructor(\n      private fb: FormBuilder,\n      private auth: KeycloakService,\n      private utilService: UtilService,\n      public snackBar: SnackBarService\n  ) { }\n\n  ngOnInit(): void {\n    this.initForms();\n    if (this.impactOfBreaches) {\n      this.impactOfBreaches.forEach(impactOfBreach => this.list.push(impactOfBreach));\n    }\n    this.getSampleJson.subscribe(dataCategories => {\n      this.$impactOfBreaches = dataCategories;\n    });\n    this.initMainObject();\n  }\n\n  private initMainObject() {\n    this.impactOfBreach = new ImpactOfBreachModel();\n  }\n\n  private initForms(): void {\n    this.impactOfBreachFormGroup = this.fb.group(\n        {\n          potentialImpact: [null, Validators.required],\n        }\n    );\n  }\n\n  addOrUpdateImpactOfBreach(option: number): void {\n    if (this.impactOfBreachFormGroup.valid) {\n      if (this.checkForDuplicates(option)) {\n        this.snackBar.snackBarAlert(\n            'Error', 'Imapact Already Selected !!', {\n              duration: 3000\n            }\n        );\n      } else {\n        this.mapFormControlToControl(1);\n        if (option === 1) {\n          this.list.push(this.impactOfBreach);\n          this.impactOfBreaches.push(this.impactOfBreach);\n          this.list = [...this.list];\n        } else {\n          this.list[this.impactOfBreachIndex] = this.impactOfBreach;\n          this.impactOfBreaches[this.impactOfBreachIndex] = this.impactOfBreach;\n          this.list = [...this.impactOfBreaches];\n        }\n        this.resetImpactOfBreach();\n        console.log(this.list)\n      }\n      }\n\n  }\n\n  resetImpactOfBreach() {\n    this.impactOfBreachFormGroup.reset();\n    this.impactOfBreach = new ImpactOfBreachModel();\n    this.validatePolicyLabels(1);\n    this.manageImpactOfBreach(1);\n  }\n\n  validatePolicyLabels(option: number) {\n    if (option === 1) {\n      this.buttonIcon = 'add_circle_outline';\n      this.buttonLabel = 'Add potential Imapact';\n    } else {\n      this.buttonIcon = 'save';\n      this.buttonLabel = 'Save';\n    }\n  }\n\n\n  manageImpactOfBreach(option: number, id ?: number) {\n    if (option === 2) {\n      this.impactOfBreach = this.impactOfBreaches[id];\n      this.isEditingImpactOfBreach = true;\n      this.impactOfBreachIndex = id;\n      this.mapFormControlToControl(option);\n    } else {\n      this.isEditingImpactOfBreach = false;\n      this.impactOfBreach = new ImpactOfBreachModel();\n      this.impactOfBreachIndex = 0;\n    }\n    this.validatePolicyLabels(option);\n  }\n\n\n  private checkForDuplicates(option: number) {\n    const impact = this.impactOfBreachFormGroup.get('potentialImpact').value;\n\n    if (option === 1) {\n      return !!(this.impactOfBreaches.find(item => item.rating === impact.rating));\n    } else {return null;}\n  }\n\n  editItem(index: number) {\n    // Store the index of the item to be modified\n    this.impactOfBreachIndex = index;\n    this.impactOfBreach = this.impactOfBreaches[this.impactOfBreachIndex];\n    this.isEditingImpactOfBreach = true;\n    // Map item to form fields\n    this.mapFormControlToControl(index);\n    this.validatePolicyLabels(2);\n  }\n\n  deleteItem(index: number) {\n    this.list.splice(index, 1);\n    this.impactOfBreaches.splice(index, 1);\n    this.list = [...this.list];\n    // Send items to parent\n    this.impactOfBreachEvent.emit(this.impactOfBreaches);\n    this.isEditingImpactOfBreach = false;\n  }\n\n  private mapFormControlToControl(option: number) {\n    if (option === 1) {\n      this.impactOfBreach.impact = this.impactOfBreachFormGroup.get('potentialImpact').value;\n    } else {\n      this.impactOfBreachFormGroup.get('potentialImpact').setValue(this.impactOfBreach.impact);\n    }\n  }\n\n  isValidForm() {\n    let formValid = this.impactOfBreachFormGroup.valid;\n    return formValid;\n  }\n\n  get getSampleJson() {\n    return of(IMPACT_OF_BREACH.map(document => document));\n  }\n\n\n}\n","<ng-container >\n\n    <fieldset>\n        <legend>Impact Of Breaches</legend>\n        <ng-container  *ngIf=\"!isViewOnly\">\n            <form [formGroup]=\"impactOfBreachFormGroup\">\n                <ng-template matStepLabel>Impact Of Breaches</ng-template>\n\n                <div class=\"content\" fxLayout=\"column\" fxLayoutGap=\"8px\">\n                    <div fxLayout=\"column\" fxLayout.gt-xs=\"row\" fxLayoutGap=\"8px\" fxLayoutGap.gt-xs=\"24px\">\n                        <mat-form-field fxFlex=\"2 2 auto\" appearance=\"fill\">\n                            <mat-label>Potential Impact</mat-label>\n                            <mat-select formControlName=\"potentialImpact\" multiple>\n                                <mat-option\n                                            *ngFor=\"let type of $impactOfBreaches\"\n                                            [value]=\"type\">{{ type.impact }}\n                                </mat-option>\n                            </mat-select>\n                            <mat-hint>Please specify if any financial or sensitive personal data (special\n                                categories*) has been affected\n                            </mat-hint>\n                        </mat-form-field>\n\n                    </div>\n                </div>\n            </form>\n            <div *ngIf=\"!isViewOnly\" style=\"text-align: right; padding-top: 5px; padding-bottom: 5px;\">\n                <button mat-raised-button\n                        (click)=\"addOrUpdateImpactOfBreach(isEditingImpactOfBreach?2:1)\" color=\"primary\"\n                        [disabled]=\"!isValidForm()\">\n                    <mat-icon>{{buttonIcon}}</mat-icon>\n                    <span>{{buttonLabel}}</span>\n                </button>&nbsp;\n                <span class=\"example-spacer\"></span>\n                <button mat-raised-button (click)=\"resetImpactOfBreach()\" color=\"warn\">\n                    <mat-icon>cancel</mat-icon>\n                    <span>Cancel</span>\n                </button>\n            </div>\n        </ng-container>\n\n        <div class=\"content\" fxLayout=\"column\" fxLayoutGap=\"8px\">\n            <table mat-table [dataSource]=\"list\">\n                <ng-container matColumnDef=\"nber\">\n                    <th mat-header-cell *matHeaderCellDef style=\"width: 5%\"\n                        class=\"tableFontSize firstColumnTable alignCenter\">#\n                    </th>\n                    <td mat-cell *matCellDef=\"let element; let j=index;\"\n                        class=\"tableFontSize firstColumnTable alignCenter\">\n                        {{j + 1}}\n                    </td>\n                </ng-container>\n                <ng-container matColumnDef=\"impact\"  *ngIf=\"!isViewOnly\">\n                    <th mat-header-cell *matHeaderCellDef class=\"tableFontSize \" style=\"width: 20%\"> Potential Impact</th>\n                    <td mat-cell *matCellDef=\"let element\" class=\"tableFontSize \">\n                        <div *ngFor=\"let i of element.impact\">\n                            {{i.impact}}\n                        </div>\n                    </td>\n                </ng-container>\n                <ng-container matColumnDef=\"impact\" *ngIf=\"isViewOnly\">\n                    <th mat-header-cell *matHeaderCellDef class=\"tableFontSize \" style=\"width: 20%\"> Potential Impact</th>\n                    <td mat-cell *matCellDef=\"let element\" class=\"tableFontSize \">\n                       {{element.impact}}\n                    </td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"actions\">\n                    <th mat-header-cell *matHeaderCellDef style=\"width: 5%\">Actions</th>\n                    <td mat-cell *matCellDef=\"let element; let j=index\" class=\"actions\">\n                        <ng-container *ngIf=\"!isViewOnly\">\n                            <a class=\"link\" (click)=\"manageImpactOfBreach(2,j)\">\n                                <mat-icon color=\"primary\" class=\"material-icons-outlined\" matTooltip=\"Edit item\">edit\n                                </mat-icon>\n                            </a>&nbsp;&nbsp;\n                            <a class=\"link\" (click)=\"deleteItem(j)\">\n                                <mat-icon color=\"warn\" class=\"material-icons-outlined\" matTooltip=\"Delete item\">delete\n                                </mat-icon>\n                            </a>\n                        </ng-container>\n                    </td>\n                </ng-container>\n                <ng-container matColumnDef=\"noData\">\n                    <td mat-footer-cell *matFooterCellDef colspan=\"7\">\n                        There is no data!\n                    </td>\n                </ng-container>\n                <tr mat-header-row *matHeaderRowDef=\"displayColumns;sticky:true\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: displayColumns;\"></tr>\n                <tr mat-footer-row *matFooterRowDef=\"['noData']\" [ngClass]=\"{'hide':!(list?.length==0)}\"></tr>\n            </table>\n        </div>\n<!--        <div class=\"actions\" fxLayout=\"row\" fxLayoutAlign=\"end center\" fxLayoutGap=\"8px\">-->\n<!--            <button color=\"primary\" mat-button matStepperPrevious type=\"button\">PREVIOUS-->\n<!--            </button>-->\n<!--            <button [disabled]=\"list?.length < 0\" color=\"primary\" mat-raised-button-->\n<!--                    matStepperNext>NEXT-->\n<!--            </button>-->\n<!--        </div>-->\n    </fieldset>\n</ng-container>\n\n\n<!-- LIST OF ITEMS -->\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'fury-data-breach-additional-info',\n  templateUrl: './data-breach-additional-info.component.html',\n  styleUrls: ['./data-breach-additional-info.component.scss']\n})\nexport class DataBreachAdditionalInfoComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>data-breach-additional-info works!</p>\n","import {DataAffectedCategoryModel, DataAffectedSubCategoryModel} from '../models/personal-data-affected.model';\n\nexport class BreachModel {\n    id?: string;\n    incidentDate?: string;\n    howIncidentHappened?: string;\n    delayInReporting?: boolean;\n    reasonForDelay?: string;\n    measuresInPlace?: string;\n    status?: string;\n    policies?: PolicyModel[];\n    personalDataAffected?: PersonalDataModel[];\n    containmentAndRecovery?: ContainmentAndRecoveryModel;\n    miscellaneous?: MiscellaneousModel;\n    registrationDate?: string;\n    impactOfBreach?: ImpactOfBreachModel[];\n    potentialConsequences?: PotentialConsequenceModel[];\n    controls?: BreachControlModel[];\n    causes?: CauseOfBreach[];\n    companyReporting?: string;\n    reportedBy?: string;\n    assignedTo?: string;\n    lastModifiedDate?: string;\n    BreachStatusID: number;\n    TechnicalComments: string;\n    LegalComments:string;\n    ResolutionComments:string;\n\n}\n\n\nexport class TableBreachModel {\n    BreachStatusID: number;\n    DataBreachID: number;\n    DataBreachTrackingNo: string;\n    CategoriesOfDataSubjectAffected: string;\n    IncidentDate: string;\n    DataBreachType:string;\n    NumberOfDataSubjects: number;\n    NumberOfRecordsHeld:number;\n    OrganisationID:number;\n    OrganisationName:string;\n    StatusName:string;\n\n    constructor(breach) {\n        this.BreachStatusID = breach.BreachStatusID;\n        this.DataBreachID = breach.DataBreachID;\n        this.DataBreachTrackingNo = breach.DataBreachTrackingNo;\n        this.CategoriesOfDataSubjectAffected = breach.CategoriesOfDataSubjectAffected;\n        this.IncidentDate = breach.IncidentDate;\n        this.DataBreachType = breach.DataBreachType;\n        this.NumberOfDataSubjects = breach.NumberOfDataSubjects;\n        this.NumberOfRecordsHeld = breach.NumberOfRecordsHeld;\n        this.OrganisationID = breach.OrganisationID;\n        this.OrganisationName = breach.OrganisationName;\n        this.StatusName = breach.StatusName;\n    }\n}\n\nexport class PolicyModel {\n    id?: number;\n    policy?: string;\n    explanation?: string;\n    implementationDate?: string;\n}\n\nexport class PersonalDataRisk {\n    personalDataCategory?: string;\n    extentDetails?: string;\n    dataSubjectsAffected?: number;\n    dataRecordsAffected?: number;\n    individualAwarenessOfIncident?: string;\n    consequencesAndEffects?: string;\n    hasIndividualComplained?: string;\n}\n\nexport class PersonalDataModel {\n    dataCategory: DataAffectedCategoryModel;\n    dataSubCategory: DataAffectedSubCategoryModel[];\n    toWhatExtent: string;\n    affectedIndividuals: string;\n    recordsInvolved: string;\n    individualAwareness: boolean;\n    individualComplain: boolean;\n}\n\n\nexport class PersonalData {\n    personalDataCategory?: string;\n    extentDetails?: string;\n}\n\nexport class ContainmentAndRecoveryModel {\n    actionTaken?: boolean;\n    detailsOfActionTaken?: string;\n    hasDataBeenRecovered?: boolean;\n    detailsOfRecovery?: string;\n    dateOfRecovery?: string;\n    preventionSteps?: string;\n}\n\nexport class MiscellaneousModel {\n    medialCoverageOfIncident?: boolean;\n    regulatoryBodiesNotified?: boolean;\n}\n\nexport class DataProtectionOfficerModel {\n    firstName?: string;\n    lastName?: string;\n    address?: string;\n    email?: string;\n    phoneNumber?: string;\n}\n\nexport class ImpactOfBreachModel {\n    id: string;\n    rating: string;\n    impact: string;\n}\n\nexport class CauseOfBreach {\n    id: string;\n    cause: string;\n}\n\nexport class BreachCauses{\n    CauseID: number;\n    CauseName : string;\n}\n\nexport class PotentialHarms{\n\n    HarmDescriptionID: number;\n    HarmDescription: string;\n    HarmRatingID:number;\n    HarmRatingSummary:string;\n    HarmRatingDescription:string;\n}\n\nexport class ConsequenceModel {\n    id: string;\n    code: string;\n    consquence: string;\n}\n\nexport class BreachDescriptionQuestions {\n    BreacheDescriptionID: number;\n    BreachDescription: string;\n    ConsequenceID: number;\n    ConsequenceName: string;\n\n}\n\nexport class PotentialConsequenceModel {\n    id: string;\n    potentialConsquence: string;\n    additional: string;\n}\n\nexport const CAUSE_OF_BREACH: Array<{\n    id: string; code: string; cause: string;\n}> =\n    [\n        {\n            'cause': 'Malicious internal act',\n            'code': 'CA9238',\n            'id': '5'\n        },\n        {\n            'cause': 'Accidental internal act',\n            'code': 'C2333',\n            'id': '2'\n        },\n        {\n            'cause': 'Malicious external act',\n            'code': 'CA0002',\n            'id': '1'\n        },\n        {\n            'cause': 'Unknown',\n            'code': 'CA0003',\n            'id': '4'\n        },\n        {\n            'cause': 'Other',\n            'code': 'CA0005',\n            'id': '6'\n        }\n    ];\nexport const IMPACT_OF_BREACH: Array<{\n    id: string, rating: string, impact: string\n}> =\n    [\n        {\n            'id': '1',\n            'rating': '1',\n            'impact': 'Affected Data subject will be required to submit information afresh or fill forms again'\n        },\n        {\n            'id': '2',\n            'rating': '1',\n            'impact': 'Affected Data subject may receive unsolicited email as a result of the breach'\n        },\n        {\n            'id': '3',\n            'rating': '1',\n            'impact': 'Affected Data subject may be inconvenienced by marketing ads'\n        },\n        {\n            'id': '4',\n            'rating': '1',\n            'impact': 'Affected Data subject may be inconvenienced by marketing ads'\n        },\n        {\n            'id': '5',\n            'rating': '1',\n            'impact': 'Affected Data subject may experience loss of privacy but without risk of financial, psycological or physical harm'\n        },\n        {\n            'id': '2',\n            'rating': '1',\n            'impact': 'Affected Data Subject may suffer fines or additional cost to renew a service as a result of the breach'\n        },\n        {\n            'id': '2',\n            'rating': '2',\n            'impact': 'Affected Data subject may receive unsolicited targeted mailings likely to damage theire reputation'\n        },\n        {\n            'id': '2',\n            'rating': '2',\n            'impact': 'Affected Data Subject may suffer targeted online advertising on a private aspect that the individual wanted to keep confidential (e.g. pregnancy advertising, drug treatment).  '\n        },\n        {\n            'id': '4',\n            'rating': '2',\n            'impact': 'Affected Data Subject may suffer intimidation on social networks or cyber bullying'\n        },\n        {\n            'id': '4',\n            'rating': '2',\n            'impact': 'Affected Data Subject may suffer defamation or loss of reputation'\n        },\n        {\n            'id': '3',\n            'rating': '3',\n            'impact': 'Data Subjects may suffer financial loss as a result of a fraud (e.g. after an attempted phishing);       '\n        },\n        {\n            'id': '3',\n            'rating': '3',\n            'impact': 'Data Subjects may suffer violation of fundametal human rights as a result of a breach e.g Discrimination, Persecution'\n        },\n        {\n            'id': '3',\n            'rating': '3',\n            'impact': 'Data Subject may lose opportunities as a result of the breach e.g loss of scholarship'\n        },\n        {\n            'id': '3',\n            'rating': '3',\n            'impact': 'Data Subject may suffer damage to property'\n        },\n        {\n            'id': '4',\n            'rating': '4',\n            'impact': 'Data subject may fail to work or lose a job.'\n        },\n        {\n            'id': '4',\n            'rating': '4',\n            'impact': 'Data subject may suffer long-term or permanent psychological ailments;           '\n        },\n        {\n            'id': '4',\n            'rating': '4',\n            'impact': 'Data subject may suffer financial risk        '\n        },\n        {\n            'id': '4',\n            'rating': '4',\n            'impact': ' The data breach will result in loss of access to vital infrastructure e.g water, electricity'\n        },\n        {\n            'id': '4',\n            'rating': '4',\n            'impact': 'The data breach exposed data belonging to chidren'\n        },\n        {\n            'id': '4',\n            'rating': '4',\n            'impact': 'Data Breach exposed name, NIN and other personal data'\n        }\n    ];\n\nexport const CONSQUENCES: Array<{\n    id: string; code: string; consquence: string\n}> =\n    [\n        {\n            'id': '1',\n            'code': 'LOC001',\n            'consquence': 'Loss of Confidentiality',\n        },\n        {\n            'id': '1',\n            'code': 'PC9234',\n            'consquence': 'Loss of Integrity',\n        },\n        {\n            'id': '1',\n            'code': 'LOC003',\n            'consquence': 'Loss of availablity',\n        }\n    ];\n\nexport const POTENTIAL_CONSQUENCES: Array<{\n    id: string, potentialConsquence: string, additional: string\n}> =\n    [\n        {\n            'id': '1',\n            'potentialConsquence': 'Loss of Confidentiality',\n            'additional': 'A paper file or equipment is lost or stolen.'\n        },\n        {\n            'id': '1',\n            'potentialConsquence': 'Loss of Confidentiality',\n            'additional': 'Paper or equipment left accessible in an unsecured location.  '\n        },\n        {\n            'id': '1',\n            'potentialConsquence': 'Loss of Confidentiality',\n            'additional': 'Mail lost or opened before being returned to sender.    '\n        },\n        {\n            'id': '1',\n            'potentialConsquence': 'Loss of Confidentiality',\n            'additional': 'Hacking, malware (e.g. ransomware) and/ or phishing.    '\n        },\n        {\n            'id': '1',\n            'potentialConsquence': 'Loss of Confidentiality',\n            'additional': 'Disposal of paper documents containing personal data without physical destruction.          '\n        },\n        {\n            'id': '1',\n            'potentialConsquence': 'Loss of Confidentiality',\n            'additional': 'Disposal of equipment containing personal data without secure erasure.      '\n        },\n        {\n            'id': '1',\n            'potentialConsquence': 'Loss of Confidentiality',\n            'additional': 'Non-voluntary publication of information'\n        },\n        {\n            'id': '1',\n            'potentialConsquence': 'Loss of Confidentiality',\n            'additional': 'Data from the wrong person displayed on the customer portal.  '\n        },\n        {\n            'id': '1',\n            'potentialConsquence': 'Loss of Confidentiality',\n            'additional': 'An e-mail with personal data has been wrongly sent to a number of known recipients.'\n        },\n        {\n            'id': '1',\n            'potentialConsquence': 'Loss of Confidentiality',\n            'additional': 'Some customers could access other customers’ accounts in an online service.        '\n        },\n        {\n            'id': '1',\n            'potentialConsquence': 'Loss of Confidentiality',\n            'additional': 'Data is published on a social media page.'\n        },\n        {\n            'id': '1',\n            'potentialConsquence': 'Loss of Confidentiality',\n            'additional': 'An employee sold or lost hardware, such as, laptop with customer data.'\n        },\n        {\n            'id': '1',\n            'potentialConsquence': 'Loss of Confidentiality',\n            'additional': 'A wrongly configured website makes publically accessible on internet, data from internal users.'\n        },\n        {\n            'id': '',\n            'potentialConsquence': 'Loss of Integrity',\n            'additional': 'Data altered but without any identified incorrect or illegal use, e.g.  The records of a database with personal data have been wrongly updatedbut the original has been obtained before any use of the altered data occurred.'\n        },\n        {\n            'id': '',\n            'potentialConsquence': 'Loss of Integrity',\n            'additional': 'Data has been altered and possibly used in an incorrect or illegal way but with possibility to recover and restore the correct data     '\n        },\n        {\n            'id': '',\n            'potentialConsquence': 'Loss of Integrity',\n            'additional': 'Data altered and possibly used in an incorrect or illegal way without possibility to recover e.g Back up is corrupted and original has been altered '\n        },\n        {\n            'id': '1',\n            'potentialConsquence': 'Loss of availablity',\n            'additional': 'A copy of file is lost but other copies are available.'\n        },\n        {\n            'id': '1',\n            'potentialConsquence': 'Loss of availablity',\n            'additional': 'A database is corrupted but can be easily reconstructed from other databases.                   '\n        },\n        {\n            'id': '1',\n            'potentialConsquence': 'Loss of availablity',\n            'additional': 'A database is corrupted but can be reconstructed from other databases, although some processing is required.'\n        },\n        {\n            'id': '1',\n            'potentialConsquence': 'Loss of availablity',\n            'additional': 'A file is lost but the information can be provided again by the individual.      '\n        },\n        {\n            'id': '1',\n            'potentialConsquence': 'Loss of availablity',\n            'additional': 'A file is lost/database corrupted, there is not back up of this information, and it cannot be provided by the individual. '\n        }\n    ];\n\nexport class BreachControlReferenceModel {\n    id: string;\n    name: string;\n    code: string;\n}\n\nexport class BreachControlCategoryReferenceModel {\n    id: string;\n    name: string;\n    desc: string;\n    code: string;\n}\n\nexport class BreachControlModel {\n    id: string;\n    code: string;\n    controlName: string;\n    subCategoryName: string;\n    subCategoryDesc: string;\n}\n\nexport const BREACH_CONTROL: Array<{\n    id: string; name: string; code: string\n}> =\n    [\n        {\n            'id': '1',\n            'code': 'C932',\n            'name': 'Inventory and Control of Hardware Assets',\n        },\n\n        {\n            'id': '1',\n            'code': 'C2938',\n            'name': 'Inventory and Control of software Assets',\n        },\n\n        {\n            'id': '1',\n            'code': 'C9823',\n            'name': 'Continuous Vulnerability Management'\n        },\n\n        {\n            'id': '12',\n            'code': 'C938',\n            'name': 'Controlled Use of Administrative Privileges',\n        },\n\n        {\n            'id': '1',\n            'code': 'C2389',\n            'name': 'Secure Configuration for Hardware and Software on Mobile Devices, Laptops, Workstations and Servers',\n        },\n    ];\n\nexport const CONTROLS: Array<{\n    id: string, code: string, controlName: string, subCategoryName: string, subCategoryDesc: string\n}> =\n    [\n        {\n            'id': '1',\n            'code': 'C932',\n            'controlName': 'Inventory and Control of Hardware Assets',\n            'subCategoryName': 'Utilize an Active Discovery',\n            'subCategoryDesc': 'ToolUtilize an active discovery tool to identify devices connected to the organization\\'s network and update the hardware asset inventory.'\n        },\n        {\n            'id': '1',\n            'code': 'C932',\n            'controlName': 'Inventory and Control of Hardware Assets',\n            'subCategoryName': 'Use a Passive Asset Discovery Tool',\n            'subCategoryDesc': 'Utilize a passive discovery tool to identify devices connected to the organization\\'s network and automatically update the organization\\'s hardware asset inventory.'\n        },\n        {\n            'id': '1',\n            'code': 'C932',\n            'controlName': 'Inventory and Control of Hardware Assets',\n            'subCategoryName': 'Use DHCP Logging to Update Asset Inventory',\n            'subCategoryDesc': 'Use Dynamic Host Configuration Protocol (DHCP) logging on all DHCP servers or IP address management tools to update the organization\\'s hardware asset inventory.'\n        },\n        {\n            'id': '1',\n            'code': 'C932',\n            'controlName': 'Inventory and Control of Hardware Assets',\n            'subCategoryName': 'Maintain Detailed Asset Inventory',\n            'subCategoryDesc': 'Maintain an accurate and up-to-date inventory of all technology assets with the potential to store or process information. This inventory shall include all hardware assets, whether connected to the organization\\'s network or not.'\n        },\n        {\n            'id': '1',\n            'code': 'C932',\n            'controlName': 'Inventory and Control of Hardware Assets',\n            'subCategoryName': 'Maintain Asset Inventory Information',\n            'subCategoryDesc': 'Ensure that the hardware asset inventory records the network address, hardware address, machine name, data asset owner, and department for each asset and whether the hardware asset has been approved to connect to the network.'\n        },\n        {\n            'id': '1',\n            'code': 'C932',\n            'controlName': 'Inventory and Control of Hardware Assets',\n            'subCategoryName': 'Address Unauthorized Assets',\n            'subCategoryDesc': 'Ensure that unauthorized assets are either removed from the network, quarantined, or the inventory is updated in a timely manner.'\n        },\n        {\n            'id': '1',\n            'code': 'C932',\n            'controlName': 'Inventory and Control',\n            'subCategoryName': 'Deploy Port Level Access Control',\n            'subCategoryDesc': 'Utilize port level access control, following 802.1x standards, to control which devices can authenticate to the network. The authentication system shall be tied into the hardware asset inventory data to ensure only authorized devices can connect to the network.'\n        },\n        {\n            'id': '1',\n            'code': 'C932',\n            'controlName': 'Inventory and Control of Hardware Assets',\n            'subCategoryName': 'Utilize Client Certificates to Authenticate Hardware Assets',\n            'subCategoryDesc': 'Use client certificates to authenticate hardware assets connecting to the organization\\'s trusted network.'\n        },\n        {\n            'id': '1',\n            'code': '',\n            'controlName': 'Inventory and Control of software Assets',\n            'subCategoryName': 'Maintain Inventory of Authorized Software',\n            'subCategoryDesc': 'Maintain an up-to-date list of all authorized software that is required in the enterprise for any business purpose on any business system.'\n        },\n        {\n            'id': '1',\n            'code': '',\n            'controlName': 'Inventory and Control of software Assets',\n            'subCategoryName': 'Ensure Software is Supported by Vendor',\n            'subCategoryDesc': 'Ensure that only software applications or operating systems currently supported and receiving vendor updates are added to the organization\\'s authorized software inventory. Unsupported software should be tagged as unsupported in the inventory system.'\n        },\n        {\n            'id': '1',\n            'code': '',\n            'controlName': 'Inventory and Control of software Assets',\n            'subCategoryName': 'Utilize Software Inventory Tools',\n            'subCategoryDesc': 'Utilize software inventory tools throughout the organization to automate the documentation of all software on business systems.'\n        },\n        {\n            'id': '1',\n            'code': '',\n            'controlName': 'Inventory and Control of software Assets',\n            'subCategoryName': 'Track Software Inventory Information',\n            'subCategoryDesc': 'The software inventory system should track the name, version, publisher, and install date for all software, including operating systems authorized by the organization.'\n        },\n        {\n            'id': '1',\n            'code': '',\n            'controlName': 'Inventory and Control of software Assets',\n            'subCategoryName': 'Integrate Software and Hardware Asset Inventories',\n            'subCategoryDesc': 'The software inventory system should be tied into the hardware asset inventory so all devices and associated software are tracked from a single location.'\n        },\n        {\n            'id': '1',\n            'code': '',\n            'controlName': 'Inventory and Control of software Assets',\n            'subCategoryName': 'Address unapproved software Ensure',\n            'subCategoryDesc': 'that unauthorized software is either removed or the inventory is updated in a timely manner'\n        },\n        {\n            'id': '1',\n            'code': '',\n            'controlName': 'Inventory and Control of software Assets',\n            'subCategoryName': 'Utilize Application Whitelisting',\n            'subCategoryDesc': 'Utilize application whitelisting technology on all assets to ensure that only authorized software executes and all unauthorized software is blocked from executing on assets.'\n        },\n        {\n            'id': '1',\n            'code': '',\n            'controlName': 'Inventory and Control of software Assets',\n            'subCategoryName': 'Implement Application Whitelisting of Libraries',\n            'subCategoryDesc': 'The organization\\'s application whitelisting software must ensure that only authorized software libraries (such as *.dll, *.ocx, *.so, etc.) are allowed to load into a system process.'\n        },\n        {\n            'id': '1',\n            'code': '',\n            'controlName': 'Inventory and Control of software Assets',\n            'subCategoryName': 'Implement Application Whitelisting of Scripts',\n            'subCategoryDesc': 'The organization\\'s application whitelisting software must ensure that only authorized, digitally signed scripts (such as *.ps1,  *.py, macros, etc.) are allowed to run on a system.'\n        },\n        {\n            'id': '1',\n            'code': '',\n            'controlName': 'Inventory and Control of software Assets',\n            'subCategoryName': 'Physically or Logically Segregate High Risk Applications',\n            'subCategoryDesc': 'Physically or logically segregated systems should be used to isolate and run software that is required for business operations but incurs higher risk for the organization.'\n        },\n        {\n            'id': '1',\n            'code': 'C9823',\n            'controlName': 'Continuous Vulnerability Management',\n            'subCategoryName': 'Run Automated Vulnerability Scanning Tools',\n            'subCategoryDesc': 'Utilize an up-to-date Security Content Automation Protocol (SCAP) compliant vulnerability scanning tool to automatically scan all systems on the network on a weekly or more frequent basis to identify all potential vulnerabilities on the organization\\'s systems.'\n        },\n        {\n            'id': '1',\n            'code': 'C9823',\n            'controlName': 'Continuous Vulnerability Management',\n            'subCategoryName': 'Perform Authenticated Vulnerability Scanning',\n            'subCategoryDesc': 'Perform authenticated vulnerability scanning with agents running locally on each system or with remote scanners that are configured with elevated rights on the system being tested.'\n        },\n        {\n            'id': '1',\n            'code': 'C9823',\n            'controlName': 'Continuous Vulnerability Management',\n            'subCategoryName': 'Protect Dedicated Assessment Accounts',\n            'subCategoryDesc': 'Use a dedicated account for authenticated vulnerability scans, which should not be used for any other administrative activities and should be tied to specific machines at specific IP addresses.'\n        },\n        {\n            'id': '1',\n            'code': 'C9823',\n            'controlName': 'Continuous Vulnerability Management',\n            'subCategoryName': 'Deploy Automated Operating System Patch Management Tools',\n            'subCategoryDesc': 'Deploy automated software update tools in order to ensure that the operating systems are running the most recent security updates provided by the software vendor.'\n        },\n        {\n            'id': '1',\n            'code': 'C9823',\n            'controlName': 'Continuous Vulnerability Management',\n            'subCategoryName': 'Deploy Automated Software Patch Management Tools',\n            'subCategoryDesc': 'Deploy automated software update tools in order to ensure that third-party software on all systems is running the most recent security updates provided by the software vendor.'\n        },\n        {\n            'id': '1',\n            'code': 'C9823',\n            'controlName': 'Continuous Vulnerability Management',\n            'subCategoryName': 'Compare Back-to-Back Vulnerability Scans',\n            'subCategoryDesc': 'Regularly compare the results from consecutive vulnerability scans to verify that vulnerabilities have been remediated in a timely manner.'\n        },\n        {\n            'id': '1',\n            'code': 'C9823',\n            'controlName': 'Continuous Vulnerability Management',\n            'subCategoryName': 'Utilize a Risk-Rating Process',\n            'subCategoryDesc': 'Utilize a risk-rating process to prioritize the remediation of discovered vulnerabilities.'\n        },\n        {\n            'id': '12',\n            'code': 'C9238',\n            'controlName': 'Controlled Use of Administrative Privileges',\n            'subCategoryName': 'Maintain Inventory of Administrative Accounts',\n            'subCategoryDesc': 'Use automated tools to inventory all administrative accounts, including domain and local accounts, to ensure that only authorized individuals have elevated privileges.'\n        },\n        {\n            'id': '12',\n            'code': 'C9238',\n            'controlName': 'Controlled Use of Administrative Privileges',\n            'subCategoryName': 'Change Default Passwords',\n            'subCategoryDesc': 'Before deploying any new asset, change all default passwords to have values consistent with administrative level accounts.'\n        },\n        {\n            'id': '12',\n            'code': 'C9238',\n            'controlName': 'Controlled Use of Administrative Privileges',\n            'subCategoryName': 'Ensure the use of  Dedicated Administrative Accounts',\n            'subCategoryDesc': 'nsure that all users with administrative account access use a dedicated or secondary account for elevated activities. This account should only be used for administrative activities and not internet browsing, email, or similar activities.'\n        },\n        {\n            'id': '12',\n            'code': 'C9238',\n            'controlName': 'Controlled Use of Administrative Privileges',\n            'subCategoryName': 'Use Unique Passwords',\n            'subCategoryDesc': 'Where multi-factor authentication is not supported (such as local administrator, root, or service accounts), accounts will use passwords that are unique to that system.'\n        },\n        {\n            'id': '12',\n            'code': 'C9238',\n            'controlName': 'Controlled Use of Administrative Privileges',\n            'subCategoryName': 'Use Multi-Factor Authentication for All Administrative Access',\n            'subCategoryDesc': 'Use multi-factor authentication and encrypted channels for all administrative account access.'\n        },\n        {\n            'id': '12',\n            'code': 'C9238',\n            'controlName': 'Controlled Use of Administrative Privileges',\n            'subCategoryName': 'Use Dedicated Workstations For All Administrative Tasks',\n            'subCategoryDesc': 'Ensure administrators use a dedicated machine for all administrative tasks or tasks requiring administrative access. This machine will be segmented from the organization\\'s primary network and not be allowed Internet access. This machine will not be used for reading e-mail, composing documents, or browsing the Internet.'\n        },\n        {\n            'id': '12',\n            'code': 'C9238',\n            'controlName': 'Controlled Use of Administrative Privileges',\n            'subCategoryName': 'Limit Access to Script Tools',\n            'subCategoryDesc': 'Limit access to scripting tools (such as Microsoft® PowerShell and Python) to only administrative or development users with the need to access those capabilities.'\n        },\n        {\n            'id': '12',\n            'code': 'C9238',\n            'controlName': 'Controlled Use of Administrative Privileges',\n            'subCategoryName': 'Log and Alert on Changes to Administrative Group Membership',\n            'subCategoryDesc': 'Configure systems to issue a log entry and alert when an account is added to or removed from any group assigned administrative privileges.'\n        },\n        {\n            'id': '12',\n            'code': 'C9238',\n            'controlName': 'Controlled Use of Administrative Privileges',\n            'subCategoryName': 'Log and Alert on Unsuccessful Administrative Account Login',\n            'subCategoryDesc': 'Configure systems to issue a log entry and alert on unsuccessful logins to an administrative account.'\n        },\n        {\n            'id': '1',\n            'code': 'C2387',\n            'controlName': 'Secure Configuration for Hardware and Software on Mobile Devices, Laptops, Workstations and Servers',\n            'subCategoryName': 'Establish Secure Configurations',\n            'subCategoryDesc': 'Maintain documented security configuration standards for all authorized operating systems and software.'\n        },\n        {\n            'id': '1',\n            'code': 'C2387',\n            'controlName': 'Secure Configuration for Hardware and Software on Mobile Devices, Laptops, Workstations and Servers',\n            'subCategoryName': 'Maintain Secure Images',\n            'subCategoryDesc': 'Maintain secure images or templates for all systems in the enterprise based on the organization\\'s approved configuration standards. Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.'\n        },\n        {\n            'id': '1',\n            'code': 'C2387',\n            'controlName': 'Secure Configuration for Hardware and Software on Mobile Devices, Laptops, Workstations and Servers',\n            'subCategoryName': 'Securely Store Master Images',\n            'subCategoryDesc': 'Store the master images and templates on securely configured servers, validated with integrity monitoring tools, to ensure that only authorized changes to the images are possible.'\n        },\n        {\n            'id': '1',\n            'code': 'C2387',\n            'controlName': 'Secure Configuration for Hardware and Software on Mobile Devices, Laptops, Workstations and Servers',\n            'subCategoryName': 'Deploy System Configuration Management Tools',\n            'subCategoryDesc': 'Deploy system configuration management tools that will automatically enforce and redeploy configuration settings to systems at regularly scheduled intervals.'\n        },\n        {\n            'id': '1',\n            'code': 'C2387',\n            'controlName': 'Secure Configuration for Hardware and Software on Mobile Devices, Laptops, Workstations and Servers',\n            'subCategoryName': 'Implement Automated Configuration Monitoring Systems',\n            'subCategoryDesc': 'Utilize a Security Content Automation Protocol (SCAP) compliant configuration monitoring system to verify all security configuration elements, catalog approved exceptions, and alert when unauthorized changes occur.'\n        }\n    ];\n\nexport const BREACHES_JSON = [{\n    'id': 'DAB/16/10/21/4651',\n    'incidentDate': '2021-02-02T21:00:00.000Z',\n    'howIncidentHappened': 'Lorem Ipsum is simply dummy text of the printing and typesetting industry. ',\n    'delayInReporting': true,\n    'reasonForDelay': 'Lorem Ipsum is simply dummy text of the printing and typesetting industry. ',\n    'measuresInPlace': 'Lorem Ipsum is simply dummy text of the printing and typesetting industry.',\n    'status': 'SUBMITTED',\n    'policies': [\n        {\n            'id': 1,\n            'policy': '',\n            'explanation': '',\n            'implementationDate': '2021-02-02T21:00:00.000Z'\n        }\n    ],\n    'personalDataAffected': [\n        {\n            'dataCategory':\n                {\n                    'id': '3',\n                    'name': 'Biometric Information',\n                    'subCategories': [\n                        {\n                            'id': '1',\n                            'value': 'Genetic'\n                        },\n                        {\n                            'id': '2',\n                            'value': 'Physiological.'\n                        },\n                        {\n                            'id': '3',\n                            'value': 'Behavioural.'\n                        },\n                        {\n                            'id': '4',\n                            'value': 'Biological characteristics.'\n                        }\n                    ]\n                },\n            'dataSubCategory': [],\n            'toWhatExtent': 'Lorem Ipsum is simply dummy text of the printing and typesetting industry',\n            'affectedIndividuals': 'Lorem Ipsum is simply dummy text of the printing and typesetting industry',\n            'recordsInvolved': '5',\n            'individualAwareness': true,\n            'individualComplain': true,\n        },\n        {\n            'dataCategory':\n                {\n                    'id': '3',\n                    'name': 'Biometric Information',\n                    'subCategories': [\n                        {\n                            'id': '1',\n                            'value': 'Genetic'\n                        },\n                        {\n                            'id': '2',\n                            'value': 'Physiological.'\n                        },\n                        {\n                            'id': '3',\n                            'value': 'Behavioural.'\n                        },\n                        {\n                            'id': '4',\n                            'value': 'Biological characteristics.'\n                        }\n                    ]\n                },\n            'dataSubCategory': [],\n            'toWhatExtent': 'Lorem Ipsum is simply dummy text of the printing and typesetting industry',\n            'affectedIndividuals': 'Lorem Ipsum is simply dummy text of the printing and typesetting industry',\n            'recordsInvolved': '5',\n            'individualAwareness': true,\n            'individualComplain': true,\n        }\n    ],\n    'containmentAndRecovery': {\n        'actionTaken': true,\n        'detailsOfActionTaken': 'Lorem Ipsum is simply dummy text of the printing and typesetting industry',\n        'hasDataBeenRecovered': true,\n        'detailsOfRecovery': 'Lorem Ipsum is simply dummy text of the printing and typesetting industry',\n        'dateOfRecovery': '2021-02-02T21:00:00.000Z',\n        'preventionSteps': 'Lorem Ipsum is simply dummy text of the printing and typesetting industry',\n    },\n    'miscellaneous': {\n        'medialCoverageOfIncident': true,\n        'regulatoryBodiesNotified': true\n    },\n    'registrationDate': '2021-02-02T21:00:00.000Z',\n    'impactOfBreach': [\n        {\n            'id': '1',\n            'rating': '1',\n            'impact': 'Affected Data subject will be required to submit information afresh or fill forms again'\n        },\n        {\n            'id': '2',\n            'rating': '1',\n            'impact': 'Affected Data subject may receive unsolicited email as a result of the breach'\n        },\n    ],\n    'potentialConsequences': [\n        {\n            'id': '1',\n            'potentialConsquence': 'Loss of Confidentiality',\n            'additional': 'A paper file or equipment is lost or stolen.'\n        },\n        {\n            'id': '1',\n            'potentialConsquence': 'Loss of Confidentiality',\n            'additional': 'Paper or equipment left accessible in an unsecured location.  '\n        },\n        {\n            'id': '1',\n            'potentialConsquence': 'Loss of Confidentiality',\n            'additional': 'Mail lost or opened before being returned to sender.    '\n        },\n        {\n            'id': '1',\n            'potentialConsquence': 'Loss of Confidentiality',\n            'additional': 'Hacking, malware (e.g. ransomware) and/ or phishing.    '\n        },\n    ],\n    'controls': [],\n    'causes': [\n        {\n            'cause': 'Malicious internal act',\n            'code': 'CA9238',\n            'id': '5'\n        },\n        {\n            'cause': 'Accidental internal act',\n            'code': 'C2333',\n            'id': '2'\n        },\n    ],\n    'reportedBy': 'enockm15',\n    'companyReporting': 'MTN Uganda',\n    'assignedTo': 'angella',\n    'lastModifiedDate': '2021-02-02T21:00:00.000Z'\n}];\n\nexport const BREACH_JSON = {\n    'id': 'DAB/16/10/21/4651',\n    'incidentDate': '2021-02-02T21:00:00.000Z',\n    'howIncidentHappened': 'Lorem Ipsum is simply dummy text of the printing and typesetting industry. ',\n    'delayInReporting': true,\n    'reasonForDelay': 'Lorem Ipsum is simply dummy text of the printing and typesetting industry. ',\n    'measuresInPlace': 'Lorem Ipsum is simply dummy text of the printing and typesetting industry.',\n    'status': 'SUBMITTED',\n    'policies': [\n        {\n            'id': 1,\n            'policy': 'Lorem Ipsum is simply dummy text of the printing and typesetting industry.',\n            'explanation': 'Lorem Ipsum is simply dummy text of the printing and typesetting industry.',\n            'implementationDate': '2021-02-02T21:00:00.000Z'\n        }\n    ],\n    'personalDataAffected': [\n        {\n            'dataCategory':\n                {\n                    'id': '3',\n                    'name': 'Biometric Information',\n                    'subCategories': [\n                        {\n                            'id': '1',\n                            'value': 'Genetic'\n                        },\n                        {\n                            'id': '2',\n                            'value': 'Physiological.'\n                        },\n                        {\n                            'id': '3',\n                            'value': 'Behavioural.'\n                        },\n                        {\n                            'id': '4',\n                            'value': 'Biological characteristics.'\n                        }\n                    ]\n                },\n\n            'dataSubCategory': [\n                {\n                    'id': '1',\n                    'value': 'Genetic'\n                },\n                {\n                    'id': '2',\n                    'value': 'Physiological.'\n                },\n                {\n                    'id': '3',\n                    'value': 'Behavioural.'\n                },\n                {\n                    'id': '4',\n                    'value': 'Biological characteristics.'\n                }\n            ],\n            'toWhatExtent': 'Lorem Ipsum is simply dummy text of the printing and typesetting industry',\n            'affectedIndividuals': '5',\n            'recordsInvolved': '5',\n            'individualAwareness': true,\n            'individualComplain': true,\n        },\n        {\n            'dataCategory':\n                {\n                    'id': '3',\n                    'name': 'Individual Commercial Information',\n                    'subCategories': [\n                        {\n                            'id': '1',\n                            'value':  \"Records of personal propert\"\n                        },\n                        {\n                            'id': '2',\n                            'value':\"Purchasing habits.\"\n                        },\n                    ]\n                },\n\n            'dataSubCategory': [\n                {\n                    'id': '1',\n                    'value':  \"Records of personal propert\"\n                },\n                {\n                    'id': '2',\n                    'value':\"Purchasing habits.\"\n                },\n            ],\n            'toWhatExtent': 'Lorem Ipsum is simply dummy text of the printing and typesetting industry',\n            'affectedIndividuals': '5',\n            'recordsInvolved': '5',\n            'individualAwareness': true,\n            'individualComplain': true,\n        },\n    ],\n    'containmentAndRecovery': {\n        'actionTaken': true,\n        'detailsOfActionTaken': 'Lorem Ipsum is simply dummy text of the printing and typesetting industry',\n        'hasDataBeenRecovered': true,\n        'detailsOfRecovery': 'Lorem Ipsum is simply dummy text of the printing and typesetting industry',\n        'dateOfRecovery': '2021-02-02T21:00:00.000Z',\n        'preventionSteps': 'Lorem Ipsum is simply dummy text of the printing and typesetting industry',\n    },\n    'miscellaneous': {\n        'medialCoverageOfIncident': true,\n        'regulatoryBodiesNotified': true\n    },\n    'registrationDate': '2021-02-02T21:00:00.000Z',\n    'impactOfBreach': [\n        {\n            'id': '1',\n            'rating': '1',\n            'impact': 'Affected Data subject will be required to submit information afresh or fill forms again'\n        },\n        {\n            'id': '2',\n            'rating': '1',\n            'impact': 'Affected Data subject may receive unsolicited email as a result of the breach'\n        },\n    ],\n    'potentialConsequences': [\n        {\n            'id': '1',\n            'potentialConsquence': 'Loss of Confidentiality',\n            'additional': 'A paper file or equipment is lost or stolen.'\n        },\n        {\n            'id': '1',\n            'potentialConsquence': 'Loss of Confidentiality',\n            'additional': 'Paper or equipment left accessible in an unsecured location.  '\n        },\n        {\n            'id': '1',\n            'potentialConsquence': 'Loss of Confidentiality',\n            'additional': 'Mail lost or opened before being returned to sender.    '\n        },\n        {\n            'id': '1',\n            'potentialConsquence': 'Loss of Confidentiality',\n            'additional': 'Hacking, malware (e.g. ransomware) and/ or phishing.    '\n        },\n    ],\n    'controls': [],\n    'causes': [\n        {\n            'cause': 'Malicious internal act',\n            'code': 'CA9238',\n            'id': '5'\n        },\n        {\n            'cause': 'Accidental internal act',\n            'code': 'C2333',\n            'id': '2'\n        },\n    ],\n    'reportedBy': 'enockm15',\n    'companyReporting': 'MTN Uganda',\n    'assignedTo': 'angella',\n    'lastModifiedDate': '2021-02-02T21:00:00.000Z'\n};\n\n\n\n","import {Component, EventEmitter, Input, Inject, OnInit, Output} from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms'\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n// import {ComplaintService} from '../../modules/complaints/complaints.service';\nimport { DataBreachService } from '../../data-breach.service';\n\n// import { Complaint, ComplaintModel } from '../../modules/complaints/complaints-model';\nimport {forkJoin, Observable, Subscription} from 'rxjs';\nimport {HttpClient} from '@angular/common/http';\nimport {catchError} from 'rxjs/operators';\n// import {ApiEndpointsService} from '../../services/api-endpoints.service';\nimport { ApiEndpointsService } from '../../../../services/api-endpoints.service';\n// import {ApiService} from '../../services/api.service';\nimport { ApiService } from '../../../../services/api.service';\nimport {MatDialog} from '@angular/material/dialog';\nimport { Router } from '@angular/router';\n// import {SuccessfulMessageDialogComponent} from '../../layout/dialogs/successful-message-dialog/successful-message-dialog.component';\nimport { SuccessfulMessageDialogComponent } from '../../../../layout/dialogs/successful-message-dialog/successful-message-dialog.component';\n// import { environment } from '../../../environments/environment';\nimport { environment } from '../../../../../environments/environment';\n// import { ResolutionUploadComponent } from '../dialogs/resolution-upload/resolution-upload.component';\nimport { ResolutionUploadComponent } from '../../../../layout/dialogs/resolution-upload/resolution-upload.component';\n// import { ApiPayload, FileUpload } from '../../services/api.model';\nimport { ApiPayload, FileUpload } from '../../../../services/api.model';\n// import { AppropriateSecurityMeasuresLetterComponent } from '../dialogs/appropriate-security-measures-letter/appropriate-security-measures-letter.component';\n\n// import { InfringementLetterComponent } from '../dialogs/infringement-letter/infringement-letter.component';\n// import { ViolationOfTheActLetterComponent } from '../dialogs/violation-of-the-act-letter/violation-of-the-act-letter.component';\n// import { ForwardMessageDialogComponent } from '../dialogs/forward-message-dialog/forward-message-dialog.component';\nimport {\n  BreachModel\n} from '../../breach-model';\n\n@Component({\n  selector: 'fury-breach-comments',\n  templateUrl: './breach-comments.component.html',\n  styleUrls: ['./breach-comments.component.scss']\n})\nexport class BreachCommentsComponent implements OnInit {\n\n  BreachCommentsFormGroup = this.fb.group({});\n  $processingEvent: EventEmitter<boolean> = new EventEmitter();\n  $errorsEvent: EventEmitter<any> = new EventEmitter();\n  $resultBreachesEvent: EventEmitter<BreachModel> = new EventEmitter();\n  httpSub: Subscription;\n  processing = false;\n  public data;\n  dialogRef;\n  previewDialog;\n  evidenceDocument: FileUpload | null;\n\n  constructor(\n\n    private fb: FormBuilder,\n    private endpoints: ApiEndpointsService,\n    private http: HttpClient,\n    private service: ApiService,\n    private dialog: MatDialog,\n    private route: Router,\n    private allDialogRef: MatDialog,\n    @Inject(MAT_DIALOG_DATA) public parent_data: any\n  ) { }\n\n  ngOnInit(): void {\n\n    this.BreachCommentsFormGroup = this.fb.group({\n\n      Comments: new FormControl('', [Validators.required]),\n      TechnicalForwardedComments: new FormControl(''),\n      LegalForwardedComments : new FormControl('')\n    });\n\n    this.BreachCommentsFormGroup.get('TechnicalForwardedComments').setValue(this.parent_data.TechnicalComments);\n    this.BreachCommentsFormGroup.get('LegalForwardedComments').setValue(this.parent_data.LegalComments);\n\n\n    console.log(this.parent_data);\n  }\n\n  private getBreachData(): any {\n\n    return {\n      Comments: this.BreachCommentsFormGroup.get('Comments').value,\n      DataBreachTrackingNo: this.parent_data.DataBreachTrackingNumber,\n      Status: this.parent_data.Status,\n    };\n  }\n\n  \n  \n\n  onSubmit(): void {\n    this.processing = true;\n    console.log('Comments:', this.getBreachData());\n\n    this.httpSub = this.http.post<ApiPayload>(this.endpoints.updateBreachStatus, this.getBreachData())\n    .pipe(catchError(this.service.handleError))\n    .subscribe((response) => {\n      this.dialogRef = this.dialog.open(SuccessfulMessageDialogComponent, {\n        panelClass: ['successful-message-dialog', 'dialogs'],\n        disableClose: true,\n        data: {\n          title: 'Update Breach Status',\n          message: response.message,\n          status: response.code === 200 ? true : false,\n        }\n      });\n\n      this.dialogRef.afterClosed().subscribe(() => {\n        this.allDialogRef.closeAll();\n        this.route.navigate(['/reporting-and-notification/find/all']);\n      });\n\n      this.processing = false;\n    }, (error) => {\n      this.processing = false;\n\n      if (error.error.message) {\n        this.dialogRef = this.dialog.open(SuccessfulMessageDialogComponent, {\n          panelClass: ['successful-message-dialog', 'dialogs'],\n          disableClose: true,\n          data: {\n            title: error.error.message['title'] ? error.error.message['title'] : 'Operation Failed',\n            message: error.error.message['body'] ? error.error.message['body'] : environment.technicalErrorResponse,\n            status: false,\n          }\n        });\n      } else {\n        this.service.determineErrorResponse(error);\n      }\n    });\n  }\n\n  onUploadAttachments(): void {\n    this.dialogRef = this.dialog.open(ResolutionUploadComponent, {\n      panelClass: ['resolution-upload-dialog', 'dialogs'],\n      disableClose: true,\n      data: {\n        multiple: false,\n        maxSize: 3\n      }\n    });\n\n    this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: FileUpload }) => {\n      // console.log('row:', result.row);\n\n      if (result.status) {\n        this.evidenceDocument = result.row;\n        console.log(this.evidenceDocument);\n      }\n    });     \n  }\n\n}\n","<div style=\"padding:10px\">\n    <div mat-dialog-title>Make Comments</div>\n    \n\n    <form [formGroup]=\"BreachCommentsFormGroup\">\n        <mat-dialog-content>\n            <div class=\"content\" fxLayout=\"column\" fxLayoutGap=\"8px\">\n\n                <div>\n                    <fieldset>\n                        <legend>Forwarded Comments</legend>\n                        <div>\n                            <div>\n                                <mat-form-field fxFlex=\"2 1 auto\">\n                                    <mat-label>Technical Comments</mat-label>\n                                    <input formControlName=\"TechnicalForwardedComments\" matInput [readonly]=\"true\">\n                                </mat-form-field>\n                            </div>\n                            \n                            <div>\n                                <mat-form-field fxFlex=\"2 1 auto\">\n                                    <mat-label>Legal Comments</mat-label>\n                                    <input formControlName=\"LegalForwardedComments\" matInput [readonly]=\"true\">\n                                </mat-form-field>\n                            </div>\n                        </div> \n                    </fieldset>\n                </div>\n                \n                <div fxLayout=\"column\" fxLayout.gt-xs=\"row\" fxLayoutGap=\"8px\"\n                     fxLayoutGap.gt-xs=\"24px\">\n                    <mat-form-field fxFlex=\"2 2 auto\" appearance=\"fill\">\n                        <mat-label>Provide Comments</mat-label>\n                        <textarea matInput\n                                  cdkTextareaAutosize\n                                  cdkAutosizeMinRows=\"6\"\n                                  formControlName=\"comments\"\n                                  cdkAutosizeMaxRows=\"10\"\n                                  formControlName=\"Comments\"></textarea>\n                        <mat-hint>Review Comments</mat-hint>\n                    </mat-form-field>\n                </div>\n            </div>\n        </mat-dialog-content>\n\n        <section>\n        \n            <div class=\"buttons\">\n                <button \n                    mat-button\n                    color=\"primary\"\n                    class=\"add-item-button\"\n                    (click)=\"onUploadAttachments()\"\n                    [ngStyle]=\"{'margin-bottom': '20px', 'margin-top': '20px', 'background-color':'#ABC334', 'color': '#000'}\">\n                    <div class=\"button-label\">\n                        <!-- <mat-icon [ngStyle]=\"{'background-color':'red','padding-top': '-20px'}\">add</mat-icon>                             -->\n                        <span> {{ evidenceDocument ? 'Replace Document' : 'Upload A Document' }} </span>\n                    </div>\n                </button>\n\n                <button \n                    mat-button\n                    *ngIf=\"evidenceDocument?.Name\"\n                    color=\"primary\"\n\n                    class=\"remove-button\"\n                    (click)=\"onRemoveDocument()\">\n                    <div class=\"button-label\">\n                        <mat-icon>clear</mat-icon>\n                        <span> Remove Document </span>\n                    </div>\n                </button>\n            </div>\n            <div *ngIf=\"evidenceDocument?.Base64\" class=\"uploaded-document\" matTooltip=\"Open Document\" (click)=\"onReadDocument(evidenceDocument)\">\n                <img src=\"./assets/images/pdf.png\" alt=\"\">\n\n                <span>{{ evidenceDocument?.Name }} <span>  -  {{ evidenceDocument?.Size }} Mbs</span></span>\n            </div>\n\n        </section>\n\n        <!-- <button *ngIf=\"parent_data.Status === 4\" mat-raised-button (click)=\"onPreview()\" color=\"primary\">\n            <span>Preview Letter</span>\n        </button>&nbsp; -->\n\n        \n\n        <button mat-raised-button (click)=\"onSubmit()\"\n                color=\"primary\">\n            \n            <span>Submit</span>\n        </button>&nbsp;\n        \n    </form>\n</div>","import {CdkTextareaAutosize} from '@angular/cdk/text-field';\nimport {ChangeDetectorRef, Component,EventEmitter, Input, OnInit, ViewChild} from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {fadeInRightAnimation} from '../../../../../@fury/animations/fade-in-right.animation';\nimport {fadeInUpAnimation} from '../../../../../@fury/animations/fade-in-up.animation';\nimport {SuccessfulMessageDialogComponent } from '../../../../layout/dialogs/successful-message-dialog/successful-message-dialog.component';\nimport { ForwardMessageDialogComponent } from '../../../../layout/dialogs/forward-message-dialog/forward-message-dialog.component';\nimport {\n    BREACH_JSON,\n    BreachControlModel, BREACHES_JSON,\n    BreachModel, CAUSE_OF_BREACH,\n    CauseOfBreach, IMPACT_OF_BREACH,\n    ImpactOfBreachModel,\n    PersonalData,\n    PersonalDataModel,\n    PolicyModel,\n    BreachCauses,\n    PotentialHarms,\n    BreachDescriptionQuestions,\n    PotentialConsequenceModel\n} from '../../breach-model';\nimport { DatePipe } from '@angular/common';\nimport { ComplaintCommentsComponent } from '../../../../layout/complaint-comments/complaint-comments.component';\nimport * as moment from 'moment'\nimport { environment } from '../../../../../environments/environment';\nimport { ApiPayload, Organisation, OrganisationDetails } from '../../../../services/api.model';\nimport {AuthenticationService} from '../../../../authentication/authentication.service';\n\nimport {HttpClient} from '@angular/common/http';\nimport {catchError} from 'rxjs/operators';\n\nimport {BaseFuryForm} from '../../../../../@fury/shared/base-fury-form';\nimport {ComplaintModel, PersonalDataAffected} from '../../../complaints/complaints-model';\nimport {KeycloakService} from 'keycloak-angular';\nimport {forkJoin, Observable, of, ReplaySubject, Subscription} from 'rxjs';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {filter} from 'rxjs/operators';\nimport { scaleInAnimation } from '../../../../../@fury/animations/scale-in.animation';\nimport {WorkflowServiceService} from '../../../../services/workflow-service.service';\nimport {CompanyRegistrationService} from '../../../company-registration/company-registration.service';\nimport { ComplaintService } from '../../../complaints/complaints.service';\nimport { ApiService } from '../../../../services/api.service';\nimport { ApiEndpointsService } from '../../../../services/api-endpoints.service';\nimport { CategoryDisplayComponent } from '../../../../layout/dialogs/category-display/category-display.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatCheckbox, MatCheckboxChange } from '@angular/material/checkbox';\nimport { BreachCommentsComponent } from '../breach-comments/breach-comments.component';\nimport { ForwardCommentsComponent } from '../../../../layout/dialogs/forward-comments/forward-comments.component';\nimport {DataBreachService} from '../../data-breach.service';\nimport { BreachInvestigationsComponent } from '../../../../layout/dialogs/breach-investigations/breach-investigations/breach-investigations.component';\nimport { Moment } from 'moment';\nimport { OrgBreachPreviewComponent } from '../../../../layout/dialogs/Breach-review/org-breach-preview/org-breach-preview.component';\nimport { BreachRequestForInformationComponent } from '../../../../layout/dialogs/breach-request-for-information/breach-request-for-information.component';\nimport { BreachManageMoreInformationComponent } from '../../../../layout/dialogs/breach-manage-more-information/breach-manage-more-information.component';\n@Component({\n    selector: 'fury-data-breach-edit',\n    templateUrl: './data-breach-edit.component.html',\n    styleUrls: ['./data-breach-edit.component.scss'],\n    animations: [fadeInRightAnimation, fadeInUpAnimation, scaleInAnimation]\n})\nexport class DataBreachEditComponent extends BaseFuryForm implements OnInit {\n\n    // Simulating A Service\n    subject$: ReplaySubject<BreachModel> = new ReplaySubject<BreachModel>(1);\n    data$: Observable<BreachModel> = this.subject$.asObservable();\n    $processingEvent: EventEmitter<boolean> = new EventEmitter();\n    $errorsEvent: EventEmitter<any> = new EventEmitter();\n    $resultComplaintsEvent: EventEmitter<BreachModel> = new EventEmitter();\n\n    @ViewChild('autosize') autosize: CdkTextareaAutosize;\n    // Main object\n    processing = false;\n    accesses: string[];\n    httpSub: Subscription;\n    dialogRef;\n    showManageRequestInfo = false;\n    showManageButtons = false;\n    disableResolve = true;\n    disableForward = true;\n    isDirector = false;\n    DataBreachTrackingNo;\n    LegalComments: string;\n    TechnicalComments: string;\n    organisation_name: string[];\n    email: string[];\n    RegTrackingNo: string[];\n    PhoneNumber: number[];\n    ActionTakenCheckboxValue = 0;\n    DataRecoveredCheckboxValue = 0;\n    DataSubjectsCategories = [];\n    CausesOfBreach : CauseOfBreachn    DataBreachTrackingNumber: string;\n    selectedBreachDescriptionQuestions : BreachDescriptionQuestions[] = [];\n    notSelectedBreachDescriptionQuestions :BreachDescriptionQuestions[] = [];\n    FirstSelectedBreachDescription : BreachDescriptionQuestions[];\n    SecondSelectedBreachDescription : BreachDescriptionQuestions[];\n    TotalSelectedBreachDescription : BreachDescriptionQuestions[];\n    TotalSelectedPotentialHarms : PotentialConsequenceModel[];\n    selectedPotentialHarms = [];\n    notSelectedPotentialHarms = [];\n    PotentialHarmsQuestions:PotentialHarms[];\n    BreachDescriptionQuestions: BreachDescriptionQuestions[] = [];\n    breachDescriptionQuestionsCount;\n    PotentialHarmsCount;\n    breachPotentialConsequences : [];\n    BreachCauses: BreachCauses[];\n    PotentialHarms: PotentialHarms[] = [];\n    PotentialHarmsFirst:PotentialHarms[];\n    PotentialHarmsSecond:PotentialHarms[];\n    organisation: OrganisationDetails[];\n    application: BreachModel = new BreachModel();\n    policy: PolicyModel = new PolicyModel();\n    policies: PolicyModel[] = [];\n    personalData: PersonalData[] = [];\n    personalDataAffected: PersonalDataModel[] = [];\n    breachDetails: FormGroup;\n    OrganisationDetails: FormGroup;\n    additionalInfo: FormGroup;\n    containmentAndRecovery: FormGroup;\n    miscellaneous: FormGroup;\n    breachConsequences: FormGroup;\n    potentialHarms: FormGroup;\n    OtherpotentialHarms: FormGroup;\n    singleOrganisation: Organisation | null;\n    impactOfBreaches: ImpactOfBreachModel[] = [];\n    causeOfBreaches: CauseOfBreach [] = [];\n    controls?:BreachControlModel[] = [];\n    _controls?:BreachControlModel[] = [];\n    dataActors: any [];\n    _dataActors: any [];\n    isOfficer: boolean;\n    isCompanyOfficer: boolean;\n    pontentialConsequences: PotentialConsequenceModel [] = [];\n    dataSource: MatTableDataSource<BreachModel> | null;\n    breaches: BreachModel[];\n    applicantDetails: FormGroup;\n    BreachDescriptionQuestionsFirst: BreachDescriptionQuestions[];\n    BreachDescriptionQuestionsSecond: BreachDescriptionQuestions[];\n    subscriptions: Subscription[] = [];\n    pipe = new DatePipe('en-US');\n    isLinear = false;\n    OrganisationID;\n    minDate:any;\n    maxDate:any;\n    ActualOrganisationID;\n\n\n    phonePrefixOptions = ['+1', '+27', '+44', '+49', '+61', '+91'];\n\n    passwordInputType = 'password';\n\n    list = [];\n    _displayColumns: string [] = ['value', 'details'];\n    OrganisationNumber;\n\n    levels = ['Negligible', 'Limited', 'Significant', 'Maximum'];\n\n    constructor(private fb: FormBuilder,\n                private service: ApiService,\n                private endpoints: ApiEndpointsService,\n                private http: HttpClient,\n                private cd: ChangeDetectorRef,\n                private activateRoute: ActivatedRoute,\n                private auth: KeycloakService,\n                private dialog: MatDialog,\n                private allDialogRef: MatDialog,\n                public authService: KeycloakService,\n                public _auth: AuthenticationService,\n                private route: Router,\n                public _workflowService: WorkflowServiceService,\n                public registrationService: CompanyRegistrationService,\n                public complaintService: ComplaintService,\n                public dataBreachService: DataBreachService,\n                private snackbar: MatSnackBar) {\n        super(\n            authService,\n            _workflowService,\n            registrationService,\n            complaintService\n        );\n\n \n        this.operationType = activateRoute.routeConfig.data.action;\n        this.accesses = authService.getKeycloakInstance().resourceAccess['dps-frontend'].roles;\n        this.OrganisationID = _auth.getUser();\n        console.log(this.OrganisationID)\n      \n        if (this.operationType === 'EDIT') {\n            this.isEditMode = true;\n            this.application.policies = [];\n            this.application.personalDataAffected = [];\n            this.application.impactOfBreach = [];\n            this.application.controls = [];\n            this.application.potentialConsequences = [];\n            this.isEditMode = true;\n        } else if (this.operationType === 'CREATE') {\n            this.isEditMode = false;\n            this.application.policies = [];\n            this.application.personalDataAffected = [];\n            this.application.impactOfBreach = [];\n            this.application.controls = [];\n            this.application.potentialConsequences = [];\n        } else if (this.operationType === 'VIEW') {\n            this.isEditMode = false;\n            this.isViewOnly = true;\n            this.showManageButtons = true;\n        }\n    }\n\n    ngOnInit() {\n\n\n        this.maxDate = new Date();\n\n\n        if (this.operationType === 'EDIT') {\n\n            this.DataBreachTrackingNo = history.state.DataBreachTrackingNo;\n            \n        }\n        else if(this.operationType === 'VIEW'){\n            \n            this.DataBreachTrackingNo = history.state.DataBreachTrackingNo;\n        }\n        this.OrganisationDetails = this.fb.group({\n            OrganisationName: new FormControl('', [Validators.required]),\n            RegNo: new FormControl('', [Validators.required]),\n            //DPOName: new FormControl('', [Validators.required]),\n            DPOEmail: new FormControl('', [Validators.required]),\n            DPONumber: new FormControl('', [Validators.required, Validators.pattern(/^[0-9]+$/)])\n        });\n        \n        this.isOfficer = this.auth.isUserInRole('data-protection-officer-nita');\n        this.isCompanyOfficer = this.auth.isUserInRole('data-protection-officer');\n        /**\n         * Horizontal Stepper\n         * @type {FormGroup}\n         */\n        this.getCauseOfBreachJson.subscribe(causeOfBreaches => {\n            this.causeOfBreaches = causeOfBreaches;\n        });\n        this.breachDetails = this.fb.group({\n            incidentDate: [null, Validators.required],\n            delayInReporting: [null],\n            delayInReportings: [null],\n            reasonForDelay: [null, Validators.required],\n            causesOfBreach: [],\n            measures:[null, Validators.required],\n            FullDetailsOfComplaint: [null, Validators.required],\n            DetailsOfComplaint: [null, Validators.required]\n     \n        });\n\n        this.containmentAndRecovery = this.fb.group({\n            actionTaken: [null],\n            detailsOfActionTaken: [null],\n            hasDataBeenRecovered: [null],\n            detailsOfRecovery: [null],\n            dateOfRecovery: [null],\n            preventionSteps: [null],\n        });\n\n        this.breachConsequences = this.fb.group({\n\n        });\n\n        this.additionalInfo = this.fb.group({\n\n        });\n\n        this.potentialHarms = this.fb.group({\n            \n        });\n\n        this.OtherpotentialHarms = this.fb.group({\n\n        });\n\n        if(this.accesses.includes('director-rights')){\n\n            this.isDirector = true;\n        }\n\n      \n        if (this.isViewOnly) {\n            this.disableAllControls();\n            this.getBreach()\n\n            this.subscriptions['$resultComplaintsEvent'] = this.$resultComplaintsEvent.subscribe(result => {\n                if (result) {\n\n                    this.TotalSelectedBreachDescription = result[0].PotentialConsequences;\n                    const QuestionCount = result[0].PotentialConsequences.length;\n                    console.log(QuestionCount);\n                    const middleIndex = Math.ceil(result[0].PotentialConsequences / 2)\n                    console.log(typeof(result[0].PotentialConsequences));\n                    this.FirstSelectedBreachDescription = result[0].PotentialConsequences.slice(0, middleIndex);\n                    console.log(this.FirstSelectedBreachDescription);\n                    this.SecondSelectedBreachDescription = result[0].PotentialConsequences.slice(-middleIndex);\n                    console.log(this.SecondSelectedBreachDescription);\n\n                    this.TotalSelectedPotentialHarms = result[0].PotentialHarms;\n\n\n\n                    this.TechnicalComments = result[0].TechnicalComments\n                    this.LegalComments = result[0].LegalComments\n\n                    if(this.accesses.includes('technical-rights') ){\n\n                        if(result[0].BreachStatusID == 1){\n            \n                            this.disableForward = false;\n                        }\n                        else if(result[0].BreachStatusID == 7){\n                            this.showManageRequestInfo = true\n                            this.disableForward = true;\n                        }\n                        else{\n                            this.disableForward = true;\n                        }     \n                    \n                    }\n                    else if(this.accesses.includes('legal-rights')){\n                        if(result[0].BreachStatusID == 3){\n            \n                            this.disableForward = false;\n                        }\n                        else if(result[0].BreachStatusID == 8){\n                            this.showManageRequestInfo = true\n                            this.disableForward = true;\n                        }\n                        else{\n                            this.disableForward = true;\n                        }\n                    }\n            \n                    else if(this.accesses.includes('director-rights')){\n                        if(result[0].BreachStatusID == 4){\n            \n                            this.disableResolve = false;\n                        }\n                        else{\n                            this.disableResolve = true;\n                        }\n                    }\n            \n                    else{\n                        this.disableForward = true;\n                    }\n            \n                   \n                    this.httpSub =  this.fetchOrganisation(result[0].OrganisationID)\n                    .pipe(catchError(this.service.handleError))\n                    .subscribe((responseList) => {\n                    \n                    this.mapFields(result, responseList[0]);\n\n                }\n                , (error) => {\n                    this.processing = false;\n                    this.service.determineErrorResponse(error);\n                  });  \n                }\n                else{\n                    console.log(\"expected\");\n                }\n            });\n\n        }\n\n    }\n\n    ngAfterViewInit(): void {\n        this.httpSub = this.fetchMultiple()\n        .pipe(catchError(this.service.handleError))\n        .subscribe((responseList) => {\n        \n          this.breachDescriptionQuestionsCount = responseList[0].length;\n          console.log(this.breachDescriptionQuestionsCount);\n          const middleIndex = Math.ceil(responseList[0].length / 2)\n          this.BreachDescriptionQuestionsFirst = responseList[0].splice(0, middleIndex);\n          console.log(this.BreachDescriptionQuestionsFirst);\n          this.BreachDescriptionQuestionsSecond = responseList[0].splice(-middleIndex);\n          console.log(this.BreachDescriptionQuestionsSecond);\n\n          this.BreachDescriptionQuestions = this.BreachDescriptionQuestionsFirst.concat(this.BreachDescriptionQuestionsSecond);\n          console.log(this.BreachDescriptionQuestions);\n\n          this.PotentialHarmsCount = responseList[2].length;\n\n\n          this.BreachCauses = responseList[1];\n\n          const middleIndex2 = Math.ceil(responseList[2].length / 2)\n          this.PotentialHarmsFirst = responseList[2].splice(0, middleIndex2);\n          this.PotentialHarmsSecond = responseList[2].splice(-middleIndex2);\n\n\n          this.PotentialHarmsQuestions = this.PotentialHarmsFirst.concat(this.PotentialHarmsSecond);\n            \n          console.log(responseList[3]);\n          this.prefillOrganisationDetails(responseList[3]);\n\n          this.processing = false;\n        }\n        , (error) => {\n            this.processing = false;\n            this.service.determineErrorResponse(error);\n          });  \n    }\n\n    changePotentialHarmsValue(event, question: PotentialHarms){\n\n        console.log(event.value)\n        const questionValue = event.value;\n\n        if(questionValue.startsWith('Yes')){\n        \n            const questionID = questionValue.substring(questionValue.indexOf(\"-\") + 1);\n            this.selectedPotentialHarms.push(question);\n            console.log(this.selectedPotentialHarms.length);\n\n            var index = this.notSelectedPotentialHarms.indexOf(question);\n            if (index !== -1) {\n            this.notSelectedPotentialHarms.splice(index, 1);\n            }\n            console.log(this.notSelectedPotentialHarms.length);\n        \n        }\n        else{\n            \n            const questionID = questionValue.substring(questionValue.indexOf(\"-\") + 1);\n       \n            this.notSelectedPotentialHarms.push(question);\n            var index = this.selectedPotentialHarms.indexOf(question);\n            if (index !== -1) {\n            this.selectedPotentialHarms.splice(index, 1);\n            }\n            console.log(this.selectedPotentialHarms);\n        } \n    }\n\n    changeBreachDescriptionValue(event, question: BreachDescriptionQuestions){\n    \n        console.log(event.value)\n        const questionValue = event.value;\n\n        if(questionValue.startsWith('Yes')){\n        \n            const questionID = questionValue.substring(questionValue.indexOf(\"-\") + 1);\n            this.selectedBreachDescriptionQuestions.push(question);\n            \n\n            var index = this.notSelectedBreachDescriptionQuestions.indexOf(question);\n            if (index !== -1) {\n            this.notSelectedBreachDescriptionQuestions.splice(index, 1);\n            \n            }\n            console.log(this.selectedBreachDescriptionQuestions);\n            \n        \n        }\n        else{\n            \n            const questionID = questionValue.substring(questionValue.indexOf(\"-\") + 1);\n       \n            this.notSelectedBreachDescriptionQuestions.push(question);\n            var index = this.selectedBreachDescriptionQuestions.indexOf(question);\n            if (index !== -1) {\n            this.selectedBreachDescriptionQuestions.splice(index, 1);\n            }\n            console.log(this.selectedBreachDescriptionQuestions)\n            \n        }\n\n    }\n\n    private fetchMultiple(): Observable<any[]> {\n        this.processing = true;\n\n        const OrganisationDetails = this.http.get<ApiPayload>(this.endpoints.getOrgDetailsById + '?OrganizationID='+this.OrganisationID.organisation_id);\n        const BreachDescriptionQuestions = this.http.get<ApiPayload>(this.endpoints.getBreachDescriptionDetails);\n        const CausesOfBreach = this.http.get<ApiPayload>(this.endpoints.getBreachCauses);\n        const PotentialHarms = this.http.get<ApiPayload>(this.endpoints.getPotentialHarms);\n        return forkJoin([BreachDescriptionQuestions, CausesOfBreach, PotentialHarms, OrganisationDetails]);\n    }\n\n                \n    mapFields(result, organisation) {\n\n\n        console.log(organisation);\n        console.log(result[0]);\n\n        //console.log(this.pipe.transform(result[0].IncidentDate, 'dd/MM/yyyy'));\n\n        this.OrganisationDetails.get('OrganisationName').setValue(organisation[0].OrganisationName);\n        this.OrganisationDetails.get('RegNo').setValue(organisation[0].RegTrackingNo);\n        this.OrganisationDetails.get('DPOEmail').setValue(organisation[0].EmailAddress);\n        this.OrganisationDetails.get('DPONumber').setValue(organisation[0].PhoneNumber);\n        this.breachDetails.get('incidentDate').setValue(new Date(result[0].IncidentDate));\n\n        var index = result[0].CategoriesOfDataSubjectAffected.split(',').indexOf('adults');\n        if (index !== -1) {\n            this.breachDetails.get('delayInReporting').setValue(true);\n        }\n\n        var index = result[0].CategoriesOfDataSubjectAffected.split(',').indexOf('children');\n        if (index !== -1) {\n            this.breachDetails.get('delayInReportings').setValue(true);\n        }\n\n\n        this.breachDetails.get('causesOfBreach').setValue(result[0].BreachCauses);\n        this.breachDetails.get('reasonForDelay').setValue(result[0].NumberOfDataSubjects.toString());\n        this.breachDetails.get('measures').setValue(result[0].NumberOfRecordsHeld.toString());\n        this.breachDetails.get('FullDetailsOfComplaint').setValue(result[0].DetailedDataBreachCause);\n        this.breachDetails.get('DetailsOfComplaint').setValue(result[0].RemedialActionsTaken);\n        this.containmentAndRecovery.get('actionTaken').setValue(result[0]);\n        this.containmentAndRecovery.get('detailsOfActionTaken').setValue(result[0].ActionTakenToMinimizeDetails);\n        this.containmentAndRecovery.get('hasDataBeenRecovered').setValue(result[0]);\n        this.containmentAndRecovery.get('detailsOfRecovery').setValue(result[0].DataPlacedAtRiskRecoveredDetails);\n        this.containmentAndRecovery.get('dateOfRecovery').setValue(result[0].DataRecoveryDate);\n        this.containmentAndRecovery.get('preventionSteps').setValue(result[0].PreventiveStepsToPreventRecurrence);\n       \n    }\n    disableAllControls() {\n        this.breachDetails.disable();\n        this.containmentAndRecovery.disable();\n    }\n\n    showPassword() {\n        this.passwordInputType = 'text';\n        this.cd.markForCheck();\n    }\n\n    hidePassword() {\n        this.passwordInputType = 'password';\n        this.cd.markForCheck();\n    }\n\n    submit() {\n        this.snackbar.open('Breach Submitted Succefully your reference is DAB/16/10/21/4651', null, {\n            duration: 5000\n        });\n    }\n\n    onPolicyChange(policies: PolicyModel[]) {\n        this.application.policies = policies;\n    }\n\n    onPersonalDataChange($event: PersonalDataModel []) {\n        this.personalDataAffected = $event;\n    }\n\n    acceptData($event: PersonalDataModel []){\n        this.personalDataAffected = $event;\n    }\n\n    filter(data) {\n        console.log(data.value);\n    }\n\n    onChangeBreachImpact($event: ImpactOfBreachModel []) {\n        this.impactOfBreaches = $event;\n    }\n\n\n    onChangeConsquenceEvent($event: PotentialConsequenceModel []) {\n        this.pontentialConsequences = $event;\n    }\n\n\n    onBreachControlEvent($event: BreachControlModel []) {\n        this.controls = $event;\n    }\n\n    formTriggler(operation: string) {\n        switch (operation) {\n            case 'EDIT':\n                break;\n            case 'CREATE':\n                break;\n            case  'VIEW':\n                this.isViewOnly = true;\n                break;\n        }\n    }\n\n    get getSampleJson() {\n        return of(IMPACT_OF_BREACH.map(document => document));\n    }\n\n    get getCauseOfBreachJson() {\n        return of(CAUSE_OF_BREACH.map(document => document));\n    }\n\n\n    get getData() {\n        return of(BREACH_JSON);\n    }\n\n\n    getFormData(){\n\n        const momentDate = new Date(this.breachDetails.get('incidentDate').value); // Replace event.value with your date value\n        const formattedDate = moment(momentDate).format(\"YYYY-MM-DD\");\n\n        const momentDates2 = new Date(this.containmentAndRecovery.get('dateOfRecovery').value); // Replace event.value with your date value\n        const formattedDate2 = moment(momentDates2).format(\"YYYY-MM-DD\");\n       \n\n        const data = {\n            OrganisationID:parseInt(this.ActualOrganisationID),  \n            IncidentDate: formattedDate,\n            organisation_name: this.OrganisationDetails.get('OrganisationName').value,\n            RegTrackingNo: this.OrganisationDetails.get('RegNo').value,\n            PhoneNumber: this.OrganisationDetails.get('DPONumber').value,\n            email: this.OrganisationDetails.get('DPOEmail').value,\n            CategoriesOfDataSubjectAffected: this.DataSubjectsCategories.toString(),\n            NumberOfDataSubjects: this.breachDetails.get('reasonForDelay').value ? parseInt(this.breachDetails.get('reasonForDelay').value) : '',\n            DetailedDataBreachCause: this.breachDetails.get('FullDetailsOfComplaint').value,\n            NumberOfRecordsHeld: parseInt(this.breachDetails.get('measures').value),\n            RemedialActionsTaken: this.breachDetails.get('DetailsOfComplaint').value,\n            PotentialConsequences: this.selectedBreachDescriptionQuestions,\n            PotentialHarms: this.selectedPotentialHarms,\n            IsActionTakenToMinimize: this.ActionTakenCheckboxValue,\n            ActionTakenToMinimizeDetails:this.containmentAndRecovery.get('detailsOfActionTaken').value ? this.containmentAndRecovery.get('detailsOfActionTaken').value : '', \n            IsDataPlacedAtRiskRecovered: this.DataRecoveredCheckboxValue,\n            DataPlacedAtRiskRecoveredDetails:this.containmentAndRecovery.get('detailsOfRecovery').value ? this.containmentAndRecovery.get('detailsOfRecovery').value : '', \n            DataRecoveryDate:this.containmentAndRecovery.get('dateOfRecovery').value ? formattedDate2 : '', \n            PreventiveStepsToPreventRecurrence:this.containmentAndRecovery.get('preventionSteps').value ? this.containmentAndRecovery.get('preventionSteps').value : '', \n            PersonalDataAffected: this.personalDataAffected,\n            BreachCauses: this.CausesOfBreach, \n          }\n      \n          return data;\n\n    }\n\n    onPreviewForm(download: boolean): void {\n        this.dialogRef = this.dialog.open(OrgBreachPreviewComponent, {\n          panelClass: ['org-breach-preview', 'dialogs'],\n          disableClose: true,\n          data: {\n            download: download,\n            row: this.getFormData(),\n            \n          }\n        });   \n      }\n\n    onSubmit(): void{\n\n        console.log(this.getFormData())\n\n        this.httpSub = this.http.post<ApiPayload>(this.endpoints.reportBreach, this.getFormData())\n        .pipe(catchError(this.service.handleError))\n        .subscribe((response) => {\n          this.dialogRef = this.dialog.open(SuccessfulMessageDialogComponent, {\n            disableClose: true,\n            data: {\n              title: 'Breach Submission',\n              message: 'Breach Report Created Successfully',\n              status: true,\n            }\n          });\n\n          this.dialogRef.afterClosed().subscribe(() => {\n            \n            this.route.navigate(['/']);\n          });\n    \n          this.processing = false;\n        }, (error) => {\n          this.processing = false;\n    \n          if (error.error.message) {\n            this.dialogRef = this.dialog.open( ForwardMessageDialogComponent, {\n              panelClass: ['forward-message-dialog', 'dialogs'],\n              disableClose: true,\n              data: {\n                title: error.error.message['title'] ? error.error.message['title'] : 'Operation Failed',\n                message: error.error.message['body'] ? error.error.message['body'] : environment.technicalErrorResponse,\n                status: false,\n              }\n            });\n          } else {\n            this.service.determineErrorResponse(error);\n          }\n        });\n\n\n    }\n    \n    markAsResolved(){\n        \n        const dialogRef = this.dialog.open(BreachCommentsComponent, {\n                    width: '1391px',\n                    height: '595px',\n                    data: {\n                        DataBreachTrackingNumber:this.DataBreachTrackingNo,\n                        Status: 5,\n                        isDirector: this.isDirector,\n                        TechnicalComments: this.TechnicalComments,\n                        LegalComments: this.LegalComments\n                        \n                    }     \n                });\n\n       \n    }\n\n    forwardComplaint(): void{\n\n        let statusID;\n        let TechnicalComments;\n        let isLegal;\n        if(this.accesses.includes('technical-rights') ){\n              statusID = 3;\n              isLegal = false;\n         }\n         else if(this.accesses.includes('legal-rights')){\n              TechnicalComments = this.TechnicalComments;\n              statusID = 4;\n              isLegal = true;\n         }\n\n        const dialogRef = this.dialog.open(ForwardCommentsComponent, {\n            width: '1391px',\n            height: '595px',\n            data: {\n                DataBreachTrackingNumber:this.DataBreachTrackingNo,\n                Status: statusID,   \n                TechnicalComments: TechnicalComments,\n                isLegal : isLegal\n            }     \n        });\n      }\n\n      moreInformation(): void {\n\n        this.dialog.open(BreachRequestForInformationComponent, {\n            width: '1391px',\n            height: '595px',\n            data: {\n                DataBreachTrackingNumber:this.DataBreachTrackingNo,\n                \n            }\n            \n        }).afterClosed().subscribe((dialogResult) => {\n                \n            \n        });\n\n      }\n\n\n    ActionTakenCheckboxChange(event: MatCheckboxChange){\n        if(event.checked){\n            this.ActionTakenCheckboxValue = 1;\n\n        } \n        else{\n            this.ActionTakenCheckboxValue = 0;\n        }\n    }\n\n\n    DataRecoveredCheckboxChange(event: MatCheckboxChange){\n        if(event.checked){\n            this.DataRecoveredCheckboxValue = 1;\n            console.log(\"here1\");\n\n        } \n        else{\n            this.DataRecoveredCheckboxValue = 0;\n            console.log(\"here2\");\n        }\n    }\n\n\n    ChildrenDataSubjectCategoryChange(event: MatCheckboxChange){\n        if(event.checked){\n            if(this.DataSubjectsCategories.indexOf('children') == -1) {\n                this.DataSubjectsCategories.push('children');\n            }\n            \n            console.log(\"here1\");\n\n        } \n        else{\n            var index = this.DataSubjectsCategories.indexOf('children');\n            if (index !== -1) {\n            this.DataSubjectsCategories.splice(index, 1);\n            }\n        }\n    }\n\n\n    AdultDataSubjectCategoryChange(event: MatCheckboxChange){\n        if(event.checked){\n            if(this.DataSubjectsCategories.indexOf('adults') == -1) {\n                this.DataSubjectsCategories.push('adults');\n            }\n            \n            console.log(\"here1\");\n\n        } \n        else{\n            var index = this.DataSubjectsCategories.indexOf('adults');\n            if (index !== -1) {\n            this.DataSubjectsCategories.splice(index, 1);\n            }\n        }\n    }\n\n    markUnderInvestigation(){\n        \n        this.dialog.open(BreachInvestigationsComponent, {\n            width: '1391px',\n            height: '595px',\n            data: {\n                BreachTrackingNumber:this.DataBreachTrackingNo,\n                Status: 2\n            }\n            \n        }).afterClosed().subscribe((dialogResult) => {\n                \n            \n        });\n    }\n\n    \n\n    onChangeOfBreachCauses(event, Cause){\n        if(event.source._selected == true){\n            if(this.CausesOfBreach.indexOf(Cause) == -1) {\n                this.CausesOfBreach.push(Cause);\n            }\n        }\n        else{\n            var index = this.CausesOfBreach.indexOf(Cause);\n            if (index !== -1) {\n            this.CausesOfBreach.splice(index, 1);\n            }\n        }\n        console.log(this.CausesOfBreach);\n    }\n\n\n    getBreach() {\n        \n\n        // tslint:disable-next-line:max-line-length\n        this.dataBreachService.getBreach(this.$processingEvent, this.$resultComplaintsEvent, this.$errorsEvent, this.DataBreachTrackingNo);\n    }\n\n\n    fetchOrganisation(organisation){\n\n        const OrganisationDetails = this.http.get<ApiPayload>(this.endpoints.getOrganisationDetailsById + '?OrganizationID='+organisation);\n\n        return forkJoin([OrganisationDetails]);\n\n    }\n\n\n    prefillOrganisationDetails(organisation){\n\n        console.log(organisation);\n        this.ActualOrganisationID = organisation[0].OrganisationID;\n        this.OrganisationDetails.get('OrganisationName').setValue(this.OrganisationID.organisation_name);\n        this.OrganisationDetails.get('RegNo').setValue(organisation[0].RegTrackingNo);\n        this.OrganisationDetails.get('DPOEmail').setValue(organisation[0].EmailAddress);\n        this.OrganisationDetails.get('DPONumber').setValue(organisation[0].PhoneNumber);\n    }\n\n\n\n    manageRequestInfo(){\n\n\n        this.httpSub = this.http.get<ApiPayload>(this.endpoints.CheckBreachRequestForInfo + '?DataBreachTrackingNo='+ this.DataBreachTrackingNo)\n        .pipe(catchError(this.service.handleError))\n        .subscribe((response) => {\n          console.log(response.data.Comments);\n          this.dialogRef = this.dialog.open(BreachManageMoreInformationComponent, {\n            width: '1391px',\n            height: '595px',\n            data: {\n                DataBreachTrackingNumber:this.DataBreachTrackingNo,\n                RequestedInformation : response.data.Comments,  \n            }\n          });\n    \n          this.dialogRef.afterClosed().subscribe(() => {\n            this.route.navigate(['/reporting-and-notification/find/all']);\n          });\n    \n          this.processing = false;\n        }, (error) => {\n          this.processing = false;\n    \n          if (error.error.message) {\n            this.dialogRef = this.dialog.open(SuccessfulMessageDialogComponent, {\n              panelClass: ['successful-message-dialog', 'dialogs'],\n              disableClose: true,\n              data: {\n                title: error.error.message['title'] ? error.error.message['title'] : 'Operation Failed',\n                message: error.error.message['body'] ? error.error.message['body'] : environment.technicalErrorResponse,\n                status: false,\n              }\n            });\n          } else {\n            this.service.determineErrorResponse(error);\n          }\n        });\n      }\n\n\n    \n\n\n\n}\n","<fury-page-layout mode=\"card\">\n    <fury-page-layout-header>\n        <fury-breadcrumbs [@fadeInRight] [crumbs]=\"['Breaches']\" current=\"Notification Breach\"></fury-breadcrumbs>\n    </fury-page-layout-header>\n\n    <div>\n        <mat-toolbar>\n            <mat-toolbar-row *ngIf=\"showManageButtons == true\">\n                <span class=\"example-spacer\"></span>\n\n                <button \n                        mat-raised-button class=\"actions-button-padding\"\n                        color=\"primary\"\n                        *ngIf=\"isDirector == true\"\n                        [ngStyle]=\"{'margin-right':'30px'}\"\n                        [disabled] = \"disableResolve == true\"\n                            (click)=\"markUnderInvestigation()\">\n                        <span> Investigate</span>\n                </button>\n\n                <button mat-raised-button  \n                *ngIf=\"isDirector == true\"\n                class=\"actions-button-padding\" \n                color=\"primary\" \n                [disabled] = \"disableResolve == true\"\n                (click)=\"markAsResolved()\" >\n                    <!-- <mat-icon>thumbs-up</mat-icon> -->\n                    <span>Mark as resolved</span>\n                </button>\n\n                <button mat-raised-button\n                *ngIf=\"isDirector == false\"\n                class=\"actions-button-padding\" \n                (click)=\"forwardComplaint()\" \n                [disabled] = \"disableForward == true\"\n                color=\"primary\" \n                [ngStyle]=\"{'margin-left':'30px'}\">\n                    <span>Forward Breach</span>\n                </button>\n                \n                <button mat-raised-button \n                *ngIf=\"isDirector == true\"\n                matTooltip=\"View Timeline\" \n                class=\"actions-button-padding\" \n                [disabled] = \"disableResolve == true\"\n                [ngStyle]=\"{'margin-left':'30px'}\"\n                color=\"primary\" \n                (click)=\"moreInformation()\">\n                        <!-- <mat-icon>thumbs-up</mat-icon> -->\n                        <span>Request for more information</span>\n                    </button>\n\n                <button mat-raised-button \n                *ngIf=\"showManageRequestInfo == true\"\n                matTooltip=\"View Timeline\" \n                class=\"actions-button-padding\" \n                [ngStyle]=\"{'margin-left':'30px'}\"\n                color=\"primary\" \n                (click)=\"manageRequestInfo()\">\n                        <!-- <mat-icon>thumbs-up</mat-icon> -->\n                        <span>Manage Request for Information</span>\n                    </button>\n\n                <!-- <button mat-raised-button matTooltip=\"View Timeline\" class=\"actions-button-padding\"\n                        *ngIf=\"isOfficer\" color=\"primary\" (click)=\"viewApplicationTimeLine()\">\n                    <mat-icon>view_timeline</mat-icon>\n                    <span>Application Timeline</span>\n                </button> -->\n            </mat-toolbar-row>\n        </mat-toolbar>\n    </div>\n\n    <fury-page-layout-content [@fadeInUp]>\n        <div [@fadeInUp] class=\"\">\n            <mat-horizontal-stepper \n                [linear]=\"true\"\n                \n                labelPosition=\"bottom\" #stepper>\n\n                <mat-step [stepControl]=\"OrganisationDetails\">\n                    <ng-template matStepLabel>\n                        <h3></h3>\n                    </ng-template>\n\n                    <form [formGroup]=\"OrganisationDetails\" class=\"form-OrganisationDetails\">\n                        <div class=\"grouped-items\">\n                            <mat-form-field fxFlex=\"2 2 auto\" [ngStyle]=\"{'margin-right': '20px'}\">\n                                <mat-label>Name of Organisation<span class=\"required-field\">required</span></mat-label>\n                                <textarea matInput\n                                    cdkTextareaAutosize\n                                    #autosize=\"cdkTextareaAutosize\"\n                                    cdkAutosizeMinRows=\"1\"\n                                    formControlName=\"OrganisationName\"\n                                    cdkAutosizeMaxRows=\"5\"\n                                    [readonly]=\"true\"></textarea>\n                                <mat-hint>Organisation that is affected</mat-hint>              \n                            </mat-form-field>           \n    \n                            <mat-form-field fxFlex=\"2 2 auto\" [ngStyle]=\"{'margin-right': '20px'}\">\n                                <mat-label>Registration Number</mat-label>\n                                <textarea matInput\n                                    cdkTextareaAutosize\n                                    #autosize=\"cdkTextareaAutosize\"\n                                    cdkAutosizeMinRows=\"1\"\n                                    formControlName=\"RegNo\"\n                                    cdkAutosizeMaxRows=\"5\"\n                                    [readonly]=\"true\"></textarea>\n                                <mat-hint>The number assigned after registration</mat-hint>              \n                            </mat-form-field>\n    \n                            <!-- <mat-form-field fxFlex=\"2 2 auto\">\n                                <mat-label>Name of DPO<span class=\"required-field\">required</span></mat-label>\n                                <textarea matInput\n                                    cdkTextareaAutosize\n                                    #autosize=\"cdkTextareaAutosize\"\n                                    cdkAutosizeMinRows=\"1\"\n                                    formControlName=\"DPOName\"\n                                    cdkAutosizeMaxRows=\"5\"></textarea>\n                                <mat-hint>DPO of the organisation</mat-hint>              \n                            </mat-form-field> -->\n                        </div>\n\n                        <div [ngStyle]=\"{'margin-top': '50px'}\">\n                            <mat-form-field fxFlex=\"2 2 auto\" [ngStyle]=\"{'margin-right': '20px'}\">\n                                <mat-label>Email Address of Organisation<span class=\"required-field\">required</span></mat-label>\n                                <textarea matInput\n                                              cdkTextareaAutosize\n                                              #autosize=\"cdkTextareaAutosize\"\n                                              cdkAutosizeMinRows=\"1\"\n                                              formControlName=\"DPOEmail\"\n                                              cdkAutosizeMaxRows=\"5\"\n                                              [readonly]=\"true\"></textarea>\n                                <mat-hint>Contact Email of Organisation</mat-hint>              \n                            </mat-form-field>\n\n                            <mat-form-field fxFlex=\"2 2 auto\">\n                                <mat-label>Telephone Number of Organisation<span class=\"required-field\">required</span></mat-label>\n                                <textarea matInput\n                                              cdkTextareaAutosize\n                                              #autosize=\"cdkTextareaAutosize\"\n                                              cdkAutosizeMinRows=\"1\"\n                                              formControlName=\"DPONumber\"\n                                              cdkAutosizeMaxRows=\"5\"\n                                              [readonly]=\"true\"></textarea>\n                                <mat-hint>Contact Number of Organisation</mat-hint>              \n                            </mat-form-field>\n                        </div>\n\n                        <div class=\"button-wrapper single-button\">\n                       \n                            <!-- enabled the next button for No selection -->\n                            <div class=\"actions\" fxLayout=\"row\" fxLayoutAlign=\"end center\" fxLayoutGap=\"8px\">\n                                <button (click)=\"stepper.reset()\" [disabled]=\"OrganisationDetails.pristine\" color=\"primary\"\n                                        mat-button\n                                        type=\"button\">RESET\n                                </button>\n                                <button [disabled]=\"OrganisationDetails.invalid\" color=\"primary\" mat-raised-button matStepperNext>\n                                    NEXT\n                                </button>\n                            </div>\n                        </div>  \n                    </form>\n                </mat-step>\n\n                <mat-step [stepControl]=\"breachDetails\">\n                    <ng-template matStepLabel>\n                        <h3></h3>\n                        <!-- <p>Details of the person making the complaint</p> -->\n                    </ng-template>\n        \n                    <form [formGroup]=\"breachDetails\">\n        \n                        <div fxLayout=\"column\" fxLayout.gt-xs=\"row\" fxLayoutGap=\"8px\" fxLayoutGap.gt-xs=\"24px\">\n                            <mat-form-field fxFlex=\"\">\n                                <mat-label>Select date of when incident happen?</mat-label>\n                                <input (click)=\"formDatepickerRef.open()\"\n                                    [max]=\"maxDate\"\n                                       (focus)=\"formDatepickerRef.open()\"\n                                       [matDatepicker]=\"formDatepickerRef\"\n                                       formControlName=\"incidentDate\"\n                                       matInput\n                                       readonly>\n                                <mat-datepicker-toggle [for]=\"formDatepickerRef\"\n                                                       matSuffix></mat-datepicker-toggle>\n                                <mat-hint>When did the incident happen?</mat-hint>\n                                <mat-datepicker #formDatepickerRef></mat-datepicker>\n                            </mat-form-field>\n                            \n                            <mat-form-field fxFlex=\"2 2 auto\" appearance=\"fill\">\n                                <mat-label>Likely Causes of the breach</mat-label>\n                                <mat-select formControlName=\"causesOfBreach\" multiple>\n                                    <mat-option \n                                            *ngFor=\"let type of BreachCauses\"\n                                            (onSelectionChange)=\"onChangeOfBreachCauses($event,type )\" \n                                            [value]=\"type.CauseID\">{{ type.CauseName }}\n                                           \n                                    </mat-option>\n                                </mat-select>\n                                <mat-hint>Please specify if any financial or sensitive personal data (special\n                                    categories*) has been affected\n                                </mat-hint>\n                            </mat-form-field>\n                        </div>\n\n                        <div fxLayout=\"column\" fxLayout.gt-xs=\"row\" fxLayoutGap=\"8px\" fxLayoutGap.gt-xs=\"24px\" [ngStyle]=\"{'margin-top': '60px'}\">\n                            <mat-label>\n                                <div>\n                                    <h5>Categories of Data Subject Affected by breach</h5>\n                                </div>\n\n                                <div>\n                                    <mat-checkbox [checked]=\"false\" formControlName=\"delayInReporting\" (change)=\"AdultDataSubjectCategoryChange($event)\"> Adult </mat-checkbox>\n                                </div>\n\n                                <div>\n                                    <mat-checkbox [checked]=\"false\" formControlName=\"delayInReportings\" (change)=\"ChildrenDataSubjectCategoryChange($event)\"> Children </mat-checkbox>\n                                </div>\n\n                            </mat-label>\n                            \n                            \n                            <mat-form-field fxFlex=\"2 2 auto\" appearance=\"fill\">\n                                <mat-label>Number of data Subjects</mat-label>\n                                <input matInput\n                                          type=\"number\"\n                                          [min]=\"1\"\n                                          formControlName=\"reasonForDelay\"/>\n                                <mat-hint>Subjects affected by breach</mat-hint>\n                            </mat-form-field>\n                            <mat-form-field fxFlex=\"2 2 auto\" appearance=\"fill\">\n                                <mat-label>Total Number of Records held</mat-label>\n                                <input matInput\n                                          type=\"number\"\n                                          [min]=\"1\"\n                                          formControlName=\"measures\"/>\n                                <mat-hint>Breached records as a percentage</mat-hint>\n                            </mat-form-field>\n                        </div>\n\n                        <div fxLayout=\"column\" fxLayout.gt-xs=\"row\" fxLayoutGap=\"8px\" fxLayoutGap.gt-xs=\"20px\">\n                            <mat-form-field class=\"full-width margin-top\" fxFlex=\"2 2 auto\">\n                                <mat-label>Details On Likely causes of breaches<span class=\"required-field\">required</span></mat-label>\n                                <textarea #FullDetailsOfComplaintInput class=\"textarea-large\" placeholder=\"Enter here\" formControlName=\"FullDetailsOfComplaint\" matInput maxlength=\"1000\"></textarea>\n                                    \n                            </mat-form-field>      \n                        </div>\n\n                        <div fxLayout=\"column\" fxLayout.gt-xs=\"row\" fxLayoutGap=\"8px\" fxLayoutGap.gt-xs=\"20px\">\n                            <mat-form-field class=\"full-width margin-top\" fxFlex=\"2 2 auto\">\n                                <mat-label>Remedial Actions taken or proposed<span class=\"required-field\">required</span></mat-label>\n                                <textarea #DetailsOfComplaintInput class=\"textarea-large\" placeholder=\"Enter here\" formControlName=\"DetailsOfComplaint\" matInput maxlength=\"1000\"></textarea>\n                                    \n                            </mat-form-field>\n                        </div>\n\n                        <div class=\"actions\" fxLayout=\"row\" fxLayoutAlign=\"end center\" fxLayoutGap=\"8px\">\n                            <button (click)=\"stepper.reset()\" [disabled]=\"breachDetails.pristine\" color=\"primary\"\n                                    mat-button\n                                    type=\"button\">RESET\n                            </button>\n                            <button [disabled]=\"breachDetails.invalid\" color=\"primary\" mat-raised-button matStepperNext>\n                                NEXT\n                            </button>\n                        </div>\n                    </form>    \n                </mat-step>\n\n                <mat-step [stepControl]=\"personalData\">\n                    <ng-template matStepLabel></ng-template>\n                    <fury-data-breach-personal-data-itemised\n                        (PersonalDataAffected)=\"acceptData($event)\"\n                        [personalDataList]=\"application.personalDataAffected\"\n                        [isViewOnly]=\"isViewOnly\"\n                        (personalDataEvent)=\"onPersonalDataChange($event)\"\n                    >\n                    </fury-data-breach-personal-data-itemised>\n                    \n                </mat-step>\n\n                <mat-step [stepControl]=\"containmentAndRecovery\">\n                    <form [formGroup]=\"containmentAndRecovery\">\n                        <ng-template matStepLabel>\n                            \n                        </ng-template>\n\n                        <fieldset>\n                            <legend> Containment & Recovery</legend>\n                            <div class=\"content\" fxLayout=\"column\" fxLayoutGap=\"8px\">\n                                <mat-checkbox [checked]=\"false\" formControlName=\"actionTaken\" [value]=\"ActionTakenCheckboxValue\" (change)=\"ActionTakenCheckboxChange($event)\">\n                                    Has any action been taken to minimise/mitigate the effect on the affected\n                                    individuals?\n                                </mat-checkbox>\n                                <div fxLayout=\"column\" fxLayout.gt-xs=\"row\" fxLayoutGap=\"8px\" fxLayoutGap.gt-xs=\"24px\">\n                                    <mat-form-field fxFlex=\"2 2 auto\" appearance=\"fill\" >\n                                        <mat-label>Details Of Action Taken</mat-label>\n                                        <textarea matInput\n                                                  cdkTextareaAutosize\n                                                  #autosize=\"cdkTextareaAutosize\"\n                                                  cdkAutosizeMinRows=\"1\"\n                                                  formControlName=\"detailsOfActionTaken\"\n                                                  cdkAutosizeMaxRows=\"5\"></textarea>\n                                        <mat-hint>Provide details taken to minimise/mitigate the effect.</mat-hint>\n                                    </mat-form-field>\n                                </div>\n\n                                <mat-checkbox [checked]=\"false\" formControlName=\"hasDataBeenRecovered\" [value]=\"DataRecoveredCheckboxValue\" (change)=\"DataRecoveredCheckboxChange($event)\">\n                                    Has the data placed at risk now been recovered?\n                                </mat-checkbox>\n                                <div fxLayout=\"column\" fxLayout.gt-xs=\"row\" fxLayoutGap=\"8px\" fxLayoutGap.gt-xs=\"24px\" [ngStyle]=\"{'margin-top': '20px'}\">\n                                    <mat-form-field fxFlex=\"2 2 auto\" appearance=\"fill\">\n                                        <mat-label>Data recovery details</mat-label>\n                                        <textarea matInput\n                                                  cdkTextareaAutosize\n                                                  #autosize=\"cdkTextareaAutosize\"\n                                                  cdkAutosizeMinRows=\"1\"\n                                                  formControlName=\"detailsOfRecovery\"\n                                                  cdkAutosizeMaxRows=\"5\"></textarea>\n                                        <mat-hint>If so, please provide details of how and when this occurred.\n                                        </mat-hint>\n                                    </mat-form-field>\n                                </div>\n                                <mat-form-field fxFlex=\"\">\n                                    <mat-label>Select date of data recovery</mat-label>\n                                    <input (click)=\"formDatepickerRefRecovery.open()\"\n                                           (focus)=\"formDatepickerRefRecovery.open()\"\n                                           [max]=\"maxDate\"\n                                           [matDatepicker]=\"formDatepickerRefRecovery\"\n                                           formControlName=\"dateOfRecovery\"\n                                           matInput\n                                           readonly>\n                                    <mat-datepicker-toggle [for]=\"formDatepickerRefRecovery\"\n                                                           matSuffix></mat-datepicker-toggle>\n                                    <mat-hint>When did the recovery occur?</mat-hint>\n                                    <mat-datepicker #formDatepickerRefRecovery></mat-datepicker>\n                                </mat-form-field>\n                                <div fxLayout=\"column\" fxLayout.gt-xs=\"row\" fxLayoutGap=\"8px\" fxLayoutGap.gt-xs=\"24px\">\n                                    <mat-form-field fxFlex=\"2 2 auto\" appearance=\"fill\">\n                                        <mat-label>Prevention Steps</mat-label>\n                                        <textarea matInput\n                                                  cdkTextareaAutosize\n                                                  #autosize=\"cdkTextareaAutosize\"\n                                                  cdkAutosizeMinRows=\"1\"\n                                                  formControlName=\"preventionSteps\"\n                                                  cdkAutosizeMaxRows=\"5\"></textarea>\n                                        <mat-hint>What steps have been taken to prevent a recurrence of this incident\n                                            ?\n                                        </mat-hint>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                        </fieldset>\n                        <br>\n                 \n                        <br>\n                        <div class=\"actions\" fxLayout=\"row\" fxLayoutAlign=\"end center\" fxLayoutGap=\"8px\" [ngStyle]=\"{'margin-top': '20px'}\">\n                            <button color=\"primary\" mat-button matStepperPrevious type=\"button\">PREVIOUS</button>\n                            <button [disabled]=\"containmentAndRecovery.invalid\" color=\"primary\" mat-raised-button\n                                    matStepperNext>\n                                NEXT\n                            </button>\n                        </div>\n                    </form>\n                </mat-step>\n\n                <mat-step [stepControl]=\"breachConsequences\">\n\n\n                    <div [ngStyle]=\"{'text-align': 'center', 'font-weight': 'bold'}\">\n                        <label for=\"Questions\">Breach Consequences</label>\n                    </div>\n\n                    <mat-horizontal-stepper [linear]=\"isLinear\" #stepper *ngIf=\"showManageButtons == false\">\n                        \n                        <mat-step [stepControl]=\"breachConsequences\">\n                            <form [formGroup]=\"breachConsequences\">\n                                <div class=\"grouped-items\">\n                                    \n                                    <div>\n                                        <table [ngStyle]=\"{padding: '10px'}\">\n                                            <tr *ngFor=\"let question of BreachDescriptionQuestionsFirst\">\n                                                 \n                                                 <td [ngStyle]=\"{width: '70%', 'padding-right':'80px'}\">\n                                                     <mat-radio-group color=\"primary\">\n                                                         {{question.BreachDescription}}  \n                                                     </mat-radio-group>\n                                                 </td>\n                                                 \n                                                 <td>\n                                                     <mat-radio-group color=\"primary\">\n                                                         <mat-radio-button value=\"Yes-{{question.BreacheDescriptionID}}\"\n                                                         (change)=\"changeBreachDescriptionValue($event, question)\" [ngStyle]=\"{'padding-right': '70px'}\">Yes</mat-radio-button>\n         \n                                                         <mat-radio-button value=\"No-{{question.BreacheDescriptionID}}\"\n                                                         (change)=\"changeBreachDescriptionValue($event, question)\">No</mat-radio-button> \n                                                     </mat-radio-group>\n                                                 </td>\n                                                 \n                                            </tr>\n                                        </table>\n                                        <ng-container matColumnDef=\"NatureOfPersonalDataCollected\">\n                                         <th mat-header-cell *matHeaderCellDef mat-sort-header> Nature of personal data collected / processed </th>\n                                         <td mat-cell *matCellDef=\"let row\"> {{ row.NatureOfPersonalDataCollected }} </td>\n                                     </ng-container>\n                                        \n                                    </div>\n                                </div>\n                                \n                                <div class=\"actions\" fxLayout=\"row\" fxLayoutAlign=\"end center\" fxLayoutGap=\"8px\" [ngStyle]=\"{'margin-top': '20px'}\">\n                                    <!-- <button color=\"primary\" mat-button matStepperPrevious type=\"button\">PREVIOUS</button> -->\n                                    <button color=\"primary\" mat-raised-button [disabled]=\"(selectedBreachDescriptionQuestions.length + notSelectedBreachDescriptionQuestions.length) < breachDescriptionQuestionsCount / 2\"\n                                            matStepperNext>\n                                        NEXT\n                                    </button>\n                                </div>\n                            </form>\n                        </mat-step>\n                        <mat-step [stepControl]=\"additionalInfo\">\n                            <form [formGroup]=\"additionalInfo\" *ngIf=\"notSelectedBreachDescriptionQuestions\">\n                                <div class=\"grouped-items\">\n                                    <div>\n                                        <table [ngStyle]=\"{padding: '10px'}\">\n                                            <tr *ngFor=\"let question of BreachDescriptionQuestionsSecond\">\n                                                    \n                                                    <td [ngStyle]=\"{width: '70%', 'padding-right':'80px'}\">\n                                                        <mat-radio-group color=\"primary\">\n                                                            {{question.BreachDescription}}  \n                                                        </mat-radio-group>\n                                                    </td>\n                                                    \n                                                    <td>\n                                                        <mat-radio-group color=\"primary\">\n                                                            <mat-radio-button value=\"Yes-{{question.BreacheDescriptionID}}\"\n                                                            (change)=\"changeBreachDescriptionValue($event, question)\" [ngStyle]=\"{'padding-right': '70px'}\">Yes</mat-radio-button>\n        \n                                                            <mat-radio-button value=\"No-{{question.BreacheDescriptionID}}\"\n                                                            (change)=\"changeBreachDescriptionValue($event, question)\">No</mat-radio-button> \n                                                        </mat-radio-group>\n                                                    </td>\n                                                    \n                                            </tr>\n                                        </table>\n                                        <ng-container matColumnDef=\"NatureOfPersonalDataCollected\">\n                                            <th mat-header-cell *matHeaderCellDef mat-sort-header> Nature of personal data collected / processed </th>\n                                            <td mat-cell *matCellDef=\"let row\"> {{ row.NatureOfPersonalDataCollected }} </td>\n                                        </ng-container> \n                                    \n                                    </div> \n                                </div>\n                                <div class=\"actions\" fxLayout=\"row\" fxLayoutAlign=\"end center\" fxLayoutGap=\"8px\" [ngStyle]=\"{'margin-top': '20px'}\">\n                                    <button color=\"primary\" mat-button matStepperPrevious type=\"button\">PREVIOUS</button>\n                                    \n                                </div>\n                            </form>\n                        </mat-step>\n                    </mat-horizontal-stepper>\n\n                    <div *ngIf=\"showManageButtons == true\" class=\"flex-container\" fxLayout=\"row\" fxLayout=\"column\">\n\n                        <form action=\"\">\n                            <div layout=\"row\" layout-wrap>\n                                <div class=\"grouped-items\" *ngFor = \"let question of TotalSelectedBreachDescription\" flex=\"50\">\n                                    <h3 [ngStyle]=\"{'font-size': '10px'}\">{{question.BreachDescription}}</h3>\n                    \n                                    <mat-radio-group color=\"primary\">\n                                        <mat-radio-button [checked] = \"true\" value=\"Yes\">Yes</mat-radio-button>\n                                        <!-- <mat-radio-button value=\"No\">No</mat-radio-button> -->\n                                    </mat-radio-group>        \n                                </div>\n                            </div>\n                \n                            \n                        </form>\n\n                        \n                    </div>\n                    \n                    <div class=\"actions\" fxLayout=\"row\" fxLayoutAlign=\"end center\" fxLayoutGap=\"8px\" [ngStyle]=\"{'margin-top': '20px'}\">\n                        <button color=\"primary\" mat-button matStepperPrevious type=\"button\">PREVIOUS</button>\n                        <button color=\"primary\" mat-raised-button [disabled]=\"(selectedBreachDescriptionQuestions.length + notSelectedBreachDescriptionQuestions.length) != breachDescriptionQuestionsCount\"\n                            matStepperNext>\n                            NEXT\n                        </button>\n                    </div>\n                </mat-step>\n\n               \n                <mat-step [stepControl]=\"potentialHarms\">\n\n                    <div [ngStyle]=\"{'text-align': 'center', 'font-weight': 'bold'}\">\n                        <label for=\"Questions\">Potential Harms</label>\n                    </div>\n\n                    <mat-horizontal-stepper *ngIf=\"showManageButtons == false\">\n                        <mat-step [stepControl]=\"potentialHarms\">\n                            <form [formGroup]=\"potentialHarms\">\n                                <div class=\"grouped-items\">\n                                    <div>\n                                        <table [ngStyle]=\"{padding: '10px'}\">\n                                            <tr *ngFor=\"let question of PotentialHarmsFirst\">\n                                                    \n                                                    <td [ngStyle]=\"{width: '70%', 'padding-right':'80px'}\">\n                                                        <mat-radio-group color=\"primary\">\n                                                            {{question.HarmDescription}}  \n                                                        </mat-radio-group>\n                                                    </td>\n                                                    \n                                                    <td>\n                                                        <mat-radio-group color=\"primary\">\n                                                            <mat-radio-button value=\"Yes-{{question.HarmDescriptionID}}\"\n                                                            (change)=\"changePotentialHarmsValue($event, question)\" [ngStyle]=\"{'padding-right': '70px'}\">Yes</mat-radio-button>\n        \n                                                            <mat-radio-button value=\"No-{{question.HarmDescriptionID}}\"\n                                                            (change)=\"changePotentialHarmsValue($event, question)\">No</mat-radio-button> \n                                                        </mat-radio-group>\n                                                    </td>\n                                                    \n                                            </tr>\n                                        </table>\n                                        \n                                        <ng-container matColumnDef=\"NatureOfPersonalDataCollected\">\n                                            <th mat-header-cell *matHeaderCellDef mat-sort-header> Nature of personal data collected / processed </th>\n                                            <td mat-cell *matCellDef=\"let row\"> {{ row.NatureOfPersonalDataCollected }} </td>\n                                        </ng-container> \n                                    \n                                    </div>\n              \n                                </div>\n                                \n                                <div class=\"actions\" fxLayout=\"row\" fxLayoutAlign=\"end center\" fxLayoutGap=\"8px\" [ngStyle]=\"{'margin-top': '20px'}\">\n                                    <!-- <button color=\"primary\" mat-button matStepperPrevious type=\"button\">PREVIOUS</button> -->\n                                    <button color=\"primary\" \n                                    [disabled]=\"(selectedPotentialHarms.length + notSelectedPotentialHarms.length) < PotentialHarmsCount / 2\"\n                                    mat-raised-button \n                                            matStepperNext>\n                                        NEXT\n                                    </button>\n                                </div>\n                            </form>\n                        </mat-step>\n                        \n                        <mat-step [stepControl]=\"OtherpotentialHarms\">\n                            <form [formGroup]=\"OtherpotentialHarms\">\n                                <div class=\"grouped-items\">\n                                    <div>\n                                       <table [ngStyle]=\"{padding: '10px'}\">\n                                           <tr *ngFor=\"let question of PotentialHarmsSecond\">\n                                                \n                                                <td [ngStyle]=\"{width: '70%', 'padding-right':'80px'}\">\n                                                    <mat-radio-group color=\"primary\">\n                                                        {{question.HarmDescription}}  \n                                                    </mat-radio-group>\n                                                </td>\n                                                \n                                                <td>\n                                                    <mat-radio-group color=\"primary\">\n                                                        <mat-radio-button value=\"Yes-{{question.HarmDescriptionID}}\"\n                                                        (change)=\"changePotentialHarmsValue($event, question)\" [ngStyle]=\"{'padding-right': '70px'}\">Yes</mat-radio-button>\n        \n                                                        <mat-radio-button value=\"No-{{question.HarmDescriptionID}}\"\n                                                        (change)=\"changePotentialHarmsValue($event, question)\">No</mat-radio-button> \n                                                    </mat-radio-group>\n                                                </td>\n                                                \n                                           </tr>\n                                       </table>\n                                        <ng-container matColumnDef=\"NatureOfPersonalDataCollected\">\n                                            <th mat-header-cell *matHeaderCellDef mat-sort-header> Nature of personal data collected / processed </th>\n                                            <td mat-cell *matCellDef=\"let row\"> {{ row.NatureOfPersonalDataCollected }} </td>\n                                        </ng-container> \n                                       \n                                    </div> \n                                </div>\n                                \n                                <div class=\"actions\" fxLayout=\"row\" fxLayoutAlign=\"end center\" fxLayoutGap=\"8px\" [ngStyle]=\"{'margin-top': '20px'}\">\n                                    <button color=\"primary\" mat-button matStepperPrevious type=\"button\">PREVIOUS</button>\n                                    <!-- <button color=\"primary\" mat-raised-button \n                                            matStepperNext>\n                                        NEXT\n                                    </button> -->\n                                </div>\n                            </form>\n                        </mat-step>\n                    </mat-horizontal-stepper>\n                    <div *ngIf=\"showManageButtons == true\" class=\"flex-container\" fxLayout=\"row\" fxLayout=\"column\">\n\n                        <form action=\"\">\n                            <div layout=\"row\" layout-wrap>\n                                <div class=\"grouped-items\" *ngFor = \"let question of TotalSelectedPotentialHarms\" flex=\"50\">\n                                    <h3 [ngStyle]=\"{'font-size': '10px'}\">{{question.HarmDescription}}</h3>\n                    \n                                    <mat-radio-group color=\"primary\">\n                                        <mat-radio-button [checked] = \"true\" value=\"Yes\">Yes</mat-radio-button>\n                                        <!-- <mat-radio-button value=\"No\">No</mat-radio-button> -->\n                                    </mat-radio-group>        \n                                </div>\n                            </div>\n                \n                            \n                        </form>\n\n                        \n                    </div>\n\n                    <div class=\"actions\" fxLayout=\"row\" fxLayoutGap=\"12px\" *ngIf=\"showManageButtons == false\">\n                        <button color=\"primary\" mat-button matStepperPrevious type=\"button\" style=\"margin-left: 50px;\">PREVIOUS</button>\n\n                        <button\n                            mat-button\n                            [disabled]=\"(selectedPotentialHarms.length + notSelectedPotentialHarms.length) != PotentialHarmsCount\"\n                            color=\"primary\"  \n                            class=\"download\" \n                            matTooltip=\"Keep a copy of the information you have filled in\"\n                            (click)=\"onPreviewForm(true)\"\n                            >\n                            <div class=\"button-label\">\n                                <mat-icon>sim_card_download</mat-icon>\n                                <span>Download Form</span>\n                            </div>\n                        </button>\n\n                        <button\n                            mat-button\n                            color=\"primary\"  \n                            [disabled]=\"(selectedPotentialHarms.length + notSelectedPotentialHarms.length) != PotentialHarmsCount\"\n                            class=\"preview\" \n                            matTooltip=\"Have a look at all the information you have filled in before sending.\"\n                            (click)=\"onPreviewForm(false)\"\n                            >\n                            <div class=\"button-label\">\n                                <mat-icon>visibility</mat-icon>\n                                <span>Preview Form</span>\n                            </div>\n                        </button>\n\n                        <button class=\"next-btn submit-btn\" \n                        [disabled]=\"(selectedPotentialHarms.length + notSelectedPotentialHarms.length) != PotentialHarmsCount\"\n                        color=\"primary\" mat-raised-button (click) = \"onSubmit()\"  fxLayout=\"row\" fxLayoutAlign=\"end end\" fxLayoutGap=\"8px\" [ngStyle]=\"{'margin-top': '20px'}\">\n                            SUBMIT\n                        </button>\n                    </div>   \n                </mat-step>\n\n            </mat-horizontal-stepper>  \n        </div>\n    </fury-page-layout-content>\n</fury-page-layout>\n","import {Component, EventEmitter, Input,Output, OnInit} from '@angular/core';\nimport {PersonalDataModel} from '../../breach-model';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {Observable, of, ReplaySubject, Subscription} from 'rxjs';\nimport {DataServiceError} from '../../../../../@fury/shared/HttpModel';\nimport {KeycloakService} from 'keycloak-angular';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {COMPLAINT_JSON, ComplaintModel} from '../../../complaints/complaints-model';\nimport {\n    $DataAffectedCategoryModel,\n    DataAffectedCategoryModel,\n    DataAffectedSubCategoryModel,\n    PERSONAL_DATA_AFFECTED\n} from '../../../models/personal-data-affected.model';\nimport {UtilService} from '../../../../../@fury/services/util.service';\nimport {DataSubjectModel} from '../../../models/data-subject.model';\nimport {SnackBarService} from '../../../../pages/services/snack-bar.service';\n\n@Component({\n    selector: 'fury-data-breach-personal-data-itemised',\n    templateUrl: './data-breach-personal-data-itemised.component.html',\n    styleUrls: ['./data-breach-personal-data-itemised.component.scss']\n})\nexport class DataBreachPersonalDataItemisedComponent implements OnInit {\n\n    // Simulating A DataCategory and SubCategory\n    subject$: ReplaySubject<DataAffectedCategoryModel> = new ReplaySubject<DataAffectedCategoryModel>(1);\n    data$: Observable<DataAffectedCategoryModel> = this.subject$.asObservable();\n\n    @Input() personalDataList: PersonalDataModel[];\n    @Input() isViewOnly: boolean;\n    @Input() personalDataEvent = new EventEmitter<PersonalDataModel[]>();\n    @Output() PersonalDataAffected = new EventEmitter<PersonalDataModel[]>();\n\n    personalData: PersonalDataModel = new PersonalDataModel();\n\n    personalDataFormGroup: FormGroup;\n\n    subscriptions: Subscription[] = [];\n\n    //arrays\n    errors: string[] = [];\n    list = [];\n    displayColumns: string [] = ['nber', 'personalDataCategory', 'personalDataSubCategory', 'toWhatExtent','affectedIndividuals', 'affectedRecords','complaintsMade','individualAwareness', 'actions'];\n    dataCategories: DataAffectedCategoryModel [] = [];\n    $dataCategories: DataAffectedCategoryModel [] = [];\n    $subCategories: any [] = [];\n\n    //events\n    $processingEvent: EventEmitter<boolean> = new EventEmitter();\n    $errorsEvent: EventEmitter<DataServiceError[]> = new EventEmitter();\n    //Button Config\n    buttonIcon = 'add_circle_outline';\n    buttonLabel = 'Add';\n    //boolean\n    isEditingPersonalData = false;\n    tableEditable: boolean = true;\n    // int\n    personalDataIndex = 0;\n    personalNumber = 1;\n\n\n    constructor(\n        private fb: FormBuilder,\n        private auth: KeycloakService,\n        private utilService: UtilService,\n        public snackBar: SnackBarService\n    ) {\n    }\n\n\n    ngOnInit(): void {\n        this.initForms();\n        if (this.personalDataList) {\n            this.personalDataList.forEach(personalData => this.list.push(personalData));\n        }\n        this.getSampleJson.subscribe(dataCategories => {\n            this.$dataCategories = dataCategories;\n        });\n        this.$subCategories;\n        this.initMainObject();\n    }\n\n    private initMainObject() {\n        this.personalData = new PersonalDataModel();\n    }\n\n    private initForms(): void {\n        this.personalDataFormGroup = this.fb.group(\n            {\n                dataCategory: [null, Validators.required],\n                dataSubCategory: [null, Validators.required],\n                toWhatExtent: [null, Validators.required],\n                affectedIndividuals: [null, Validators.required],\n                recordsInvolved: [null, Validators.required],\n                individualAwareness: [null, Validators.required],\n                individualComplain: [null, Validators.required],\n            }\n        );\n    }\n\n    addOrUpdatePersonalData(option: number): void {\n        if (this.personalDataFormGroup.valid) {\n            if (this.checkForDuplicates(option)) {\n                this.snackBar.snackBarAlert(\n                    'Error', 'Potential Consquence Already exist in the Table, Please Update', {\n                        duration: 3000\n                    }\n                );\n            } else {\n                this.mapFormControlToControl(1);\n                if (option === 1) {\n                    this.list.push(this.personalData);\n                    this.personalDataList.push(this.personalData);\n                    this.list = [...this.list];\n                } else {\n                    this.list[this.personalDataIndex] = this.personalData;\n                    this.personalDataList[this.personalDataIndex] = this.personalData;\n                    this.list = [...this.personalDataList];\n                }\n                this.resetPersonalData();\n            }\n            console.log(this.list)\n            this.PersonalDataAffected.emit(this.personalDataList);\n        }\n    }\n\n    resetPersonalData() {\n        this.personalDataFormGroup.reset();\n        this.personalData = new PersonalDataModel();\n        this.validatePolicyLabels(1);\n        this.managePersonalData(1);\n    }\n\n    validatePolicyLabels(option: number) {\n        if (option === 1) {\n            this.buttonIcon = 'add_circle_outline';\n            this.buttonLabel = 'Add new personal data';\n        } else {\n            this.buttonIcon = 'save';\n            this.buttonLabel = 'Save';\n        }\n    }\n\n    onSelectCategory(category) {\n        this.$subCategories = [];\n        var categories = this.$dataCategories.find(categories => categories === category.value);\n        categories.subCategories.forEach(\n            element => this.$subCategories.push(element)\n        );\n        this.personalDataFormGroup.get('dataSubCategory').enable();\n    }\n\n    disableSubCategories() {\n        if (this.$subCategories.length === 0) {\n            this.personalDataFormGroup.get('dataSubCategory').disable();\n        }\n    }\n\n    managePersonalData(option: number, id ?: number) {\n        if (option === 2) {\n            this.personalData = this.personalDataList[id];\n            this.isEditingPersonalData = true;\n            this.personalDataIndex = id;\n            this.mapFormControlToControl(option);\n        } else {\n            this.isEditingPersonalData = false;\n            this.personalData = new PersonalDataModel();\n            this.personalDataIndex = 0;\n        }\n        this.validatePolicyLabels(option);\n    }\n\n\n    private checkForDuplicates(option: number) {\n        const personalData = this.personalDataFormGroup.get('dataCategory').value;\n        const _personalData = this.personalDataFormGroup.get('dataSubCategory').value;\n        console.log(_personalData);\n        if (option === 1) {\n            return !!(this.personalDataList.find(item => item.dataCategory === personalData));\n        } else { return null; }\n    }\n\n    editItem(index: number) {\n        // Store the index of the item to be modified\n        this.personalDataIndex = index;\n        this.personalData = this.personalDataList[this.personalDataIndex];\n        this.isEditingPersonalData = true;\n        // Map item to form fields\n        this.mapFormControlToControl(index);\n        this.validatePolicyLabels(2);\n    }\n\n    deleteItem(index: number) {\n        this.list.splice(index, 1);\n        this.personalDataList.splice(index, 1);\n        this.list = [...this.list];\n        // Send items to parent\n        this.personalDataEvent.emit(this.personalDataList);\n        this.isEditingPersonalData = false;\n    }\n\n    private mapFormControlToControl(option: number) {\n        if (option === 1) {\n            this.personalData.dataCategory = this.personalDataFormGroup.get('dataCategory').value;\n            this.personalData.dataSubCategory = this.personalDataFormGroup.get('dataSubCategory').value;\n            this.personalData.toWhatExtent = this.personalDataFormGroup.get('toWhatExtent').value;\n            this.personalData.affectedIndividuals = this.personalDataFormGroup.get('affectedIndividuals').value;\n            this.personalData.recordsInvolved = this.personalDataFormGroup.get('recordsInvolved').value;\n            this.personalData.individualAwareness = this.personalDataFormGroup.get('individualAwareness').value;\n            this.personalData.individualComplain = this.personalDataFormGroup.get('individualComplain').value;\n        } else {\n            this.personalDataFormGroup.get('dataCategory').setValue(this.personalData.dataCategory);\n            this.personalDataFormGroup.get('dataSubCategory').setValue(this.personalData.dataSubCategory);\n            this.personalDataFormGroup.get('toWhatExtent').setValue(this.personalData.toWhatExtent);\n            this.personalDataFormGroup.get('affectedIndividuals').setValue(this.personalData.affectedIndividuals);\n            this.personalDataFormGroup.get('recordsInvolved').setValue(this.personalData.recordsInvolved);\n            this.personalDataFormGroup.get('individualAwareness').setValue(this.personalData.individualAwareness);\n            this.personalDataFormGroup.get('individualComplain').setValue(this.personalData.individualComplain);\n        }\n    }\n\n    isValidForm() {\n        let formValid = this.personalDataFormGroup.valid;\n        return formValid;\n    }\n\n    get getSampleJson() {\n        return of(PERSONAL_DATA_AFFECTED.map(document => document));\n    }\n\n\n}\n","<ng-container >\n\n    <fieldset>\n        <legend>Personal Data Affected</legend>\n        <ng-container *ngIf=\"!isViewOnly\">\n            <form [formGroup]=\"personalDataFormGroup\">\n                <ng-template matStepLabel>Personal Data</ng-template>\n\n                <div class=\"content\" fxLayout=\"column\" fxLayoutGap=\"8px\">\n                    <div fxLayout=\"column\" fxLayout.gt-xs=\"row\" fxLayoutGap=\"8px\" fxLayoutGap.gt-xs=\"24px\">\n                        <mat-form-field fxFlex=\"2 2 auto\" appearance=\"fill\">\n                            <mat-label>Affected Data Category</mat-label>\n                            <mat-select formControlName=\"dataCategory\"  (selectionChange)=\"onSelectCategory($event)\">\n                                <mat-option [disabled]=\"disableSubCategories()\"\n                                            *ngFor=\"let type of $dataCategories\"\n                                            [value]=\"type\">{{ type.name }}\n                                </mat-option>\n                            </mat-select>\n                            <mat-hint>Please specify if any financial or sensitive personal data (special\n                                categories*) has been affected\n                            </mat-hint>\n                        </mat-form-field>\n                        <mat-form-field fxFlex=\"2 2 auto\" appearance=\"fill\">\n                            <mat-label>SubCategories</mat-label>\n                            <mat-select formControlName=\"dataSubCategory\" multiple>\n                                <mat-option\n                                        *ngFor=\"let type of $subCategories\"\n                                        [value]=\"type\">{{ type.value }}\n                                </mat-option>\n                            </mat-select>\n                            <mat-hint>Please specify if any financial or sensitive personal data has been affected\n                            </mat-hint>\n                        </mat-form-field>\n                    </div>\n\n                    <div fxFlex=\"column\" fxLayout=\"row\" fxLayoutGap=\"8px\">\n                        <mat-form-field fxFlex=\"2 2 auto\" appearance=\"fill\">\n                            <mat-label>Details To What Extent</mat-label>\n                            <textarea matInput\n                                      cdkTextareaAutosize\n                                      #autosize=\"cdkTextareaAutosize\"\n                                      cdkAutosizeMinRows=\"1\"\n                                      formControlName=\"toWhatExtent\"\n                                      cdkAutosizeMaxRows=\"5\"></textarea>\n                            <mat-hint>Provide details of the extent has the data been affected\n                            </mat-hint>\n                        </mat-form-field>\n\n                        <mat-form-field fxFlex=\"2 1 auto\">\n                            <mat-label>Affected Individuals</mat-label>\n                            <input formControlName=\"affectedIndividuals\" matInput>\n                            <mat-hint align=\"end\">How many Individuals have been affected ?</mat-hint>\n                        </mat-form-field>\n\n                        <mat-form-field fxFlex=\"2 1 auto\">\n                            <mat-label>Records Involved</mat-label>\n                            <input formControlName=\"recordsInvolved\" matInput>\n                            <mat-hint align=\"end\">How many data records are involved?</mat-hint>\n                        </mat-form-field>\n                    </div>\n\n                    <div class=\"content\" fxLayout=\"column\" fxLayoutGap=\"8px\">\n                        <mat-checkbox [checked]=\"false\" formControlName=\"individualAwareness\">\n                            Are the affected individuals aware that the incident has occurred?\n                        </mat-checkbox>\n\n                        <mat-checkbox [checked]=\"false\" formControlName=\"individualComplain\">\n                            Have any affected individuals complained to the Company about the incident?\n                        </mat-checkbox>\n                    </div>\n                </div>\n\n\n            </form>\n            <div *ngIf=\"!isViewOnly\" style=\"text-align: right; padding-top: 5px; padding-bottom: 5px;\">\n                <button mat-raised-button\n                        (click)=\"addOrUpdatePersonalData(isEditingPersonalData?2:1)\" color=\"primary\"\n                        [disabled]=\"!isValidForm()\">\n                    <mat-icon>{{buttonIcon}}</mat-icon>\n                    <span>{{buttonLabel}}</span>\n                </button>&nbsp;\n                <span class=\"example-spacer\"></span>\n                <button mat-raised-button (click)=\"resetPolicy()\" color=\"warn\">\n                    <mat-icon>cancel</mat-icon>\n                    <span>Cancel</span>\n                </button>\n            </div>\n        </ng-container>\n\n        <div class=\"content\" fxLayout=\"column\" fxLayoutGap=\"8px\">\n            <table mat-table [dataSource]=\"list\">\n                <ng-container matColumnDef=\"nber\">\n                    <th mat-header-cell *matHeaderCellDef style=\"width: 5%\"\n                        class=\"tableFontSize firstColumnTable alignCenter\">#\n                    </th>\n                    <td mat-cell *matCellDef=\"let element; let j=index;\"\n                        class=\"tableFontSize firstColumnTable alignCenter\">\n                        {{j + 1}}\n                    </td>\n                </ng-container>\n                <ng-container matColumnDef=\"personalDataCategory\">\n                    <th mat-header-cell *matHeaderCellDef class=\"tableFontSize \" style=\"width: 20%\"> Data Category</th>\n                    <td mat-cell *matCellDef=\"let element\" class=\"tableFontSize \"> {{element.dataCategory.name}}</td>\n                </ng-container>\n                <ng-container matColumnDef=\"personalDataSubCategory\">\n                    <th mat-header-cell *matHeaderCellDef class=\"tableFontSize \" style=\"width: 20%\"> Data SucCategories\n                    </th>\n                    <td mat-cell *matCellDef=\"let element\"\n                        class=\"tableFontSize \">\n                        <div *ngFor=\"let p of element.dataSubCategory\">\n                            {{p.value}},\n                        </div>\n                    </td>\n                </ng-container>\n                <ng-container matColumnDef=\"affectedIndividuals\">\n                    <th mat-header-cell *matHeaderCellDef class=\"tableFontSize \" style=\"width: 20%\"> Affected\n                        Individuals\n                    </th>\n                    <td mat-cell *matCellDef=\"let element\" class=\"tableFontSize \"> {{element.affectedIndividuals}}</td>\n                </ng-container>\n                <ng-container matColumnDef=\"affectedRecords\">\n                    <th mat-header-cell *matHeaderCellDef class=\"tableFontSize \" style=\"width: 20%\"> Affected Records\n                    </th>\n                    <td mat-cell *matCellDef=\"let element\" class=\"tableFontSize \"> {{element.recordsInvolved}}</td>\n                </ng-container>\n                <ng-container matColumnDef=\"toWhatExtent\">\n                    <th mat-header-cell *matHeaderCellDef class=\"tableFontSize \" style=\"width: 20%\">Extent Of the Breach\n                    </th>\n                    <td mat-cell *matCellDef=\"let element\" class=\"tableFontSize \"> {{element.toWhatExtent}}</td>\n                </ng-container>\n                <ng-container matColumnDef=\"complaintsMade\">\n                    <th mat-header-cell *matHeaderCellDef class=\"tableFontSize \" style=\"width: 20%\"> Any Complaints?\n                    </th>\n                    <td mat-cell *matCellDef=\"let element\" class=\"tableFontSize \"> {{element.individualAwareness }}</td>\n                </ng-container>\n                <ng-container matColumnDef=\"individualAwareness\">\n                    <th mat-header-cell *matHeaderCellDef class=\"tableFontSize \" style=\"width: 20%\">Individual Awareness ?\n                    </th>\n                    <td mat-cell *matCellDef=\"let element\" class=\"tableFontSize \"> {{element.individualComplain}}</td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"actions\">\n                    <th mat-header-cell *matHeaderCellDef style=\"width: 5%\"></th>\n                    <td mat-cell *matCellDef=\"let element; let j=index\" class=\"actions\">\n                        <ng-container *ngIf=\"!isViewOnly\">\n                            <a class=\"link\" (click)=\"managePersonalData(2,j)\">\n                                <mat-icon color=\"primary\" class=\"material-icons-outlined\" matTooltip=\"Edit item\">edit\n                                </mat-icon>\n                            </a>&nbsp;&nbsp;\n                            <a class=\"link\" (click)=\"deleteItem(j)\">\n                                <mat-icon color=\"warn\" class=\"material-icons-outlined\" matTooltip=\"Delete item\">delete\n                                </mat-icon>\n                            </a>\n                        </ng-container>\n                    </td>\n                </ng-container>\n                <ng-container matColumnDef=\"noData\">\n                    <td mat-footer-cell *matFooterCellDef colspan=\"7\">\n                        There is no data!\n                    </td>\n                </ng-container>\n                <tr mat-header-row *matHeaderRowDef=\"displayColumns;sticky:true\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: displayColumns;\"></tr>\n                <tr mat-footer-row *matFooterRowDef=\"['noData']\" [ngClass]=\"{'hide':!(list?.length==0)}\"></tr>\n            </table>\n        </div>\n        <br>\n    </fieldset>\n    <br>\n    <div class=\"actions\" fxLayout=\"row\" fxLayoutAlign=\"end center\" fxLayoutGap=\"8px\">\n        <button color=\"primary\" mat-button matStepperPrevious type=\"button\">PREVIOUS\n        </button>\n        <button [disabled]=\"list?.length < 0\" color=\"primary\" mat-raised-button\n                matStepperNext>NEXT\n        </button>\n    </div>\n</ng-container>\n\n\n<!-- LIST OF ITEMS -->\n\n","import {Component, EventEmitter, Input, OnDestroy, OnInit, Output} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {Subscription} from 'rxjs';\n// import {DataServiceError} from 'src/@fury/shared/HttpModel';\n// import {AuthenticationService} from 'src/app/authentication/authentication.service';\nimport {PolicyModel} from '../../breach-model';\nimport {DataServiceError} from '../../../../../@fury/shared/HttpModel';\nimport {AuthenticationService} from '../../../../authentication/authentication.service';\n\n@Component({\n    selector: 'fury-data-breach-policy-item',\n    templateUrl: './data-breach-policy-item.component.html',\n    styleUrls: ['./data-breach-policy-item.component.scss']\n})\nexport class DataBreachPolicyItemComponent implements OnInit {\n\n    @Input() policies: PolicyModel[];\n    @Input() isViewOnly: boolean;\n    @Output() policyEvent = new EventEmitter<PolicyModel[]>();\n\n    policy: PolicyModel = new PolicyModel();\n    policyForm: FormGroup;\n\n    // Subscriptions\n    subscriptions: Subscription[] = [];\n    errors: string[] = [];\n    list = [];\n\n    // handle these two event notifications\n    $processingEvent: EventEmitter<boolean> = new EventEmitter();\n    $errorsEvent: EventEmitter<DataServiceError[]> = new EventEmitter();\n\n    displayedColumns: string [] = ['nber', 'policy', 'explanation', 'dataOfImplementation', 'actions'];\n\n    isEditingPolicy = false;\n    tableEditable = true;\n    buttonIcon = 'add_circle_outline';\n    buttonLabel = 'Add';\n    policyIndex = 0;\n    policyNumber = 1;\n    policyId = 0;\n\n    constructor(\n        private _formBuilder: FormBuilder,\n        private auth: AuthenticationService,\n        private snackBar: MatSnackBar\n    ) {\n    }\n\n    ngOnInit(): void {\n        // Init forms\n        this.initForms();\n        // Initialize list of policies\n        if (this.policies) {\n            this.policies.forEach(policy => {\n                this.list.push(policy);\n            });\n        }\n        this.initMainObject();\n    }\n\n    private initMainObject() {\n        this.policy = new PolicyModel();\n    }\n\n    private initForms(): void {\n        this.policyForm = this._formBuilder.group(\n            {\n                policy: [null, Validators.required],\n                implementationDate: [null, Validators.required],\n                explanation: [null, Validators.required],\n            }\n        );\n    }\n\n    addOrUpdatePolicy(option: number): void {\n        console.log('isEditing ->'  + this.isEditingPolicy );\n        if (this.policyForm.valid) {\n            this.mapFromControlToControl(1);\n            if (option === 1) {\n                console.log('add');\n                this.list.push(this.policy);\n                this.policies.push(this.policy);\n                this.list = [...this.list];\n            } else {\n                console.log('update');\n                this.list[this.policyIndex] = this.policy;\n                this.policies[this.policyIndex] = this.policy;\n                this.list = [...this.policies];\n            }\n            // Send new policy list to parent component\n            // this.policyEvent.emit(this.policies);\n            // Reset from and item object\n            this.resetPolicy();\n        }\n    }\n\n    resetPolicy() {\n        this.policyForm.reset();\n        // this.policyForm.markAsUntouched();\n        // this.policyForm.markAsPristine();\n        this.policy = new PolicyModel();\n        this.validatePolicyLabels(1);\n        this.managePolicy(1);\n    }\n\n\n\n    managePolicy(option: number, id?: number) {\n        if (option === 2) {\n            this.policy = this.policies[id];\n            this.isEditingPolicy = true;\n            this.policyIndex = id;\n            this.mapFromControlToControl(option);\n        } else {\n            this.isEditingPolicy = false;\n            this.policy = new PolicyModel();\n            this.policyIndex = 0;\n        }\n\n        this.validatePolicyLabels(option);\n    }\n\n    validatePolicyLabels(option: number) {\n        if (option === 1) {\n            this.buttonIcon = 'add_circle_outline';\n            this.buttonLabel = 'Add new policy';\n        } else {\n            this.buttonIcon = 'save';\n            this.buttonLabel = 'Save';\n        }\n    }\n\n    private updateItemId() {\n        this.policyNumber = (this.policies) ? (this.policies.length + 1) : 1;\n        // reorganize indexes\n        this.policies.forEach((policy, index) => {\n            policy.id = index + 1;\n        });\n    }\n\n    private checkForDuplicates(option: number) {\n        const policyName = this.policyForm.get('policy').value;\n\n        if (option === 1) {\n            return !!(this.policies.find(item => policyName.indexOf(item.policy) >= 0));\n        } else {return null; }\n    }\n\n    editItem(index: number) {\n        // Store the index of the item to be modified\n        this.policyIndex = index;\n        this.policy = this.policies[this.policyIndex];\n        this.isEditingPolicy = true;\n        // Map item to form fields\n        this.mapFromControlToControl(index);\n        this.validatePolicyLabels(2);\n    }\n\n    deleteItem(index: number) {\n        this.list.splice(index, 1);\n        this.policies.splice(index, 1);\n        this.list = [...this.list];\n        // Send items to parent\n        this.policyEvent.emit(this.policies);\n        this.isEditingPolicy = false;\n    }\n\n    private mapFromControlToControl(option: number) {\n        if (option === 1) {\n            this.policy.policy = this.policyForm.get('policy').value;\n            this.policy.explanation = this.policyForm.get('explanation').value;\n            this.policy.implementationDate = this.policyForm.get('implementationDate').value;\n        } else {\n            this.policyForm.get('policy').setValue(this.policy.policy);\n            this.policyForm.get('explanation').setValue(this.policy.explanation);\n            this.policyForm.get('implementationDate').setValue(this.policy.implementationDate);\n        }\n\n    }\n\n    // private mapFromObjectToControl() {\n    //   this.policy.policy = this.policyForm.get('policy').value;\n    //   this.policy.explanation = this.policyForm.get('explanation').value;\n    //   this.policy.implementationDate = this.policyForm.get('implementationDate').value;\n    // }\n\n    isValidForm() {\n        const formValid = this.policyForm.valid;\n        return formValid;\n    }\n\n\n}\n","<ng-container >\n\n    <fieldset>\n        <legend>Policies in place related to the incidence</legend>\n        <ng-container *ngIf=\"!isViewOnly\">\n            <form [formGroup]=\"policyForm\">\n                <div fxLayout=\"column\" fxLayout.gt-xs=\"row\" fxLayoutGap=\"8px\" fxLayoutGap.gt-xs=\"24px\">\n                    <mat-form-field fxFlex=\"auto\">\n                        <mat-label>Policy or Procedure</mat-label>\n                        <input formControlName=\"policy\" matInput>\n                        <mat-hint>Policy considered relevant to this incident</mat-hint>\n                    </mat-form-field>\n\n                    <mat-form-field fxFlex=\"2 2 auto\" appearance=\"fill\">\n                        <mat-label>Explanation</mat-label>\n                        <textarea matInput\n                                  cdkTextareaAutosize\n                                  #autosize=\"cdkTextareaAutosize\"\n                                  cdkAutosizeMinRows=\"1\"\n                                  formControlName=\"explanation\"\n                                  cdkAutosizeMaxRows=\"5\"></textarea>\n                        <mat-hint>Explain the mentioned policy or procedure in existence at the time of this\n                            incident.\n                        </mat-hint>\n                    </mat-form-field>\n\n                    <mat-form-field fxFlex=\"\">\n                        <mat-label>Select date of policy/procedure implementation</mat-label>\n                        <input (click)=\"formDatepickerRef2.open()\"\n                               (focus)=\"formDatepickerRef2.open()\"\n                               [matDatepicker]=\"formDatepickerRef2\"\n                               formControlName=\"implementationDate\"\n                               matInput\n                               readonly>\n                        <mat-datepicker-toggle [for]=\"formDatepickerRef2\" matSuffix></mat-datepicker-toggle>\n                        <mat-hint>Date of implementation.</mat-hint>\n                        <mat-datepicker #formDatepickerRef2></mat-datepicker>\n                    </mat-form-field>\n                </div>\n            </form>\n            <div *ngIf=\"!isViewOnly\" style=\"text-align: right; padding-top: 5px; padding-bottom: 5px;\">\n                <button mat-raised-button\n                        (click)=\"addOrUpdatePolicy(isEditingPolicy?2:1)\" color=\"primary\"\n                        [disabled]=\"!isValidForm()\">\n                    <mat-icon>{{buttonIcon}}</mat-icon>\n                    <span>{{buttonLabel}}</span>\n                </button>&nbsp;\n                <span class=\"example-spacer\"></span>\n                <button mat-raised-button (click)=\"resetPolicy()\" color=\"warn\">\n                    <mat-icon>cancel</mat-icon>\n                    <span>Cancel</span>\n                </button>\n            </div>\n        </ng-container>\n        <div class=\"content\" fxLayout=\"column\" fxLayoutGap=\"8px\">\n            <table mat-table [dataSource]=\"list\">\n                <ng-container matColumnDef=\"nber\">\n                    <th mat-header-cell *matHeaderCellDef style=\"width: 5%\"\n                        class=\"tableFontSize firstColumnTable alignCenter\">#\n                    </th>\n                    <td mat-cell *matCellDef=\"let element; let j=index;\"\n                        class=\"tableFontSize firstColumnTable alignCenter\">\n                        {{j+1}}\n                    </td>\n                </ng-container>\n                <ng-container matColumnDef=\"policy\">\n                    <th mat-header-cell *matHeaderCellDef class=\"tableFontSize \" style=\"width: 20%\"> Policy</th>\n                    <td mat-cell *matCellDef=\"let element\" class=\"tableFontSize \"> {{element.policy}}</td>\n                </ng-container>\n                <ng-container matColumnDef=\"dataOfImplementation\">\n                    <th mat-header-cell *matHeaderCellDef class=\"tableFontSize \" style=\"width: 20%\"> Implementation Date\n                    </th>\n                    <td mat-cell *matCellDef=\"let element\" class=\"tableFontSize \"> {{element.implementationDate}}</td>\n                </ng-container>\n                <ng-container matColumnDef=\"explanation\">\n                    <th mat-header-cell *matHeaderCellDef class=\"tableFontSize \" style=\"width: 20%\"> Explanation</th>\n                    <td mat-cell *matCellDef=\"let element\" class=\"tableFontSize \"> {{element.explanation}}</td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"actions\">\n                    <th mat-header-cell *matHeaderCellDef style=\"width: 5%\"></th>\n                    <td mat-cell *matCellDef=\"let element; let j=index\" class=\"actions\">\n                        <ng-container *ngIf=\"!isViewOnly\">\n                            <a class=\"link\" (click)=\"managePolicy(2,j)\">\n                                <mat-icon color=\"primary\" class=\"material-icons-outlined\" matTooltip=\"Edit item\">edit\n                                </mat-icon>\n                            </a>&nbsp;&nbsp;\n                            <a class=\"link\" (click)=\"deleteItem(j)\">\n                                <mat-icon color=\"warn\" class=\"material-icons-outlined\" matTooltip=\"Delete item\">delete\n                                </mat-icon>\n                            </a>\n                        </ng-container>\n                    </td>\n                </ng-container>\n                <ng-container matColumnDef=\"noData\">\n                    <td mat-footer-cell *matFooterCellDef colspan=\"7\">\n                        There is no data!\n                    </td>\n                </ng-container>\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns;sticky:true\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n                <tr mat-footer-row *matFooterRowDef=\"['noData']\" [ngClass]=\"{'hide':!(list?.length==0)}\"></tr>\n            </table>\n        </div>\n    </fieldset>\n</ng-container>\n\n\n<!-- LIST OF ITEMS -->\n\n","import {Component, EventEmitter, Input, OnInit} from '@angular/core';\nimport {Observable, of, ReplaySubject, Subscription} from 'rxjs';\nimport {DataAffectedCategoryModel, PERSONAL_DATA_AFFECTED} from '../../../models/personal-data-affected.model';\nimport {\n    BREACH_CONTROL,\n    BreachControlCategoryReferenceModel,\n    BreachControlModel,\n    BreachControlReferenceModel,\n    CONTROLS,\n    PersonalDataModel\n} from '../../breach-model';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {DataServiceError} from '../../../../../@fury/shared/HttpModel';\nimport {KeycloakService} from 'keycloak-angular';\nimport {UtilService} from '../../../../../@fury/services/util.service';\nimport {SnackBarService} from '../../../../pages/services/snack-bar.service';\nimport {element} from 'protractor';\n\n@Component({\n    selector: 'fury-data-breach-controls',\n    templateUrl: './data-breach-controls.component.html',\n    styleUrls: ['./data-breach-controls.component.scss']\n})\nexport class DataBreachControlsComponent implements OnInit {\n    // Simulating A DataCategory and SubCategory\n    subject$: ReplaySubject<BreachControlModel> = new ReplaySubject<BreachControlModel>(1);\n    data$: Observable<BreachControlModel> = this.subject$.asObservable();\n\n    @Input() breachControls: BreachControlModel[];\n    @Input() isViewOnly: boolean;\n    @Input() breachControlEvent = new EventEmitter<BreachControlModel[]>();\n\n    breachControl: BreachControlModel = new BreachControlModel();\n\n    breachControlFormGroup: FormGroup;\n\n    subscriptions: Subscription[] = [];\n\n    //arrays\n    errors: string[] = [];\n    list = [];\n    displayColumns: string [] = ['nber', 'control', 'title', 'description', 'actions'];\n    $breachControls: BreachControlReferenceModel [] = [];\n    $breachControlCategories: BreachControlCategoryReferenceModel [] = [];\n    $controls: any [] = [];\n    $controlCategories: any [] = [];\n    //events\n    $processingEvent: EventEmitter<boolean> = new EventEmitter();\n    $errorsEvent: EventEmitter<DataServiceError[]> = new EventEmitter();\n    //Button Config\n    buttonIcon = 'add_circle_outline';\n    buttonLabel = 'Add';\n    //boolean\n    isEditingControl = false;\n    tableEditable: boolean = true;\n    // int\n    personalDataIndex = 0;\n    personalNumber = 1;\n\n\n    constructor(\n        private fb: FormBuilder,\n        private auth: KeycloakService,\n        private utilService: UtilService,\n        public snackBar: SnackBarService\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.initForms();\n        if (this.breachControls) {\n            this.breachControls.forEach(personalData => this.list.push(personalData));\n        }\n        this.getSampleJson.subscribe(controls => {\n            this.$breachControls = controls;\n        });\n        this.getBreachControlJson.subscribe(breachControls => {\n            this.$controls = breachControls;\n        });\n        this.initMainObject();\n    }\n\n    private initMainObject() {\n        this.breachControl = new BreachControlModel();\n    }\n\n    private initForms(): void {\n        this.breachControlFormGroup = this.fb.group(\n            {\n                control: [null, Validators.required],\n                controlCategory: [null, Validators.required],\n                controlCategoryDesc: [null, Validators.required],\n            }\n        );\n    }\n\n    addOrUpdateControl(option: number): void {\n\n        if (this.breachControlFormGroup.valid) {\n            // if (this.checkForDuplicates(option)) {\n            //   this.snackBar.snackBarAlert(\n            //       'Error', 'Potential Consquence Already exist in the Table, Please Update', {\n            //         duration: 3000\n            //       }\n            //   );\n            // } else {\n            this.mapFormControlToControl(1);\n            if (option === 1) {\n                this.list.push(this.breachControl);\n                this.breachControls.push(this.breachControl);\n                this.list = [...this.list];\n            } else {\n                this.list[this.personalDataIndex] = this.breachControl;\n                this.breachControls[this.personalDataIndex] = this.breachControl;\n                this.list = [...this.breachControls];\n            }\n            this.resetControl();\n        }\n        console.log(this.list);\n        // }\n    }\n\n    resetControl() {\n        this.breachControlFormGroup.reset();\n        this.breachControl = new BreachControlModel();\n        this.validatePolicyLabels(1);\n        this.manageControl(1);\n    }\n\n    validatePolicyLabels(option: number) {\n        if (option === 1) {\n            this.buttonIcon = 'add_circle_outline';\n            this.buttonLabel = 'Add new control data';\n        } else {\n            this.buttonIcon = 'save';\n            this.buttonLabel = 'Save';\n        }\n    }\n\n    // private checkForDuplicates(option: number) {\n    //   const control = this.breachControlFormGroup.get('control').value;\n    //   const controlCategory = this.breachControlFormGroup.get('controlCategory').value;\n    //   if (option === 1) {\n    //     return !!(this.breachControls.find(item => item.controlName  ));\n    //   }\n    // }\n\n    onSelectControl(category) {\n        this.$controlCategories = [];\n        var controlCategories = this.$controls.filter(categories => categories.controlName === category.value.name);\n        controlCategories.forEach(\n            element => this.$controlCategories.push(element)\n        );\n    }\n\n    onSelectControlCategoryDesc(controlCategory){\n        console.log(controlCategory);\n        this.breachControlFormGroup.get('controlCategoryDesc').setValue(controlCategory.value.subCategoryDesc);\n    }\n\n\n    disableSubCategories() {\n      if (this.$controlCategories.length === 0) {\n        this.breachControlFormGroup.get('controlCategory').disable();\n          this.breachControlFormGroup.get('controlCategoryDesc').disable();\n      }\n    }\n\n    manageControl(option: number, id ?: number) {\n        if (option === 2) {\n            this.breachControl = this.breachControls[id];\n            this.isEditingControl = true;\n            this.personalDataIndex = id;\n            this.mapFormControlToControl(option);\n        } else {\n            this.isEditingControl = false;\n            this.breachControl = new BreachControlModel();\n            this.personalDataIndex = 0;\n        }\n        this.validatePolicyLabels(option);\n    }\n\n    //\n    // private checkForDuplicates(option: number) {\n    //   const personalData = this.personalDataFormGroup.get('dataCategory').value;\n    //   const _personalData = this.personalDataFormGroup.get('dataSubCategory').value;\n    //   console.log(_personalData);\n    //   if (option === 1) {\n    //     return !!(this.personalDataList.find(item => item.dataCategory === personalData));\n    //   }\n    // }\n\n    editItem(index: number) {\n        // Store the index of the item to be modified\n        this.personalDataIndex = index;\n        this.breachControl = this.breachControls[this.personalDataIndex];\n        this.isEditingControl = true;\n        // Map item to form fields\n        this.mapFormControlToControl(index);\n        this.validatePolicyLabels(2);\n    }\n\n    deleteItem(index: number) {\n        this.list.splice(index, 1);\n        this.breachControls.splice(index, 1);\n        this.list = [...this.list];\n        // Send items to parent\n        this.breachControlEvent.emit(this.breachControls);\n        this.isEditingControl = false;\n    }\n\n    private mapFormControlToControl(option: number) {\n        if (option === 1) {\n            this.breachControl.controlName = this.breachControlFormGroup.get('control').value;\n            this.breachControl.subCategoryName = this.breachControlFormGroup.get('controlCategory').value;\n            this.breachControl.subCategoryDesc = this.breachControlFormGroup.get('controlCategoryDesc').value;\n        } else {\n            this.breachControlFormGroup.get('control').setValue(this.breachControl.controlName);\n            this.breachControlFormGroup.get('controlCategory').setValue(this.breachControl.subCategoryName);\n            this.breachControlFormGroup.get('controlCategoryDesc').setValue(this.breachControl.subCategoryDesc);\n        }\n    }\n\n    isValidForm() {\n        let formValid = this.breachControlFormGroup.valid;\n        return formValid;\n    }\n\n    get getSampleJson() {\n        return of(BREACH_CONTROL.map(document => document));\n    }\n\n    get getBreachControlJson() {\n        return of(CONTROLS.map(document => document));\n    }\n\n\n}\n","<ng-container>\n\n    <fieldset>\n        <legend>Controls</legend>\n        <ng-container>\n            <form [formGroup]=\"breachControlFormGroup\">\n                <ng-template matStepLabel>Controls</ng-template>\n\n                <div class=\"content\" fxLayout=\"column\" fxLayoutGap=\"8px\">\n                    <div fxLayout=\"column\" fxLayout.gt-xs=\"row\" fxLayoutGap=\"8px\" fxLayoutGap.gt-xs=\"24px\">\n                        <mat-form-field fxFlex=\"2 2 auto\" appearance=\"fill\">\n                            <mat-label>Control Name</mat-label>\n                            <mat-select formControlName=\"control\" (selectionChange)=\"onSelectControl($event)\">\n                                <mat-option\n                                        *ngFor=\"let type of $breachControls\"\n                                        [value]=\"type\">{{type.code}} | {{ type.name }}\n                                </mat-option>\n                            </mat-select>\n                            <mat-hint>\n                            </mat-hint>\n                        </mat-form-field>\n\n                        <mat-form-field fxFlex=\"2 2 auto\" appearance=\"fill\">\n                            <mat-label>Title</mat-label>\n                            <mat-select formControlName=\"controlCategory\"\n                                        (selectionChange)=\"onSelectControlCategoryDesc($event)\">\n                                <mat-option\n                                        *ngFor=\"let type of $controlCategories\"\n                                        [value]=\"type\">{{ type.subCategoryName }}\n                                </mat-option>\n                            </mat-select>\n                            <mat-hint>\n                            </mat-hint>\n                        </mat-form-field>\n\n                        <mat-form-field fxFlex=\"2 2 auto\" appearance=\"fill\">\n                            <mat-label>Description</mat-label>\n                            <textarea matInput\n                                      cdkTextareaAutosize\n                                      #autosize=\"cdkTextareaAutosize\"\n                                      cdkAutosizeMinRows=\"1\"\n                                      formControlName=\"controlCategoryDesc\"\n                                      cdkAutosizeMaxRows=\"5\"></textarea>\n                        </mat-form-field>\n\n                    </div>\n                </div>\n            </form>\n            <div style=\"text-align: right; padding-top: 5px; padding-bottom: 5px;\">\n                <button mat-raised-button\n                        (click)=\"addOrUpdateControl(isEditingControl?2:1)\" color=\"primary\"\n                        [disabled]=\"!isValidForm()\">\n                    <mat-icon>{{buttonIcon}}</mat-icon>\n                    <span>{{buttonLabel}}</span>\n                </button>&nbsp;\n                <span class=\"example-spacer\"></span>\n                <button mat-raised-button (click)=\"resetControl()\" color=\"warn\">\n                    <mat-icon>cancel</mat-icon>\n                    <span>Cancel</span>\n                </button>\n            </div>\n        </ng-container>\n\n        <div class=\"content\" fxLayout=\"column\" fxLayoutGap=\"8px\">\n            <table mat-table [dataSource]=\"list\">\n                <ng-container matColumnDef=\"nber\">\n                    <th mat-header-cell *matHeaderCellDef style=\"width: 5%\"\n                        class=\"tableFontSize firstColumnTable alignCenter\">#\n                    </th>\n                    <td mat-cell *matCellDef=\"let element; let j=index;\"\n                        class=\"tableFontSize firstColumnTable alignCenter\">\n                        {{j + 1}}\n                    </td>\n                </ng-container>\n                <ng-container matColumnDef=\"control\">\n                    <th mat-header-cell *matHeaderCellDef class=\"tableFontSize \" style=\"width: 20%\"> Control</th>\n                    <td mat-cell *matCellDef=\"let element\" class=\"tableFontSize \"> {{element.controlName.name}}</td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"title\">\n                    <th mat-header-cell *matHeaderCellDef class=\"tableFontSize \" style=\"width: 20%\">Title</th>\n                    <td mat-cell *matCellDef=\"let element\"\n                        class=\"tableFontSize \"> {{element.subCategoryName.subCategoryName}}</td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"description\">\n                    <th mat-header-cell *matHeaderCellDef class=\"tableFontSize \" style=\"width: 20%\"> Description</th>\n                    <td mat-cell *matCellDef=\"let element\" class=\"tableFontSize \"> {{element.subCategoryDesc}}</td>\n                </ng-container>\n\n\n                <ng-container matColumnDef=\"actions\">\n                    <th mat-header-cell *matHeaderCellDef style=\"width: 5%\">Actions</th>\n                    <td mat-cell *matCellDef=\"let element; let j=index\" class=\"actions\">\n                        <ng-container>\n                            <a class=\"link\" (click)=\"manageControl(2,j)\">\n                                <mat-icon color=\"primary\" class=\"material-icons-outlined\" matTooltip=\"Edit item\">edit\n                                </mat-icon>\n                            </a>&nbsp;&nbsp;\n                            <a class=\"link\" (click)=\"deleteItem(j)\">\n                                <mat-icon color=\"warn\" class=\"material-icons-outlined\" matTooltip=\"Delete item\">delete\n                                </mat-icon>\n                            </a>\n                        </ng-container>\n                    </td>\n                </ng-container>\n                <ng-container matColumnDef=\"noData\">\n                    <td mat-footer-cell *matFooterCellDef colspan=\"7\">\n                        There is no data!\n                    </td>\n                </ng-container>\n                <tr mat-header-row *matHeaderRowDef=\"displayColumns;sticky:true\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: displayColumns;\"></tr>\n                <tr mat-footer-row *matFooterRowDef=\"['noData']\" [ngClass]=\"{'hide':!(list?.length==0)}\"></tr>\n            </table>\n        </div>\n\n    </fieldset>\n    <br>\n    <div class=\"actions\" fxLayout=\"row\" fxLayoutAlign=\"end center\" fxLayoutGap=\"8px\">\n        <button color=\"primary\" mat-button matStepperPrevious type=\"button\">PREVIOUS\n        </button>\n        <button [disabled]=\"list?.length < 0\" color=\"primary\" mat-raised-button\n                matStepperNext>Update Controls\n        </button>\n    </div>\n</ng-container>\n\n\n<!-- LIST OF ITEMS -->\n\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {FindReportedBreachesComponent} from './components/find-reported-breaches/find-reported-breaches.component';\nimport {AuthGuard} from '../../authentication/auth.guard';\nimport { DataBreachEditComponent } from './components/data-breach-edit/data-breach-edit.component';\n\nconst routes: Routes = [\n  {\n    path: 'find/all',\n    component: FindReportedBreachesComponent,\n    canActivate: [AuthGuard],\n    data: {\n      roles: ['find.breaches','view.breach'],\n      action: \"FIND\"\n    }\n  },\n  {\n    path: 'create',\n    component: DataBreachEditComponent,\n    canActivate: [AuthGuard],\n    data: {\n      roles: ['report.breach','update.breach'],\n      action: \"EDIT\"\n    }\n  },\n  {\n    path: 'view',\n    component: DataBreachEditComponent,\n    canActivate: [AuthGuard],\n    data: {\n      roles: ['find.breaches','view.breach'],\n      action: \"VIEW\"\n    }\n  },\n  // {\n  //   path: 'view',\n  //   component: DataBreachEditComponent,\n  //   canActivate: [AuthGuard],\n  //   data: {\n  //     roles: ['find.breaches', 'manage.breach'],\n  //     action: \"VIEW\"\n  //   }\n  // }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ReportingAndNotificationRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'fury-data-breach-consquences',\n  templateUrl: './data-breach-consquences.component.html',\n  styleUrls: ['./data-breach-consquences.component.scss']\n})\nexport class DataBreachConsquencesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>data-breach-consquences works!</p>\n","import { Component,EventEmitter, Input, OnInit, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { ActivatedRoute, Router} from '@angular/router';\nimport {Observable, of, ReplaySubject, forkJoin, Subscription} from 'rxjs';\nimport {BooleanLookup, DataType, DateFinderOptions, IFinderField, ListColumn, LookupFinderOptions, TextFinderOptions } from '../../../../../@fury/shared/list/list-column.model';\nimport {BREACHES_JSON, BreachModel, TableBreachModel} from '../../breach-model';\nimport {fadeInRightAnimation} from '../../../../../@fury/animations/fade-in-right.animation';\nimport {fadeInUpAnimation} from '../../../../../@fury/animations/fade-in-up.animation';\nimport {Complaint, COMPLAINT_DEMO_DATA} from '../../../complaints/complaints-model';\nimport {filter} from 'rxjs/operators';\nimport { ApiPayload, Organisation, OrganisationDetails } from '../../../../services/api.model';\nimport {HttpClient} from '@angular/common/http';\nimport { ApiEndpointsService } from '../../../../services/api-endpoints.service';\nimport {catchError} from 'rxjs/operators';\nimport { ApiService } from '../../../../services/api.service';\nimport {DataBreachService} from '../../data-breach.service';\n@Component({\n  selector: 'fury-find-reported-breaches',\n  templateUrl: './find-reported-breaches.component.html',\n  styleUrls: ['./find-reported-breaches.component.scss'\n  ],\n  animations: [fadeInRightAnimation, fadeInUpAnimation]\n})\nexport class FindReportedBreachesComponent implements OnInit {\n\n  // TODO:: Simulating a service with http that returns observables\n  subject$: ReplaySubject<BreachModel[]> = new ReplaySubject<BreachModel[]>(1);\n  data$: Observable<BreachModel[]> = this.subject$.asObservable();\n  $processingEvent: EventEmitter<boolean> = new EventEmitter();\n  $errorsEvent: EventEmitter<any> = new EventEmitter();\n  $resultComplaintsEvent: EventEmitter<TableBreachModel> = new EventEmitter();\n  breaches: TableBreachModel[];\n  statusList: any [] = [];\n  httpSub: Subscription;\n  subscriptions: Subscription[] = [];\n  \n\n  // Table\n  @Input() columns: ListColumn[] = [\n    {name: 'Tracking No / Reference', property: 'DataBreachTrackingNo', visible: true, isModelProperty: true},\n    {name: 'Data Collector/Controller/Processor', property: 'OrganisationName', visible: true, isModelProperty: true},\n    {name: 'Incident Date', property: 'IncidentDate', visible: true, isModelProperty: true},\n    {name: 'Status', property: 'StatusName', visible: true, isModelProperty: true},\n    {name: 'Actions', property: 'actions', visible: true},\n  ] as ListColumn[];\n  pageSize = 10;\n  dataSource: MatTableDataSource<TableBreachModel> | null;\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\n\n  //Advanced Search Fields\n  searchFields: IFinderField[];\n\n  constructor(\n    private service: ApiService,\n      private dialog: MatDialog,\n      private route: ActivatedRoute,\n      private endpoints: ApiEndpointsService,\n      private http: HttpClient,\n      private router: Router,\n      public dataBreachService: DataBreachService,\n  ) { }\n\n  ngOnInit(): void {\n    // Get All Breaches\n\n    this.dataSource = new MatTableDataSource();\n\n    this.getBreaches()\n\n    this.subscriptions['$resultComplaintsEvent'] = this.$resultComplaintsEvent.subscribe(result => {\n      if (result) {\n\n        this.breaches = result;\n        \n\n        this.dataSource.data = result;\n\n      }\n      else{\n        console.log(\"expected\");\n      }\n    });\n          \n\n    \n  }\n\n  \n\n  get visibleColumns() {\n    return this.columns.filter(column => column.visible).map(column => column.property);\n  }\n\n  getData() {\n    return of(BREACHES_JSON.map(breaches => breaches));\n  }\n\n\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n \n\n  ngOnDestroy(): void {\n  }\n\n  private defineSearchFields() {\n    this.searchFields = [\n      {\n        label: \"Breach Reference #\",\n        fieldName: 'breachReference',\n        operators: TextFinderOptions,\n        dataType: DataType.TEXT\n      },\n      {\n        label: 'Delay In Reporting',\n        fieldName: 'delayInReporting',\n        operators: LookupFinderOptions,\n        dataType: DataType.BOOLEAN,\n        lookupOptions: this.statusList,\n        multiple: true\n      },\n      {\n        label: 'Status',\n        fieldName: 'status',\n        operators: LookupFinderOptions,\n        dataType: DataType.TEXT,\n        lookupOptions: this.statusList,\n        multiple: true\n      },\n\n      {\n        label: 'Registration date',\n        fieldName: ' v',\n        operators: DateFinderOptions,\n        dataType: DataType.DATETIME\n      },\n    ]\n  }\n\n  getBreaches() {\n    // tslint:disable-next-line:max-line-length\n    this.dataBreachService.getBreaches(this.$processingEvent, this.$resultComplaintsEvent, this.$errorsEvent);\n}\n\n\nviewBreach(breach) {\n       \n  this.router.navigate(['/reporting-and-notification/view/'],\n      {state: {DataBreachTrackingNo: breach.DataBreachTrackingNo}}).then( );\n}\n\nmanageBreach(breach) {\n \n  this.router.navigate(['/reporting-and-notification/manage/'],\n      {state: {DataBreachTrackingNo: breach.DataBreachTrackingNo}}).then( );\n}\n\n\n}\n","<fury-page-layout mode=\"card\">\n    <fury-page-layout-header>\n        <fury-breadcrumbs [@fadeInRight] [crumbs]=\"['Breaches']\" current=\"Find\"></fury-breadcrumbs>\n    </fury-page-layout-header>\n\n    <fury-page-layout-content [@fadeInUp]>\n        <fury-list name=\"Breaches\" [columns]=\"columns\"\n                   finderDialogTitle=\"Breaches Finder\"\n                   [searchFields]=\"searchFields\">\n            <table [dataSource]=\"dataSource\" mat-table matSort>\n                <ng-container matColumnDef=\"checkbox\">\n                    <th *matHeaderCellDef class=\"actions-cell\" mat-header-cell>\n                        <mat-checkbox color=\"primary\" (click)=\"$event.stopPropagation()\"></mat-checkbox>\n                    </th>\n                    <td *matCellDef=\"let row\" class=\"actions-cell\" mat-cell>\n                        <mat-checkbox color=\"primary\" (click)=\"$event.stopPropagation()\"></mat-checkbox>\n                    </td>\n                </ng-container>\n\n                <!-- fullName Column -->\n                <ng-container *ngFor=\"let column of columns\">\n                    <ng-container *ngIf=\"column.isModelProperty\" [matColumnDef]=\"column.property\">\n                        <th *matHeaderCellDef mat-header-cell mat-sort-header> {{ column.name }}</th>\n                        <td *matCellDef=\"let row\" mat-cell>\n                            {{ row[column.property] }}\n                        </td>\n                    </ng-container>\n                </ng-container>\n\n                <ng-container matColumnDef=\"actions\">\n                    <th *matHeaderCellDef class=\"actions-cell\" mat-header-cell mat-sort-header></th>\n                    <td *matCellDef=\"let row\" class=\"actions-cell\" mat-cell>\n                        <button type=\"button\" mat-icon-button [matMenuTriggerFor]=\"actionsMenu\"\n                                (click)=\"$event.stopPropagation()\">\n                            <mat-icon>more_vert</mat-icon>\n                        </button>\n\n                        <mat-menu #actionsMenu=\"matMenu\" yPosition=\"below\" xPosition=\"before\">\n                            <button  mat-menu-item (click)=\"viewBreach(row)\" routerLinkActive=\"router-link-active\">\n                                <mat-icon>visibility</mat-icon>\n                                <span>Manage</span>\n                            </button>\n                            \n                            <!-- <button  mat-menu-item (click)=\"manageBreach(row)\" routerLinkActive=\"router-link-active\">\n                                <mat-icon>settings</mat-icon>\n                                <span>Manage</span>\n                            </button> -->\n                        </mat-menu>\n                    </td>\n                </ng-container>\n                <tr *matHeaderRowDef=\"visibleColumns\" mat-header-row></tr>\n                <tr\n                        *matRowDef=\"let row; columns: visibleColumns;\"\n                        class=\"clickable route-animations-elements\"\n                        mat-row></tr>\n            </table>\n            <mat-paginator class=\"paginator\" [pageSize]=\"pageSize\"></mat-paginator>\n        </fury-list>\n    </fury-page-layout-content>\n</fury-page-layout>\n\n","import { HttpClient } from '@angular/common/http';\nimport {EventEmitter, Injectable } from '@angular/core';\nimport {KeycloakService} from 'keycloak-angular';\nimport {HttpUtils} from '../../../@fury/http/HttpUtils';\nimport {HttpService} from '../../../@fury/services/http.service';\nimport {environment} from '../../../environments/environment';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class DataBreachService  extends HttpService{\n\n    constructor(\n        private auth: KeycloakService,\n        private http: HttpClient,\n    ) {\n        super();\n        this.httpUtils = new HttpUtils(auth, http);\n    }\n\n    private httpUtils:  HttpUtils;\n    private baseAPIUri = environment.backend;\n\n\n    public getBreaches(processingEvent: EventEmitter<boolean>, resultEvent: EventEmitter<any>, errorsEvent: EventEmitter<any>): void {\n        const api = this.baseAPIUri + 'v1.0' + '/data-breach/';\n        return this.httpUtils.invokeGet(api, processingEvent, resultEvent, errorsEvent, this.handleError);\n    }\n    public getBreach(processingEvent: EventEmitter<boolean>, resultEvent: EventEmitter<any>, errorsEvent: EventEmitter<any>, DataBreachTrackingNo): void {\n        const api = this.baseAPIUri + 'v1.0' + '/data-breach/single?DataBreachTrackingNo='+ DataBreachTrackingNo;\n        return this.httpUtils.invokeGet(api, processingEvent, resultEvent, errorsEvent, this.handleError);\n    }\n\n   \n}","import {Component, EventEmitter, Input, OnInit} from '@angular/core';\nimport {Observable, of, ReplaySubject, Subscription} from 'rxjs';\nimport {ConsequenceModel, CONSQUENCES, POTENTIAL_CONSQUENCES, PotentialConsequenceModel} from '../../breach-model';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {DataServiceError} from '../../../../../@fury/shared/HttpModel';\nimport {KeycloakService} from 'keycloak-angular';\nimport {UtilService} from '../../../../../@fury/services/util.service';\nimport {SnackBarService} from '../../../../pages/services/snack-bar.service';\n\n@Component({\n    selector: 'fury-data-breach-potential-consquences',\n    templateUrl: './data-breach-potential-consquences.component.html',\n    styleUrls: ['./data-breach-potential-consquences.component.scss']\n})\nexport class DataBreachPotentialConsquencesComponent implements OnInit {\n\n    // Simulating A DataCategory and SubCategory\n    subject$: ReplaySubject<PotentialConsequenceModel> = new ReplaySubject<PotentialConsequenceModel>(1);\n    data$: Observable<PotentialConsequenceModel> = this.subject$.asObservable();\n\n    @Input() consquences: PotentialConsequenceModel[];\n    @Input() isViewOnly: boolean;\n    @Input() consquenceEvent = new EventEmitter<PotentialConsequenceModel[]>();\n\n    consquence: PotentialConsequenceModel = new PotentialConsequenceModel();\n\n    consquenceFormGroup: FormGroup;\n\n    subscriptions: Subscription[] = [];\n\n    //arrays\n    errors: string[] = [];\n    list = [];\n    displayColumns: string [] = ['nber', 'consquence', 'details', 'actions'];\n    $consquences: ConsequenceModel [] = [];\n    $potentialConsquences: PotentialConsequenceModel [] = [];\n    $additionalDetails: any [] = [];\n\n    //events\n    $processingEvent: EventEmitter<boolean> = new EventEmitter();\n    $errorsEvent: EventEmitter<DataServiceError[]> = new EventEmitter();\n    //Button Config\n    buttonIcon = 'add_circle_outline';\n    buttonLabel = 'Add';\n    //boolean\n    isEditingConsquence = false;\n    tableEditable: boolean = true;\n    // int\n    consquenceIndex = 0;\n    consquenceNumber = 1;\n\n    constructor(\n        private fb: FormBuilder,\n        private auth: KeycloakService,\n        private utilService: UtilService,\n        public snackBar: SnackBarService\n    ) {\n    }\n\n    ngOnInit(): void {\n        // Init forms\n        this.initForms();\n        // Initialize list of policies\n        if (this.consquences) {\n            this.consquences.forEach(policy => {\n                this.list.push(policy);\n            });\n        }\n        this.getSampleJson.subscribe(counsquences => {\n            this.$consquences = counsquences;\n        });\n        this.getPotentialConsquences.subscribe(potentialConsquences => this.$potentialConsquences = potentialConsquences);\n        this.initMainObject();\n    }\n\n\n    private initMainObject() {\n        this.consquence = new PotentialConsequenceModel();\n    }\n\n    private initForms(): void {\n        this.consquenceFormGroup = this.fb.group(\n            {\n                potentialConsequence: [null, Validators.required],\n                details: [null, Validators.required],\n            }\n        );\n    }\n\n    addOrUpdateConsquence(option: number): void {\n        if (this.consquenceFormGroup.valid) {\n            if (this.checkForDuplicates(option)) {\n                this.snackBar.snackBarAlert(\n                    'Error', 'Potential Consquence Already exist in the Table, Please Update', {\n                        duration: 3000\n                    }\n                );\n            }else {\n                this.mapFormControlToControl(1);\n                if (option === 1) {\n                    this.list.push(this.consquence);\n                    this.consquences.push(this.consquence);\n                    this.list = [...this.list];\n                } else {\n                    this.list[this.consquenceIndex] = this.consquence;\n                    this.consquences[this.consquenceIndex] = this.consquence;\n                    this.list = [...this.consquences];\n                }\n                console.log(this.list);\n                this.resetConsquence();\n            }\n        }\n    }\n\n    resetConsquence() {\n        this.consquenceFormGroup.reset();\n        this.consquence = new PotentialConsequenceModel();\n        this.validateConsquenceLabels(1);\n        this.manageConsquence(1);\n    }\n\n    validateConsquenceLabels(option: number) {\n        if (option === 1) {\n            this.buttonIcon = 'add_circle_outline';\n            this.buttonLabel = 'Add potential consquence';\n        } else {\n            this.buttonIcon = 'save';\n            this.buttonLabel = 'Save';\n        }\n    }\n\n\n    manageConsquence(option: number, id ?: number) {\n        if (option === 2) {\n            this.consquence = this.consquences[id];\n            this.isEditingConsquence = true;\n            this.consquenceIndex = id;\n            this.mapFormControlToControl(option);\n        } else {\n            this.isEditingConsquence = false;\n            this.consquence = new PotentialConsequenceModel();\n            this.consquenceIndex = 0;\n        }\n        this.validateConsquenceLabels(option);\n    }\n\n\n    private checkForDuplicates(option: number) {\n        const potentialConsequence = this.consquenceFormGroup.get('potentialConsequence').value;\n\n        if (option === 1) {\n            return !!(this.consquences.find(item => item.potentialConsquence === potentialConsequence));\n        } else {return   null;}\n    }\n\n    editItem(index: number) {\n        // Store the index of the item to be modified\n        this.consquenceIndex = index;\n        this.consquence = this.consquences[this.consquenceIndex];\n        this.isEditingConsquence = true;\n        // Map item to form fields\n        this.mapFormControlToControl(index);\n        this.validateConsquenceLabels(2);\n    }\n\n    deleteItem(index: number) {\n        this.list.splice(index, 1);\n        this.consquences.splice(index, 1);\n        this.list = [...this.list];\n        // Send items to parent\n        this.consquenceEvent.emit(this.consquences);\n        this.isEditingConsquence = false;\n    }\n\n    private mapFormControlToControl(option: number) {\n        if (option === 1) {\n            this.consquence.potentialConsquence = this.consquenceFormGroup.get('potentialConsequence').value;\n            this.consquence.additional = this.consquenceFormGroup.get('details').value;\n        } else {\n            this.consquenceFormGroup.get('potentialConsequence').setValue(this.consquence.potentialConsquence);\n            this.consquenceFormGroup.get('details').setValue(this.consquence.additional);\n        }\n    }\n\n    isValidForm() {\n        return this.consquenceFormGroup.valid;\n    }\n\n    get getSampleJson() {\n        return of(CONSQUENCES.map(document => document));\n    }\n\n    get getPotentialConsquences() {\n        return of(POTENTIAL_CONSQUENCES.map(document => document));\n    }\n\n    onSelectPotentialConsquence(category) {\n        this.$additionalDetails = [];\n        // tslint:disable-next-line:max-line-length\n        const additionalInfo = this.$potentialConsquences.filter(potentialConsquences => potentialConsquences.potentialConsquence === category.value.consquence);\n        additionalInfo.forEach(element => this.$additionalDetails.push(element));\n        this.consquenceFormGroup.get('details').enable();\n    }\n\n    disableAdditionalField() {\n        if (this.$potentialConsquences.length === 0) {\n            this.consquenceFormGroup.get('details').disable();\n        }\n    }\n\n}\n","<ng-container>\n\n    <fieldset>\n        <legend>Potential Consequences</legend>\n        <ng-container  *ngIf=\"!isViewOnly\">\n            <form [formGroup]=\"consquenceFormGroup\">\n                <ng-template matStepLabel>Potential Consquences</ng-template>\n\n                <div class=\"content\" fxLayout=\"column\" fxLayoutGap=\"8px\">\n                    <div fxLayout=\"column\" fxLayout.gt-xs=\"row\" fxLayoutGap=\"8px\" fxLayoutGap.gt-xs=\"24px\">\n                        <mat-form-field fxFlex=\"2 2 auto\" appearance=\"fill\">\n                            <mat-label>Consquence</mat-label>\n                            <mat-select formControlName=\"potentialConsequence\" (selectionChange)=\"onSelectPotentialConsquence($event)\">\n                                <mat-option  [disabled]=\"disableAdditionalField()\"\n                                        *ngFor=\"let type of $consquences\"\n                                        [value]=\"type\">{{type.code}} | {{ type.consquence }}\n                                </mat-option>\n                            </mat-select>\n                            <mat-hint>Please specify if any financial or sensitive personal data (special\n                                categories*) has been affected\n                            </mat-hint>\n                        </mat-form-field>\n\n                        <mat-form-field fxFlex=\"2 2 auto\" appearance=\"fill\">\n                            <mat-label>Addional Information On Event</mat-label>\n                            <mat-select formControlName=\"details\" multiple>\n                                <mat-option\n                                        *ngFor=\"let type of $additionalDetails\"\n                                        [value]=\"type.additional\">{{ type.additional }}\n                                </mat-option>\n                            </mat-select>\n                            <mat-hint>Please specify if any financial or sensitive personal data (special\n                                categories*) has been affected\n                            </mat-hint>\n                        </mat-form-field>\n\n                    </div>\n                </div>\n            </form>\n            <div *ngIf=\"!isViewOnly\" style=\"text-align: right; padding-top: 5px; padding-bottom: 5px;\">\n                <button mat-raised-button\n                        (click)=\"addOrUpdateConsquence(isEditingConsquence?2:1)\" color=\"primary\"\n                        [disabled]=\"!isValidForm()\">\n                    <mat-icon>{{buttonIcon}}</mat-icon>\n                    <span>{{buttonLabel}}</span>\n                </button>&nbsp;\n                <span class=\"example-spacer\"></span>\n                <button mat-raised-button (click)=\"resetConsquence()\" color=\"warn\">\n                    <mat-icon>cancel</mat-icon>\n                    <span>Cancel</span>\n                </button>\n            </div>\n        </ng-container>\n\n        <div class=\"content\" fxLayout=\"column\" fxLayoutGap=\"8px\">\n            <table mat-table [dataSource]=\"list\">\n                <ng-container matColumnDef=\"nber\">\n                    <th mat-header-cell *matHeaderCellDef style=\"width: 5%\"\n                        class=\"tableFontSize firstColumnTable alignCenter\">#\n                    </th>\n                    <td mat-cell *matCellDef=\"let element; let j=index;\"\n                        class=\"tableFontSize firstColumnTable alignCenter\">\n                        {{j + 1}}\n                    </td>\n                </ng-container>\n                <ng-container matColumnDef=\"consquence\" *ngIf=\"!isViewOnly\">\n                    <th mat-header-cell *matHeaderCellDef class=\"tableFontSize \" style=\"width: 20%\"> Potential Consquence</th>\n                    <td mat-cell *matCellDef=\"let element\" class=\"tableFontSize \">\n                       {{element.potentialConsquence.consquence}}\n                    </td>\n                </ng-container>\n                <ng-container matColumnDef=\"consquence\" *ngIf=\"isViewOnly\">\n                    <th mat-header-cell *matHeaderCellDef class=\"tableFontSize \" style=\"width: 20%\"> Potential Consquence</th>\n                    <td mat-cell *matCellDef=\"let element\" class=\"tableFontSize \">\n                        {{element.potentialConsquence}}\n                    </td>\n                </ng-container>\n                <ng-container matColumnDef=\"details\">\n                    <th mat-header-cell *matHeaderCellDef class=\"tableFontSize \" style=\"width: 20%\">Additonal Details</th>\n                    <td mat-cell *matCellDef=\"let element\" class=\"tableFontSize \"> {{element.additional}}</td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"actions\">\n                    <th mat-header-cell *matHeaderCellDef style=\"width: 5%\">Actions</th>\n                    <td mat-cell *matCellDef=\"let element; let j=index\" class=\"actions\">\n                        <ng-container *ngIf=\"!isViewOnly\">\n                            <a class=\"link\" (click)=\"manageConsquence(2,j)\">\n                                <mat-icon color=\"primary\" class=\"material-icons-outlined\" matTooltip=\"Edit item\">edit\n                                </mat-icon>\n                            </a>&nbsp;&nbsp;\n                            <a class=\"link\" (click)=\"deleteItem(j)\">\n                                <mat-icon color=\"warn\" class=\"material-icons-outlined\" matTooltip=\"Delete item\">delete\n                                </mat-icon>\n                            </a>\n                        </ng-container>\n                    </td>\n                </ng-container>\n                <ng-container matColumnDef=\"noData\">\n                    <td mat-footer-cell *matFooterCellDef colspan=\"7\">\n                        There is no data!\n                    </td>\n                </ng-container>\n                <tr mat-header-row *matHeaderRowDef=\"displayColumns;sticky:true\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: displayColumns;\"></tr>\n                <tr mat-footer-row *matFooterRowDef=\"['noData']\" [ngClass]=\"{'hide':!(list?.length==0)}\"></tr>\n            </table>\n        </div>\n        <!--        <div class=\"actions\" fxLayout=\"row\" fxLayoutAlign=\"end center\" fxLayoutGap=\"8px\">-->\n        <!--            <button color=\"primary\" mat-button matStepperPrevious type=\"button\">PREVIOUS-->\n        <!--            </button>-->\n        <!--            <button [disabled]=\"list?.length < 0\" color=\"primary\" mat-raised-button-->\n        <!--                    matStepperNext>NEXT-->\n        <!--            </button>-->\n        <!--        </div>-->\n    </fieldset>\n</ng-container>\n\n\n<!-- LIST OF ITEMS -->\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ReportingAndNotificationRoutingModule } from './reporting-and-notification-routing.module';\nimport { FindReportedBreachesComponent } from './components/find-reported-breaches/find-reported-breaches.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { DataBreachEditComponent } from './components/data-breach-edit/data-breach-edit.component';\nimport { DataBreachPolicyItemComponent } from './components/data-breach-policy-item/data-breach-policy-item.component';\nimport {DataBreachPersonalDataItemisedComponent} from './components/data-breach-personal-data-itemised/data-breach-personal-data-itemised.component';\nimport { DataBreachAdditionalInfoComponent } from './components/data-breach-additional-info/data-breach-additional-info.component';\nimport { DataBreachPotentialConsquencesComponent } from './components/data-breach-potential-consquences/data-breach-potential-consquences.component';\nimport { DataBreachImpactComponent } from './components/data-breach-impact/data-breach-impact.component';\nimport { DataBreachConsquencesComponent } from './components/data-breach-consquences/data-breach-consquences.component';\nimport { DataBreachControlsComponent } from './components/data-breach-controls/data-breach-controls.component';\nimport { DataBreachAccessmentComponent } from './components/data-breach-accessment/data-breach-accessment.component';\nimport { MaterialModule } from '../../../@fury/shared/material-components.module';\nimport { FormElementsRoutingModule } from '../../pages/forms/form-elements/form-elements-routing.module';\nimport { FurySharedModule } from '../../../@fury/fury-shared.module';\nimport { FormWizardRoutingModule } from '../../pages/forms/form-wizard/form-wizard-routing.module';\nimport { ListModule } from '../../../@fury/shared/list/list.module';\nimport { HighlightModule } from '../../../@fury/shared/highlightjs/highlight.module';\nimport { FuryCardModule } from '../../../@fury/shared/card/card.module';\nimport { CustomerCreateUpdateModule } from '../../pages/tables/all-in-one-table/customer-create-update/customer-create-update.module';\nimport { BreadcrumbsModule } from '../../../@fury/shared/breadcrumbs/breadcrumbs.module';\nimport { BreachCommentsComponent } from './components/breach-comments/breach-comments.component';\n\n\n@NgModule({\n  declarations: [ FindReportedBreachesComponent, DataBreachEditComponent, DataBreachPolicyItemComponent, DataBreachPersonalDataItemisedComponent, DataBreachAdditionalInfoComponent, DataBreachPotentialConsquencesComponent, DataBreachImpactComponent, DataBreachConsquencesComponent, DataBreachControlsComponent, DataBreachAccessmentComponent, BreachCommentsComponent],\n  imports: [\n    CommonModule,\n    ReportingAndNotificationRoutingModule,\n    FormsModule,\n    MaterialModule,\n    FormElementsRoutingModule,\n    ReactiveFormsModule,\n    FurySharedModule,\n    FormWizardRoutingModule,\n    // Core\n    ListModule,\n    HighlightModule,\n    FuryCardModule,\n    CustomerCreateUpdateModule,\n    BreadcrumbsModule\n  ]\n})\nexport class ReportingAndNotificationModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'fury-data-breach-accessment',\n  templateUrl: './data-breach-accessment.component.html',\n  styleUrls: ['./data-breach-accessment.component.scss']\n})\nexport class DataBreachAccessmentComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>data-breach-accessment works!</p>\n"]}