{"version":3,"sources":["./src/@fury/animations/scale-in.animation.ts","./src/app/pages/forms/form-wizard/form-wizard-routing.module.ts","./src/app/pages/forms/form-wizard/form-wizard.component.ts","./src/app/pages/forms/form-wizard/form-wizard.component.html"],"names":[],"mappings":"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","file":"default~modules-company-registration-company-registration-module~modules-complaints-complaints-modul~f6349a0e-es2015.js","sourcesContent":["import { animate, style, transition, trigger } from '@angular/animations';\n\nexport const scaleInAnimation = trigger('scaleIn', [\n  transition(':enter', [\n    style({\n      transform: 'scale(0)'\n    }),\n    animate('400ms cubic-bezier(0.35, 0, 0.25, 1)', style({\n      transform: 'scale(1)'\n    }))\n  ])\n]);\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FormWizardComponent } from './form-wizard.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: FormWizardComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class FormWizardRoutingModule {\n}\n","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { fadeInRightAnimation } from '../../../../@fury/animations/fade-in-right.animation';\nimport { scaleInAnimation } from '../../../../@fury/animations/scale-in.animation';\nimport { fadeInUpAnimation } from '../../../../@fury/animations/fade-in-up.animation';\n\n@Component({\n  selector: 'fury-form-wizard',\n  templateUrl: './form-wizard.component.html',\n  styleUrls: ['./form-wizard.component.scss'],\n  animations: [fadeInUpAnimation, fadeInRightAnimation, scaleInAnimation]\n})\nexport class FormWizardComponent implements OnInit {\n\n  accountFormGroup: FormGroup;\n  passwordFormGroup: FormGroup;\n  confirmFormGroup: FormGroup;\n\n  verticalAccountFormGroup: FormGroup;\n  verticalPasswordFormGroup: FormGroup;\n  verticalConfirmFormGroup: FormGroup;\n\n  phonePrefixOptions = ['+1', '+27', '+44', '+49', '+61', '+91'];\n\n  passwordInputType = 'password';\n\n  constructor(private fb: FormBuilder,\n              private cd: ChangeDetectorRef,\n              private snackbar: MatSnackBar) {\n  }\n\n  ngOnInit() {\n    /**\n     * Horizontal Stepper\n     * @type {FormGroup}\n     */\n    this.accountFormGroup = this.fb.group({\n      username: [null, Validators.required],\n      name: [null, Validators.required],\n      email: [null, Validators.required],\n      phonePrefix: [this.phonePrefixOptions[3]],\n      phone: [],\n    });\n\n    this.passwordFormGroup = this.fb.group({\n      password: [\n        null,\n        Validators.compose(\n          [\n            Validators.required,\n            Validators.minLength(6)\n          ]\n        )\n      ],\n      passwordConfirm: [null, Validators.required]\n    });\n\n    this.confirmFormGroup = this.fb.group({\n      terms: [null, Validators.requiredTrue]\n    });\n\n    /**\n     * Vertical Stepper\n     * @type {FormGroup}\n     */\n    this.verticalAccountFormGroup = this.fb.group({\n      username: [null, Validators.required],\n      name: [null, Validators.required],\n      email: [null, Validators.required],\n      phonePrefix: [this.phonePrefixOptions[3]],\n      phone: [],\n    });\n\n    this.verticalPasswordFormGroup = this.fb.group({\n      password: [\n        null,\n        Validators.compose(\n          [\n            Validators.required,\n            Validators.minLength(6)\n          ]\n        )\n      ],\n      passwordConfirm: [null, Validators.required]\n    });\n\n    this.verticalConfirmFormGroup = this.fb.group({\n      terms: [null, Validators.requiredTrue]\n    });\n  }\n\n  showPassword() {\n    this.passwordInputType = 'text';\n    this.cd.markForCheck();\n  }\n\n  hidePassword() {\n    this.passwordInputType = 'password';\n    this.cd.markForCheck();\n  }\n\n  submit() {\n    this.snackbar.open('Hooray! You successfully created your account.', null, {\n      duration: 5000\n    });\n  }\n}\n","<fury-page>\n  <fury-title class=\"title\">\n    <mat-icon [@scaleIn]>description</mat-icon>\n    <span [@fadeInRight]>Form Wizard</span>\n  </fury-title>\n\n  <div fxLayout=\"column\" fxLayoutAlign=\"start center\">\n\n    <div [@fadeInUp] class=\"card\">\n      <mat-horizontal-stepper #stepper=\"matHorizontalStepper\" [linear]=\"true\">\n        <mat-step [stepControl]=\"accountFormGroup\">\n          <form [formGroup]=\"accountFormGroup\">\n            <ng-template matStepLabel>Create Account</ng-template>\n\n            <div class=\"heading\">Create Account</div>\n            <div class=\"subheading\">Set up your account for testing purposes.</div>\n\n            <div class=\"content\" fxLayout=\"column\" fxLayoutGap=\"8px\">\n              <mat-form-field fxFlex=\"auto\">\n                <mat-label>Account Username</mat-label>\n                <input formControlName=\"username\" matInput required>\n                <mat-hint>This will be your unique login name.</mat-hint>\n              </mat-form-field>\n\n              <mat-form-field fxFlex=\"auto\">\n                <mat-label>Name</mat-label>\n                <input formControlName=\"name\" matInput required>\n                <mat-hint>How may we call you?</mat-hint>\n              </mat-form-field>\n\n              <div fxLayout=\"column\" fxLayout.gt-xs=\"row\" fxLayoutGap=\"8px\" fxLayoutGap.gt-xs=\"24px\">\n                <mat-form-field fxFlex=\"auto\">\n                  <mat-label>E-Mail</mat-label>\n                  <input formControlName=\"email\" matInput required>\n                  <mat-hint align=\"end\">example@example.com</mat-hint>\n                </mat-form-field>\n\n                <div fxFlex=\"auto\" fxLayout=\"row\" fxLayoutGap=\"8px\">\n                  <mat-form-field fxFlex=\"1 1 auto\">\n                    <mat-label>Code</mat-label>\n                    <mat-select formControlName=\"phonePrefix\">\n                      <mat-option *ngFor=\"let option of phonePrefixOptions\" [value]=\"option\">{{ option }}</mat-option>\n                    </mat-select>\n                  </mat-form-field>\n                  <mat-form-field fxFlex=\"2 1 auto\">\n                    <mat-label>Phone Number</mat-label>\n                    <input formControlName=\"phone\" matInput>\n                    <mat-hint align=\"end\"></mat-hint>\n                  </mat-form-field>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"actions\" fxLayout=\"row\" fxLayoutAlign=\"end center\" fxLayoutGap=\"8px\">\n              <button (click)=\"stepper.reset()\" [disabled]=\"accountFormGroup.pristine\" color=\"primary\" mat-button\n                      type=\"button\">RESET\n              </button>\n              <button [disabled]=\"accountFormGroup.invalid\" color=\"primary\" mat-raised-button matStepperNext>NEXT\n              </button>\n            </div>\n          </form>\n        </mat-step>\n\n        <mat-step [stepControl]=\"passwordFormGroup\">\n          <form [formGroup]=\"passwordFormGroup\">\n            <ng-template matStepLabel>Select a Password</ng-template>\n\n            <div class=\"heading\">Select a Password</div>\n            <div class=\"subheading\">Enter your password you will use to log in.</div>\n\n            <div class=\"content\" fxLayout=\"column\" fxLayoutGap=\"8px\">\n              <mat-form-field fxFlex=\"auto\">\n                <mat-label>Password</mat-label>\n                <input [type]=\"passwordInputType\" formControlName=\"password\" matInput required>\n                <button (click)=\"showPassword()\" *ngIf=\"passwordInputType === 'password'\" mat-icon-button matSuffix\n                        type=\"button\">\n                  <mat-icon>visibility</mat-icon>\n                </button>\n                <button (click)=\"hidePassword()\" *ngIf=\"passwordInputType === 'text'\" mat-icon-button matSuffix\n                        type=\"button\">\n                  <mat-icon>visibility_off</mat-icon>\n                </button>\n                <mat-hint>Your password should be atleast 6 characters long.</mat-hint>\n              </mat-form-field>\n\n              <mat-form-field fxFlex=\"auto\">\n                <mat-label>Confirm Password</mat-label>\n                <input [type]=\"passwordInputType\" formControlName=\"passwordConfirm\" matInput required>\n                <button (click)=\"showPassword()\" *ngIf=\"passwordInputType === 'password'\" mat-icon-button matSuffix\n                        type=\"button\">\n                  <mat-icon>visibility</mat-icon>\n                </button>\n                <button (click)=\"hidePassword()\" *ngIf=\"passwordInputType === 'text'\" mat-icon-button matSuffix\n                        type=\"button\">\n                  <mat-icon>visibility_off</mat-icon>\n                </button>\n                <mat-hint>Please type in your password again.</mat-hint>\n              </mat-form-field>\n            </div>\n\n            <div class=\"actions\" fxLayout=\"row\" fxLayoutAlign=\"end center\" fxLayoutGap=\"8px\">\n              <button color=\"primary\" mat-button matStepperPrevious type=\"button\">PREVIOUS</button>\n              <button [disabled]=\"passwordFormGroup.invalid\" color=\"primary\" mat-raised-button matStepperNext>NEXT\n              </button>\n            </div>\n          </form>\n        </mat-step>\n\n        <mat-step [stepControl]=\"confirmFormGroup\">\n          <form [formGroup]=\"confirmFormGroup\">\n            <ng-template matStepLabel>Confirm Creation</ng-template>\n\n            <div class=\"heading\">You're almost there!</div>\n            <div class=\"subheading\">To finish registration, accept our terms of service and click on \"Create Account\".\n            </div>\n\n            <div class=\"content\" fxLayout=\"column\" fxLayoutGap=\"8px\">\n              <mat-checkbox class=\"checkbox\" formControlName=\"terms\">\n                I agree to the terms of service and the usual stuff. *\n              </mat-checkbox>\n            </div>\n\n            <div class=\"actions\" fxLayout=\"row\" fxLayoutAlign=\"end center\" fxLayoutGap=\"8px\">\n              <button color=\"primary\" mat-button matStepperPrevious type=\"button\">PREVIOUS</button>\n              <button (click)=\"submit()\" [disabled]=\"confirmFormGroup.invalid\" color=\"primary\" mat-raised-button\n                      matStepperNext>\n                CREATE ACCOUNT\n              </button>\n            </div>\n          </form>\n\n        </mat-step>\n      </mat-horizontal-stepper>\n    </div>\n\n    <div [@fadeInUp] class=\"card\">\n      <mat-vertical-stepper #verticalStepper=\"matVerticalStepper\" [linear]=\"true\">\n        <mat-step [stepControl]=\"verticalAccountFormGroup\">\n          <form [formGroup]=\"verticalAccountFormGroup\">\n            <ng-template matStepLabel>Create Account</ng-template>\n\n            <div class=\"heading\">Create Account</div>\n            <div class=\"subheading\">Set up your account for testing purposes.</div>\n\n            <div class=\"content\" fxLayout=\"column\" fxLayoutGap=\"8px\">\n              <mat-form-field fxFlex=\"auto\">\n                <mat-label>Account Username</mat-label>\n                <input formControlName=\"username\" matInput required>\n                <mat-hint>This will be your unique login name.</mat-hint>\n              </mat-form-field>\n\n              <mat-form-field fxFlex=\"auto\">\n                <mat-label>Name</mat-label>\n                <input formControlName=\"name\" matInput required>\n                <mat-hint>How may we call you?</mat-hint>\n              </mat-form-field>\n\n              <div fxLayout=\"column\" fxLayout.gt-xs=\"row\" fxLayoutGap=\"8px\" fxLayoutGap.gt-xs=\"24px\">\n                <mat-form-field fxFlex=\"auto\">\n                  <mat-label>E-Mail</mat-label>\n                  <input formControlName=\"email\" matInput required>\n                  <mat-hint align=\"end\">example@example.com</mat-hint>\n                </mat-form-field>\n\n                <div fxFlex=\"auto\" fxLayout=\"row\" fxLayoutGap=\"8px\">\n                  <mat-form-field fxFlex=\"1 1 auto\">\n                    <mat-label>Code</mat-label>\n                    <mat-select formControlName=\"phonePrefix\">\n                      <mat-option *ngFor=\"let option of phonePrefixOptions\" [value]=\"option\">{{ option }}</mat-option>\n                    </mat-select>\n                  </mat-form-field>\n                  <mat-form-field fxFlex=\"2 1 auto\">\n                    <mat-label>Phone Number</mat-label>\n                    <input formControlName=\"phone\" matInput>\n                    <mat-hint align=\"end\"></mat-hint>\n                  </mat-form-field>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"actions\" fxLayout=\"row\" fxLayoutAlign=\"end center\" fxLayoutGap=\"8px\">\n              <button (click)=\"verticalStepper.reset()\" [disabled]=\"verticalAccountFormGroup.pristine\" color=\"primary\"\n                      mat-button\n                      type=\"button\">RESET\n              </button>\n              <button [disabled]=\"verticalAccountFormGroup.invalid\" color=\"primary\" mat-raised-button matStepperNext>\n                NEXT\n              </button>\n            </div>\n          </form>\n        </mat-step>\n\n        <mat-step [stepControl]=\"verticalPasswordFormGroup\">\n          <form [formGroup]=\"verticalPasswordFormGroup\">\n            <ng-template matStepLabel>Select a Password</ng-template>\n\n            <div class=\"heading\">Select a Password</div>\n            <div class=\"subheading\">Enter your password you will use to log in.</div>\n\n            <div class=\"content\" fxLayout=\"column\" fxLayoutGap=\"8px\">\n              <mat-form-field fxFlex=\"auto\">\n                <mat-label>Password</mat-label>\n                <input [type]=\"passwordInputType\" formControlName=\"password\" matInput required>\n                <button (click)=\"showPassword()\" *ngIf=\"passwordInputType === 'password'\" mat-icon-button matSuffix\n                        type=\"button\">\n                  <mat-icon>visibility</mat-icon>\n                </button>\n                <button (click)=\"hidePassword()\" *ngIf=\"passwordInputType === 'text'\" mat-icon-button matSuffix\n                        type=\"button\">\n                  <mat-icon>visibility_off</mat-icon>\n                </button>\n                <mat-hint>Your password should be atleast 6 characters long.</mat-hint>\n              </mat-form-field>\n\n              <mat-form-field fxFlex=\"auto\">\n                <mat-label>Confirm Password</mat-label>\n                <input [type]=\"passwordInputType\" formControlName=\"passwordConfirm\" matInput required>\n                <button (click)=\"showPassword()\" *ngIf=\"passwordInputType === 'password'\" mat-icon-button matSuffix\n                        type=\"button\">\n                  <mat-icon>visibility</mat-icon>\n                </button>\n                <button (click)=\"hidePassword()\" *ngIf=\"passwordInputType === 'text'\" mat-icon-button matSuffix\n                        type=\"button\">\n                  <mat-icon>visibility_off</mat-icon>\n                </button>\n                <mat-hint>Please type in your password again.</mat-hint>\n              </mat-form-field>\n            </div>\n\n            <div class=\"actions\" fxLayout=\"row\" fxLayoutAlign=\"end center\" fxLayoutGap=\"8px\">\n              <button color=\"primary\" mat-button matStepperPrevious type=\"button\">PREVIOUS</button>\n              <button [disabled]=\"verticalPasswordFormGroup.invalid\" color=\"primary\" mat-raised-button matStepperNext>\n                NEXT\n              </button>\n            </div>\n          </form>\n        </mat-step>\n\n        <mat-step [stepControl]=\"verticalConfirmFormGroup\">\n          <form [formGroup]=\"verticalConfirmFormGroup\">\n            <ng-template matStepLabel>Confirm Creation</ng-template>\n\n            <div class=\"heading\">You're almost there!</div>\n            <div class=\"subheading\">To finish registration, accept our terms of service and click on \"Create Account\".\n            </div>\n\n            <div class=\"content\" fxLayout=\"column\" fxLayoutGap=\"8px\">\n              <mat-checkbox class=\"checkbox\" formControlName=\"terms\">\n                I agree to the terms of service and the usual stuff. *\n              </mat-checkbox>\n            </div>\n\n            <div class=\"actions\" fxLayout=\"row\" fxLayoutAlign=\"end center\" fxLayoutGap=\"8px\">\n              <button color=\"primary\" mat-button matStepperPrevious type=\"button\">PREVIOUS</button>\n              <button (click)=\"submit()\" [disabled]=\"verticalConfirmFormGroup.invalid\" color=\"primary\" mat-raised-button\n                      matStepperNext>\n                CREATE ACCOUNT\n              </button>\n            </div>\n          </form>\n\n        </mat-step>\n      </mat-vertical-stepper>\n    </div>\n  </div>\n\n</fury-page>\n"],"sourceRoot":"webpack:///"}