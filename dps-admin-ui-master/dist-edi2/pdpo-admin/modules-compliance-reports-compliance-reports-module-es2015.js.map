{"version":3,"sources":["./src/app/modules/compliance-reports/staff-dialog/staff-dialog.component.ts","./src/app/modules/compliance-reports/staff-dialog/staff-dialog.component.html","./src/app/modules/compliance-reports/dialog-form-input/dialog-form-input.component.ts","./src/app/modules/compliance-reports/dialog-form-input/dialog-form-input.component.html","./src/app/modules/compliance-reports/thirdparty-dialog/thirdparty-dialog.component.ts","./src/app/modules/compliance-reports/thirdparty-dialog/thirdparty-dialog.component.html","./src/app/modules/compliance-reports/policy-dialog/policy-dialog.component.ts","./src/app/modules/compliance-reports/policy-dialog/policy-dialog.component.html","./src/app/modules/compliance-reports/compliance-report.service.ts","./src/app/modules/compliance-reports/compliance-reports.module.ts","./src/app/modules/compliance-reports/view-compliance-report/view-compliance-report.component.ts","./src/app/modules/compliance-reports/view-compliance-report/view-compliance-report.component.html","./src/app/modules/compliance-reports/breaches-dialog/breaches-dialog.component.ts","./src/app/modules/compliance-reports/breaches-dialog/breaches-dialog.component.html","./src/app/modules/compliance-reports/dpo-dialog/dpo-dialog.component.ts","./src/app/modules/compliance-reports/dpo-dialog/dpo-dialog.component.html","./src/@fury/shared/highlightjs/highlight.module.ts","./src/app/modules/compliance-reports/display-table/display-table.component.ts","./src/app/modules/compliance-reports/display-table/display-table.component.html","./src/app/modules/compliance-reports/audits-dialog/audits-dialog.component.ts","./src/app/modules/compliance-reports/audits-dialog/audits-dialog.component.html","./src/app/modules/compliance-reports/compliance-reports-component/compliance-reports-component.component.ts","./src/app/modules/compliance-reports/compliance-reports-component/compliance-reports-component.component.html","./src/app/modules/compliance-reports/complaints-dialog/complaints-dialog.component.ts","./src/app/modules/compliance-reports/complaints-dialog/complaints-dialog.component.html","./src/app/modules/compliance-reports/impact-dialog/impact-dialog.component.ts","./src/app/modules/compliance-reports/impact-dialog/impact-dialog.component.html","./src/app/modules/compliance-reports/compilance-reports-routing.module.ts","./src/app/modules/compliance-reports/find-compliance-reports/find-compliance-reports.component.ts","./src/app/modules/compliance-reports/find-compliance-reports/find-compliance-reports.component.html"],"names":[],"mappings":"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","file":"modules-compliance-reports-compliance-reports-module-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'fury-staff-dialog',\n  templateUrl: './staff-dialog.component.html',\n  styleUrls: ['./staff-dialog.component.scss']\n})\nexport class StaffDialogComponent implements OnInit {\n\n  StaffForm: FormGroup;\n  constructor(\n    public dialogRef: MatDialogRef<StaffDialogComponent>,\n    private _formBuilder: FormBuilder\n  ) { }\n\n  ngOnInit(): void {\n\n    this.StaffForm = this._formBuilder.group({\n      department: ['', Validators.required],\n      total_staff_to_be_trained: [0, Validators.required],\n      number_completed_training: [0, Validators.required]\n    });\n  }\n\n  onSubmit() {\n    if (this.StaffForm.valid) {\n      this.dialogRef.close(this.StaffForm.value);\n    }\n  }\n\n  onCancel() {\n      this.dialogRef.close();\n  }\n\n}\n","<h2 mat-dialog-title>Add New Staff Training</h2>\n<div class=\"dialog-container\">\n  <form [formGroup]=\"StaffForm\" (ngSubmit)=\"onSubmit()\">\n    <mat-form-field>\n      <mat-label>Department*</mat-label>\n      <input matInput placeholder=\"Department *\" formControlName=\"department\">\n    </mat-form-field>\n    <mat-form-field>\n      <mat-label>Total Number of Staff to be Trained*</mat-label>\n      <input matInput type=\"number\" placeholder=\"Total Number of Staff to be Trained *\" formControlName=\"total_staff_to_be_trained\">\n    </mat-form-field>\n    <mat-form-field>\n      <mat-label>Number of Staff completed Training*</mat-label>\n      <input matInput type=\"number\" placeholder=\"Number of Staff completed Training *\" formControlName=\"number_completed_training\">\n    </mat-form-field>\n    <div class=\"button-container\">\n      <button mat-button type=\"button\" (click)=\"onCancel()\">Cancel</button>\n      <button mat-raised-button color=\"primary\" type=\"submit\">Add Staff Training</button>\n    </div>\n  </form>\n</div>","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\n\n@Component({\n  selector: 'app-dialog-form-input',\n  templateUrl: './dialog-form-input.component.html',\n  styleUrls: ['./dialog-form-input.component.scss']\n})\nexport class DialogFormInputComponent {\n  constructor(\n    public dialogRef: MatDialogRef<DialogFormInputComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) {}\n\n  onNoClick(): void {\n    this.dialogRef.close(false);\n  }\n\n  onYesClick(): void {\n    this.dialogRef.close(true);\n  }\n}\n","<main [ngClass]=\"{'status-true': data.status === true, 'status-false': data.status === false}\">\n<div class=\"center-content\">\n    <mat-icon color=\"warn\">warning</mat-icon>\n    <header>\n      <h1 mat-dialog-title>{{ data.title }}</h1>\n      <p>{{ data.message }}</p>\n        <button mat-raised-button (click)=\"onNoClick()\">No</button>&nbsp;&nbsp;\n        <button mat-raised-button (click)=\"onYesClick()\" color=\"accent\" cdkFocusInitial>Yes I Confirm</button>\n        <br><br>\n    </header>\n    \n    \n  </div>\n</main>\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'fury-thirdparty-dialog',\n  templateUrl: './thirdparty-dialog.component.html',\n  styleUrls: ['./thirdparty-dialog.component.scss']\n})\nexport class ThirdpartyDialogComponent implements OnInit {\n\n  ThirdPartyForm: FormGroup;\n  constructor(\n    public dialogRef: MatDialogRef<ThirdpartyDialogComponent>,\n    private _formBuilder: FormBuilder\n  ) { }\n\n  ngOnInit(): void {\n\n    this.ThirdPartyForm = this._formBuilder.group({\n      example_of_agent: ['', Validators.required],\n      number_of_agents: [0, Validators.required],\n      NumberOfTrainedAgents: [0, Validators.required]\n    });\n  }\n\n  onSubmit() {\n    if (this.ThirdPartyForm.valid) {\n      this.dialogRef.close(this.ThirdPartyForm.value);\n    }\n  }\n\n  onCancel() {\n      this.dialogRef.close();\n  }\n\n}","<h2 mat-dialog-title>Add New Agent, 3rdParty or Contractor Training</h2>\n<div class=\"dialog-container\">\n  <form [formGroup]=\"ThirdPartyForm\" (ngSubmit)=\"onSubmit()\">\n    <mat-form-field>\n      <mat-label>Example of Agent, 3rdParty or Contractor*</mat-label>\n      <input matInput placeholder=\"Example of Agent, 3rdParty or Contractor*\" formControlName=\"example_of_agent\">\n    </mat-form-field>\n    <mat-form-field>\n      <mat-label>Total Number of Agents, 3rdParties or Contractors*</mat-label>\n      <input matInput type=\"number\" placeholder=\"Total Number of Agents, 3rdParties or Contractors*\" formControlName=\"number_of_agents\">\n    </mat-form-field>\n    <mat-form-field>\n      <mat-label>Number of Agents, 3rdParties or Contractors Trained*</mat-label>\n      <input matInput type=\"number\" placeholder=\"Number of Agents, 3rdParties or Contractors Trained*\" formControlName=\"NumberOfTrainedAgents\">\n    </mat-form-field>\n    <div class=\"button-container\">\n      <button mat-button type=\"button\" (click)=\"onCancel()\">Cancel</button>\n      <button mat-raised-button color=\"primary\" type=\"submit\">Add Agent 3rdParty or Contractor Training</button>\n    </div>\n  </form>\n</div>","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'fury-policy-dialog',\n  templateUrl: './policy-dialog.component.html',\n  styleUrls: ['./policy-dialog.component.scss']\n})\nexport class PolicyDialogComponent implements OnInit {\n  \n  policyForm: FormGroup;\n  \n  maxDate: string;\n  constructor(\n    public dialogRef: MatDialogRef<PolicyDialogComponent>,\n    private _formBuilder: FormBuilder\n  ) { }\n  \n  \n  ngOnInit(): void {\n    const today = new Date();\n    this.maxDate = today.toISOString().split('T')[0];\n    \n    this.policyForm = this._formBuilder.group({\n      PolicyandProcedure: ['', Validators.required],\n      ApprovalDate: ['', Validators.required],\n      ReviewDate: ['', Validators.required],\n      NumberOfTrainings: [0, Validators.required]\n    });\n  }\n\n  onSubmit() {\n    if (this.policyForm.valid) {\n      this.dialogRef.close(this.policyForm.value);\n    }\n  }\n\n  onCancel() {\n      this.dialogRef.close();\n  }\n}\n\n","<!-- policy-dialog.component.html -->\n\n<h2>Add New Policy</h2>\n<div class=\"dialog-container\">\n  <form [formGroup]=\"policyForm\" (ngSubmit)=\"onSubmit()\">\n    <mat-form-field>\n      <mat-label>Policy Name*</mat-label>\n      <input matInput placeholder=\"Policy Name\" formControlName=\"PolicyandProcedure\">\n    </mat-form-field>\n\n    <mat-form-field>\n      <mat-label>Approval Date*</mat-label>\n      <input matInput type=\"date\" placeholder=\"Approval Date\" formControlName=\"ApprovalDate\" [max]=\"maxDate\">\n    </mat-form-field>\n    <!--<mat-form-field>\n      <mat-label>Approval Date*</mat-label>\n      <input matInput [matDatepicker]=\"picker\" placeholder=\"Approval Date\" formControlName=\"ApprovalDate\" [max]=\"maxDate\">\n      <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n      <mat-datepicker #picker></mat-datepicker>\n    </mat-form-field>-->\n    \n    \n    <mat-form-field>\n      <mat-label>Review Date*</mat-label>\n      <input matInput type=\"date\" placeholder=\"Review Date\" formControlName=\"ReviewDate\">\n    </mat-form-field>\n    <mat-form-field>\n      <mat-label>Number of Trainings on Policy*</mat-label>\n      <input matInput type=\"number\" placeholder=\"Number of Trainings on Policy\" formControlName=\"NumberOfTrainings\">\n    </mat-form-field>\n    <div class=\"button-container\">\n      <button mat-button type=\"button\" (click)=\"onCancel()\">Cancel</button>\n      <button mat-raised-button color=\"primary\" type=\"submit\">Add Policy</button>\n    </div>\n  </form>\n</div>\n","import { Injectable, EventEmitter } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { KeycloakService } from 'keycloak-angular';\nimport { HttpUtils } from '../../../@fury/http/HttpUtils';\nimport { HttpService } from '../../../@fury/services/http.service';\nimport { environment } from '../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ComplianceReportService extends HttpService {\n\n  private submittedUsers: Set<any> = new Set();\n  constructor(\n    private auth: KeycloakService,\n    private http: HttpClient,\n  ) {\n    super();\n    this.httpUtils = new HttpUtils(auth, http);\n  }\n\n  private httpUtils: HttpUtils;\n  private baseAPIUri = environment.backend;\n  //private statusApiUrl = `${this.baseAPIUri}v1.0/compliance-report/compliance-report/single?OrganizationID=${orgMyID}`;\n\n  markFormSubmitted(userId: string) {\n    this.submittedUsers.add(userId);\n  }\n\n  markFormNotSubmitted(userId: string) {\n    this.submittedUsers.delete(userId);\n  }\n\n  toggleFormSubmission(userId: any) {\n    if (this.hasUserSubmittedForm(userId)) {\n      this.markFormNotSubmitted(userId);\n    } else {\n      this.markFormSubmitted(userId);\n    }\n  }\n\n  hasUserSubmittedForm(userId: string) {\n    return this.submittedUsers.has(userId);\n  }\n\n\n  public sendComplianceReport(payload: any): void {\n    \n    const processingEvent = new EventEmitter<boolean>();\n    const resultEvent = new EventEmitter<any>();\n    const errorsEvent = new EventEmitter<any>();\n    \n    const api = this.baseAPIUri + 'v1.0' + '/compliance-report/compliance-report/single';\n    \n    const responseHandler = (response: any) => {\n      console.log('Response from backend:', response);\n      // handle the response from the backend here\n    };\n\n    this.httpUtils.invokePost(api, payload, processingEvent, resultEvent, errorsEvent, responseHandler);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule, DatePipe } from '@angular/common';\nimport { ComplianceReportsComponent } from './compliance-reports-component/compliance-reports-component.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatCardModule } from '@angular/material/card';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { ComplianceReportsRoutingModule } from './compilance-reports-routing.module';\nimport {MatIconModule} from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport {MatRadioModule} from '@angular/material/radio';\nimport { DialogFormInputComponent } from './dialog-form-input/dialog-form-input.component';\nimport { FurySharedModule } from '../../../@fury/fury-shared.module';\nimport { FuryCardModule } from '../../../@fury/shared/card/card.module';\nimport { MaterialModule } from '../../../@fury/shared/material-components.module';\nimport { HighlightModule } from '../../../@fury/shared/highlightjs/highlight.module';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\n// import { DialogComponent } from './dialog/dialog.component';\nimport { PolicyDialogComponent } from './policy-dialog/policy-dialog.component';\nimport { DisplayTableComponent } from './display-table/display-table.component';\nimport { DpoDialogComponent } from './dpo-dialog/dpo-dialog.component';\nimport { StaffDialogComponent } from './staff-dialog/staff-dialog.component';\nimport { ThirdpartyDialogComponent } from './thirdparty-dialog/thirdparty-dialog.component';\nimport { ComplaintsDialogComponent } from './complaints-dialog/complaints-dialog.component';\nimport { BreachesDialogComponent } from './breaches-dialog/breaches-dialog.component';\nimport { ImpactDialogComponent } from './impact-dialog/impact-dialog.component';\nimport { AuditsDialogComponent } from './audits-dialog/audits-dialog.component';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { FindComplianceReportsComponent } from './find-compliance-reports/find-compliance-reports.component';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport { SharedModule } from '../../../@fury/shared/shared-module.module';\nimport { FormElementsRoutingModule } from '../../pages/forms/form-elements/form-elements-routing.module';\nimport { FormWizardRoutingModule } from '../../pages/forms/form-wizard/form-wizard-routing.module';\nimport { ReviewCommentsModule } from '../../layout/review-comments/review-comments.module';\nimport { ApplicationTimelineModule } from '../../layout/application-timeline/application-timeline.module';\nimport { ListModule } from '../../../@fury/shared/list/list.module';\nimport { BreadcrumbsModule } from '../../../@fury/shared/breadcrumbs/breadcrumbs.module';\nimport { CustomerCreateUpdateModule } from '../../pages/tables/all-in-one-table/customer-create-update/customer-create-update.module';\nimport { ViewComplianceReportComponent } from './view-compliance-report/view-compliance-report.component';\n\n@NgModule({\n  declarations: [ComplianceReportsComponent, DialogFormInputComponent, PolicyDialogComponent, DisplayTableComponent, DpoDialogComponent, StaffDialogComponent, ThirdpartyDialogComponent, ComplaintsDialogComponent, BreachesDialogComponent, ImpactDialogComponent, AuditsDialogComponent, FindComplianceReportsComponent, ViewComplianceReportComponent],\n  imports: [\n    CommonModule,\n    MatDialogModule, \n    MatStepperModule,\n    MatCardModule,\n    ReactiveFormsModule,\n    MatInputModule,\n    MatNativeDateModule,\n    MatDatepickerModule,\n    MatTableModule,\n    MatPaginatorModule,\n    ComplianceReportsRoutingModule,\n    MatIconModule,\n    MatButtonModule,\n    MatRadioModule,\n    FormsModule,\n    FurySharedModule,\n    FuryCardModule,\n    MaterialModule,\n    HighlightModule,\n    MatCheckboxModule,\n    MatSlideToggleModule,\n    MaterialModule,\n    SharedModule,\n    FormElementsRoutingModule,\n    FormWizardRoutingModule,\n    ReviewCommentsModule,\n    ApplicationTimelineModule,\n    ListModule,\n    CustomerCreateUpdateModule,\n    BreadcrumbsModule    \n  ],\n  providers:[\n      DatePipe\n  ]\n})\n\nexport class ComplianceReportsModule { }\n","import { Component, EventEmitter } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { ChangeDetectorRef, OnInit, Input } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport escape from 'lodash-es/escape';\nimport { CompanyRegistrationService } from '../../company-registration/company-registration.service';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { environment } from '../../../../environments/environment';\nimport { AuthenticationService } from '../../../authentication/authentication.service';\nimport {fadeInRightAnimation} from '../../../../@fury/animations/fade-in-right.animation';\nimport {fadeInUpAnimation} from '../../../../@fury/animations/fade-in-up.animation';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { switchMap } from 'rxjs/operators';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { KeycloakService } from 'keycloak-angular';\nimport { DatePipe } from '@angular/common';\nimport { PolicyDialogComponent } from '../policy-dialog/policy-dialog.component';\nimport { DpoDialogComponent } from '../dpo-dialog/dpo-dialog.component';\nimport { StaffDialogComponent } from '../staff-dialog/staff-dialog.component';\nimport { ThirdpartyDialogComponent } from '../thirdparty-dialog/thirdparty-dialog.component';\nimport { ComplaintsDialogComponent } from '../complaints-dialog/complaints-dialog.component';\nimport { BreachesDialogComponent } from '../breaches-dialog/breaches-dialog.component';\nimport { ImpactDialogComponent } from '../impact-dialog/impact-dialog.component';\nimport { AuditsDialogComponent } from '../audits-dialog/audits-dialog.component';\nimport { SuccessfulMessageDialogComponent } from '../../../layout/dialogs/successful-message-dialog/successful-message-dialog.component';\nimport { ComplianceReportService } from '../compliance-report.service';\nimport * as html2pdf from 'html2pdf.js';\n\ninterface SupportDPO {\n  PolicyandProcedure: string;\n  ApprovalDate: string;\n  ReviewDate: string;\n  NumberOfTrainings: number;\n}\ninterface DPOTraining {\n  name_of_training: string;\n  who_conducted_training: string;\n  date_of_training:string;\n}\ninterface StaffTraining {\n  department: string;\n  total_staff_to_be_trained: number;\n  number_completed_training: number;\n}\ninterface ThirdPartyTraining {\n  example_of_agent: string;\n  number_of_agents: number;\n  NumberOfTrainedAgents: number;\n}\ninterface Complaints {\n  year_of_complaint: string;\n  status_of_complaint: string;\n  number_of_complaints_received: number;\n}\ninterface Breaches {\n  year_of_breach: string;\n  status_of_breach: string;\n  number_of_breaches: number;\n  measures_taken_to_address_gaps: string;\n  number_of_records_lost: number;\n  frequent_cause_of_breach: string;\n}\ninterface Impact {\n  data_or_activity: string;\n  date_concluded: string;\n}\ninterface Audit {\n  year_of_audit:string;\n  category_of_audit: string;\n  number_of_audits: number;\n  Resolutionstatus:string;\n  Resolutiondetails: string;\n}\n\n\n@Component({\n  selector: 'fury-view-compliance-report',\n  templateUrl: './view-compliance-report.component.html',\n  styleUrls: ['./view-compliance-report.component.scss'],\n  animations: [fadeInRightAnimation, fadeInUpAnimation]\n})\n\n\nexport class ViewComplianceReportComponent implements OnInit {\n\n  private _gap = 16;\n  gap = `${this._gap}px`;\n  dialogRef;\n  isReportEditable: boolean = false;\n\n  orgName: string[] = [];\n  changeParticulars: string = '';\n  dpoReporting: string = '';\n  dpoJOBDESC: string = '';\n  Reason: string = '';\n  feedback: string = '';\n  nameOfPerson: string = '';\n  titleOfPerson: string = '';\n  PDPOcomment: string = '';\n  commented_by: string = '';\n\n  orgCategory: string = '';\n  orgRegDate: string[] = [];\n  orgRegNo: string[] = [];\n  orgRenewal: string[] = [];\n  orgMyID: any[];\n// for my reports\n  pdfContent: string;\n\n\n\n\n  supportTeamDPO: SupportDPO[] = [];\n  displayedColumns: string[] = ['PolicyandProcedure', 'ApprovalDate', 'ReviewDate', 'NumberOfTrainings'];\n  dataSource!: MatTableDataSource<SupportDPO>;\n  //DPO Training \n  DPOTrainingArray: DPOTraining[] = [];\n  DPOColumns: string[] = ['name_of_training', 'who_conducted_training', 'date_of_training'];\n  DPODataSource!: MatTableDataSource<DPOTraining>;\n  //End of DPO Training \n  \n  //Staff Training \n  StaffTrainingArray: StaffTraining[] = [];\n  StaffColumns: string[] = ['department', 'total_staff_to_be_trained', 'number_completed_training'];\n  StaffDataSource!: MatTableDataSource<StaffTraining>;\n  //End of Staff Training \n \n  //ThirdParty Training \n  ThirdPartyTrainingArray: ThirdPartyTraining[] = [];\n  ThirdPartyColumns: string[] = ['example_of_agent', 'number_of_agents', 'NumberOfTrainedAgents'];\n  ThirdPartyDataSource!: MatTableDataSource<ThirdPartyTraining>;\n  //End of ThirdParty Training\n  \n  //complaints  \n  ComplaintsArray: Complaints[] = [];\n  ComplaintsColumns: string[] = ['year_of_complaint', 'status_of_complaint', 'number_of_complaints_received'];\n  ComplaintsDataSource!: MatTableDataSource<Complaints>;\n  //End of complaints \n\n  //Breaches  \n  BreachesArray: Breaches[] = [];\n  BreachesColumns: string[] = ['year_of_breach', 'status_of_breach', 'number_of_breaches','measures_taken_to_address_gaps','number_of_records_lost','frequent_cause_of_breach'];\n  BreachesDataSource!: MatTableDataSource<Breaches>;\n  //End of Breaches\n\n  //Impact  \n  ImpactArray: Impact[] = [];\n  ImpactColumns: string[] = ['data_or_activity', 'date_concluded'];\n  ImpactDataSource!: MatTableDataSource<Impact>;\n  //End of Impact\n\n  //Audits  \n  AuditArray: Audit[] = [];\n  AuditColumns: string[] = ['year_of_audit', 'category_of_audit','number_of_audits','Resolutionstatus','Resolutiondetails'];\n  AuditDataSource!: MatTableDataSource<Audit>;\n  //End of Audits\n\n\n  commentGroup = this._formBuilder.group({\n    PDPOcomment: ['',Validators.required],\n    commentBy: ['PDPO']\n  })\n\n  backgroundGroup = this._formBuilder.group({\n    overviewCtrl: ['', Validators.required],\n    roleCtrl: ['', Validators.required],\n    statutoryCrtl: ['', Validators.required],\n    financialYearCtrl: ['', Validators.required],\n    reportingPeriodCrtl: ['']\n  });\n  registrationPdpOfficeGroup = this._formBuilder.group({\n    changeParticularsCtrl: ['',Validators.required],\n    selectedOption: ['yes']\n  });\n  leadershipOversightGroup = this._formBuilder.group({\n    dpOReportingLineCtrl: ['', Validators.required],\n    registrationNumberCtrl: [''],\n    hasJobDescription: [''],\n    hasPerfApraisal: [''],\n    DPOJobDescriptionCtrl: [''],\n    ReasonCtrl:['']\n  });\n  policiesAndProcedureGroup = this._formBuilder.group({\n    PolicyandProcedure: [''],\n    ApprovalDate: [''],\n    ReviewDate: [''],\n    NumberOfTrainings: [''],\n  });\n  trainingAndAwarenessGroup = this._formBuilder.group({\n    nameOfTrainingCtrl: [''],\n    whoConductedTrainingCtrl: [''],\n    trainingConductedStartDateCtrl: [''],\n    trainingDeptCtrl: [''],\n    totalStaffTraineeCtrl: [''],\n    totalSuccesfulTrainingCrtl: [''],\n    thirdpartyCategory: [''],\n    thirdPartyTypeAgent: [''],\n    noOfAgents: '',\n    haveThirdParty: ['']\n  });\n  complaintsGroup = this._formBuilder.group({\n    yearOfCompliment: [''],\n    statusOfCompliment: [''],\n    numberOfCompliments: [''],\n    haveComplaints: ['']\n  });\n  dataBreachesGroup = this._formBuilder.group({\n    // yearOfCompliment: [''],\n    // statusOfCompliment: [''],\n    // numberOfCompliments: ['']\n    haveBreaches: ['yes']\n  });\n  impactGroup = this._formBuilder.group({\n    // yearOfCompliment: [''],\n    // statusOfCompliment: [''],\n    // numberOfCompliments: ['']\n    haveImpact: ['']\n  });\n  auditGroup = this._formBuilder.group({\n    haveAudits: ['yes']\n  });\n  conclusionGroup = this._formBuilder.group({\n    text: ['', Validators.required],\n    NameOfPersonSubmitting: ['', Validators.required],\n    TitleOfPersonSubmitting: ['', Validators.required],\n    commentedBy: [''] \n  });\n \n  isSubmitButtonDisabled: boolean;\n  reportdate: any;\n\n  openAuditsDialog(): void {\n    const dialogRef = this.dialog.open(AuditsDialogComponent, {\n      height: 'auto',\n      width: 'auto'\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.AuditArray.push(result);\n        this.AuditDataSource.data = this.AuditArray;\n      }\n    });\n  }\n  openImpactDialog(): void {\n    const dialogRef = this.dialog.open(ImpactDialogComponent, {\n      height: 'auto',\n      width: 'auto'\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.ImpactArray.push(result);\n        this.ImpactDataSource.data = this.ImpactArray;\n      }\n    });\n  }\n  openBreachesDialog(): void {\n    const dialogRef = this.dialog.open(BreachesDialogComponent, {\n      height: 'auto',\n      width: 'auto'\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.BreachesArray.push(result);\n        this.BreachesDataSource.data = this.BreachesArray;\n      }\n    });\n  }\n  openComplaintsDialog(): void {\n    const dialogRef = this.dialog.open(ComplaintsDialogComponent, {\n      height: 'auto',\n      width: 'auto'\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.ComplaintsArray.push(result);\n        this.ComplaintsDataSource.data = this.ComplaintsArray;\n      }\n    });\n  }\n  openThirdPartyDialog(): void {\n    const dialogRef = this.dialog.open(ThirdpartyDialogComponent, {\n      height: 'auto',\n      width: 'auto'\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.ThirdPartyTrainingArray.push(result);\n        this.ThirdPartyDataSource.data = this.ThirdPartyTrainingArray;\n      }\n    });\n  }\n  openStaffDialog(): void {\n    const dialogRef = this.dialog.open(StaffDialogComponent, {\n      height: 'auto',\n      width: 'auto'\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.StaffTrainingArray.push(result);\n        this.StaffDataSource.data = this.StaffTrainingArray;\n        if(this.StaffDataSource.data.length>0){\n          this.trainingAndAwarenessGroup.get('totalStaffTraineeCtrl').setValue('yes');\n        }\n        else{\n          this.trainingAndAwarenessGroup.get('totalStaffTraineeCtrl').setValue('');\n        }\n      }\n    });\n  }\n\n  openDPODialog(): void {\n    const dialogRef = this.dialog.open(DpoDialogComponent, {\n      height: 'auto',\n      width: 'auto'\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.DPOTrainingArray.push(result);\n        this.DPODataSource.data = this.DPOTrainingArray;\n\n        if(this.DPODataSource.data.length>0){\n          this.trainingAndAwarenessGroup.get('has_value').setValue('yes');\n        }\n        else{\n          this.trainingAndAwarenessGroup.get('has_value').setValue('');\n        }\n      }\n    });\n  }\n  openDialog(){\n    const dialogRef = this.dialog.open(PolicyDialogComponent, {\n      height: 'auto',\n      width: 'auto'\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.supportTeamDPO.push(result);\n        this.dataSource.data = this.supportTeamDPO;\n\n        if(this.dataSource.data.length>0){\n          this.policiesAndProcedureGroup.get('PolicyandProcedure2').setValue('yes');\n        }\n        else{\n          this.policiesAndProcedureGroup.get('PolicyandProcedure2').setValue('');\n        }\n      }\n    });\n  };\n\n  isEditable = true;\n  ComplianceReportId: string;\n  theOrganizationID: string;\n  isOrganizationRole: boolean;\n  isLegalRole: boolean;\n  issueDate: string= '';\n  expiryDate: string= '';\n  orgEmail: string='';\n  isDataLoaded: boolean = false;\n  \n  constructor(private auth: KeycloakService,\n    private http: HttpClient,\n    private _formBuilder: FormBuilder,\n    public dialog: MatDialog,\n    public registrationService: CompanyRegistrationService,\n    private authenticationService: AuthenticationService,\n    private route: ActivatedRoute,\n    private cdRef: ChangeDetectorRef,\n    private snackBar: MatSnackBar,\n    private datePipe: DatePipe,\n    private route2: Router,\n    private cdr: ChangeDetectorRef)\n    {\n      this.dataSource = new MatTableDataSource([]);\n      this.DPODataSource = new MatTableDataSource([]);\n      this.StaffDataSource = new MatTableDataSource([]);\n      this.ThirdPartyDataSource = new MatTableDataSource([]);\n      this.ComplaintsDataSource = new MatTableDataSource([]);\n      this.BreachesDataSource = new MatTableDataSource([]);\n      this.ImpactDataSource = new MatTableDataSource([]);\n      this.AuditDataSource = new MatTableDataSource([]);\n      this.isOrganizationRole = this.auth.getKeycloakInstance().realmAccess.roles.includes('organisation');\n      this.isLegalRole = this.auth.getKeycloakInstance().realmAccess.roles.includes('data-protection-officer-legal');\n      \n    }\n  ngOnInit() {\n\n    this.route.params.subscribe((params: any) => {\n      this.ComplianceReportId = params.id;\n      this.theOrganizationID = params.orgid;\n      this.reportdate = params.reportdate\n      //console.log(params.id);\n      this.fetchMinimalData(this.theOrganizationID);\n      // this.orgRenewalData();\n      //console.log(params.orgid);\n      this.fetchDataFromAPI(this.ComplianceReportId);\n      \n    });\n    \n    // Code for PDF generation\n    this.pdfContent = ``;\n    this.cdr.detectChanges();\n  }\n\n  \n  toggleUserSubmissionStatus() {\n    if (this.commented_by === \"PDPO-EDIT\") {\n      this.commented_by = \"PDPO\";\n    } else {\n      this.commented_by = \"PDPO-EDIT\";\n    }\n  }\n\n  private baseAPIUri = environment.backend;\n  \n  fetchDataFromAPI(reportId: string): void {\n    const apiUrl = this.baseAPIUri + 'v1.0' + '/compliance-report/compliance-reports/single/report?compliance_report_id='+reportId;\n    this.http.get(apiUrl).subscribe((response: any) => {\n      if (response && response.compliance_report) {\n        const complianceReport = response.compliance_report;\n        this.changeParticulars = complianceReport.registration_changes[0].Detail\n        this.dpoReporting = complianceReport.leadership_and_oversight[0].Detail\n        this.dpoJOBDESC = complianceReport.leadership_and_oversight[0].DPOJobDescription\n        //updating the frontend radio buttons\n        this.leadershipOversightGroup.get('hasJobDescription').setValue(\n          this.dpoJOBDESC.trim().length > 0 ? 'yes' : 'no'\n        );\n        this.Reason  = complianceReport.leadership_and_oversight[0].DPOResponsibility\n        this.leadershipOversightGroup.get('hasPerfApraisal').setValue(\n          this.Reason.trim().length > 0 ? 'yes' : 'no'\n        );\n        this.feedback = complianceReport.conclusion[0].text\n        this.nameOfPerson = complianceReport.conclusion[0].NameOfPersonSubmitting\n        this.titleOfPerson = complianceReport.conclusion[0].TitleOfPersonSubmitting\n        if (complianceReport.workflow_comments[0] && complianceReport.workflow_comments[0].comment_text !== null) {\n          this.PDPOcomment = complianceReport.workflow_comments[0].comment_text;\n        } else {\n          this.PDPOcomment = '';\n        }\n        if (complianceReport.workflow_comments[0] && complianceReport.workflow_comments[0].commented_by !== null) {\n          this.commented_by = complianceReport.workflow_comments[0].commented_by;\n          //console.log(\"assigned comment\")\n          //console.log(this.commented_by)\n        } else {\n          this.commented_by = '';\n        } \n\n        const policyData = [];\n        if (complianceReport.notice_policy_procedure) {\n          complianceReport.notice_policy_procedure.forEach((policy) => {\n            policyData.push({\n              PolicyandProcedure: policy.PolicyandProcedure,\n              ApprovalDate: policy.ApprovalDate,\n              ReviewDate: policy.ReviewDate,\n              NumberOfTrainings: policy.NumberOfTrainings,\n            });\n          });\n        } else {\n          console.log(\"The array is empty or does not contain any objects.\");\n        }\n        this.dataSource = new MatTableDataSource(policyData);\n\n        const dpoData = [];\n        if (complianceReport.dpo_training) {\n          complianceReport.dpo_training.forEach((training) => {\n            dpoData.push({\n              name_of_training: training.name_of_training,\n              who_conducted_training: training.who_conducted_training,\n              date_of_training: training.date_of_training,\n            });\n          });\n        } else {\n          console.log(\"DPO training data is missing or undefined.\");\n        }\n        this.DPODataSource = new MatTableDataSource(dpoData);\n  \n        this.StaffDataSource = new MatTableDataSource([]);\n        if (complianceReport.staff_training) {\n          complianceReport.staff_training.forEach((training) => {\n            this.StaffDataSource = new MatTableDataSource([{\n              department: training.department,\n              total_staff_to_be_trained: training.total_staff_to_be_trained,\n              number_completed_training: training.number_completed_training,\n            }]);\n            \n          });\n        } else {\n          console.log(\"Staff training data is missing or undefined.\");\n        }\n  \n        this.ThirdPartyDataSource = new MatTableDataSource([]);\n        if (complianceReport.third_party_contractor) {\n          complianceReport.third_party_contractor.forEach((contractor) => {\n            this.ThirdPartyDataSource = new MatTableDataSource([{\n              example_of_agent: contractor.example_of_agent,\n              number_of_agents: contractor.number_of_agents,\n              NumberOfTrainedAgents: contractor.NumberOfTrainedAgents,\n            }]);\n          });\n        } else {\n          this.trainingAndAwarenessGroup.get('haveThirdParty').setValue('no');\n          console.log(\"Third-party contractor data is missing or undefined.\");\n        } \n        //Frontend update for thirdPartyDataSource Array to toggle radio buttons\n        this.trainingAndAwarenessGroup.get('haveThirdParty').setValue(\n          this.ThirdPartyDataSource.data.length > 0 ? 'yes' : 'no'\n        );\n        \n        this.ComplaintsDataSource = new MatTableDataSource([]);\n        if (complianceReport.complaints) {\n          complianceReport.complaints.forEach((complaint) => {\n            this.ComplaintsDataSource = new MatTableDataSource([{\n              year_of_complaint: complaint.year_of_complaint,\n              status_of_complaint: complaint.status_of_complaint,\n              number_of_complaints_received: complaint.number_of_complaints_received,\n            }]);\n            \n          });\n        } else {\n          this.complaintsGroup.get('haveComplaints').setValue('no')\n          console.log(\"Complaint data is missing or undefined.\");\n        }\n        //complaints radio buttons\n        this.complaintsGroup.get('haveComplaints').setValue(\n          this.ComplaintsDataSource.data.length > 0 ? 'yes' : 'no'\n        );\n\n        this.BreachesDataSource = new MatTableDataSource([]);\n        if (complianceReport.breaches) {\n          complianceReport.breaches.forEach((breach) => {\n            this.BreachesDataSource = new MatTableDataSource([{\n              year_of_breach: breach.year_of_breach,\n              status_of_breach: breach.status_of_breach,\n              number_of_breaches: breach.number_of_breaches,\n              measures_taken_to_address_gaps: breach.measures_taken_to_address_gaps,\n              number_of_records_lost: breach.number_of_records_lost,\n              frequent_cause_of_breach: breach.frequent_cause_of_breach,\n            }]);\n            \n          });\n        } else {\n          this.dataBreachesGroup.get('haveBreaches').setValue('no')\n          console.log(\"Breach data is missing or undefined.\");\n        }\n        // Breaches radio buttons\n        this.dataBreachesGroup.get('haveBreaches').setValue(\n          this.BreachesDataSource.data.length > 0 ? 'yes' : 'no'\n        );\n\n        this.ImpactDataSource = new MatTableDataSource([]);\n        if (complianceReport.impact_assessment) {\n          complianceReport.impact_assessment.forEach((impact) => {\n            this.ImpactDataSource = new MatTableDataSource([{\n              data_or_activity: impact.data_or_activity,\n              date_concluded: impact.date_concluded,\n            }]);\n            \n          });\n        } else {\n          this.impactGroup.get('haveImpact').setValue('no')\n          console.log(\"Impact assessment data is missing or undefined.\");\n        }\n        // Impact radio buttons\n        this.impactGroup.get('haveImpact').setValue(\n          this.ImpactDataSource.data.length > 0 ? 'yes' : 'no'\n        );\n\n        this.AuditDataSource = new MatTableDataSource([]);\n        if (complianceReport.audits) {\n          complianceReport.audits.forEach((audit) => {\n            this.AuditDataSource = new MatTableDataSource([{\n              year_of_audit: audit.year_of_audit,\n              category_of_audit: audit.category_of_audit,\n              number_of_audits: audit.number_of_audits,\n              Resolutionstatus: audit.Resolutionstatus,\n              Resolutiondetails: audit.Resolutiondetails,\n            }]);\n            \n          });\n        } else {\n          this.auditGroup.get('haveAudits').setValue('no')\n          console.log(\"Audit data is missing or undefined.\");\n        }\n        // Audits radio buttons\n        this.auditGroup.get('haveAudits').setValue(\n          this.AuditDataSource.data.length > 0 ? 'yes' : 'no'\n        );\n\n\n        this.cdRef.detectChanges();\n        // for the button to be enabled\n        \n        //pdf content\n        // this.pdfContent += this.contentToAppend;\n        this.isDataLoaded = true;\n      } else {\n        // Handle the case where the response doesn't match the expected structure\n        console.error('Invalid API response format.');\n      }\n    });\n  }\n\n  fetchMinimalData(theOrganizationID: string): void{\n\n    const api2 = this.baseAPIUri + 'v1.0' + '/org-registration/single?RegTrackingNo='+theOrganizationID;\n    this.http.get(api2).subscribe(\n      (response: any) => {\n        \n        this.orgName = response.OrganisationName;\n        this.orgRegNo = response.RegTrackingNo;\n        this.orgRegDate = response.EnteredOn;\n        this.orgMyID = response.OrganisationID;\n        this.orgEmail = response.EmailAddress;\n        // Extract OrganisationCategoryNames and join them with commas\n        const orgCategoryNames: string[] = response.OrganisationCategory.map((category) => category.OrganisationCategoryName);\n        this.orgCategory = orgCategoryNames.join(', ');\n        this.orgRenewalData();\n      },\n      (error) => {\n        console.error('Error fetching data:', error);\n      }\n    );\n  }\n  \n  orgRenewalData(): void{\n    const renewalapi = this.baseAPIUri + 'v1.0' + '/certificate/details?OrganizationID=' + this.orgMyID;\n    this.http.get(renewalapi).subscribe(\n      (response: any) => {\n        \n        if(response.IssueDate){\n          this.issueDate = this.datePipe.transform(response.IssueDate, 'yyyy-MMMM-dd');\n          this.expiryDate = this.datePipe.transform(response.ExpiryDate, 'yyyy-MMMM-dd');\n        }\n        else{\n          this.issueDate = 'Loading...please wait';\n          this.expiryDate = 'Loading...please wait';\n        }\n        \n      },\n      (error) => {\n        console.error('Error Fetching Renewal Data:', error);\n      }\n    );\n  }\n\n  onAddComment(): void {\n    if (this.commentGroup.valid) {\n      const OrganizationID = this.orgMyID;\n      const ComplianceReportID = this.ComplianceReportId;\n      const comment = this.commentGroup.get('PDPOcomment').value;\n  \n      // Define the request body with the data to update\n      const requestBody = {\n        OrganizationID,\n        ComplianceReportID,\n        comment_text: comment,\n        commented_by: this.commented_by,\n        orgName: this.orgName.toString(),\n        orgEmail: this.orgEmail,\n      };\n      \n      //console.log(\"report ID\",ComplianceReportID)\n      //console.log(requestBody)\n      // Define the headers for the PUT request (if needed)\n      const headers = new HttpHeaders({\n        'Content-Type': 'application/json', // Adjust the content type as needed\n      });\n\n      const params = new HttpParams()\n      .set('OrganizationID', OrganizationID.toString())\n      .set('ComplianceReportID', ComplianceReportID)\n      .set('comment_text', comment)\n      .set('commented_by', this.commented_by);\n  \n      const apiUrl = `${this.baseAPIUri}v1.0/compliance-report/compliance-report/single`;\n\n      // Perform the PUT request\n      this.http.put(apiUrl, requestBody, { headers, params })\n        .subscribe(\n          (response) => {\n            // Show a success snackbar\n            this.snackBar.open('Review Comment added successfully', 'Close', {\n              duration: 3000, // 3 seconds\n            });\n  \n            // Reload the page after a delay\n            setTimeout(() => {\n              window.location.reload();\n            }, 2000);\n          },\n          (error) => {\n            // Handle API call error here\n            console.error('Error adding comment:', error);\n          }\n        );\n    } else {\n      // Form is invalid, show an error message or handle as needed\n      console.log('Form is invalid');\n    }\n  }\n  \n\n  // Edits start here\n  checkFormValidity(): void {\n    if (this.conclusionGroup.valid && this.registrationPdpOfficeGroup.valid && this.leadershipOversightGroup.valid) {\n      this.isSubmitButtonDisabled = false; // Enable the button if the form is valid\n    } else {\n      this.isSubmitButtonDisabled = true; // Disable the button if the form is invalid\n    }\n  }\n  collectTableData(): SupportDPO[] {\n    \n    return this.supportTeamDPO.map(policy => {\n      return {\n        PolicyandProcedure: policy.PolicyandProcedure,\n        ApprovalDate: policy.ApprovalDate,\n        ReviewDate: policy.ReviewDate,\n        NumberOfTrainings: policy.NumberOfTrainings // Convert string to number\n      };\n    });\n  }\n  collectDPOData(): DPOTraining[] {\n    return this.DPOTrainingArray.map(dpo => {\n      return {\n        name_of_training: dpo.name_of_training,\n        who_conducted_training: dpo.who_conducted_training,\n        date_of_training: dpo.date_of_training\n      };\n    });\n  }\n  collectStaffData(): StaffTraining[] {\n    return this.StaffTrainingArray.map(dpo => {\n      return {\n        department: dpo.department,\n        total_staff_to_be_trained: dpo.total_staff_to_be_trained,\n        number_completed_training: dpo.number_completed_training\n      };\n    });\n  }\n  collectThirdData(): ThirdPartyTraining[] {\n    return this.ThirdPartyTrainingArray.map(x => {\n      return {\n        example_of_agent: x.example_of_agent,\n        number_of_agents: x.number_of_agents,\n        NumberOfTrainedAgents: x.NumberOfTrainedAgents\n      };\n    });\n  }\n  collectComplaintsData(): Complaints[] {\n    return this.ComplaintsArray.map(x => {\n      return {\n        year_of_complaint: x.year_of_complaint,\n        status_of_complaint: x.status_of_complaint,\n        number_of_complaints_received: x.number_of_complaints_received\n      };\n    });\n  }\n  collectBreachesData(): Breaches[] {\n    return this.BreachesArray.map(x => {\n      return {\n        year_of_breach: x.year_of_breach,\n        status_of_breach: x.status_of_breach,\n        number_of_breaches: x.number_of_breaches,\n        measures_taken_to_address_gaps: x.measures_taken_to_address_gaps,\n        number_of_records_lost: x.number_of_records_lost,\n        frequent_cause_of_breach: x.frequent_cause_of_breach\n      };\n    });\n  }\n  collectImpactData(): Impact[] {\n    return this.ImpactArray.map(x => {\n      return {\n        data_or_activity: x.data_or_activity,\n        date_concluded: x.date_concluded\n      };\n    });\n  }\n  collectAuditsData(): Audit[] {\n    return this.AuditArray.map(x => {\n      return {\n        year_of_audit: x.year_of_audit,\n        category_of_audit: x.category_of_audit,\n        number_of_audits: x.number_of_audits,\n        Resolutionstatus: x.Resolutionstatus,\n        Resolutiondetails: x.Resolutiondetails\n      };\n    });\n  }\n  \n\n  //handle Edit button\n  handleSubmit(): void{\n\n    const changeParticulars = this.registrationPdpOfficeGroup.get('changeParticularsCtrl')?.value;\n    const changeParticularsPayload = {\n      Detail: changeParticulars\n    };\n    const dpOReportingLine = this.leadershipOversightGroup.get('dpOReportingLineCtrl')?.value;\n    const DPOJobDescription = this.leadershipOversightGroup.get('DPOJobDescriptionCtrl')?.value;\n    const Reason = this.leadershipOversightGroup.get('ReasonCtrl')?.value;\n    const changeLeadershipPayload = {\n      Detail: dpOReportingLine,\n      DPOJobDescription: DPOJobDescription,\n      DPOResponsibility: Reason\n    };\n    const conclusions = this.conclusionGroup.get('text')?.value;\n    const nameofperson = this.conclusionGroup.get('NameOfPersonSubmitting')?.value;\n    const titleofperson = this.conclusionGroup.get('TitleOfPersonSubmitting')?.value;\n    const changeConclusionPayload = {\n      text: conclusions,\n      NameOfPersonSubmitting: nameofperson,\n      TitleOfPersonSubmitting: titleofperson\n    };\n    const tableData = this.collectTableData();\n    const DPOData = this.collectDPOData();\n    const StaffData = this.collectStaffData();\n    const thirdData = this.collectThirdData();\n    const ComplaintsData = this.collectComplaintsData();\n    const breachesData=this.collectBreachesData();\n    const ImpactData = this.collectImpactData();\n    const auditData =  this.collectAuditsData();    \n    \n    const payload = {\n      compliance_report_id: this.ComplianceReportId,\n      organizationID: parseInt(this.orgMyID.toString(),10),\n      registration_changes: [changeParticularsPayload],\n      leadership_and_oversight: [changeLeadershipPayload],\n      notice_policy_procedure: tableData,\n      dpo_training: DPOData,\n      staff_training: StaffData,\n      third_party_contractor: thirdData,\n      complaints: ComplaintsData,\n      breaches: breachesData,\n      impact_assessment: ImpactData,\n      audits : auditData,\n      conclusion: [changeConclusionPayload]\n    };\n    \n    //console.log('My Update Payload is here...')\n    //console.log(payload)\n    //send to our backend!\n    \n    const api4 = this.baseAPIUri + 'v1.0' + '/compliance-report/compliance-reports/single/report';\n\n    this.http.put(api4, payload).subscribe(\n      response => {\n        //console.log('Response from backend:', response);\n        // handle the response from the backend here\n        this.snackBar.open('Compliance Report Updated Successfully.', 'Close', {\n          duration: 8000, // 8 seconds\n        });\n        this.dialogRef = this.dialog.open(SuccessfulMessageDialogComponent, {\n          panelClass: ['successful-message-dialog', 'dialogs'],\n          disableClose: true,\n          data: {\n            title: 'Successfully Updated Your Compliance Report',\n            message: 'Compliance Report Updated Please wait for review from the PDPO Team.',\n            status: true\n          }\n        });\n  \n        this.dialogRef.afterClosed().subscribe(() => {\n          this.route2.navigate(['/compliance-and-reports/find-compliance-reports']);\n        });\n      },\n      error => {\n        console.error('Error sending data:', error);\n        // Handle error scenarios\n      }\n    );\n    \n  }\n\n  generatePDF() {\n    //console.log('Generating PDF...');\n  \n    // HTML for Report\n\n    const pdfContainer = `\n    <style>\n      .cover-page {\n          size: A4;\n          text-align: center;\n          height: 110vh; \n          display: flex;\n          flex-direction: column;\n          justify-content: center;\n      }\n      .page {\n        page-break-before: always;\n       }\n      .main-content {\n          margin-top: 350px; \n      }\n      .footer-image {\n        position: absolute;\n        bottom: 0;\n        left: 0;\n        right: 0;\n        text-align: center; /* Center the image horizontally */\n      }\n      .datedate{\n        margin-top: 150px; \n      }\n      table {\n        border-collapse: collapse;\n        width: 100%;\n      }\n\n      th, td {\n        border: 1px solid #000; \n        padding: 8px;\n        text-align: left;\n      }\n\n      tr:nth-child(even) {\n        background-color: #f2f2f2;\n      }\n\n      th {\n        background-color: #cccccc; \n      }\n    </style>\n    <div class=\"cover-page\">\n        <h1><strong>${this.orgName}</strong></h1>\n        <h2><strong>Annual Data Protection and Privacy Compliance Report</strong></h2>\n        <h2><strong>to</strong></h2>\n        <h2><strong>Personal Data Protection Office</strong></h2>\n        <h2><strong>(PDPO)</strong></h2><br><br><br><br><br><br><br><br>\n        <h2>\n          <b>\n            <time datetime=\"${this.reportdate}\" class=\"datedate\">${new Date(this.reportdate).toLocaleString('en-US', { year: 'numeric', month: 'long' })}</time>\n          </b>\n        </h2>\n        \n    </div>\n\n    <div class=\"page\">\n    <h3>1. INTRODUCTION</h3>\n    <h4>1.1 Background</h4>\n        <small>\n            <p>\n                The Personal Data Protection Office (PDPO) was established to oversee the implementation of and enforce the Data Protection and Privacy Act and its regulations. According to regulation 50, all registered data collectors, processors, and controllers must submit a summary to the PDPO within ninety (90) days after the end of each financial year, including:\n            </p>\n            <ol>\n                <li>All received complaints and their statuses (resolved or pending).</li>\n                <li>All data breaches and the actions taken to address them.</li>\n            </ol>\n            <p>\n                Regulation 4(b) of the Data Protection and Privacy Regulations empowers the PDPO to coordinate, supervise, and monitor data-related matters. The PDPO aims to enhance compliance by expanding the annual compliance report's scope for better adherence to the Act.\n            </p>\n            <p>\n                The PDPO's financial year aligns with the government's year, running from 1st July to 30th June, as per the National Information Technology Authority, Uganda (NITA-U) Act of 2009, section 30. In compliance with this requirement, <strong [style.color]=\"'#1976d2'\">${this.orgName}</strong> hereby submits its annual Data Protection and Privacy compliance report to the PDPO.\n            </p>\n        </small>\n        \n    </div>\n     \n    <div class=\"page\">\n      <h3>2. REGISTRATION WITH PERSONAL DATA PROTECTION OFFICE</h3>\n      <h4>2.1 RENEWAL STATUS</h4>\n        <blockquote>\n          <p>\n            <strong>${this.orgName}</strong> was registered on <strong>${this.issueDate}</strong> as a <strong>${this.orgCategory}</strong> under registration number <strong>${this.orgRegNo}</strong>. \n            The date for renewal of its registration is <strong>${this.expiryDate}</strong>.\n          </p>\n        </blockquote>\n      <h4>2.2 CHANGES IN REGISTERED PARTICULARS</h4>\n        <blockquote>\n          <p>\n            ${this.changeParticulars}\n          </p>\n        </blockquote>\n      </div>\n    <div class=\"page\">\n      <h3>3. LEADERSHIP AND OVERSIGHT</h3>\n      <h4>3.1 Reporting line and team of staff supporting Data Protection Officer</h4>\n        <blockquote>\n          <p>\n              ${this.dpoReporting}\n          </p>\n        </blockquote>\n      <h4>3.2 Does the DPO have a job description addressing specific responsibilities as detailed in regulation 47(3) of the Data Protection & Privacy Regulations?</h4>\n        <blockquote>\n          <p>\n            ${this.leadershipOversightGroup.get('hasJobDescription').value === 'yes' ? `<strong>${this.dpoJOBDESC}</strong>` : 'NO'}\n          </p>\n        </blockquote>\n      <h4>3.3 Does the most recent perfomance appraisal of the DPO encompass responsibilities set out by regulations 47(30) ?</h4>\n        <blockquote>\n          <p>\n            ${this.leadershipOversightGroup.get('hasPerfApraisal').value === 'yes' ? `<strong>${this.Reason}</strong>` : 'NO'}\n          </p>\n        </blockquote>\n      </div>\n    <div class=\"page\">\n      <h3>4. NOTICES, POLICIES AND PROCEDURES</h3>\n      <p>\n        <strong>${this.orgName}’s</strong> management approved the following notices/statements/disclosures, policies and procedures which are available to all staff in the policies and procedures section of the shared folder on the intranet and data subjects for notices/statements/disclosures.\n      </p>\n          <table>\n          <thead>\n            <tr>\n              <th>Policy Name</th>\n              <th>Approval Date</th>\n              <th>Review Date</th>\n              <th>Number of Trainings on Policy</th>\n            </tr>\n          </thead>\n          <tbody>\n            ${this.dataSource.data.map(row => `\n              <tr>\n                <td>${row.PolicyandProcedure}</td>\n                <td>${row.ApprovalDate}</td>\n                <td>${row.ReviewDate}</td>\n                <td>${row.NumberOfTrainings}</td>\n              </tr>`).join('')}\n          </tbody>\n        </table>\n      </div>\n      <div class=\"page\" style=\"padding-top: 5px;\">\n        <h3>5. TRAINING AND AWARENESS</h3>\n        <h4>DPO Training</h4>\n        <table>\n          <thead>\n            <tr>\n              <th>Training Name</th>\n              <th>Conducted By</th>\n              <th>Training Date</th>\n            </tr>\n          </thead>\n          <tbody>\n            ${this.DPODataSource.data.map(row => `\n              <tr>\n                <td>${row.name_of_training}</td>\n                <td>${row.who_conducted_training}</td>\n                <td>${row.date_of_training}</td>\n              </tr>`).join('')}\n          </tbody>\n        </table>\n        <h4>Staff Training</h4>\n        <table>\n          <thead>\n            <tr>\n              <th>Department</th>\n              <th>Total Staff to be Trained</th>\n              <th>Number of Staff that completed Training</th>\n            </tr>\n          </thead>\n          <tbody>\n            ${this.StaffDataSource.data.map(row => `\n              <tr>\n                <td>${row.department}</td>\n                <td>${row.total_staff_to_be_trained}</td>\n                <td>${row.number_completed_training}</td>\n              </tr>`).join('')}\n          </tbody>\n        </table>\n        <h4>Do you have an Agent, 3rd party or Contractor?</h4>\n        ${this.trainingAndAwarenessGroup.get('haveThirdParty').value === 'yes' \n        ? `<table>\n            <thead>\n              <tr>\n                <th>Example of Agent, 3rdParty or Contractor</th>\n                <th>Total Number of Agents, 3rdParty or Contractors</th>\n                <th>Number of Agents, 3rdParties or Contractors Trained</th>\n              </tr>\n            </thead>\n            <tbody>\n              ${this.ThirdPartyDataSource.data.map(row => `\n                <tr>\n                  <td>${row.example_of_agent}</td>\n                  <td>${row.number_of_agents}</td>\n                  <td>${row.NumberOfTrainedAgents}</td>\n                </tr>`).join('')}\n            </tbody>\n          </table>` \n        : 'NO'}\n      </div>\n      <div class=\"page\" style=\"padding-top: 5px;\">\n        <h3>6. COMPLAINTS RELATED TO DATA PROTECTION AND PRIVACY (IF APPLICABLE)</h3>\n        <h4>Did you have any Complaints ?</h4>\n        ${this.complaintsGroup.get('haveComplaints').value === 'yes' \n        ? `<table>\n            <thead>\n              <tr>\n                <th>Year Complaints were Received</th>\n                <th>Status of Complaints</th>\n                <th>Number of Complaints Received</th>\n              </tr>\n            </thead>\n            <tbody>\n              ${this.ComplaintsDataSource.data.map(row => `\n                <tr>\n                  <td>${row.year_of_complaint}</td>\n                  <td>${row.status_of_complaint}</td>\n                  <td>${row.number_of_complaints_received}</td>\n                </tr>`).join('')}\n            </tbody>\n          </table>` \n        : 'NO'}\n      </div>\n      <div class=\"page\" style=\"padding-top: 5px;\">\n        <h3>7. DATA SECURITY BREACHES (IF APPLICABLE)</h3>\n        <h4>Did you experience any Data Security Breaches?</h4>\n        ${this.dataBreachesGroup.get('haveBreaches').value === 'yes' \n        ? `<table>\n            <thead>\n              <tr>\n                <th>Year Breach Occured</th>\n                <th>Status of Breach</th>\n                <th>Number of Breaches</th>\n                <th>Measures to address Gaps</th>\n                <th>No. of Records Affected</th>\n                <th>Frequent cause of Breach</th>\n              </tr>\n            </thead>\n            <tbody>\n              ${this.BreachesDataSource.data.map(row => `\n                <tr>\n                  <td>${row.year_of_breach}</td>\n                  <td>${row.status_of_breach}</td>\n                  <td>${row.number_of_breaches}</td>\n                  <td>${row.measures_taken_to_address_gaps}</td>\n                  <td>${row.number_of_records_lost}</td>\n                  <td>${row.frequent_cause_of_breach}</td>\n                </tr>`).join('')}\n            </tbody>\n          </table>` \n        : 'NO'}\n      </div>\n      <div class=\"page\" style=\"padding-top: 5px;\">\n        <h3>8. DATA PROTECTION IMPACT ASSESSMENT (IF APPLICABLE)</h3>\n        ${this.impactGroup.get('haveImpact').value === 'yes' \n        ? `<table>\n            <thead>\n              <tr>\n                <th>Data collection/processing activity</th>\n                <th>Date Data Protection Impact assessment concluded</th>\n              </tr>\n            </thead>\n            <tbody>\n              ${this.ImpactDataSource.data.map(row => `\n                <tr>\n                  <td>${row.data_or_activity}</td>\n                  <td>${row.date_concluded}</td>\n                </tr>`).join('')}\n            </tbody>\n          </table>` \n        : 'NONE'}\n      </div>\n      <div class=\"page\" style=\"padding-top: 5px;\">\n        <h3>9. DATA PROTECTION AND PRIVACY AUDITS (IF APPLICABLE)</h3>\n        <h4>Did you have any audits carried out?</h4>\n        ${this.auditGroup.get('haveAudits').value === 'yes' \n        ? `<table>\n            <thead>\n              <tr>\n                <th>Year Of Audit</th>\n                <th>Category of Audit</th>\n                <th>Number of Audits</th>\n                <th>Resolution Status</th>\n                <th>Resolution Details</th>\n              </tr>\n            </thead>\n            <tbody>\n              ${this.AuditDataSource.data.map(row => `\n                <tr>\n                  <td>${row.year_of_audit}</td>\n                  <td>${row.category_of_audit}</td>\n                  <td>${row.number_of_audits}</td>\n                  <td>${row.Resolutionstatus}</td>\n                  <td>${row.Resolutiondetails}</td>\n                </tr>`).join('')}\n            </tbody>\n          </table>` \n        : 'NONE'}\n      </div>\n      <div class=\"page\" style=\"padding-top: 5px;\">\n        <h3>10. CONCLUSION</h3>\n        <h4>Feedback on Compliance</h4>\n        <p>\n          ${this.feedback}\n        </p>\n        <h4>\n          <strong>Declaration</strong>\n        </h4>\n        <p>\n          I, <strong>${this.nameOfPerson}</strong>, on behalf of <strong>${this.orgName}</strong>, hereby declare that the information provided in this Data Protection and Privacy Annual Compliance Report is accurate, complete, and up-to-date to the best of my knowledge.\n        </p>\n        <p>\n          NAME OF PERSON SUBMITTING THE REPORT: <span><strong>${this.nameOfPerson}</strong></span>\n        </p>\n        <p>\n          TITLE OF PERSON SUBMITTING THE REPORT: <span><strong>${this.titleOfPerson}</strong></span>\n        </p>\n        <p>\n          DATE REPORT SUBMITTED TO PDPO: <span><strong>${this.reportdate}</strong></span>\n        </p>\n      </div>\n\n    `;\n\n    const options = {\n      margin: 10,\n      filename: 'Annual Compliance Report.pdf',\n      image: { type: 'jpeg', quality: 0.98 },\n      html2canvas: { scale: 2 },\n      jsPDF: { unit: 'mm', format: 'a4', orientation: 'portrait' },\n    };\n  \n    html2pdf().from(pdfContainer).set(options).save();\n  }\n  // PDF content\n\n\n  \n}\n","<fury-page-layout mode=\"card\">\n    <fury-page-layout-header>\n      <fury-breadcrumbs [@fadeInRight]  current=\"Compliance Report\"></fury-breadcrumbs>\n    </fury-page-layout-header>\n  \n    <fury-page-layout-content  [fxLayoutGap]=\"gap\" fxLayout=\"column\">\n      <fury-card >\n        <main class=\"section-wrapper\">\n            <mat-vertical-stepper [linear]=\"false\" #stepper  id=\"pdf-content\">\n                <mat-step [stepControl]=\"backgroundGroup\" [editable]=\"isEditable\" class=\"current-step-styles\">\n                    <form [formGroup]=\"backgroundGroup\" class=\"form-group-row\">\n                        <div class=\"base-section\"  id=\"step1\">\n                            <ng-template matStepLabel><span class=\"stepper-label\">ORGANISATIONAL BACKGROUND</span></ng-template>\n                            <button mat-raised-button color=\"accent\" [disabled]=\"!isDataLoaded\" (click)=\"generatePDF()\">Download Report </button>\n                            \n                            <div class=\"form-group-row\">\n                                <small>\n                                    <p>\n                                        The Personal Data Protection Office (PDPO) was established to oversee the implementation of and enforce the Data Protection and Privacy Act and its regulations. According to regulation 50, all registered data collectors, processors, and controllers must submit a summary to the PDPO within ninety (90) days after the end of each financial year, including:\n                                    </p>\n                                    <ol>\n                                        <li>All received complaints and their statuses (resolved or pending).</li>\n                                        <li>All data breaches and the actions taken to address them.</li>\n                                    </ol>\n                                    <p>\n                                        Regulation 4(b) of the Data Protection and Privacy Regulations empowers the PDPO to coordinate, supervise, and monitor data-related matters. The PDPO aims to enhance compliance by expanding the annual compliance report's scope for better adherence to the Act.\n                                    </p>\n                                    <p>\n                                        The PDPO's financial year aligns with the government's year, running from 1st July to 30th June, as per the National Information Technology Authority, Uganda (NITA-U) Act of 2009, section 30. In compliance with this requirement, <strong [style.color]=\"'#1976d2'\">{{orgName}}</strong> hereby submits its annual Data Protection and Privacy compliance report to the PDPO.\n                                    </p>\n                                </small>                                                \n                            </div>\n                            <div>\n                                <button type=\"button\" matStepperNext color=\"accent\" mat-raised-button>Next</button>\n                            </div>\n                        </div>\n                    </form>\n                </mat-step>\n                <mat-step [stepControl]=\"registrationPdpOfficeGroup\" [editable]=\"isEditable\">\n                    <form [formGroup]=\"registrationPdpOfficeGroup\">\n                        <div class=\"base-section\" id=\"step2\">\n                            <ng-template matStepLabel class=\"stepper-label\">REGISTRATION WITH PERSONAL DATA PROTECTION\n                                OFFICE</ng-template>\n                            <!-- <h3>Renewal status</h3> -->\n                            <div class=\"form-group-row\">\n                            <mat-form-field class=\"w-90\" [style.width]=\"'68%'\">\n                                <mat-label>Registration Date</mat-label>\n                                <input matInput [disabled]=\"true\" [value]=\"issueDate\">\n                            </mat-form-field>\n                                <div class=\"form-group-row\">\n                                    <mat-form-field class=\"row-33\">\n                                        <mat-label>Category</mat-label>\n                                        <input matInput [disabled]=\"true\" [value]=\"orgCategory\">\n                                    </mat-form-field>\n        \n                                    <mat-form-field class=\"row-33\">\n                                        <mat-label>Registration Number:</mat-label>\n                                        <input matInput [disabled]=\"true\" [value]=\"orgRegNo\">\n                                    </mat-form-field>\n        \n                                    <mat-form-field class=\"row-33\">\n                                        <mat-label>Date of next Renewal or Renewal Status</mat-label>\n                                        <input matInput\n                                            placeholder=\"Date of Renewal or Renewal Status\" [disabled]=\"true\" [value]=\"expiryDate\">\n                                    </mat-form-field>\n                                </div>\n                                \n                            </div>\n                            <h3>Changes in registered particulars TESTING:</h3>\n                            <mat-form-field class=\"w-100\">\n                                <mat-label>List any changes in registered particulars if any</mat-label>\n                                <textarea matInput [value]=\"changeParticulars\" [disabled]=\"true\"></textarea>\n                            </mat-form-field>\n                            \n                            <br />\n                            <div>\n                                <button mat-button matStepperPrevious>Back</button>\n                                <button mat-raised-button matStepperNext color=\"accent\">Next</button>\n                            </div>\n                        </div>\n                    </form>\n                </mat-step>\n                <mat-step [stepControl]=\"leadershipOversightGroup\" [editable]=\"isEditable\" id=\"step3\">\n                    <form [formGroup]=\"leadershipOversightGroup\">\n                        <div class=\"base-section\">\n                            <ng-template matStepLabel class=\"stepper-label\">LEADERSHIP AND OVERSIGHT</ng-template>\n                            <h3>The DPO reports to the <small><i>Reporting line and team of staff supporting Data Protection Officer *</i></small></h3>\n                            <mat-form-field [style.width]=\"'60%'\">\n                                <mat-label>DPO's reporting line and team of staff supporting Data Protection Officer</mat-label>\n                                <textarea matInput [value]=\"dpoReporting\" [disabled]=\"true\"></textarea>\n                            </mat-form-field>\n                            <br />\n                            <h3>Does the DPO have a job description addressing specific responsibilities as detailed in regulation 47(3) of the Data Protection & Privacy Regulations?</h3>\n                            <div class=\"radio-controls\">\n                                <mat-radio-group formControlName=\"hasJobDescription\">\n                                    <mat-radio-button value=\"yes\" [style.marginRight]=\"'12px'\">Yes</mat-radio-button>\n                                    <mat-radio-button value=\"no\">No</mat-radio-button>\n                                </mat-radio-group>\n                            </div>\n        \n                            <div *ngIf=\"leadershipOversightGroup.get('hasJobDescription')?.value === 'yes'\"\n                                [style.paddingTop]=\"'20px'\">\n                                <mat-form-field [style.width]=\"'60%'\">\n                                    <mat-label>DPO's Job Description</mat-label>\n                                    <textarea matInput [value]=\"dpoJOBDESC\" [disabled]=\"true\"></textarea>\n                                </mat-form-field>\n                            </div>\n        \n                            <br />\n                            <h3>Does the most recent perfomance appraisal of the DPO encompass responsibilities set out by regulations 47(30) ?</h3>\n                            <div class=\"radio-controls\">\n                                <mat-radio-group formControlName=\"hasPerfApraisal\">\n                                    <mat-radio-button value=\"yes\" [style.marginRight]=\"'12px'\">Yes</mat-radio-button>\n                                    <mat-radio-button value=\"no\">No</mat-radio-button>\n                                </mat-radio-group>\n                            </div>\n        \n                            <div *ngIf=\"leadershipOversightGroup.get('hasPerfApraisal')?.value === 'yes'\"\n                                [style.paddingTop]=\"'20px'\">\n                                <mat-form-field [style.width]=\"'60%'\">\n                                    <mat-label>Reason</mat-label>\n                                    <input matInput [value]=\"Reason\" [disabled]=\"true\">\n                                </mat-form-field>\n                            </div>\n                            \n                            <br />\n                            <br />\n                            <div>\n                                <button mat-button matStepperPrevious>Back</button>\n                                <button mat-raised-button matStepperNext color=\"accent\">Next</button>\n                            </div>\n                        </div>\n                    </form>\n                </mat-step>\n                <mat-step [stepControl]=\"policiesAndProcedureGroup\" [editable]=\"isEditable\" id=\"step4\">\n                    <form [formGroup]=\"policiesAndProcedureGroup\">\n                        <div class=\"base-section\">\n                            <ng-template matStepLabel class=\"stepper-label\">POLICIES AND PROCEDURES</ng-template>\n                            <br />\n                            <div>\n                                <table mat-table [dataSource]=\"dataSource\" matSort class=\"table\">\n                                    <ng-container matColumnDef=\"PolicyandProcedure\">\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Policy Name </th>\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.PolicyandProcedure}} </td>\n                                    </ng-container>\n        \n                                    <ng-container matColumnDef=\"ApprovalDate\">\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Approval Date </th>\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.ApprovalDate}} </td>\n                                    </ng-container>\n        \n                                    <ng-container matColumnDef=\"ReviewDate\">\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Review Date </th>\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.ReviewDate}} </td>\n                                    </ng-container>\n    \n                                    <ng-container matColumnDef=\"NumberOfTrainings\">\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Number of Trainings on Policy </th>\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.NumberOfTrainings}} </td>\n                                </ng-container>\n        \n                                    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                                    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n                                </table>\n        \n                            </div>\n                            <br />\n                            <br />\n                            <div>\n                                <button mat-button matStepperPrevious>Back</button>\n                                <button mat-raised-button matStepperNext color=\"accent\">Next</button>\n                            </div>\n                        </div>\n                    </form>\n                </mat-step>\n                <mat-step [stepControl]=\"trainingAndAwarenessGroup\" [editable]=\"isEditable\" id=\"step5\">\n                    <form [formGroup]=\"trainingAndAwarenessGroup\">\n                        <div class=\"base-section\">\n                            <ng-template matStepLabel class=\"stepper-label\">TRAINING AND AWARENESS</ng-template>\n                            <h3>DPO Training</h3>\n                            <br />\n                            \n                            <div>\n                            <table mat-table [dataSource]=\"DPODataSource\" matSort class=\"table\">\n                                <ng-container matColumnDef=\"name_of_training\">\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Training Name </th>\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.name_of_training}} </td>\n                                </ng-container>\n                                \n                                <ng-container matColumnDef=\"who_conducted_training\">\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Conducted By </th>\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.who_conducted_training}} </td>\n                                </ng-container>\n                                \n                                <ng-container matColumnDef=\"date_of_training\">\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Training Date </th>\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.date_of_training}} </td>\n                                </ng-container>\n                                \n                                <tr mat-header-row *matHeaderRowDef=\"DPOColumns\"></tr>\n                                <tr mat-row *matRowDef=\"let row; columns: DPOColumns;\"></tr>\n                                </table>\n                                \n                        </div>\n                            <br />\n                            <br />\n                        \n                            <h3>Staff Training</h3>\n                            <div>\n                                <div>\n                                <table mat-table [dataSource]=\"StaffDataSource\" matSort class=\"table\">\n                                    <ng-container matColumnDef=\"department\">\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Department </th>\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.department}} </td>\n                                    </ng-container>\n                                \n                                    <ng-container matColumnDef=\"total_staff_to_be_trained\">\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Total Staff to be Trained </th>\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.total_staff_to_be_trained}} </td>\n                                    </ng-container>\n                                \n                                    <ng-container matColumnDef=\"number_completed_training\">\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Number of Staff that completed Training</th>\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.number_completed_training}} </td>\n                                    </ng-container>\n                                \n                                    <tr mat-header-row *matHeaderRowDef=\"StaffColumns\"></tr>\n                                    <tr mat-row *matRowDef=\"let row; columns: StaffColumns;\"></tr>\n                                </table>\n                                \n                            </div>\n                            </div><br/>\n                            <h3>Do you have an Agent, 3rd party or Contractor?</h3>\n                            <div class=\"radio-controls\">\n                                <mat-radio-group formControlName=\"haveThirdParty\">\n                                    <mat-radio-button value=\"yes\" [style.marginRight]=\"'12px'\">Yes</mat-radio-button>\n                                    <mat-radio-button value=\"no\">No</mat-radio-button>\n                                </mat-radio-group>\n                            </div>\n        \n                            <div\n                                *ngIf=\"trainingAndAwarenessGroup.get('haveThirdParty')?.value === 'yes'\"\n                                [style.paddingTop]=\"'20px'\" [style.paddingBottom]=\"'20px'\">\n                                \n                                <table mat-table [dataSource]=\"ThirdPartyDataSource\" matSort class=\"table\">\n                                <ng-container matColumnDef=\"example_of_agent\">\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Example of Agent, 3rdParty or Contractor </th>\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.example_of_agent}} </td>\n                                </ng-container>\n                                \n                                <ng-container matColumnDef=\"number_of_agents\">\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Total Number of Agents, 3rdParty or Contractors </th>\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.number_of_agents}} </td>\n                                </ng-container>\n                                \n                                <ng-container matColumnDef=\"NumberOfTrainedAgents\">\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Number of Agents, 3rdParties or Contractors Trained</th>\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.NumberOfTrainedAgents}} </td>\n                                </ng-container>\n                                \n                                <tr mat-header-row *matHeaderRowDef=\"ThirdPartyColumns\"></tr>\n                                <tr mat-row *matRowDef=\"let row; columns: ThirdPartyColumns;\"></tr>\n                                </table>\n                            </div>\n                            <br/>\n                            <br/>\n                            <div>\n                                <button mat-button matStepperPrevious>Back</button>\n                                <button mat-raised-button matStepperNext color=\"accent\">Next</button>\n                            </div>\n                        </div>\n        \n                    </form>\n                </mat-step>\n                <mat-step [stepControl]=\"complaintsGroup\" [editable]=\"isEditable\">\n                    <form [formGroup]=\"complaintsGroup\">\n                        <div class=\"base-section\">\n                            <div class=\"base-section\">\n                                <ng-template matStepLabel class=\"stepper-label\">COMPLAINTS RELATED TO DATA PROTECTION AND\n                                    PRIVACY (IF APPLICABLE)</ng-template>\n                                <h3>Did you receive any Complaints ?</h3>\n                                <div class=\"radio-controls\">\n                                    <mat-radio-group formControlName=\"haveComplaints\">\n                                        <mat-radio-button value=\"yes\" [style.marginRight]=\"'12px'\">Yes</mat-radio-button>\n                                        <mat-radio-button value=\"no\">No</mat-radio-button>\n                                    </mat-radio-group>\n                                </div>\n                                <div *ngIf=\"complaintsGroup.get('haveComplaints')?.value === 'yes'\"\n                                    [style.paddingTop]=\"'20px'\" [style.paddingBottom]=\"'20px'\">\n                                    \n                                    <table mat-table [dataSource]=\"ComplaintsDataSource\" matSort class=\"table\">\n                                    <ng-container matColumnDef=\"year_of_complaint\">\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Year Complaints were Received</th>\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.year_of_complaint}} </td>\n                                    </ng-container>\n                                    \n                                    <ng-container matColumnDef=\"status_of_complaint\">\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header>Status of Complaints </th>\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.status_of_complaint}} </td>\n                                    </ng-container>\n                                    \n                                    <ng-container matColumnDef=\"number_of_complaints_received\">\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Number of Complaints Received</th>\n                                        <td mat-cell *matCellDef=\"let row\"> {{row.number_of_complaints_received}} </td>\n                                    </ng-container>\n                                    \n                                    <tr mat-header-row *matHeaderRowDef=\"ComplaintsColumns\"></tr>\n                                    <tr mat-row *matRowDef=\"let row; columns: ComplaintsColumns;\"></tr>\n                                    </table>\n                                </div>\n                                <br>\n                                <div>\n                                    <button mat-button matStepperPrevious>Back</button>\n                                    <button mat-raised-button matStepperNext color=\"accent\">Next</button>\n                                </div>\n                            </div>\n        \n                        </div>\n                    </form>\n                </mat-step>\n                <mat-step [stepControl]=\"dataBreachesGroup\" [editable]=\"isEditable\">\n                    <form [formGroup]=\"dataBreachesGroup\">\n                        <div class=\"base-section\">\n                            <ng-template matStepLabel class=\"stepper-label\">DATA SECURITY BREACHES (IF APPLICABLE)</ng-template>\n                        <h3>Did you experience any Data Security Breaches?</h3>\n                        <div class=\"radio-controls\">\n                            <mat-radio-group formControlName=\"haveBreaches\">\n                                <mat-radio-button value=\"yes\" [style.marginRight]=\"'12px'\">Yes</mat-radio-button>\n                                <mat-radio-button value=\"no\">No</mat-radio-button>\n                            </mat-radio-group>\n                        </div>\n                        <div  *ngIf=\"dataBreachesGroup.get('haveBreaches')?.value === 'yes'\"\n                                [style.paddingTop]=\"'20px'\" [style.paddingBottom]=\"'20px'\">\n                            \n                            <table mat-table [dataSource]=\"BreachesDataSource\" matSort class=\"table\">\n                                <ng-container matColumnDef=\"year_of_breach\">\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Year Breach Occured</th>\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.year_of_breach}} </td>\n                                </ng-container>\n                                \n                                <ng-container matColumnDef=\"status_of_breach\">\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header>Status of Breach </th>\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.status_of_breach}} </td>\n                                </ng-container>\n                                \n                                <ng-container matColumnDef=\"number_of_breaches\">\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Number of Breaches </th>\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.number_of_breaches}} </td>\n                                </ng-container>\n    \n                                <ng-container matColumnDef=\"measures_taken_to_address_gaps\">\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Measures to address Gaps </th>\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.measures_taken_to_address_gaps}} </td>\n                                </ng-container>\n    \n                                <ng-container matColumnDef=\"number_of_records_lost\">\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> No. of Records Affected </th>\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.number_of_records_lost}} </td>\n                                </ng-container>\n                                \n                                <ng-container matColumnDef=\"frequent_cause_of_breach\">\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Frequent cause of Breach </th>\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.frequent_cause_of_breach}} </td>\n                                </ng-container>\n    \n                                <tr mat-header-row *matHeaderRowDef=\"BreachesColumns\"></tr>\n                                <tr mat-row *matRowDef=\"let row; columns: BreachesColumns;\"></tr>\n                            </table>\n                        </div>\n                        </div>\n                        <div>\n                            <button mat-button matStepperPrevious>Back</button>\n                            <button mat-raised-button matStepperNext color=\"accent\">Next</button>\n                        </div>\n                    </form>\n        \n                </mat-step>\n                <mat-step [stepControl]=\"impactGroup\" [editable]=\"isEditable\">\n                    <form [formGroup]=\"impactGroup\">\n                        <div class=\"base-section\">\n                            <ng-template matStepLabel class=\"stepper-label\">DATA PROTECTION IMPACT ASSESSMENT (IF\n                                APPLICABLE)</ng-template>\n                                <div class=\"radio-controls\">\n                                <mat-radio-group formControlName=\"haveImpact\">\n                                    <mat-radio-button value=\"yes\" [style.marginRight]=\"'12px'\">Yes</mat-radio-button>\n                                    <mat-radio-button value=\"no\">No</mat-radio-button>\n                                </mat-radio-group>\n                            </div>\n        \n                            <div\n                                *ngIf=\"impactGroup.get('haveImpact')?.value === 'yes'\"\n                                [style.paddingTop]=\"'20px'\" [style.paddingBottom]=\"'20px'\">\n                                \n                                <table mat-table [dataSource]=\"ImpactDataSource\" matSort class=\"table\">\n                                <ng-container matColumnDef=\"data_or_activity\">\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header>Data collection/processing activity </th>\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.data_or_activity}} </td>\n                                </ng-container>\n                                \n                                <ng-container matColumnDef=\"date_concluded\">\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header>Date Data Protection Impact assessment concluded</th>\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.date_concluded}} </td>\n                                </ng-container>\n                                \n                                <tr mat-header-row *matHeaderRowDef=\"ImpactColumns\"></tr>\n                                <tr mat-row *matRowDef=\"let row; columns: ImpactColumns;\"></tr>\n                                </table>\n                            </div>  \n                        </div>\n                        <div>\n                            <button mat-button matStepperPrevious>Back</button>\n                            <button mat-raised-button matStepperNext color=\"accent\">Next</button>\n                        </div>\n                    </form>\n                </mat-step>\n                <mat-step [stepControl]=\"auditGroup\" [editable]=\"isEditable\">\n                    <form [formGroup]=\"auditGroup\">\n                        <div class=\"base-section\">\n                            <ng-template matStepLabel class=\"stepper-label\">DATA PROTECTION AND PRIVACY AUDITS (IF APPLICABLE)</ng-template>\n                            <h3>Did you have any audits carried out?</h3>\n                            <div class=\"radio-controls\">\n                            <mat-radio-group formControlName=\"haveAudits\">\n                                <mat-radio-button value=\"yes\" [style.marginRight]=\"'12px'\">Yes</mat-radio-button>\n                                <mat-radio-button value=\"no\">No</mat-radio-button>\n                            </mat-radio-group>\n                        </div>\n                        <div  *ngIf=\"auditGroup.get('haveAudits')?.value === 'yes'\"\n                                [style.paddingTop]=\"'20px'\" [style.paddingBottom]=\"'20px'\">\n                                \n                            <table mat-table [dataSource]=\"AuditDataSource\" matSort class=\"table\">\n                                <ng-container matColumnDef=\"year_of_audit\">\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Year Of Audit</th>\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.year_of_audit}} </td>\n                                </ng-container>\n                                \n                                <ng-container matColumnDef=\"category_of_audit\">\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header>Category of Audit </th>\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.category_of_audit}} </td>\n                                </ng-container>\n                                \n                                <ng-container matColumnDef=\"number_of_audits\">\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Number of Audits </th>\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.number_of_audits}} </td>\n                                </ng-container>\n    \n                                <ng-container matColumnDef=\"Resolutionstatus\">\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header>Resolution Status</th>\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.Resolutionstatus}} </td>\n                                </ng-container>\n    \n                                <ng-container matColumnDef=\"Resolutiondetails\">\n                                    <th mat-header-cell *matHeaderCellDef mat-sort-header>Resolution Details</th>\n                                    <td mat-cell *matCellDef=\"let row\"> {{row.Resolutiondetails}} </td>\n                                </ng-container>\n                                \n                                <tr mat-header-row *matHeaderRowDef=\"AuditColumns\"></tr>\n                                <tr mat-row *matRowDef=\"let row; columns: AuditColumns;\"></tr>\n                            </table>\n                        </div>\n                        </div>\n                        <div>\n                        <button mat-button matStepperPrevious>Back</button>\n                        <button mat-raised-button matStepperNext color=\"accent\">Next</button>\n                        </div>\n                    </form>\n                </mat-step>\n    \n                <mat-step [stepControl]=\"conclusionGroup\" [editable]=\"isEditable\">\n                <form [formGroup]=\"conclusionGroup\" class=\"form-group-row\">\n                    <div class=\"base-section\">\n                        <ng-template matStepLabel class=\"stepper-label\">CONCLUSION</ng-template>\n                        <small>List here major take-ways, general observations and challenges in relation to ensuring compliance with the Data Protection and Privacy Act in your organisation</small>\n                        \n                            <mat-form-field class=\"w-100\">\n                                <mat-label>Feedback on Compliance</mat-label>\n                                <textarea matInput [value]=\"feedback\" [disabled]=\"true\"></textarea>\n                            </mat-form-field>\n                            <div class=\"form-group-row\">\n                                <mat-form-field class=\"row-33\">\n                                    <mat-label>Name of Person Submitting Compliance Report</mat-label>\n                                    <input matInput [value]=\"nameOfPerson\" [disabled]=\"true\">\n                                </mat-form-field>\n                                <mat-form-field class=\"row-33\">\n                                    <mat-label>Title of Person Submitting Compliance Report</mat-label>\n                                    <input matInput [value]=\"titleOfPerson\" [disabled]=\"true\">\n                                </mat-form-field>\n                            </div>\n                            \n                            <strong>COMMENTS FROM THE PERSONAL DATA PROTECTION OFFICE</strong>\n                            <br>\n                            <mat-form-field class=\"w-100\">\n                                    <mat-label>Comments from the Personal Data Protection Office</mat-label>\n                                    <textarea matInput [value]=\"PDPOcomment\" [disabled]=\"true\" style=\"height: 150px;\"></textarea>\n                                </mat-form-field>\n                            <div *ngIf=\"isLegalRole\">                                \n                                <button mat-raised-button\n                                    [color]=\"commented_by === 'PDPO-EDIT' ? 'warn' : 'primary'\"\n                                    (click)=\"toggleUserSubmissionStatus()\">\n                                    {{ commented_by === 'PDPO-EDIT' ? 'Disable User Edit' : 'Enable User Edit' }}\n                                </button>\n                                <br><br>\n                            \n                                <mat-form-field class=\"w-100\" [formGroup]=\"commentGroup\">\n                                    <mat-label>Comments from the Personal Data Protection Office</mat-label>\n                                    <textarea matInput formControlName=\"PDPOcomment\" required style=\"height: 150px;\"></textarea>\n                                \n                                </mat-form-field>\n                                    <button mat-raised-button color=\"accent\" (click)=\"onAddComment()\">Add Comment</button>\n                            </div>\n                            \n                                            \n                    </div>\n                </form>\n            </mat-step>\n            </mat-vertical-stepper>\n        </main>\n      </fury-card>\n     \n    </fury-page-layout-content>\n  </fury-page-layout>","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'fury-breaches-dialog',\n  templateUrl: './breaches-dialog.component.html',\n  styleUrls: ['./breaches-dialog.component.scss']\n})\nexport class BreachesDialogComponent implements OnInit {\n\n  BreachesForm: FormGroup;\n  constructor(\n    public dialogRef: MatDialogRef<BreachesDialogComponent>,\n    private _formBuilder: FormBuilder\n  ) { }\n\n  ngOnInit(): void {\n\n    this.BreachesForm = this._formBuilder.group({\n      year_of_breach: [0, Validators.required],\n      status_of_breach: ['', Validators.required],\n      number_of_breaches: [0, Validators.required],\n      measures_taken_to_address_gaps: ['', Validators.required],\n      number_of_records_lost: [0],\n      frequent_cause_of_breach: ['', Validators.required]\n    });\n  }\n\n  onSubmit() {\n    if (this.BreachesForm.valid) {\n      this.dialogRef.close(this.BreachesForm.value);\n    }\n  }\n\n  onCancel() {\n      this.dialogRef.close();\n  }\n\n}","<h2 mat-dialog-title>Add New Breach Record</h2>\n<div class=\"dialog-container\">\n  <form [formGroup]=\"BreachesForm\" (ngSubmit)=\"onSubmit()\">\n    \n    <mat-form-field>\n      <mat-label>Year Breach Occured*</mat-label>\n      <input matInput  type=\"number\" placeholder=\"Enter Year Breaches Occured\" formControlName=\"year_of_breach\">\n    </mat-form-field>\n    <mat-form-field>\n      <mat-label>Select Status of Breach</mat-label>\n      <mat-select placeholder=\"Select Breach status\" formControlName=\"status_of_breach\">\n        <mat-option value=\"Resolved\">Resolved</mat-option>\n        <mat-option value=\"Pending Resolution\">Pending Resolution</mat-option>\n      </mat-select>\n    </mat-form-field>\n    <mat-form-field>\n      <mat-label>Number of Breaches </mat-label>\n      <input matInput type=\"number\" placeholder=\"Number of Breaches\" formControlName=\"number_of_breaches\">\n    </mat-form-field>\n    <mat-form-field>\n        <mat-label>Measures Taken to Address Breach Gaps</mat-label>\n        <textarea matInput placeholder=\"Measures Taken to address Gaps\" formControlName=\"measures_taken_to_address_gaps\" rows=\"5\"></textarea>\n    </mat-form-field>\n    <mat-form-field>\n        <mat-label>Number of Records Affected </mat-label>\n        <input matInput type=\"number\" placeholder=\"Number of Records Affected\" formControlName=\"number_of_records_lost\">\n    </mat-form-field>\n    <mat-form-field>\n        <mat-label>Frequent Cause of Breaches</mat-label>\n        <textarea matInput placeholder=\"Frequent Cause of Breach\" formControlName=\"frequent_cause_of_breach\" rows=\"3\"></textarea>\n    </mat-form-field>\n    <div class=\"button-container\">\n      <button mat-button type=\"button\" (click)=\"onCancel()\">Cancel</button>\n      <button mat-raised-button color=\"primary\" type=\"submit\">Add Breach Record</button>\n    </div>\n  </form>\n</div>","import { AfterViewInit, Component, OnInit, Output,EventEmitter } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'fury-dpo-dialog',\n  templateUrl: './dpo-dialog.component.html',\n  styleUrls: ['./dpo-dialog.component.scss']\n})\nexport class DpoDialogComponent implements OnInit{\n\n  DPOForm: FormGroup;\n  maxDate: string;\n  \n  constructor(\n    public dialogRef: MatDialogRef<DpoDialogComponent>,\n    private _formBuilder: FormBuilder\n  ) { }\n\n  ngOnInit(): void {\n    const today = new Date();\n    this.maxDate = today.toISOString().split('T')[0];\n    \n    this.DPOForm = this._formBuilder.group({\n      name_of_training: ['', Validators.required],\n      who_conducted_training: ['', Validators.required],\n      date_of_training: ['', Validators.required]\n    });\n    \n  }\n\n\n  onSubmit() {\n    if (this.DPOForm.valid) {\n      this.dialogRef.close(this.DPOForm.value);\n    }\n  }\n\n  onCancel() {\n      this.dialogRef.close();\n  }\n\n}\n","<h2 mat-dialog-title>Add New DPO Training</h2>\n<div class=\"dialog-container\">\n  <form [formGroup]=\"DPOForm\" (ngSubmit)=\"onSubmit()\">\n    <mat-form-field>\n      <mat-label>Name of Training*</mat-label>\n      <input matInput placeholder=\"Name of Training*\" formControlName=\"name_of_training\">\n    </mat-form-field>\n    <mat-form-field>\n      <mat-label>Who conducted the Training*</mat-label>\n      <input matInput placeholder=\"Who conducted the Training*\" formControlName=\"who_conducted_training\">\n    </mat-form-field>\n\n    \n    <mat-form-field>\n      <mat-label>Date of the Training*</mat-label>\n      <input matInput type=\"date\" placeholder=\"Date of the Training*\" formControlName=\"date_of_training\" [max]=\"maxDate\">\n    </mat-form-field>\n    \n    <div class=\"button-container\">\n      <button mat-button type=\"button\" (click)=\"onCancel()\">Cancel</button>\n      <button mat-raised-button color=\"primary\" type=\"submit\">Add DPO Training</button>\n    </div>\n  </form>\n</div>","import { NgModule } from '@angular/core';\nimport { HighlightDirective } from './highlight.directive';\n\n@NgModule({\n  imports: [],\n  declarations: [HighlightDirective],\n  exports: [HighlightDirective]\n})\nexport class HighlightModule {\n}\n","import { Component, OnInit, Input, ViewChild } from '@angular/core';\nimport { FormBuilder, FormControl, Validators} from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\n\n@Component({\n  selector: 'fury-display-table',\n  templateUrl: './display-table.component.html',\n  styleUrls: ['./display-table.component.scss']\n})\nexport class DisplayTableComponent implements OnInit {\n\n  @Input() dataSource: MatTableDataSource<any>;\n  @Input() displayedColumns: string[];\n    // Add ViewChild references\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  constructor() { }\n\n  ngOnInit(): void {\n        // Configure pagination and sorting\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n  }\n\n}\n","<table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n    <ng-container *ngFor=\"let column of displayedColumns\" [matColumnDef]=\"column\">\n        <th mat-header-cell *matHeaderCellDef>{{ column }}</th>\n        <td mat-cell *matCellDef=\"let element\">{{ element[column] }}</td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>\n\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'fury-audits-dialog',\n  templateUrl: './audits-dialog.component.html',\n  styleUrls: ['./audits-dialog.component.scss']\n})\nexport class AuditsDialogComponent implements OnInit {\n\n  AuditsForm: FormGroup;\n  constructor(\n    public dialogRef: MatDialogRef<AuditsDialogComponent>,\n    private _formBuilder: FormBuilder\n  ) { }\n\n  ngOnInit(): void {\n\n    this.AuditsForm = this._formBuilder.group({\n      year_of_audit: [0, Validators.required],\n      category_of_audit: ['', Validators.required],\n      number_of_audits: [0, Validators.required],\n      Resolutionstatus: ['', Validators.required],\n      Resolutiondetails: ['', Validators.required]\n    });\n  }\n\n  onSubmit() {\n    if (this.AuditsForm.valid) {\n      this.dialogRef.close(this.AuditsForm.value);\n    }\n  }\n\n  onCancel() {\n      this.dialogRef.close();\n  }\n\n}","<h2 mat-dialog-title>Add New Audit Record</h2>\n<div class=\"dialog-container\">\n  <form [formGroup]=\"AuditsForm\" (ngSubmit)=\"onSubmit()\">\n    \n    <mat-form-field>\n      <mat-label>Year Of Audit</mat-label>\n        <input matInput type=\"number\" placeholder=\"Enter Year of Audit\" formControlName=\"year_of_audit\">\n      </mat-form-field>\n    <mat-form-field>\n        <mat-label>Category of Audit (Internal / External)</mat-label>\n        <input matInput placeholder=\"Enter Category of Audit (Internal/External)\" formControlName=\"category_of_audit\">\n    </mat-form-field>\n        <mat-form-field>\n        <mat-label>Number of Audits</mat-label>\n        <input matInput type=\"number\" placeholder=\"Number of Audits\" formControlName=\"number_of_audits\">\n    </mat-form-field>\n    <mat-form-field>\n      <mat-label>Select Status of Audit</mat-label>\n      <mat-select placeholder=\"Select Audit status\" formControlName=\"Resolutionstatus\">\n        <mat-option value=\"Resolved\">Resolved</mat-option>\n        <mat-option value=\"Pending Resolution\">Pending Resolution</mat-option>\n      </mat-select>\n    </mat-form-field>\n    \n    <mat-form-field>\n        <mat-label>Resolution Details</mat-label>\n        <textarea matInput placeholder=\"Resolution Details\" formControlName=\"Resolutiondetails\" rows=\"5\"></textarea>\n    </mat-form-field>\n    \n    <div class=\"button-container\">\n      <button mat-button type=\"button\" (click)=\"onCancel()\">Cancel</button>\n      <button mat-raised-button color=\"primary\" type=\"submit\">Add Audit Record</button>\n    </div>\n  </form>\n</div>","import { Component, EventEmitter } from '@angular/core';\nimport { AbstractControl, FormArray, FormBuilder, Validators} from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { ChangeDetectorRef, OnInit, Input,ViewChild } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport escape from 'lodash-es/escape';\nimport { PolicyDialogComponent } from '../policy-dialog/policy-dialog.component';\nimport { DpoDialogComponent } from '../dpo-dialog/dpo-dialog.component';\nimport { StaffDialogComponent } from '../staff-dialog/staff-dialog.component';\nimport { ThirdpartyDialogComponent } from '../thirdparty-dialog/thirdparty-dialog.component';\nimport { ComplaintsDialogComponent } from '../complaints-dialog/complaints-dialog.component';\nimport { BreachesDialogComponent } from '../breaches-dialog/breaches-dialog.component';\nimport { ImpactDialogComponent } from '../impact-dialog/impact-dialog.component';\nimport { AuditsDialogComponent } from '../audits-dialog/audits-dialog.component';\nimport { CompanyRegistrationService } from '../../company-registration/company-registration.service';\nimport { CompanyRegistrationModel, ComponyRegistrationObject } from '../../company-registration/components/company-registration.model'; // Assuming this is the correct path\nimport {DataServiceError} from '../../../../@fury/shared/HttpModel';\nimport {Observable, of, ReplaySubject, Subscription, throwError} from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { DatePipe } from '@angular/common';\nimport { ComplianceReportService } from '../compliance-report.service';\nimport { environment } from '../../../../environments/environment';\nimport { AuthenticationService } from '../../../authentication/authentication.service';\nimport {fadeInRightAnimation} from '../../../../@fury/animations/fade-in-right.animation';\nimport {fadeInUpAnimation} from '../../../../@fury/animations/fade-in-up.animation';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { catchError, map, switchMap } from 'rxjs/operators';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport { STEPPER_GLOBAL_OPTIONS } from '@angular/cdk/stepper';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { SuccessfulMessageDialogComponent } from '../../../layout/dialogs/successful-message-dialog/successful-message-dialog.component';\nimport { DialogFormInputComponent } from '../dialog-form-input/dialog-form-input.component';\n\ninterface SupportDPO {\n  PolicyandProcedure: string;\n  ApprovalDate: string;\n  ReviewDate: string;\n  NumberOfTrainings: number;\n}\ninterface DPOTraining {\n  name_of_training: string;\n  who_conducted_training: string;\n  date_of_training:string;\n}\ninterface StaffTraining {\n  department: string;\n  total_staff_to_be_trained: number;\n  number_completed_training: number;\n}\ninterface ThirdPartyTraining {\n  example_of_agent: string;\n  number_of_agents: number;\n  NumberOfTrainedAgents: number;\n}\ninterface Complaints {\n  year_of_complaint: string;\n  status_of_complaint: string;\n  number_of_complaints_received: number;\n}\ninterface Breaches {\n  year_of_breach: string;\n  status_of_breach: string;\n  number_of_breaches: number;\n  measures_taken_to_address_gaps: string;\n  number_of_records_lost: number;\n  frequent_cause_of_breach: string;\n}\ninterface Impact {\n  data_or_activity: string;\n  date_concluded: string;\n}\ninterface Audit {\n  year_of_audit:string;\n  category_of_audit: string;\n  number_of_audits: number;\n  Resolutionstatus:string;\n  Resolutiondetails: string;\n}\n\n@Component({\n  selector: 'app-formapp',\n  templateUrl: './compliance-reports-component.component.html',\n  styleUrls: ['./compliance-reports-component.component.scss'],\n  animations: [fadeInRightAnimation, fadeInUpAnimation],\n  providers: [{\n    provide: STEPPER_GLOBAL_OPTIONS,\n    useValue:{\n      showError: true\n    }\n  }]\n})\nexport class ComplianceReportsComponent {\n  \n    @Input()\n    //things for Renewal check\n    isRenewalConditionMet: boolean = false;\n    dialogRef;\n    //end Renewal check\n    completed=false;\n    pageSize = 5;\n  \n    @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n    @ViewChild(MatSort, {static: true}) sort: MatSort;\n\n\n  private _gap = 16;\n  gap = `${this._gap}px`;\n  orgName: string[] = [];\n  orgCategory: string = '';\n  orgRegDate: string[] = [];\n  orgRegNo: string[] = [];\n  orgRenewal: string[] = [];\n  orgMyID: any[];\n  orgEmail: string[] = [];\n  issueDate: string= '';\n  expiryDate: string= '';\n// for my reports\n\n\n\n\n  supportTeamDPO: SupportDPO[] = [];\n  displayedColumns: string[] = ['PolicyandProcedure', 'ApprovalDate', 'ReviewDate', 'NumberOfTrainings'];\n  dataSource!: MatTableDataSource<SupportDPO>;\n  //DPO Training \n  DPOTrainingArray: DPOTraining[] = [];\n  DPOColumns: string[] = ['name_of_training', 'who_conducted_training', 'date_of_training'];\n  DPODataSource!: MatTableDataSource<DPOTraining>;\n  //End of DPO Training \n  \n  //Staff Training \n  StaffTrainingArray: StaffTraining[] = [];\n  StaffColumns: string[] = ['department', 'total_staff_to_be_trained', 'number_completed_training'];\n  StaffDataSource!: MatTableDataSource<StaffTraining>;\n  //End of Staff Training \n \n  //ThirdParty Training \n  ThirdPartyTrainingArray: ThirdPartyTraining[] = [];\n  ThirdPartyColumns: string[] = ['example_of_agent', 'number_of_agents', 'NumberOfTrainedAgents'];\n  ThirdPartyDataSource!: MatTableDataSource<ThirdPartyTraining>;\n  //End of ThirdParty Training\n  \n  //complaints  \n  ComplaintsArray: Complaints[] = [];\n  ComplaintsColumns: string[] = ['year_of_complaint', 'status_of_complaint', 'number_of_complaints_received'];\n  ComplaintsDataSource!: MatTableDataSource<Complaints>;\n  //End of complaints \n\n  //Breaches  \n  BreachesArray: Breaches[] = [];\n  BreachesColumns: string[] = ['year_of_breach', 'status_of_breach', 'number_of_breaches','measures_taken_to_address_gaps','number_of_records_lost','frequent_cause_of_breach'];\n  BreachesDataSource!: MatTableDataSource<Breaches>;\n  //End of Breaches\n\n  //Impact  \n  ImpactArray: Impact[] = [];\n  ImpactColumns: string[] = ['data_or_activity', 'date_concluded'];\n  ImpactDataSource!: MatTableDataSource<Impact>;\n  //End of Impact\n\n  //Audits  \n  AuditArray: Audit[] = [];\n  AuditColumns: string[] = ['year_of_audit', 'category_of_audit','number_of_audits','Resolutionstatus','Resolutiondetails'];\n  AuditDataSource!: MatTableDataSource<Audit>;\n  //End of Audits\n\n  backgroundGroup = this._formBuilder.group({\n    reportingPeriodCrtl: ['']\n  });\n\n  registrationPdpOfficeGroup = this._formBuilder.group({\n    changeParticularsCtrl: ['',Validators.required],\n    selectedOption: ['yes']\n  });\n\n  leadershipOversightGroup = this._formBuilder.group({\n    dpOReportingLineCtrl: ['', Validators.required],\n    hasJobDescription: ['no'],\n    hasPerfApraisal: ['no'],\n    DPOJobDescriptionCtrl: [''],\n    ReasonCtrl:['']\n  });\n\n  policiesAndProcedureGroup = this._formBuilder.group({\n    PolicyandProcedure2: ['',Validators.required],\n    ApprovalDate: [''],\n    ReviewDate: [''],\n    NumberOfTrainings: [''],\n  });\n\n  trainingAndAwarenessGroup = this._formBuilder.group({\n    name_of_training2: [''],\n    has_value:['',Validators.required],\n    totalStaffTraineeCtrl: ['',Validators.required],    \n    haveThirdParty: ['no']\n  });\n\n  complaintsGroup = this._formBuilder.group({\n    yearOfCompliment: [''],\n    statusOfCompliment: [''],\n    numberOfCompliments: [''],\n    haveComplaints: ['no']\n  });\n\n  dataBreachesGroup = this._formBuilder.group({\n    haveBreaches: ['no']\n  });\n  impactGroup = this._formBuilder.group({\n    haveImpact: ['no']\n  });\n\n  auditGroup = this._formBuilder.group({\n    haveAudits: ['no']\n  });\n\n  conclusionGroup = this._formBuilder.group({\n    text: ['', Validators.required],\n    NameOfPersonSubmitting: ['', Validators.required],\n    TitleOfPersonSubmitting: ['', Validators.required],\n    Checkbox: ['', Validators.requiredTrue]\n  });\n  \n  isSubmitButtonDisabled: boolean;\n  CommentByUpdateStatus: any;\n  myexpirywarningDate: any;\n \n\n  openAuditsDialog(): void {\n    const dialogRef = this.dialog.open(AuditsDialogComponent, {\n      height: 'auto',\n      width: 'auto'\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.AuditArray.push(result);\n        this.AuditDataSource.data = this.AuditArray;\n      }\n    });\n  }\n  openImpactDialog(): void {\n    const dialogRef = this.dialog.open(ImpactDialogComponent, {\n      height: 'auto',\n      width: 'auto'\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.ImpactArray.push(result);\n        this.ImpactDataSource.data = this.ImpactArray;\n      }\n    });\n  }\n  openBreachesDialog(): void {\n    const dialogRef = this.dialog.open(BreachesDialogComponent, {\n      height: 'auto',\n      width: 'auto'\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.BreachesArray.push(result);\n        this.BreachesDataSource.data = this.BreachesArray;\n      }\n    });\n  }\n  openComplaintsDialog(): void {\n    const dialogRef = this.dialog.open(ComplaintsDialogComponent, {\n      height: 'auto',\n      width: 'auto'\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.ComplaintsArray.push(result);\n        this.ComplaintsDataSource.data = this.ComplaintsArray;\n      }\n    });\n  }\n  openThirdPartyDialog(): void {\n    const dialogRef = this.dialog.open(ThirdpartyDialogComponent, {\n      height: 'auto',\n      width: 'auto'\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.ThirdPartyTrainingArray.push(result);\n        this.ThirdPartyDataSource.data = this.ThirdPartyTrainingArray;\n      }\n    });\n  }\n  openStaffDialog(): void {\n    const dialogRef = this.dialog.open(StaffDialogComponent, {\n      height: 'auto',\n      width: 'auto'\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.StaffTrainingArray.push(result);\n        this.StaffDataSource.data = this.StaffTrainingArray;\n        if(this.StaffDataSource.data.length>0){\n          this.trainingAndAwarenessGroup.get('totalStaffTraineeCtrl').setValue('yes');\n        }\n        else{\n          this.trainingAndAwarenessGroup.get('totalStaffTraineeCtrl').setValue('');\n        }\n      }\n    });\n  }\n\n  openDPODialog(): void {\n    const dialogRef = this.dialog.open(DpoDialogComponent, {\n      height: 'auto',\n      width: 'auto'\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.DPOTrainingArray.push(result);\n        this.DPODataSource.data = this.DPOTrainingArray;\n\n        if(this.DPODataSource.data.length>0){\n          this.trainingAndAwarenessGroup.get('has_value').setValue('yes');\n        }\n        else{\n          this.trainingAndAwarenessGroup.get('has_value').setValue('');\n        }\n      }\n    });\n  }\n  openDialog(){\n    const dialogRef = this.dialog.open(PolicyDialogComponent, {\n      height: 'auto',\n      width: 'auto'\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.supportTeamDPO.push(result);\n        this.dataSource.data = this.supportTeamDPO;\n\n        if(this.dataSource.data.length>0){\n          this.policiesAndProcedureGroup.get('PolicyandProcedure2').setValue('yes');\n        }\n        else{\n          this.policiesAndProcedureGroup.get('PolicyandProcedure2').setValue('');\n        }\n      }\n    });\n  };\n  \n  isEditable = true;\n  \n\n  constructor(private http: HttpClient,\n    private cdref: ChangeDetectorRef,\n    private _formBuilder: FormBuilder,\n    public dialog: MatDialog,\n    public registrationService: CompanyRegistrationService,\n    private authenticationService: AuthenticationService,\n    private route: ActivatedRoute,\n    private snackBar: MatSnackBar,\n    private datePipe: DatePipe,\n    private route2: Router,\n    private complianceReportService: ComplianceReportService)\n    {\n    \n    //  = this.datePipe.transform(new Date(), 'yyyy-MM-dd');\n    this.isSubmitButtonDisabled = true; // Initialize the button as disabled\n    //Call fetchMinimalData and use its subscription\n    //First Important method to run to check Renewal status\n    this.fetchMinimalData().subscribe(() => {\n      if (!this.orgRenewal.includes('Certificate Issued')) {\n        this.dialogRef = this.dialog.open(SuccessfulMessageDialogComponent, {\n          panelClass: ['successful-message-dialog', 'dialogs'],\n          disableClose: true,\n          data: {\n            title: 'No Current Certificate Issued.',\n            message: 'Please complete your Renewal/Application Process and try again.',\n            status: false,\n          }\n        });\n\n        this.dialogRef.afterClosed().subscribe(() => {\n          this.route2.navigate(\n            ['/company-registration/view'],\n            { state: { regTrackingNo: this.orgRegNo[0] }}\n          ).then();\n        });\n      } \n      else {\n        \n      // begin status check\n      //Allow users to submit report once otherwise lock them out\n      this.http.get<any>(`${this.baseAPIUri}v1.0/compliance-report/compliance-report/single?OrganizationID=${this.orgMyID}`).subscribe(\n        (response) => {\n          if (response && response.compliance_reports && response.compliance_reports.length > 0) {\n            this.CommentByUpdateStatus = response.compliance_reports[0].CommentedBy;\n\n            if (this.CommentByUpdateStatus === 'PDPO-EDIT') {\n              //Allow the user to proceed to submit another report;\n      \n            } else {\n              // Show a message to the user that they've already submitted the report\n              this.dialogRef = this.dialog.open(SuccessfulMessageDialogComponent, {\n                panelClass: ['successful-message-dialog', 'dialogs'],\n                disableClose: true,\n                data: {\n                  title: 'Annual Compliance Report Already Submitted.',\n                  message: 'Your Annual Compliance Report has already been submitted. Please wait for review from the Personal Data Protection Office.',\n                  status: false,\n                }\n              });\n      \n              this.dialogRef.afterClosed().subscribe(() => {\n                this.route2.navigate(\n                  ['/company-registration/view'],\n                  { state: { regTrackingNo: this.orgRegNo[0] }}\n                ).then();\n              });\n            }\n          }\n        },\n        (error) => {\n          console.error('Error fetching checking comment on report data:', error);\n        }\n      );\n      // end status check\n\n        this.orgRenewalData();\n        this.dataSource = new MatTableDataSource([]);\n        this.DPODataSource = new MatTableDataSource([]);\n        this.StaffDataSource = new MatTableDataSource([]);\n        this.ThirdPartyDataSource = new MatTableDataSource([]);\n        this.ComplaintsDataSource = new MatTableDataSource([]);\n        this.BreachesDataSource = new MatTableDataSource([]);\n        this.ImpactDataSource = new MatTableDataSource([]);\n        this.AuditDataSource = new MatTableDataSource([]);\n      }\n\n      \n      \n    });\n    \n    // this.conclusionGroup.get('Checkbox').valueChanges.subscribe((value) => {\n    //   console.log(':');\n    // });\n  }\n   \n  checkFormValidity(): void {\n    if (this.trainingAndAwarenessGroup.valid && this.policiesAndProcedureGroup.valid && this.conclusionGroup.valid && this.registrationPdpOfficeGroup.valid && this.leadershipOversightGroup.valid) {\n      this.isSubmitButtonDisabled = false; // Enable the button if the form is valid\n    } else {\n      this.isSubmitButtonDisabled = true; // Disable the button if the form is invalid\n    }\n  }\n  collectTableData(): SupportDPO[] {\n    \n    return this.supportTeamDPO.map(policy => {\n      return {\n        PolicyandProcedure: policy.PolicyandProcedure,\n        ApprovalDate: policy.ApprovalDate,\n        ReviewDate: policy.ReviewDate,\n        NumberOfTrainings: policy.NumberOfTrainings // Convert string to number\n      };\n    });\n  }\n  collectDPOData(): DPOTraining[] {\n    return this.DPOTrainingArray.map(dpo => {\n      return {\n        name_of_training: dpo.name_of_training,\n        who_conducted_training: dpo.who_conducted_training,\n        date_of_training: dpo.date_of_training\n      };\n    });\n  }\n  collectStaffData(): StaffTraining[] {\n    return this.StaffTrainingArray.map(dpo => {\n      return {\n        department: dpo.department,\n        total_staff_to_be_trained: dpo.total_staff_to_be_trained,\n        number_completed_training: dpo.number_completed_training\n      };\n    });\n  }\n  collectThirdData(): ThirdPartyTraining[] {\n    return this.ThirdPartyTrainingArray.map(x => {\n      return {\n        example_of_agent: x.example_of_agent,\n        number_of_agents: x.number_of_agents,\n        NumberOfTrainedAgents: x.NumberOfTrainedAgents\n      };\n    });\n  }\n  collectComplaintsData(): Complaints[] {\n    return this.ComplaintsArray.map(x => {\n      return {\n        year_of_complaint: x.year_of_complaint,\n        status_of_complaint: x.status_of_complaint,\n        number_of_complaints_received: x.number_of_complaints_received\n      };\n    });\n  }\n  collectBreachesData(): Breaches[] {\n    return this.BreachesArray.map(x => {\n      return {\n        year_of_breach: x.year_of_breach,\n        status_of_breach: x.status_of_breach,\n        number_of_breaches: x.number_of_breaches,\n        measures_taken_to_address_gaps: x.measures_taken_to_address_gaps,\n        number_of_records_lost: x.number_of_records_lost,\n        frequent_cause_of_breach: x.frequent_cause_of_breach\n      };\n    });\n  }\n  collectImpactData(): Impact[] {\n    return this.ImpactArray.map(x => {\n      return {\n        data_or_activity: x.data_or_activity,\n        date_concluded: x.date_concluded\n      };\n    });\n  }\n  collectAuditsData(): Audit[] {\n    return this.AuditArray.map(x => {\n      return {\n        year_of_audit: x.year_of_audit,\n        category_of_audit: x.category_of_audit,\n        number_of_audits: x.number_of_audits,\n        Resolutionstatus: x.Resolutionstatus,\n        Resolutiondetails: x.Resolutiondetails\n      };\n    });\n  }\n  ngAfterContentChecked() {\n    this.cdref.detectChanges();\n  }\n\n  orgRenewalData(): void{\n    const renewalapi = this.baseAPIUri + 'v1.0' + '/certificate/details?OrganizationID=' + this.orgMyID;\n    this.http.get(renewalapi).subscribe(\n      (response: any) => {\n        \n        if(response.IssueDate){\n          this.issueDate = this.datePipe.transform(response.IssueDate, 'yyyy-MMMM-dd');\n          this.expiryDate = this.datePipe.transform(response.ExpiryDate, 'yyyy-MMMM-dd');\n          this.myexpirywarningDate = response.ExpiryDate;\n        }\n        else{\n          this.issueDate = 'Loading...please wait';\n          this.expiryDate = 'Loading...please wait';\n        }\n        if(new Date(this.myexpirywarningDate) < new Date()){\n          this.dialogRef = this.dialog.open(SuccessfulMessageDialogComponent, {\n            panelClass: ['successful-message-dialog', 'dialogs'],\n            disableClose: true,\n            data: {\n              title: 'Reminder to Renew Your Certificate.',\n              message: 'Your registration with the Personal Data Protection Office (PDPO) is due for renewal. Failure to renew your registration by the expiry date may result in penalties and the loss of your active status with PDPO.',\n              status: false\n            }\n          });\n        }\n      },\n      (error) => {\n        console.error('Error Fetching Renewal Data:', error);\n      }\n    );\n  }\n\n  fetchMinimalData(): Observable<any>{\n    const api2 = this.baseAPIUri + 'v1.0' + '/org-registration/byorgid/single?OrganizationID=' + this.authenticationService.getOrganisationID();\n    return this.http.get<any[]>(api2).pipe(\n      map((response) => {\n        this.orgName = response.map(item => item.OrganisationName);\n        this.orgEmail = response.map(item => item.EmailAddress);\n             \n        // Extract OrganisationCategoryNames and join them with commas\n        const orgCategoryNames: string[] = response.map((item) =>\n          item.OrganisationCategory.map((category) => category.OrganisationCategoryName)\n        );\n        this.orgCategory = orgCategoryNames.join(', ');\n        this.orgRegNo = response.map(item => item.RegTrackingNo);\n        this.orgRegDate = response.map(item => item.EnteredOn);\n        this.orgMyID = response.map(item => item.OrganisationID);\n        this.orgRenewal = response.map(item => item.CurrentStepName);\n      }),\n      catchError((error) => {\n        console.error('Error fetching data:', error);\n        return throwError(error);\n      })\n    );\n  }\n\n  //Submission Logic\n  private baseAPIUri = environment.backend;\n  handleSubmit(): void{\n\n    const changeParticulars = this.registrationPdpOfficeGroup.get('changeParticularsCtrl')?.value;\n    const changeParticularsPayload = {\n      Detail: changeParticulars\n    };\n    const dpOReportingLine = this.leadershipOversightGroup.get('dpOReportingLineCtrl')?.value;\n    const DPOJobDescription = this.leadershipOversightGroup.get('DPOJobDescriptionCtrl')?.value;\n    const Reason = this.leadershipOversightGroup.get('ReasonCtrl')?.value;\n    const changeLeadershipPayload = {\n      Detail: dpOReportingLine,\n      DPOJobDescription: DPOJobDescription,\n      DPOResponsibility: Reason\n    };\n    const conclusions = this.conclusionGroup.get('text')?.value;\n    const nameofperson = this.conclusionGroup.get('NameOfPersonSubmitting')?.value;\n    const titleofperson = this.conclusionGroup.get('TitleOfPersonSubmitting')?.value;\n    const changeConclusionPayload = {\n      text: conclusions,\n      NameOfPersonSubmitting: nameofperson,\n      TitleOfPersonSubmitting: titleofperson\n    };\n    \n    const tableData = this.collectTableData();\n    const DPOData = this.collectDPOData();\n    const StaffData = this.collectStaffData();\n    const thirdData = this.collectThirdData();\n    const ComplaintsData = this.collectComplaintsData();\n    const breachesData=this.collectBreachesData();\n    const ImpactData = this.collectImpactData();\n    const auditData =  this.collectAuditsData();    \n    \n    const payload = {\n      organizationID: parseInt(this.orgMyID.toString(),10),\n      registration_changes: [changeParticularsPayload],\n      leadership_and_oversight: [changeLeadershipPayload],\n      notice_policy_procedure: tableData,\n      dpo_training: DPOData,\n      staff_training: StaffData,\n      third_party_contractor: thirdData,\n      complaints: ComplaintsData,\n      breaches: breachesData,\n      impact_assessment: ImpactData,\n      audits : auditData,\n      conclusion: [changeConclusionPayload],\n      orgName: this.orgName.toString(),\n      orgEmail: this.orgEmail.toString()\n    };\n    \n    //console.log('My Payload is here...')\n    //console.log(payload)\n    //send to our backend!\n    \n    const api3 = this.baseAPIUri + 'v1.0' + '/compliance-report/compliance-report/single';\n\n    this.http.post(api3, payload).subscribe(\n      response => {\n        //console.log('Response from backend:', response);\n\n        //on submission, set to organisation has submitted report\n        \n        this.complianceReportService.markFormSubmitted(this.authenticationService.getOrganisationID());\n        \n        // handle the response from the backend here\n        this.snackBar.open('Compliance Report Submitted Successfully. Please wait for review by PDPO Team', 'Close', {\n          duration: 8000, // 8 seconds\n        });\n        this.dialogRef = this.dialog.open(SuccessfulMessageDialogComponent, {\n          panelClass: ['successful-message-dialog', 'dialogs'],\n          disableClose: true,\n          data: {\n            title: 'Successfully Submitted Your Compliance Report.',\n            message: 'Compliance Report Submitted. Please wait for review from the PDPO Team.',\n            status: true\n          }\n        });\n  \n        this.dialogRef.afterClosed().subscribe(() => {\n          this.route2.navigate(['/compliance-and-reports/find-compliance-reports']);\n        });\n      },\n      error => {\n        console.error('Error sending data:', error);\n        // Handle error scenarios\n      }\n    );\n    \n  }\n\n  //Dialog for conditional Submission\n   openConfirmationDialog(): void {\n    const dialogRef = this.dialog.open(DialogFormInputComponent, {\n      data: {\n        title: 'Confirm Submission',\n        message: 'Are you sure you want to submit this Report? This report can only be submitted once.',\n        status: true\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        // The user clicked 'Yes' in the confirmation dialog\n        this.handleSubmit();\n      }\n    });\n  }\n}\n\n// Another Dialog Component\n","<fury-page-layout mode=\"card\">\n  <fury-page-layout-header>\n    <fury-breadcrumbs [@fadeInRight]  current=\"Compliance Report\"></fury-breadcrumbs>\n  </fury-page-layout-header>\n\n  <fury-page-layout-content  [fxLayoutGap]=\"gap\" fxLayout=\"column\">\n    <fury-card >\n      <main class=\"section-wrapper\">\n      <mat-vertical-stepper [linear]=\"false\" #stepper>\n          <mat-step [stepControl]=\"backgroundGroup\" [editable]=\"isEditable\" class=\"current-step-styles\">\n              <form [formGroup]=\"backgroundGroup\" class=\"form-group-row\">\n                  <div class=\"base-section\">\n                      <ng-template matStepLabel><span class=\"stepper-label\">ORGANISATIONAL BACKGROUND</span></ng-template>\n                        \n                      <div class=\"form-group-row\">\n                            <small>\n                                <p>\n                                    The Personal Data Protection Office (PDPO) was established to oversee the implementation of and enforce the Data Protection and Privacy Act and its regulations. According to regulation 50, all registered data collectors, processors, and controllers must submit a summary to the PDPO within ninety (90) days after the end of each financial year, including:\n                                </p>\n                                <ol>\n                                    <li>All received complaints and their statuses (resolved or pending).</li>\n                                    <li>All data breaches and the actions taken to address them.</li>\n                                </ol>\n                                <p>\n                                    Regulation 4(b) of the Data Protection and Privacy Regulations empowers the PDPO to coordinate, supervise, and monitor data-related matters. The PDPO aims to enhance compliance by expanding the annual compliance report's scope for better adherence to the Act.\n                                </p>\n                                <p>\n                                    The PDPO's financial year aligns with the government's year, running from 1st July to 30th June, as per the National Information Technology Authority, Uganda (NITA-U) Act of 2009, section 30. In compliance with this requirement, <strong [style.color]=\"'#1976d2'\">{{orgName}}</strong> hereby submits its annual Data Protection and Privacy compliance report to the PDPO.\n                                </p>\n                            </small>                                                \n                      </div>\n                      <div>\n                          <button type=\"button\" matStepperNext color=\"accent\" mat-raised-button>Next</button>\n                      </div>\n                  </div>\n              </form>\n          </mat-step>\n          <mat-step [stepControl]=\"registrationPdpOfficeGroup\" errorMessage=\"Fill in the required Information\">\n              <form [formGroup]=\"registrationPdpOfficeGroup\">\n                  <div class=\"base-section\">\n                      <ng-template matStepLabel class=\"stepper-label\">REGISTRATION WITH PERSONAL DATA PROTECTION\n                          OFFICE</ng-template>\n                      <h3>Renewal status</h3>\n                      <div class=\"form-group-row\">\n                        <mat-form-field class=\"w-90\" [style.width]=\"'68%'\">\n                            <mat-label>Registration Date</mat-label>\n                            <input matInput [disabled]=\"true\" [value]=\"issueDate\">\n                        </mat-form-field>\n                          <div class=\"form-group-row\">\n                              <mat-form-field class=\"row-33\">\n                                  <mat-label>Category</mat-label>\n                                  <input matInput [disabled]=\"true\" [value]=\"orgCategory\">\n                              </mat-form-field>\n  \n                              <mat-form-field class=\"row-33\">\n                                  <mat-label>Registration Number:</mat-label>\n                                  <input matInput [disabled]=\"true\" [value]=\"orgRegNo\">\n                              </mat-form-field>\n  \n                              <mat-form-field class=\"row-33\">\n                                  <mat-label>Date of next Renewal or Renewal Status</mat-label>\n                                  <input matInput\n                                      placeholder=\"Date of Renewal or Renewal Status\" [disabled]=\"true\" [value]=\"expiryDate\">\n                              </mat-form-field>\n                          </div>\n                          \n                      </div>\n                      <h3>Changes in registered particulars:</h3>\n                      <mat-form-field class=\"w-100\">\n                            <mat-label>List any changes in registered particulars if any<small><i>(If none, type none)</i></small></mat-label>\n                            <textarea matInput formControlName=\"changeParticularsCtrl\" placeholder=\"List any changes in registered particulars if any\"\n                                required (input)=\"checkFormValidity()\"></textarea>\n                        </mat-form-field>\n                      <div class=\"form-group-row\">\n                         \n                          \n                      </div>\n                      <br />\n                      <div>\n                          <button mat-button matStepperPrevious>Back</button>\n                          <button mat-raised-button matStepperNext color=\"accent\" [disabled]=\"!registrationPdpOfficeGroup.valid\">Next</button>\n                      </div>\n                  </div>\n              </form>\n          </mat-step>\n          <mat-step [stepControl]=\"leadershipOversightGroup\" errorMessage=\"Fill in the required Information\">\n              <form [formGroup]=\"leadershipOversightGroup\">\n                  <div class=\"base-section\">\n                      <ng-template matStepLabel class=\"stepper-label\">LEADERSHIP AND OVERSIGHT</ng-template>\n                      <h3>The DPO reports to the <small><i>Reporting line and team of staff supporting Data Protection Officer *</i></small></h3>\n                      <mat-form-field [style.width]=\"'60%'\">\n                          <mat-label>DPO's reporting line and team of staff supporting Data Protection Officer</mat-label>\n                          <textarea matInput formControlName=\"dpOReportingLineCtrl\" placeholder=\"DPO Reporting Line and team of staff supporting Data Protection Officer \"\n                              required (input)=\"checkFormValidity()\"></textarea>\n                      </mat-form-field>\n                      <br />\n                      <h3>Does the DPO have a job description addressing specific responsibilities as detailed in regulation 47(3) of the Data Protection & Privacy Regulations?</h3>\n                      <div class=\"radio-controls\">\n                          <mat-radio-group formControlName=\"hasJobDescription\">\n                              <mat-radio-button value=\"yes\" [style.marginRight]=\"'12px'\">Yes</mat-radio-button>\n                              <mat-radio-button value=\"no\">No</mat-radio-button>\n                          </mat-radio-group>\n                      </div>\n  \n                      <div *ngIf=\"leadershipOversightGroup.get('hasJobDescription')?.value === 'yes'\"\n                          [style.paddingTop]=\"'20px'\">\n                          <mat-form-field [style.width]=\"'60%'\">\n                              <mat-label>DPO's Job Description</mat-label>\n                              <textarea matInput placeholder=\"DPO Job Description\" formControlName=\"DPOJobDescriptionCtrl\"\n                                  ></textarea>\n                          </mat-form-field>\n                      </div>\n  \n                      <br />\n                      <h3>Does the most recent perfomance appraisal of the DPO encompass responsibilities set out by regulations 47(30) ?</h3>\n                      <div class=\"radio-controls\">\n                          <mat-radio-group formControlName=\"hasPerfApraisal\">\n                              <mat-radio-button value=\"yes\" [style.marginRight]=\"'12px'\">Yes</mat-radio-button>\n                              <mat-radio-button value=\"no\">No</mat-radio-button>\n                          </mat-radio-group>\n                      </div>\n  \n                      <div *ngIf=\"leadershipOversightGroup.get('hasPerfApraisal')?.value === 'yes'\"\n                          [style.paddingTop]=\"'20px'\">\n                          <mat-form-field [style.width]=\"'60%'\">\n                              <mat-label>Reason</mat-label>\n                              <input matInput placeholder=\"Reason\" formControlName=\"ReasonCtrl\">\n                          </mat-form-field>\n                      </div>\n                      \n                      <br />\n                      <br />\n                      <div>\n                          <button mat-button matStepperPrevious>Back</button>\n                          <button mat-raised-button matStepperNext color=\"accent\" [disabled]=\"!leadershipOversightGroup.valid\">Next</button>\n                      </div>\n                  </div>\n              </form>\n          </mat-step>\n          <mat-step [stepControl]=\"policiesAndProcedureGroup\" errorMessage=\"Fill in the required information (Add atleast one policy)\">\n              <form [formGroup]=\"policiesAndProcedureGroup\">\n                  <div class=\"base-section\">\n                      <ng-template matStepLabel class=\"stepper-label\">POLICIES AND PROCEDURES</ng-template>\n                      <br />\n                      <button mat-raised-button (click)=\"openDialog()\" [style.marginBottom]=\"'10px'\">ADD NEW POLICY</button>\n                      \n                      <div>\n                          <table mat-table [dataSource]=\"dataSource\" matSort class=\"table\">\n                              <ng-container matColumnDef=\"PolicyandProcedure\">\n                                  <th mat-header-cell *matHeaderCellDef mat-sort-header> Policy Name </th>\n                                    <td mat-cell *matCellDef=\"let row\">\n                                        {{row.PolicyandProcedure}}\n                                    </td>\n                              </ng-container>\n  \n                              <ng-container matColumnDef=\"ApprovalDate\">\n                                  <th mat-header-cell *matHeaderCellDef mat-sort-header> Approval Date </th>\n                                  <td mat-cell *matCellDef=\"let row\"> {{row.ApprovalDate }} </td>\n                              </ng-container>\n  \n                              <ng-container matColumnDef=\"ReviewDate\">\n                                  <th mat-header-cell *matHeaderCellDef mat-sort-header> Review Date </th>\n                                  <td mat-cell *matCellDef=\"let row\"> {{row.ReviewDate}} </td>\n                              </ng-container>\n\n                              <ng-container matColumnDef=\"NumberOfTrainings\">\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> Number of Trainings on Policy </th>\n                                <td mat-cell *matCellDef=\"let row\"> {{row.NumberOfTrainings}} </td>\n                            </ng-container>\n  \n                              <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                              <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n                          </table>\n                      </div>\n                      <br />\n                      <br />\n                      <div>\n                          <button mat-button matStepperPrevious>Back</button>\n                          <button mat-raised-button matStepperNext color=\"accent\" [disabled]=\"!policiesAndProcedureGroup.valid\">Next</button>\n                      </div>\n                  </div>\n              </form>\n          </mat-step>\n          <mat-step [stepControl]=\"trainingAndAwarenessGroup\" errorMessage=\"Fill in the required information (Add atleast one DPO Training and Staff Training)\">\n              <form [formGroup]=\"trainingAndAwarenessGroup\">\n                    <div class=\"base-section\">\n                      <ng-template matStepLabel class=\"stepper-label\">TRAINING AND AWARENESS</ng-template>\n                      <h3>DPO Training</h3>\n                      <br />\n                      <button mat-raised-button (click)=\"openDPODialog()\" [style.marginBottom]=\"'10px'\">Add New DPO Training</button>\n                      \n                      <div>\n                        <table mat-table [dataSource]=\"DPODataSource\" matSort class=\"table\">\n                            <ng-container matColumnDef=\"name_of_training\">\n                              <th mat-header-cell *matHeaderCellDef mat-sort-header> Training Name </th>\n                              <td mat-cell *matCellDef=\"let row\">\n                                 {{row.name_of_training}} \n                                 \n                                </td>\n                            </ng-container>\n                          \n                            <ng-container matColumnDef=\"who_conducted_training\">\n                              <th mat-header-cell *matHeaderCellDef mat-sort-header> Conducted By </th>\n                              <td mat-cell *matCellDef=\"let row\"> {{row.who_conducted_training}} </td>\n                            </ng-container>\n                          \n                            <ng-container matColumnDef=\"date_of_training\">\n                              <th mat-header-cell *matHeaderCellDef mat-sort-header> Training Date </th>\n                              <td mat-cell *matCellDef=\"let row\"> {{row.date_of_training}} </td>\n                            </ng-container>\n                          \n                            <tr mat-header-row *matHeaderRowDef=\"DPOColumns\"></tr>\n                            <tr mat-row *matRowDef=\"let row; columns: DPOColumns;\"></tr>\n                          </table>\n                          \n                    </div>\n                      <br />\n                      <br />\n                     \n                      <h3>Staff Training</h3>\n                      <div>\n                        <button mat-raised-button (click)=\"openStaffDialog()\" [style.marginBottom]=\"'10px'\">Add New Staff Training</button>\n                      \n                        <div>\n                          <table mat-table [dataSource]=\"StaffDataSource\" matSort class=\"table\">\n                              <ng-container matColumnDef=\"department\">\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> Department </th>\n                                <td mat-cell *matCellDef=\"let row\"> \n                                    {{row.department}} \n                                    \n                                </td>\n                              </ng-container>\n                            \n                              <ng-container matColumnDef=\"total_staff_to_be_trained\">\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> Total Staff to be Trained </th>\n                                <td mat-cell *matCellDef=\"let row\"> {{row.total_staff_to_be_trained}} </td>\n                              </ng-container>\n                            \n                              <ng-container matColumnDef=\"number_completed_training\">\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> Number of Staff that completed Training</th>\n                                <td mat-cell *matCellDef=\"let row\"> {{row.number_completed_training}} </td>\n                              </ng-container>\n                            \n                              <tr mat-header-row *matHeaderRowDef=\"StaffColumns\"></tr>\n                              <tr mat-row *matRowDef=\"let row; columns: StaffColumns;\"></tr>\n                            </table>\n                            \n                      </div>\n                      </div>\n                      <h3>Do you have an Agent, 3rd party or Contractor?</h3>\n                      <div class=\"radio-controls\">\n                          <mat-radio-group formControlName=\"haveThirdParty\">\n                              <mat-radio-button value=\"yes\" [style.marginRight]=\"'12px'\">Yes</mat-radio-button>\n                              <mat-radio-button value=\"no\">No</mat-radio-button>\n                          </mat-radio-group>\n                      </div>\n  \n                      <div\n                          *ngIf=\"trainingAndAwarenessGroup.get('haveThirdParty')?.value === 'yes'\"\n                          [style.paddingTop]=\"'20px'\" [style.paddingBottom]=\"'20px'\">\n                          <button mat-raised-button (click)=\"openThirdPartyDialog()\" [style.marginBottom]=\"'10px'\">Add New Agent, 3rdParty or Contractor Training</button>\n                      \n                          <table mat-table [dataSource]=\"ThirdPartyDataSource\" matSort class=\"table\">\n                            <ng-container matColumnDef=\"example_of_agent\">\n                              <th mat-header-cell *matHeaderCellDef mat-sort-header> Example of Agent, 3rdParty or Contractor </th>\n                              <td mat-cell *matCellDef=\"let row\"> {{row.example_of_agent}} </td>\n                            </ng-container>\n                          \n                            <ng-container matColumnDef=\"number_of_agents\">\n                              <th mat-header-cell *matHeaderCellDef mat-sort-header> Total Number of Agents, 3rdParties or Contractors </th>\n                              <td mat-cell *matCellDef=\"let row\"> {{row.number_of_agents}} </td>\n                            </ng-container>\n                          \n                            <ng-container matColumnDef=\"NumberOfTrainedAgents\">\n                              <th mat-header-cell *matHeaderCellDef mat-sort-header> Number of Agents, 3rdParties or Contractors Trained</th>\n                              <td mat-cell *matCellDef=\"let row\"> {{row.NumberOfTrainedAgents}} </td>\n                            </ng-container>\n                          \n                            <tr mat-header-row *matHeaderRowDef=\"ThirdPartyColumns\"></tr>\n                            <tr mat-row *matRowDef=\"let row; columns: ThirdPartyColumns;\"></tr>\n                          </table>\n                      </div>\n                      <br/>\n                      <br/>\n                      <div>\n                          <button mat-button matStepperPrevious>Back</button>\n                          <button mat-raised-button matStepperNext color=\"accent\" [disabled]=\"!trainingAndAwarenessGroup.valid\">Next</button>\n                      </div>\n                  </div>\n  \n              </form>\n          </mat-step>\n          <mat-step [stepControl]=\"complaintsGroup\" [editable]=\"isEditable\">\n              <form [formGroup]=\"complaintsGroup\">\n                  <div class=\"base-section\">\n                      <div class=\"base-section\">\n                          <ng-template matStepLabel class=\"stepper-label\">COMPLAINTS RELATED TO DATA PROTECTION AND\n                              PRIVACY (IF APPLICABLE)</ng-template>\n                            <h3>Did you receive any Complaints ?</h3>\n                            <div class=\"radio-controls\">\n                                <mat-radio-group formControlName=\"haveComplaints\">\n                                    <mat-radio-button value=\"yes\" [style.marginRight]=\"'12px'\">Yes</mat-radio-button>\n                                    <mat-radio-button value=\"no\">No</mat-radio-button>\n                                </mat-radio-group>\n                            </div>\n                            <div *ngIf=\"complaintsGroup.get('haveComplaints')?.value === 'yes'\"\n                                [style.paddingTop]=\"'20px'\" [style.paddingBottom]=\"'20px'\">\n                                <button mat-raised-button (click)=\"openComplaintsDialog()\" [style.marginBottom]=\"'10px'\">Add New Complaints Record</button>\n                      \n                                <table mat-table [dataSource]=\"ComplaintsDataSource\" matSort class=\"table\">\n                                <ng-container matColumnDef=\"year_of_complaint\">\n                                  <th mat-header-cell *matHeaderCellDef mat-sort-header> Year Complaints Received</th>\n                                  <td mat-cell *matCellDef=\"let row\"> {{row.year_of_complaint}} </td>\n                                </ng-container>\n                              \n                                <ng-container matColumnDef=\"status_of_complaint\">\n                                  <th mat-header-cell *matHeaderCellDef mat-sort-header>Status of Complaints </th>\n                                  <td mat-cell *matCellDef=\"let row\"> {{row.status_of_complaint}} </td>\n                                </ng-container>\n                              \n                                <ng-container matColumnDef=\"number_of_complaints_received\">\n                                  <th mat-header-cell *matHeaderCellDef mat-sort-header> Number of Complaints Received</th>\n                                  <td mat-cell *matCellDef=\"let row\"> {{row.number_of_complaints_received}} </td>\n                                </ng-container>\n                              \n                                <tr mat-header-row *matHeaderRowDef=\"ComplaintsColumns\"></tr>\n                                <tr mat-row *matRowDef=\"let row; columns: ComplaintsColumns;\"></tr>\n                                </table>\n                            </div>\n                            <br>\n                          <div>\n                              <button mat-button matStepperPrevious>Back</button>\n                              <button mat-raised-button matStepperNext color=\"accent\">Next</button>\n                          </div>\n                      </div>\n  \n                  </div>\n              </form>\n          </mat-step>\n          <mat-step [stepControl]=\"dataBreachesGroup\" [editable]=\"isEditable\">\n              <form [formGroup]=\"dataBreachesGroup\">\n                  <div class=\"base-section\">\n                      <ng-template matStepLabel class=\"stepper-label\">DATA SECURITY BREACHES (IF APPLICABLE)</ng-template>\n                    <h3>Did you experience any Data Security Breaches?</h3>\n                    <div class=\"radio-controls\">\n                        <mat-radio-group formControlName=\"haveBreaches\">\n                            <mat-radio-button value=\"yes\" [style.marginRight]=\"'12px'\">Yes</mat-radio-button>\n                            <mat-radio-button value=\"no\">No</mat-radio-button>\n                        </mat-radio-group>\n                    </div>\n                    <div  *ngIf=\"dataBreachesGroup.get('haveBreaches')?.value === 'yes'\"\n                          [style.paddingTop]=\"'20px'\" [style.paddingBottom]=\"'20px'\">\n                      <button mat-raised-button (click)=\"openBreachesDialog()\" [style.marginBottom]=\"'10px'\">Add New Breaches Record</button>\n                      \n                        <table mat-table [dataSource]=\"BreachesDataSource\" matSort class=\"table\">\n                            <ng-container matColumnDef=\"year_of_breach\">\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> Year Breach Occured</th>\n                                <td mat-cell *matCellDef=\"let row\"> {{row.year_of_breach}} </td>\n                            </ng-container>\n                            \n                            <ng-container matColumnDef=\"status_of_breach\">\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header>Status of Breach </th>\n                                <td mat-cell *matCellDef=\"let row\"> {{row.status_of_breach}} </td>\n                            </ng-container>\n                            \n                            <ng-container matColumnDef=\"number_of_breaches\">\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> Number of Breaches </th>\n                                <td mat-cell *matCellDef=\"let row\"> {{row.number_of_breaches}} </td>\n                            </ng-container>\n\n                            <ng-container matColumnDef=\"measures_taken_to_address_gaps\">\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> Measures to address Gaps </th>\n                                <td mat-cell *matCellDef=\"let row\"> {{row.measures_taken_to_address_gaps}} </td>\n                            </ng-container>\n\n                            <ng-container matColumnDef=\"number_of_records_lost\">\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> No. of Records Affected </th>\n                                <td mat-cell *matCellDef=\"let row\"> {{row.number_of_records_lost}} </td>\n                            </ng-container>\n                            \n                            <ng-container matColumnDef=\"frequent_cause_of_breach\">\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> Frequent cause of Breach </th>\n                                <td mat-cell *matCellDef=\"let row\"> {{row.frequent_cause_of_breach}} </td>\n                            </ng-container>\n\n                            <tr mat-header-row *matHeaderRowDef=\"BreachesColumns\"></tr>\n                            <tr mat-row *matRowDef=\"let row; columns: BreachesColumns;\"></tr>\n                        </table>\n                    </div>\n                  </div>\n                  <div>\n                      <button mat-button matStepperPrevious>Back</button>\n                      <button mat-raised-button matStepperNext color=\"accent\">Next</button>\n                  </div>\n              </form>\n  \n          </mat-step>\n          <mat-step [stepControl]=\"impactGroup\" [editable]=\"isEditable\">\n              <form [formGroup]=\"impactGroup\">\n                  <div class=\"base-section\">\n                      <ng-template matStepLabel class=\"stepper-label\">DATA PROTECTION IMPACT ASSESSMENT (IF\n                          APPLICABLE)</ng-template>\n                          <div class=\"radio-controls\">\n                            <mat-radio-group formControlName=\"haveImpact\">\n                                <mat-radio-button value=\"yes\" [style.marginRight]=\"'12px'\">Yes</mat-radio-button>\n                                <mat-radio-button value=\"no\">No</mat-radio-button>\n                            </mat-radio-group>\n                        </div>\n    \n                        <div\n                            *ngIf=\"impactGroup.get('haveImpact')?.value === 'yes'\"\n                            [style.paddingTop]=\"'20px'\" [style.paddingBottom]=\"'20px'\">\n                            <button mat-raised-button (click)=\"openImpactDialog()\" [style.marginBottom]=\"'10px'\">Add New Impact Assessment Record</button>\n                      \n                            <table mat-table [dataSource]=\"ImpactDataSource\" matSort class=\"table\">\n                            <ng-container matColumnDef=\"data_or_activity\">\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header>Data collection/processing activity </th>\n                                <td mat-cell *matCellDef=\"let row\"> {{row.data_or_activity}} </td>\n                            </ng-container>\n                            \n                            <ng-container matColumnDef=\"date_concluded\">\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header>Date Data Protection Impact assessment concluded</th>\n                                <td mat-cell *matCellDef=\"let row\"> {{row.date_concluded}} </td>\n                            </ng-container>\n                            \n                            <tr mat-header-row *matHeaderRowDef=\"ImpactColumns\"></tr>\n                            <tr mat-row *matRowDef=\"let row; columns: ImpactColumns;\"></tr>\n                            </table>\n                        </div>  \n                  </div>\n                  <div>\n                      <button mat-button matStepperPrevious>Back</button>\n                      <button mat-raised-button matStepperNext color=\"accent\">Next</button>\n                  </div>\n              </form>\n          </mat-step>\n          <mat-step [stepControl]=\"auditGroup\" [editable]=\"isEditable\">\n              <form [formGroup]=\"auditGroup\">\n                  <div class=\"base-section\">\n                      <ng-template matStepLabel class=\"stepper-label\">DATA PROTECTION AND PRIVACY AUDITS (IF APPLICABLE)</ng-template>\n                      <h3>Did you have any audits carried out?</h3>\n                      <div class=\"radio-controls\">\n                        <mat-radio-group formControlName=\"haveAudits\">\n                            <mat-radio-button value=\"yes\" [style.marginRight]=\"'12px'\">Yes</mat-radio-button>\n                            <mat-radio-button value=\"no\">No</mat-radio-button>\n                        </mat-radio-group>\n                    </div>\n                    <div  *ngIf=\"auditGroup.get('haveAudits')?.value === 'yes'\"\n                          [style.paddingTop]=\"'20px'\" [style.paddingBottom]=\"'20px'\">\n                            <button mat-raised-button (click)=\"openAuditsDialog()\" [style.marginBottom]=\"'10px'\">Add New Audit Record</button>\n                      \n                        <table mat-table [dataSource]=\"AuditDataSource\" matSort class=\"table\">\n                            <ng-container matColumnDef=\"year_of_audit\">\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> Year Of Audit</th>\n                                <td mat-cell *matCellDef=\"let row\"> {{row.year_of_audit}} </td>\n                            </ng-container>\n                            \n                            <ng-container matColumnDef=\"category_of_audit\">\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header>Category of Breach </th>\n                                <td mat-cell *matCellDef=\"let row\"> {{row.category_of_audit}} </td>\n                            </ng-container>\n                            \n                            <ng-container matColumnDef=\"number_of_audits\">\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header> Number of Audits </th>\n                                <td mat-cell *matCellDef=\"let row\"> {{row.number_of_audits}} </td>\n                            </ng-container>\n\n                            <ng-container matColumnDef=\"Resolutionstatus\">\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header>Resolution Status</th>\n                                <td mat-cell *matCellDef=\"let row\"> {{row.Resolutionstatus}} </td>\n                            </ng-container>\n\n                            <ng-container matColumnDef=\"Resolutiondetails\">\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header>Resolution Details</th>\n                                <td mat-cell *matCellDef=\"let row\"> {{row.Resolutiondetails}} </td>\n                            </ng-container>\n                            \n                            <tr mat-header-row *matHeaderRowDef=\"AuditColumns\"></tr>\n                            <tr mat-row *matRowDef=\"let row; columns: AuditColumns;\"></tr>\n                        </table>\n                    </div>\n                  </div>\n                  <div>\n                    <button mat-button matStepperPrevious>Back</button>\n                    <button mat-raised-button matStepperNext color=\"accent\">Next</button>\n                  </div>\n              </form>\n          </mat-step>\n\n          <mat-step [stepControl]=\"conclusionGroup\" [editable]=\"isEditable\" errorMessage=\"Fill in the required Information\">\n            <form [formGroup]=\"conclusionGroup\" class=\"form-group-row\">\n                <div class=\"base-section\">\n                    <ng-template matStepLabel class=\"stepper-label\">CONCLUSION</ng-template>\n                    <small>List here major take-ways, general observations and challenges in relation to ensuring compliance with the Data Protection and Privacy Act in your organisation</small>\n                    \n                        <mat-form-field class=\"w-100\">\n                            <mat-label>Feedback on Compliance</mat-label>\n                            <textarea matInput formControlName=\"text\"\n                                placeholder=\"Feedback on Compliance\" required (input)=\"checkFormValidity()\"></textarea>\n                        </mat-form-field>\n                        <div class=\"form-group-row\">\n                            <div class=\"row-100\">\n                                <mat-checkbox formControlName=\"Checkbox\" required> <!-- Use formControlName to bind the checkbox -->\n                                    I certify that the above information is correct and complete and hereby submit the annual compliance report.\n                                </mat-checkbox>\n                            </div>\n                        </div>\n                        <br>\n                        <div class=\"form-group-row\">\n                            <mat-form-field class=\"row-33\">\n                                <mat-label>Name of Person Submitting Compliance Report</mat-label>\n                                <input matInput formControlName=\"NameOfPersonSubmitting\"\n                                    placeholder=\"Name of Person Submitting Compliance Report\" required (input)=\"checkFormValidity()\">\n                            </mat-form-field>\n                            <mat-form-field class=\"row-33\">\n                                <mat-label>Title of Person Submitting Compliance Report</mat-label>\n                                <input matInput formControlName=\"TitleOfPersonSubmitting\"\n                                    placeholder=\"Title of Person Submitting Compliance Report\" required (input)=\"checkFormValidity()\">\n                            </mat-form-field>\n                        </div>\n                       \n                        \n                        <div class=\"button-container\">\n                            <button mat-button matStepperPrevious>Back</button>\n                            <button mat-raised-button (click)=\"openConfirmationDialog()\" [disabled]=\"isSubmitButtonDisabled\" color=\"accent\">Submit Compliance Report</button>\n                            <button mat-raised-button (click)=\"stepper.reset()\" color=\"accent\">Reset</button>\n                        </div>\n                </div>\n            </form>\n            </mat-step>\n  \n      </mat-vertical-stepper>\n    </main>\n    </fury-card>\n   \n  </fury-page-layout-content>\n</fury-page-layout>","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'fury-complaints-dialog',\n  templateUrl: './complaints-dialog.component.html',\n  styleUrls: ['./complaints-dialog.component.scss']\n})\nexport class ComplaintsDialogComponent implements OnInit {\n\n  ComplaintsForm: FormGroup;\n  constructor(\n    public dialogRef: MatDialogRef<ComplaintsDialogComponent>,\n    private _formBuilder: FormBuilder\n  ) { }\n\n  ngOnInit(): void {\n\n    this.ComplaintsForm = this._formBuilder.group({\n      year_of_complaint: [0, Validators.required],\n      status_of_complaint: ['', Validators.required],\n      number_of_complaints_received: [0, Validators.required]\n    });\n  }\n\n  onSubmit() {\n    if (this.ComplaintsForm.valid) {\n      this.dialogRef.close(this.ComplaintsForm.value);\n    }\n  }\n\n  onCancel() {\n      this.dialogRef.close();\n  }\n\n}","<h2 mat-dialog-title>Add New Complaint</h2>\n<div class=\"dialog-container\">\n  <form [formGroup]=\"ComplaintsForm\" (ngSubmit)=\"onSubmit()\">\n    <mat-form-field>\n      <mat-label>Year Complaints were Received*</mat-label>\n      <input matInput type=\"number\" placeholder=\"Enter Year Complaints were Received\" formControlName=\"year_of_complaint\">\n    </mat-form-field>\n\n    <mat-form-field>\n      <mat-label>Select Status of Complaints</mat-label>\n      <mat-select placeholder=\"Select Complaint status\" formControlName=\"status_of_complaint\">\n        <mat-option value=\"Resolved\">Resolved</mat-option>\n        <mat-option value=\"Pending Resolution\">Pending Resolution</mat-option>\n      </mat-select>\n    </mat-form-field>\n    <mat-form-field>\n      <mat-label>Number of Complaints Received</mat-label>\n      <input matInput type=\"number\" placeholder=\"Number of Complaints\" formControlName=\"number_of_complaints_received\">\n    </mat-form-field>\n    <div class=\"button-container\">\n      <button mat-button type=\"button\" (click)=\"onCancel()\">Cancel</button>\n      <button mat-raised-button color=\"primary\" type=\"submit\">Add Complaint Records</button>\n    </div>\n  </form>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'fury-impact-dialog',\n  templateUrl: './impact-dialog.component.html',\n  styleUrls: ['./impact-dialog.component.scss']\n})\nexport class ImpactDialogComponent implements OnInit {\n\n  ImpactForm: FormGroup;\n  maxDate: string;\n\n  constructor(\n    public dialogRef: MatDialogRef<ImpactDialogComponent>,\n    private _formBuilder: FormBuilder\n  ) { }\n\n  ngOnInit(): void {\n    const today = new Date();\n    this.maxDate = today.toISOString().split('T')[0];\n    \n    this.ImpactForm = this._formBuilder.group({\n      data_or_activity: ['', Validators.required],\n      date_concluded: ['', Validators.required]\n    });\n  }\n\n  onSubmit() {\n    if (this.ImpactForm.valid) {\n      this.dialogRef.close(this.ImpactForm.value);\n    }\n  }\n\n  onCancel() {\n      this.dialogRef.close();\n  }\n\n}\n","<h2 mat-dialog-title>Add Data Protection Impact Assessment Record</h2>\n<div class=\"dialog-container\">\n  <form [formGroup]=\"ImpactForm\" (ngSubmit)=\"onSubmit()\">\n    \n    <mat-form-field>\n        <mat-label>Data collection/processing activity </mat-label>\n        <textarea matInput placeholder=\"Data collection/processing activity \" formControlName=\"data_or_activity\" rows=\"5\"></textarea>\n    </mat-form-field>\n    <mat-form-field>\n        <mat-label>Date Data Protection Impact assessment concluded </mat-label>\n        <input matInput type=\"date\" placeholder=\"Date Impact assessment concluded \" formControlName=\"date_concluded\" [max]=\"maxDate\">\n    </mat-form-field>\n    \n    \n    <div class=\"button-container\">\n      <button mat-button type=\"button\" (click)=\"onCancel()\">Cancel</button>\n      <button mat-raised-button color=\"primary\" type=\"submit\">Add Impact Assessment Record</button>\n    </div>\n  </form>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ComplianceReportsComponent } from './compliance-reports-component/compliance-reports-component.component';\nimport { FindComplianceReportsComponent } from './find-compliance-reports/find-compliance-reports.component';\nimport { ViewComplianceReportComponent } from './view-compliance-report/view-compliance-report.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ComplianceReportsComponent,\n  },\n  {\n    path: 'edit-compliance-reports/:id/:orgid/:reportdate',\n    component: ViewComplianceReportComponent,\n  },\n  {\n    path: 'find-compliance-reports',\n    component: FindComplianceReportsComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ComplianceReportsRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport {fadeInRightAnimation} from '../../../../@fury/animations/fade-in-right.animation';\nimport {fadeInUpAnimation} from '../../../../@fury/animations/fade-in-up.animation';\nimport {AfterViewInit, EventEmitter, Input, ViewChild} from '@angular/core';\nimport { Subscription} from 'rxjs';\nimport {\n    CompanyRegistration,\n    ComponyRegistrationObject\n} from '../../company-registration/components/company-registration.model';\nimport {\n    DataType, DateFinderOptions,\n    IFinderField,\n    ListColumn,\n    LookupFinderOptions,\n    TextFinderOptions\n} from '../../../../@fury/shared/list/list-column.model';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {MatDialog} from '@angular/material/dialog';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {BaseFuryForm} from '../../../../@fury/shared/base-fury-form';\nimport {CompanyRegistrationService} from '../../company-registration/company-registration.service';\nimport {KeycloakService} from 'keycloak-angular';\nimport {WorkflowServiceService} from '../../../services/workflow-service.service';\nimport {AuthenticationService} from '../../../authentication/authentication.service';\nimport {ComplaintService} from '../../complaints/complaints.service';\nimport { environment } from '../../../../environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { switchMap } from 'rxjs/operators';\n\n\ninterface MinimalsDT {\n    orgName: string;\n    // orgCategory: string;\n    orgRegDate: string;\n    orgRegNo: string;\n    orgMyID: string;\n}\n\ninterface ReportsDT {\n    ComplianceReportID: string;\n    CreatedDate: string;\n    OrganizationID: string;\n}\n\n@Component({\n  selector: 'fury-find-compliance-reports',\n  templateUrl: './find-compliance-reports.component.html',\n  styleUrls: ['./find-compliance-reports.component.scss'],\n  animations: [fadeInRightAnimation, fadeInUpAnimation]\n})\nexport class FindComplianceReportsComponent extends BaseFuryForm implements OnInit, AfterViewInit {\n\n    @Input()\n    pageSize = 10;\n  \n    @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n    @ViewChild(MatSort, {static: true}) sort: MatSort;\n\n    // Search fields\n    searchFields: IFinderField[];\n\n    realmRole: string;\n    isOrganisation = false;\n    accesses: any [] = [];\n\n    // Define your properties here\n    orgName: string[] = [];\n    orgRegNo: string[] = [];\n    orgRegDate: string[] = [];\n    orgMyID: string[] = [];\n    orgRenewal: string[] = [];\n\n    ComplianceReportID: string[] = [];\n    CreatedDate: string[] = [];\n    OrganizationID: any[];\n  \n    operationType = '';\n    MinimalsArray: MinimalsDT[] = [];\n    MinimalColumns: string[] = ['orgName', 'orgRegDate', 'orgMyID', 'action'];\n    MinimalDataSource: MatTableDataSource<MinimalsDT>;\n\n    ReportsArray: ReportsDT[] = [];\n    ReportsColumns: string[] = ['orgName','orgRegNo','ComplianceReportID', 'CreatedDate', 'action'];\n    ReportsDataSource: MatTableDataSource<ReportsDT>;\n\n  constructor(\n    private auth: KeycloakService,\n    private http: HttpClient,\n    private authenticationService: AuthenticationService,\n    public registrationService: CompanyRegistrationService,\n    public _workflowService: WorkflowServiceService,\n    public complaintService:ComplaintService\n    ) \n    {\n        super(\n            auth,\n            _workflowService,\n            registrationService,\n            complaintService,\n        );\n\n        //console.log(\"Here-----\")\n        this.operationType = 'FIND';\n        this.MinimalDataSource = new MatTableDataSource<MinimalsDT>(this.MinimalsArray);\n        this.ReportsDataSource = new MatTableDataSource<ReportsDT>(this.ReportsArray);\n     }\n\n         // TODO:: Need to hide addressedTo Column from data controllers its mainly for nita data-protection officers\n\n    ngOnInit(): void {\n        this.defineSearchFields();\n        if (this.auth.getKeycloakInstance().resourceAccess['dps-frontend']) {\n            this.accesses = this.auth.getKeycloakInstance().resourceAccess['dps-frontend'].roles;\n        }\n\n        // console.log(\"Keycloak instance below--\")\n        // console.log(this.auth.getKeycloakInstance());\n\n        if (this.auth.getKeycloakInstance().realmAccess) {\n            if(this.auth.getKeycloakInstance().realmAccess.roles.includes('organisation')){\n                this.isOrganisation = true;\n            }\n            //console.log(this.auth.getKeycloakInstance().realmAccess.roles)\n        }\n\n        // Here rest of the Role Code\n        if (this.operationType === 'FIND') {\n            if (this.isOrganisation) {            \n                this.fetchMinimalDataAndThenFetchReportsData();\n                //console.log('---Loaded One Report---');\n            } else {\n                this.FetchAllReportsData();\n              //console.log('---Loaded All Reports---');\n            }\n        }\n    }\n\n    ngAfterViewInit() {\n        this.ReportsDataSource.paginator = this.paginator;\n        this.ReportsDataSource.sort = this.sort;\n    }\n\n    onFilterChange(value) {\n        if (!this.ReportsDataSource) {\n            return;\n        }\n        value = value.trim();\n        value = value.toLowerCase();\n        this.ReportsDataSource.filter = value;\n    }\n\n    private baseAPIUri = environment.backend;\n    //This function is for fetching individual reports for an organisation\n    fetchMinimalDataAndThenFetchReportsData(): void {\n        const api2 = `${this.baseAPIUri}v1.0/org-registration/byorgid/single?OrganizationID=${this.authenticationService.getOrganisationID()}`;\n      \n        this.http.get<any[]>(api2).pipe(\n          switchMap((response) => {\n            this.MinimalsArray = response.map((item) => ({\n              orgName: item.OrganisationName,\n              orgRegDate: item.EnteredOn,\n              orgRegNo: item.RegTrackingNo,\n              orgMyID: item.OrganisationID,\n            }));\n            this.orgMyID = this.MinimalsArray.map(item => item.orgMyID);\n            this.MinimalDataSource.data = this.MinimalsArray;\n            \n            return this.orgMyID;\n          })\n        ).subscribe((orgMyID) => {\n         \n          const api3 = `${this.baseAPIUri}v1.0/compliance-report/compliance-report/single?OrganizationID=${orgMyID}`;\n  \n                this.http.get<any>(api3).subscribe(\n                    (response) => {\n                    if (Array.isArray(response.compliance_reports)) {\n                        const complianceReports = response.compliance_reports;\n                        complianceReports.sort((a, b) => new Date(b.CreatedDate).getTime() - new Date(a.CreatedDate).getTime());\n                        this.ReportsArray = complianceReports.map((item) => ({\n                        ComplianceReportID: item.ComplianceReportID,\n                        CreatedDate: item.CreatedDate,\n                        OrganizationID: item.OrganizationID,\n                        orgName: this.MinimalsArray.find(minimal => minimal.orgMyID === item.OrganizationID)?.orgName,\n                        orgRegNo: this.MinimalsArray.find(minimal => minimal.orgMyID === item.OrganizationID)?.orgRegNo,\n                        }));\n                        \n                        this.ReportsDataSource.data = this.ReportsArray;\n                        //console.log(\"-----Finished loading org Data-----\")\n\n                    } else {\n                        console.error('Response does not contain the expected \"compliance_reports\" array:', response);\n                    }\n                    },\n                    (error) => {\n                        console.error('Error fetching Single Organization Report data:', error);\n                    }\n                );\n        });\n      }\n\n      //Then this function is for the legal team to fetch all reports\n      FetchAllReportsData(): void {\n        const api4 = this.baseAPIUri + 'v1.0' + '/org-registration/all/minimal-data';\n        this.http.get<any[]>(api4).pipe(\n          switchMap((response) => {\n            this.MinimalsArray = response.map((item) => ({\n              orgName: item.OrganisationName,\n              orgRegDate: item.EnteredOn,\n              orgRegNo: item.RegTrackingNo,\n              orgMyID: item.OrganisationID,\n            }));\n            this.orgMyID = this.MinimalsArray.map(item => item.orgMyID);\n            this.MinimalDataSource.data = this.MinimalsArray;\n            \n            return this.orgMyID;\n          })\n        ).subscribe((orgMyID) => {\n         \n          const api5 = `${this.baseAPIUri}v1.0/compliance-report/compliance-reports/all`;\n  \n                this.http.get<any>(api5).subscribe(\n                    (response) => {\n                    if (Array.isArray(response.compliance_reports)) {\n                        const complianceReports = response.compliance_reports;\n                        complianceReports.sort((a, b) => new Date(b.CreatedDate).getTime() - new Date(a.CreatedDate).getTime());\n                        this.ReportsArray = complianceReports.map((item) => ({\n                        ComplianceReportID: item.ComplianceReportID,\n                        CreatedDate: item.CreatedDate,\n                        OrganizationID: item.OrganizationID,\n                        orgName: this.MinimalsArray.find(minimal => minimal.orgMyID === item.OrganizationID)?.orgName,\n                        orgRegNo: this.MinimalsArray.find(minimal => minimal.orgMyID === item.OrganizationID)?.orgRegNo,\n                        }));\n                        \n                        this.ReportsDataSource.data = this.ReportsArray;\n                        //console.log(\"-----Finished loading All Reports Data-----\")\n\n                    } else {\n                        console.error('Response does not contain the expected \"compliance_reports\" array:', response);\n                    }\n                    },\n                    (error) => {\n                        console.error('Error fetching All Organization Reports data:', error);\n                    }\n                );\n        });\n      }\n\n    private defineSearchFields() {\n        this.searchFields = [\n          {\n            label: 'Compliance Report ID',\n            fieldName: 'ComplianceReportID',\n            operators: TextFinderOptions,\n            dataType: DataType.TEXT\n          },\n          {\n            label: 'Organization Name',\n            fieldName: 'orgName',\n            operators: TextFinderOptions,\n            dataType: DataType.TEXT\n          },\n          {\n            label: 'Registration Number',\n            fieldName: 'orgRegNo',\n            operators: TextFinderOptions,\n            dataType: DataType.TEXT\n          },\n          {\n            label: 'Created On',\n            fieldName: 'CreatedDate',\n            operators: DateFinderOptions,\n            dataType: DataType.DATETIME\n          }\n        ];\n      }\n      \n\n}\n","<fury-page-layout mode=\"card\">\n    <fury-page-layout-header>\n        <fury-breadcrumbs [@fadeInRight] [crumbs]=\"['Compliance Reports']\" current=\"Find Compliance Reports\"></fury-breadcrumbs>\n    </fury-page-layout-header>\n\n    <fury-page-layout-content [@fadeInUp]>\n        <fury-list \n            name=\"Compliance Reports\" \n            [columns]=\"ReportsColumns\"\n            (filterChange)=\"onFilterChange($event)\"\n            finderDialogTitle=\"Compliance Reports Finder\"\n            [searchFields]=\"searchFields\">\n\n            <div class=\"table-container\">\n                <table mat-table [dataSource]=\"ReportsDataSource\" matSort class=\"table\">\n                    <ng-container matColumnDef=\"ComplianceReportID\">\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Compliance Report ID </th>\n                        <td mat-cell *matCellDef=\"let row\"> {{ row.ComplianceReportID }} </td>\n                    </ng-container>\n                \n                    <ng-container matColumnDef=\"orgName\">\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Organization Name </th>\n                        <td mat-cell *matCellDef=\"let row\"> {{ row.orgName }} </td>\n                    </ng-container>\n\n                    <ng-container matColumnDef=\"orgRegNo\">\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Registration Number </th>\n                        <td mat-cell *matCellDef=\"let row\"> {{ row.orgRegNo }} </td>\n                    </ng-container>\n                \n                    <ng-container matColumnDef=\"CreatedDate\">\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Created On </th>\n                        <td mat-cell *matCellDef=\"let row\"> {{ row.CreatedDate | date: 'MMM d, y' }} </td>\n                    </ng-container>\n                \n                    <!--<ng-container matColumnDef=\"OrganizationID\">\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header>Organization ID </th>\n                        <td mat-cell *matCellDef=\"let row\"> {{ row.OrganizationID }} </td>\n                    </ng-container> -->\n\n                    <ng-container matColumnDef=\"action\">\n                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Action </th>\n                        <td mat-cell *matCellDef=\"let row\">\n                            <button mat-button [matMenuTriggerFor]=\"menu\">\n                                <mat-icon>more_vert</mat-icon>\n                            </button>\n                            <mat-menu #menu=\"matMenu\">\n                                <a [routerLink]=\"['/compliance-and-reports','edit-compliance-reports',row.ComplianceReportID,row.orgRegNo,row.CreatedDate]\" mat-menu-item>View</a>\n                            </mat-menu>\n                        </td>\n                    </ng-container>\n                \n                    <tr mat-header-row *matHeaderRowDef=\"ReportsColumns\"></tr>\n                    <tr mat-row *matRowDef=\"let row; columns: ReportsColumns;\"></tr>\n                </table>               \n            </div>\n            <mat-paginator \n                class=\"paginator\" \n                [pageSize]=\"pageSize\">\n            </mat-paginator>\n        </fury-list>\n    </fury-page-layout-content>\n    \n</fury-page-layout>"],"sourceRoot":"webpack:///"}