{"version":3,"sources":["webpack:///node_modules/qrcode/lib/browser.js","webpack:///node_modules/angularx-qrcode/__ivy_ngcc__/fesm2015/angularx-qrcode.js","webpack:///src/app/modules/company-registration/components/data-protection-officers/data-protection-officers.component.ts","webpack:///src/app/modules/company-registration/components/data-protection-officers/data-protection-officers.component.html","webpack:///node_modules/qrcode/lib/core/alignment-pattern.js","webpack:///src/app/modules/company-registration/components/test-preview/test-preview.component.ts","webpack:///src/app/modules/company-registration/components/test-preview/test-preview.component.html","webpack:///node_modules/qrcode/lib/core/numeric-data.js","webpack:///src/app/modules/company-registration/company-registration.module.ts","webpack:///node_modules/qrcode/node_modules/isarray/index.js","webpack:///node_modules/qrcode/lib/core/byte-data.js","webpack:///node_modules/qrcode/lib/core/regex.js","webpack:///src/app/modules/company-registration/components/security-measures/security-measures.component.ts","webpack:///src/app/modules/company-registration/components/security-measures/security-measures.component.html","webpack:///src/app/modules/company-registration/components/third-parties/third-parties.component.ts","webpack:///src/app/modules/company-registration/components/third-parties/third-parties.component.html","webpack:///src/app/modules/company-registration/components/update/update-information/update-information.component.ts","webpack:///src/app/modules/company-registration/components/update/update-information/update-information.component.html","webpack:///node_modules/dijkstrajs/dijkstra.js","webpack:///src/app/modules/company-registration/components/cert-renewals/renewals/renewals.component.ts","webpack:///src/app/modules/company-registration/components/cert-renewals/renewals/renewals.component.html","webpack:///node_modules/qrcode/lib/core/version-check.js","webpack:///node_modules/qrcode/lib/core/polynomial.js","webpack:///node_modules/qrcode/lib/core/kanji-data.js","webpack:///src/app/modules/company-registration/components/view-cancel-registration/view-cancel-registration.component.ts","webpack:///src/app/modules/company-registration/components/view-cancel-registration/view-cancel-registration.component.html","webpack:///node_modules/qrcode/lib/core/error-correction-code.js","webpack:///src/app/modules/company-registration/components/manage-registration-update/manage-registration-update.component.ts","webpack:///src/app/modules/company-registration/components/manage-registration-update/manage-registration-update.component.html","webpack:///src/app/modules/company-registration/components/update-registration/update-registration.component.ts","webpack:///src/app/modules/company-registration/components/update-registration/update-registration.component.html","webpack:///node_modules/qrcode/lib/renderer/svg-tag.js","webpack:///node_modules/qrcode/lib/renderer/canvas.js","webpack:///src/app/modules/company-registration/components/company-registration-detail/company-registration-detail.component.ts","webpack:///src/app/modules/company-registration/components/company-registration-detail/company-registration-detail.component.html","webpack:///node_modules/qrcode/lib/renderer/utils.js","webpack:///src/app/modules/company-registration/components/company-cert/company-cert.component.ts","webpack:///src/app/modules/company-registration/components/company-cert/company-cert.component.html","webpack:///src/app/modules/company-registration/components/register-organisation/register-organisation.component.ts","webpack:///src/app/modules/company-registration/components/register-organisation/register-organisation.component.html","webpack:///node_modules/qrcode/lib/core/bit-matrix.js","webpack:///src/app/modules/company-registration/components/manage-ura-payment/manage-ura-payment.component.ts","webpack:///src/app/modules/company-registration/components/manage-ura-payment/manage-ura-payment.component.html","webpack:///node_modules/qrcode/lib/utils/typedarray-buffer.js","webpack:///src/app/modules/company-registration/components/ura-payments/ura-payments.component.ts","webpack:///src/app/modules/company-registration/components/ura-payments/ura-payments.component.html","webpack:///node_modules/qrcode/lib/can-promise.js","webpack:///node_modules/qrcode/lib/core/galois-field.js","webpack:///node_modules/qrcode/lib/core/utils.js","webpack:///node_modules/qrcode/lib/core/bit-buffer.js","webpack:///node_modules/qrcode/lib/core/mask-pattern.js","webpack:///node_modules/qrcode/lib/core/error-correction-level.js","webpack:///node_modules/qrcode/lib/core/reed-solomon-encoder.js","webpack:///src/app/modules/company-registration/components/countries/countries.component.ts","webpack:///src/app/modules/company-registration/components/countries/countries.component.html","webpack:///node_modules/qrcode/lib/core/finder-pattern.js","webpack:///src/app/modules/company-registration/components/edit-company-registration/edit-company-registration.component.ts","webpack:///src/app/modules/company-registration/components/edit-company-registration/edit-company-registration.component.html","webpack:///node_modules/qrcode/lib/core/format-info.js","webpack:///src/app/modules/company-registration/components/find-company-registration/find-company-registration.component.ts","webpack:///src/app/modules/company-registration/components/find-company-registration/find-company-registration.component.html","webpack:///node_modules/qrcode/lib/core/alphanumeric-data.js","webpack:///src/app/modules/company-registration/components/cert-preview/cert-preview.component.ts","webpack:///src/app/modules/company-registration/components/cert-preview/cert-preview.component.html","webpack:///node_modules/qrcode/lib/core/qrcode.js","webpack:///src/app/modules/company-registration/components/company-registration.model.ts","webpack:///node_modules/qrcode/lib/core/mode.js","webpack:///node_modules/qrcode/lib/core/segments.js","webpack:///node_modules/qrcode/lib/core/version.js","webpack:///src/app/modules/models/data-subject.model.ts","webpack:///src/app/modules/company-registration/company-registration-routing.module.ts","webpack:///src/app/modules/company-registration/components/cancel-registration/cancel-registration.component.ts","webpack:///src/app/modules/company-registration/components/cancel-registration/cancel-registration.component.html"],"names":["canPromise","QRCode","CanvasRenderer","SvgRenderer","renderCanvas","renderFunc","canvas","text","opts","cb","args","slice","call","arguments","argsNum","length","isLastArgCb","Error","undefined","getContext","Promise","resolve","reject","data","create","e","exports","toCanvas","bind","render","toDataURL","renderToDataURL","toString","_","_c0","QRCodeComponent","renderer","colordark","colorlight","level","hidetitle","size","usesvg","allowEmptyString","qrdata","colorDark","colorLight","cssClass","elementType","errorCorrectionLevel","margin","scale","width","console","warn","createQRCode","color","dark","light","version","err","url","error","type","element","qrcElement","nativeElement","childNodes","node","removeChild","appendChild","isNaN","isValidQrCodeText","createElement","then","renderElement","toSVG","svgString","setProperty","innerElement","firstChild","setAttribute","dataUrl","message","ɵfac","QRCodeComponent_Factory","t","ɵcmp","selectors","viewQuery","QRCodeComponent_Query","rf","ctx","_t","first","inputs","features","decls","vars","consts","template","QRCodeComponent_Template","encapsulation","changeDetection","ctorParameters","propDecorators","selector","OnPush","QRCodeModule","ɵmod","ɵinj","factory","QRCodeModule_Factory","providers","ngJitMode","declarations","DataProtectionOfficersComponent","fb","auth","utilService","snackBar","dataProtectionOfficerEvent","dataProtectionOfficer","subscriptions","errors","list","displayColumns","$dataProtectionOfficers","$processingEvent","$errorsEvent","buttonIcon","buttonLabel","isEditingDataProtectionOfficer","tableEditable","dataProtectionOfficerIndex","dataProtectionOfficerNumber","initForms","log","dataProtectionOfficers","forEach","push","initMainObject","dataProtectionOfficersFormGroup","group","name","required","postionInOrgainsation","email","physicalAddress","phoneNumber","option","valid","mapFormControlToControl","restDataProtectionOfficer","Name","get","value","PositionInOrganisation","EmailAddress","PhysicalAddress","PhoneNumber","setValue","reset","validateDataProtectionOfficerLabels","manageDataProtectionOfficer","id","index","splice","emit","formValid","templateUrl","styleUrls","isViewOnly","getSymbolSize","getRowColCoords","posCount","Math","floor","intervals","ceil","positions","i","reverse","getPositions","coords","pos","posLength","j","TestPreviewComponent","dialogRef","downloading","download","onDownloadLetter","close","setTimeout","options","filename","image","quality","html2canvas","backgroundColor","jspdf","unit","format","orientation","content","document","getElementById","from","set","save","onFulfilled","onCloseWindow","Mode","NumericData","mode","NUMERIC","getBitsLength","prototype","getLength","write","bitBuffer","substr","parseInt","put","remainingNum","module","CompanyRegistrationModule","imports","Array","isArray","arr","Buffer","ByteData","BYTE","l","numeric","alphanumeric","kanji","replace","byte","KANJI","RegExp","BYTE_KANJI","ALPHANUMERIC","TEST_KANJI","TEST_NUMERIC","TEST_ALPHANUMERIC","testKanji","str","test","testNumeric","testAlphanumeric","SecurityMeasuresComponent","securityEvent","securityMeasure","$securityMeasure","isEditingSecurityMeasure","securityMeasureIndex","securityMeasureNumber","securityMeasures","securityFormGroup","security_measure","resetControl","validateSecurityMeasureLabels","manageControl","ThirdPartiesComponent","thirdPartiesEvent","thirdParty","disclosePersonalDataTrimmed","$impactOfBreaches","isEditingThirdParty","thirdPartiesIndex","thirdPartiesNumber","thirdParties","paginator","thirdPartyFormGroup","thirdPartyName","purposeOfDisclosure","validateThirdPartiesLabels","ThirdPartyName","disclosePersonalData","$event","stopPropagation","UpdateInformationComponent","formBuilder","service","endpoints","dialog","bottomsheet","authService","_auth","_workflowService","http","changeDetector","registrationService","complaintService","route","processing","selectedIndex","isLinear","today","Date","selected","DPOSelected","natureOfbusinesses_arr","organisationCategories","selectedOrganisationCategories","selectedDataSources","MainActivitiesDisplayedColumns","dpoDisplayedColumns","securityMeasuresDisplayedColumns","thirdPartyDisplayedColumns","countryDisplayedColumns","mainActivities","countriesOfTransfer","selectedDataCategory","selectedDataSubCategory","selectedDataPurposes","natureOfBusinessCat","natureOfBusinessSubCat","selectedNatureOfBusinessSubCat","SpecifyTheLaw","ServiceOrProductProvided","SpecifyLegalObligation","OrganizationType","SectorName","NatureOfBusinessCat","CountryOfIncorporation","application","userProfile","dataCategory","updatePageTitle","formGeneralInformation","OrganizationName","getOrganisationName","DPPActCategory","OrganizationTypeID","URSBNumber","SectorID","OtherSector","maxLength","Location","PhoneNumberCode","disabled","pattern","NatureOfBusinessSubCat","formOrganisationDetails","DPORequired","DPOName","DPOPhysicalAddress","DPOPhoneNumber","DPOEmailAddress","DPOPositionInOrganisation","formPersonalDataHeld","SourceOfDataID","formPurposeRetention","Purpose","TotalRecordsAtRegistration","RecordPercentageGrowth","max","RetentionPeriod","formSecurityMeasures","RegistrationConsent","RegistrationDoneBy","formThirdParties","PersonalDataIsForDisclosure","StoreDataOutsideCountry","Listeners","httpSub","fetchMultiple","pipe","handleError","subscribe","responseList","countries","OrganisationCategoryId","OrganisationCategoryName","patchValue","dataSources","organisationTypes","sectors","dataCategories","dataPurposes","_loadApplicationDraft","determineErrorResponse","valueChanges","values","filter","item","includes","setValidators","clearValidators","controls","updateValueAndValidity","onNatureOfBusinessCatSelected","NatureOfBusinessSubCatId","DataSourceID","DataPurposeID","detectChanges","open","panelClass","disableClose","afterClosed","result","hasError","status","found","activity","Activity","row","openSnackBar","mainActivitiesDataSource","MainActivityPaginator","sort","MainActivityMatSort","indexOf","dpo","dpoDataSource","dpoPaginator","dpoMatSort","SecurityMeasure","securityMeasureDataSource","securityMeasurePaginator","securityMeasureMatSort","party","thirdPartyDataSource","thirdPartyPaginator","thirdPartyMatSort","Country","countriesDataSource","countryOfTransferPaginator","countryOfTransferMatSort","CountryID","Description","multiple","OrganisationName","proofOfPayment","documentForm3","event","SubCategory","checked","reqCountries","reqDataSources","reqOrganisationType","organisationType","reqSector","sector","reqDataSubcategories","dataSubcategories","reqDataPurpose","dataPurpose","reqNatureOfBusiness","natureOfBusiness","reqOrgRegSaveDraft","getOrgDetailsById","params","OrganizationID","getOrganisationID","OrganisationUserID","OrganisationCategory","RegTrackingNo","regTrackingNo","OrganisationID","NatureOfBusinessCatID","NatureOfBusiness","replaceAll","PersonalDataCollected","ThirdParties","Countries","SecurityMeasures","Attachment","Base64","Form3Attachment","ProofOfPayment","NatureOfBusinessCatId","response","getFormData","Form3","Sector","post","updateRegistrationDetails","title","code","navigate","technicalErrorResponse","bottomsheetRef","CurrentStepName","state","cat","substring","natureOfbusinesses","_selectedNatureOfBusinessSubCat","NatureOfBusinessSubatID","NatureOfBusinessSubCategoryName","sourceofdata","sourceofdata_arr","personalDataCollected","category","SubCategories","subCat","selectedSubCat","DataSubCategoryID","IsChecked","purpose","purpose_arr","_selectedDataPurposes","Document","Size","orgRegSaveDraft","unsubscribe","onAddSecurityMeasure","onUploadAttachments","onPreviewForm","onSubmit","dijkstra","single_source_shortest_paths","graph","s","d","predecessors","costs","PriorityQueue","make","closest","u","v","cost_of_s_to_u","adjacent_nodes","cost_of_e","cost_of_s_to_u_plus_cost_of_e","cost_of_s_to_v","first_visit","empty","pop","cost","hasOwnProperty","msg","join","extract_shortest_path_from_predecessor_list","nodes","predecessor","find_path","T","key","queue","sorter","default_sorter","a","b","shift","RenewalsComponent","childDataPurposeResults","showChildrenDataFields","showPRNDownload","childDataPurposes","selectedChildDataPurposes","formChildrenData","CollectChildrenData","PurposeForCollection","ChildDataID","ChildDataPurpose","ChildrenDataPurpose","renewApplication","_selectedChildrenDataPurposes","Organisation_User_ID","getPRNRequestData","generatePRN","PRN","phone_number","organisation_name","organisation_user_id","checkPRN","getPRN","ErrorCode","ErrorDesc","prn","prn_data","updateCollecthildrenData","onUploadForm3Attachments","onUploadProofOfPayment","isValid","GF","mul","p1","p2","coeff","fill","mod","divident","divisor","offset","generateECPolynomial","degree","poly","exp","Utils","KanjiData","toSJIS","ViewCancelRegistrationComponent","activateRoute","_authService","referenceService","contactInformation","showApprovalButton","workflowID","timeLineAccess","_hasRequestMoreInfo","_StepRequestingForMoreInfo","requestMoreInfoFields","canDownloadCertificate","permittedActions","$resultRefChecklistEvent","formFieldSections","personalDataCollectedCheckBoxEnabled","uploadedDocument","accesses","getKeycloakInstance","resourceAccess","roles","operationType","routeConfig","action","getCurrentNavigation","extras","formCancelRegistration","ReasonForCancellation","getCancelRegistration","dismiss","documentNotice","CancellationApproval","height","animations","ECLevel","EC_BLOCKS_TABLE","EC_CODEWORDS_TABLE","getBlocksCount","L","M","Q","H","getTotalCodewordsCount","ManageRegistrationUpdateComponent","new_data","_updateAttachment","_updateForm3Attachment","_updateProofOfPayment","securityMeasuresEnabled","thirdPartiesEnabled","countriesOfTransferEnabled","OrgID","CurrentStepID","isEditMode","pageTitle","SectionID","SectionName","Count","isOfficer","realmRole","val","localStorage","setItem","JSON","stringify","getDataFromMultipleRequests","fetchSingleApplication","reqFetchOrganisatioDetails","getUpdatedRegistrationDetails","String","hasRequestForMoreInfo","findDocumentActions","getDocumentWorkflow","orgRegistration","window","location","reload","isApplicant","disableAllControls","disable","workflowTimeLine","_purpose","DataPurpose","_subcategories","Status","UpdateRegistrationComponent","TechnicalComments","LegalComments","DirectorComments","disableByStatus","workflowSubscriptions","getChecklist","getOrgRegDetails","reviewComments","getReviewComments","comments","getIssuedCertDetails","organisationcategories","selectedCat","DataCategoryID","$resultWorkFlowActionsEvent","workFlowActions","hasStepAccess","StepAccess","Actions","access","ActionRole","snackBarAlert","duration","isLoaded","$resultRequestMoreInfo","HasRequest","Fields","Number","StepID","EnableRequestForMoreInformationFields","$resultPerformActionEvent","$resultDocWorkFlowTimelineEvent","currentStep","find","step","StepName","$resultDocumentCertificate","certificateDetails","DownloadCount","$checklist","ChecklistSection","checklist","ActionName","TECHNICAL_REVIEW_ACTION","LEGAL_REVIEW_ACTION","directorChecklist","CheckList","isRequestForMoreInfo","dialogResult","REQUEST_MORE_INFO_ACTION","performActionRMI","requestedMoreFields","performActionFinal","comment","performedAction","WorkFlowID","ActionID","RecordTrackingNo","Comment","ActionIsFinal","performingAction","generateCert","fields","rqMoreInfo","Email","NextStepID","performActionRequestMoreInfo","field","section","FieldName","enable","getColorAttrib","attrib","alpha","hex","toFixed","svgCmd","cmd","x","y","qrToPath","path","moveBy","newRow","lineLength","col","qrData","getOptions","modules","qrcodesize","bg","viewBox","svgTag","clearCanvas","clearRect","style","getCanvasElement","canvasEl","getImageWidth","createImageData","qrToImageData","putImageData","rendererOpts","CompanyRegistrationDetailComponent","updateOrganisationRegistrationDetails","hex2rgba","hexCode","split","concat","apply","map","c","hexValue","r","g","getScale","qrSize","imgData","qr","symbolSize","scaledMargin","palette","posDst","pxColor","iSrc","jSrc","CompanyCertComponent","datePipe","_workerService","closeWindow","hasRealmRole","baseClientURL","certificateData","OrgRegNumber","IssueDate","issueDate","currentDate","getTime","getDateSuperscript","transform","newDate","setFullYear","getFullYear","updateCertificateDownloadCount","opt","jsPDF","openPdf","pdfContainer","RegisterOrganisationComponent","OrganizationAccountUserID","onSaveDraft","onDownloadForm3","BitMatrix","reservedBit","reserved","xor","isReserved","ManageUraPaymentComponent","router","routingService","subject$","data$","asObservable","$resultComplaintsEvent","statusList","pageSize","statuses","description","columns","property","visible","isModelProperty","dataSource","getPRNData","paramMap","has","getGenericDDL","label","PrnData","trim","toLowerCase","getPrnData","column","onFilterChange","autosize","typedArraySupport","Uint8Array","__proto__","foo","TYPED_ARRAY_SUPPORT","K_MAX_LENGTH","arg","allocUnsafe","Symbol","species","Object","defineProperty","configurable","enumerable","writable","RangeError","isnan","createBuffer","that","buf","fromString","string","byteLength","actual","fromArrayLike","array","fromArrayBuffer","byteOffset","fromObject","obj","isBuffer","len","copy","ArrayBuffer","buffer","TypeError","utf8ToBytes","units","Infinity","codePoint","leadSurrogate","bytes","charCodeAt","isView","blitBuffer","src","dst","utf8Write","isFinite","remaining","start","end","newBuf","subarray","sliceLen","target","targetStart","_isBuffer","UraPaymentsComponent","allDialogRef","success_message","showPRN","getUser","organisation_id","formCreateAccount","fetchRoles","current_prn","current_search_code","SearchCode","Roles","getKeycloakRoles","Role","selected_role_id","RoleID","selected_role_name","RoleName","EXP_TABLE","LOG_TABLE","alloc","initTables","n","toSJISFunction","CODEWORDS_COUNT","getSymbolTotalCodewords","getBCHDigit","digit","setToSJISFunction","f","isKanjiModeEnabled","BitBuffer","bufIndex","num","putBit","getLengthInBits","bit","Patterns","PATTERN000","PATTERN001","PATTERN010","PATTERN011","PATTERN100","PATTERN101","PATTERN110","PATTERN111","PenaltyScores","N1","N2","N3","N4","mask","getPenaltyN1","points","sameCountCol","sameCountRow","lastCol","lastRow","getPenaltyN2","last","getPenaltyN3","bitsCol","bitsRow","getPenaltyN4","darkCount","modulesCount","k","abs","getMaskAt","maskPattern","applyMask","getBestMask","setupFormatFunc","numPatterns","keys","bestPattern","lowerPenalty","p","penalty","lcStr","defaultValue","Polynomial","ReedSolomonEncoder","genPoly","initialize","encode","pad","paddedData","remainder","buff","CountriesComponent","country","$resultRefCountriesEvent","$countries","countryEvent","isEditingCountry","countryIndex","countryNumber","initForm","loadReferenceTableDetails","countryFormGroup","resetCountry","validateCountryLabels","manageCountry","getCountries","storeDataOutSideCountry","FINDER_PATTERN_SIZE","EditCompanyRegistrationComponent","_referenceService","certDetailsEventEmitter","actionPerformed","_gap","gap","col2","col3","typesOfOrganisation","dataProtectionActors","rolesPerformed","refDataSourcesCat","refDataSourceSubCat","dataSourceSubCatChecked","$dataPurposes","selectedDataSourceCategory","selectedDataSourceSubCategory","$resultDocumentEvent","$resultRefDataSourceCatEvent","$resultReferenceDataSourcesEvent","$resultReferenceDataPurposesEvent","$resultRefSectorsEvent","$resultRefNatureOfBussEvent","$resultRefNatureOfBussCatEvent","$resultRefNatureOfBussSubCatEvent","Comments","DataProtectionOfficers","referenceTableSubscriptions","referenceTables","loadRegistrationDocumentDetails","certificateResponse","mapFields","DataSubCategory","$natureOfBusiness","$natureOfBusinessCat","$dataSources","$sectors","dataActors","organisationId","getCertificateDetails","entries","applicantDetails","dataProtectionOfficerFormGroup","personalDataHeldFormGroup","purposeRetentionFormGroup","disclosureFormGroup","organizationName","getRegistrationByReferenceNumber","isApplicationValid","tempArr","every","subscription","onDataThirdPartiesChange","onCountriesChange","onSecurityModelChange","G15","G15_MASK","G15_BCH","getEncodedBits","FindCompanyRegistrationComponent","authenticationService","showUpdateButton","$resultCompaniesEvent","isProcessing","isOrganisation","realmAccess","companyRegistrations","defineSearchFields","loadByOrganisationID","loadRegisteredOrganisation","loadMyPendingTask","getRegisteredOrganisation","getByOrgID","getMyPendingTask","registration","searchFields","fieldName","operators","dataType","TEXT","lookupOptions","DATETIME","ALPHA_NUM_CHARS","AlphanumericData","CertPreviewComponent","certDetails","companyCertComponent","AlignmentPattern","FinderPattern","MaskPattern","ECCode","Version","FormatInfo","Segments","setupFinderPattern","matrix","setupTimingPattern","setupAlignmentPattern","setupVersionInfo","bits","setupFormatInfo","setupData","inc","bitIndex","byteIndex","createData","segments","getCharCountIndicator","totalCodewords","ecTotalCodewords","dataTotalCodewordsBits","remainingByte","createCodewords","dataTotalCodewords","ecTotalBlocks","blocksInGroup2","blocksInGroup1","totalCodewordsInGroup1","dataCodewordsInGroup1","dataCodewordsInGroup2","ecCount","rs","dcData","ecData","maxDataSize","dataSize","createSymbol","fromArray","estimatedVersion","rawSegments","rawSplit","getBestVersionForData","bestVersion","dataBits","moduleCount","toSJISFunc","CompanyRegistrationModel","NewCompanyRegistrationModel","CheckListed","CancelRegistration","CompanyRegistration","model","oragisationName","yearOfStart","tin","ursbNumber","publicBody","localGovement","statute","headOfOganisation","titleOfOrganizationHead","postalAddress","landLine","emailAddress","dpoActCategory","totalRecordsAtRegistration","recordPercentageGrowth","retentionPeriod","dataStoredCategory","dataStoredSubCategory","sourceOfData","countriesStoringYourData","personalDataIsForDisclosure","reasonsForSharing","collectChildrenData","childDataConsentor","purposeForCollectingChildData","childLawPurpose","childResearchPurpose","registrationDate","concent","ComponyRegistrationObject","DataProtectionOfficerModelObject","CertificateDetailsResponse","CertificateDetails","CertificateRequest","ThirdPartiesObject","SecurityMeasuresModel","MainActivite","CompanyModel","companyDetails","address","contact","website","DataProtectionOfficerModel","COMPANY_REGISTRATION_DATA","COMPANY_REGISTRATION","TypeOfOrganisation","DataProtectionActors","Sectors","ROLES_PERFORMED","SECTORS","DataProtectionAct","VersionCheck","Regex","ccBits","MIXED","getBestModeForData","dataStr","getStringByteLength","unescape","encodeURIComponent","getSegments","regex","exec","getSegmentsFromString","numSegs","alphaNumSegs","byteSegs","kanjiSegs","segs","s1","s2","getSegmentBitsLength","mergeSegments","reduce","acc","curr","prevSeg","buildNodes","seg","buildGraph","table","prevNodeIds","nodeGroup","currentNodeIds","lastCount","prevNodeId","buildSingleSegment","modesHint","bestMode","optimizedSegs","G18","G18_BCH","getBestVersionForDataLength","currentVersion","getCapacity","getReservedBitsCount","getTotalBitsFromDataArray","totalBits","reservedBits","getBestVersionForMixedData","usableBits","ecl","DataSubjectModel","DataProtectionOfficer","routes","component","canActivate","viewOnlyMode","CompanyRegistrationRoutingModule","forChild","CancelRegistrationComponent","CerificateNumber","cancelRegistration","loadRegistrationCancelRequests","getRequestsToCancel","registrationDetails","certificate","checkCertificate"],"mappings":"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OzC,SAAP;AAVJ;AAYD,OAbD;;;;;;;;;;;;;;;;;ACzHA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAA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","file":"modules-company-registration-company-registration-module-es5.js","sourcesContent":["\nvar canPromise = require('./can-promise')\n\nvar QRCode = require('./core/qrcode')\nvar CanvasRenderer = require('./renderer/canvas')\nvar SvgRenderer = require('./renderer/svg-tag.js')\n\nfunction renderCanvas (renderFunc, canvas, text, opts, cb) {\n  var args = [].slice.call(arguments, 1)\n  var argsNum = args.length\n  var isLastArgCb = typeof args[argsNum - 1] === 'function'\n\n  if (!isLastArgCb && !canPromise()) {\n    throw new Error('Callback required as last argument')\n  }\n\n  if (isLastArgCb) {\n    if (argsNum < 2) {\n      throw new Error('Too few arguments provided')\n    }\n\n    if (argsNum === 2) {\n      cb = text\n      text = canvas\n      canvas = opts = undefined\n    } else if (argsNum === 3) {\n      if (canvas.getContext && typeof cb === 'undefined') {\n        cb = opts\n        opts = undefined\n      } else {\n        cb = opts\n        opts = text\n        text = canvas\n        canvas = undefined\n      }\n    }\n  } else {\n    if (argsNum < 1) {\n      throw new Error('Too few arguments provided')\n    }\n\n    if (argsNum === 1) {\n      text = canvas\n      canvas = opts = undefined\n    } else if (argsNum === 2 && !canvas.getContext) {\n      opts = text\n      text = canvas\n      canvas = undefined\n    }\n\n    return new Promise(function (resolve, reject) {\n      try {\n        var data = QRCode.create(text, opts)\n        resolve(renderFunc(data, canvas, opts))\n      } catch (e) {\n        reject(e)\n      }\n    })\n  }\n\n  try {\n    var data = QRCode.create(text, opts)\n    cb(null, renderFunc(data, canvas, opts))\n  } catch (e) {\n    cb(e)\n  }\n}\n\nexports.create = QRCode.create\nexports.toCanvas = renderCanvas.bind(null, CanvasRenderer.render)\nexports.toDataURL = renderCanvas.bind(null, CanvasRenderer.renderToDataURL)\n\n// only svg for now.\nexports.toString = renderCanvas.bind(null, function (data, _, opts) {\n  return SvgRenderer.render(data, opts)\n})\n","import { Component, ChangeDetectionStrategy, Renderer2, Input, ViewChild, NgModule } from '@angular/core';\nimport { toDataURL, toCanvas, toString } from 'qrcode';\n\nimport * as ɵngcc0 from '@angular/core';\n\nconst _c0 = [\"qrcElement\"];\nclass QRCodeComponent {\n    constructor(renderer) {\n        this.renderer = renderer;\n        // Deprecated\n        this.colordark = '';\n        this.colorlight = '';\n        this.level = '';\n        this.hidetitle = false;\n        this.size = 0;\n        this.usesvg = false;\n        // Valid for 1.x and 2.x\n        this.allowEmptyString = false;\n        this.qrdata = '';\n        // New fields introduced in 2.0.0\n        this.colorDark = '#000000ff';\n        this.colorLight = '#ffffffff';\n        this.cssClass = 'qrcode';\n        this.elementType = 'canvas';\n        this.errorCorrectionLevel = 'M';\n        this.margin = 4;\n        this.scale = 4;\n        this.width = 10;\n        // Deprecation warnings\n        if (this.colordark !== '') {\n            console.warn('[angularx-qrcode] colordark is deprecated, use colorDark.');\n        }\n        if (this.colorlight !== '') {\n            console.warn('[angularx-qrcode] colorlight is deprecated, use colorLight.');\n        }\n        if (this.level !== '') {\n            console.warn('[angularx-qrcode] level is deprecated, use errorCorrectionLevel.');\n        }\n        if (this.hidetitle !== false) {\n            console.warn('[angularx-qrcode] hidetitle is deprecated.');\n        }\n        if (this.size !== 0) {\n            console.warn('[angularx-qrcode] size is deprecated, use `width`. Defaults to 10.');\n        }\n        if (this.usesvg !== false) {\n            console.warn(`[angularx-qrcode] usesvg is deprecated, use [elementType]=\"'svg'\".`);\n        }\n    }\n    ngOnChanges() {\n        this.createQRCode();\n    }\n    isValidQrCodeText(data) {\n        if (this.allowEmptyString === false) {\n            return !(typeof data === 'undefined' ||\n                data === '' ||\n                data === 'null' ||\n                data === null);\n        }\n        return !(typeof data === 'undefined');\n    }\n    toDataURL() {\n        return new Promise((resolve, reject) => {\n            toDataURL(this.qrdata, {\n                color: {\n                    dark: this.colorDark,\n                    light: this.colorLight,\n                },\n                errorCorrectionLevel: this.errorCorrectionLevel,\n                margin: this.margin,\n                scale: this.scale,\n                version: this.version,\n                width: this.width,\n            }, (err, url) => {\n                if (err) {\n                    reject(err);\n                }\n                else {\n                    resolve(url);\n                }\n            });\n        });\n    }\n    toCanvas(canvas) {\n        return new Promise((resolve, reject) => {\n            toCanvas(canvas, this.qrdata, {\n                color: {\n                    dark: this.colorDark,\n                    light: this.colorLight,\n                },\n                errorCorrectionLevel: this.errorCorrectionLevel,\n                margin: this.margin,\n                scale: this.scale,\n                version: this.version,\n                width: this.width,\n            }, (error) => {\n                if (error) {\n                    reject(error);\n                }\n                else {\n                    resolve('success');\n                }\n            });\n        });\n    }\n    toSVG() {\n        return new Promise((resolve, reject) => {\n            toString(this.qrdata, {\n                color: {\n                    dark: this.colorDark,\n                    light: this.colorLight,\n                },\n                errorCorrectionLevel: this.errorCorrectionLevel,\n                margin: this.margin,\n                scale: this.scale,\n                type: 'svg',\n                version: this.version,\n                width: this.width,\n            }, (err, url) => {\n                if (err) {\n                    reject(err);\n                }\n                else {\n                    resolve(url);\n                }\n            });\n        });\n    }\n    renderElement(element) {\n        for (const node of this.qrcElement.nativeElement.childNodes) {\n            this.renderer.removeChild(this.qrcElement.nativeElement, node);\n        }\n        this.renderer.appendChild(this.qrcElement.nativeElement, element);\n    }\n    createQRCode() {\n        // Set sensitive defaults\n        if (this.version && this.version > 40) {\n            console.warn('[angularx-qrcode] max value for `version` is 40');\n            this.version = 40;\n        }\n        else if (this.version && this.version < 1) {\n            console.warn('[angularx-qrcode]`min value for `version` is 1');\n            this.version = 1;\n        }\n        else if (this.version !== undefined && isNaN(this.version)) {\n            console.warn('[angularx-qrcode] version should be a number, defaulting to auto.');\n            this.version = undefined;\n        }\n        try {\n            if (!this.isValidQrCodeText(this.qrdata)) {\n                throw new Error('[angularx-qrcode] Field `qrdata` is empty, set`allowEmptyString=\"true\"` to overwrite this behaviour.');\n            }\n            let element;\n            switch (this.elementType) {\n                case 'canvas':\n                    element = this.renderer.createElement('canvas');\n                    this.toCanvas(element)\n                        .then(() => {\n                        this.renderElement(element);\n                    })\n                        .catch((e) => {\n                        console.error('[angularx-qrcode] canvas error: ', e);\n                    });\n                    break;\n                case 'svg':\n                    element = this.renderer.createElement('div');\n                    this.toSVG()\n                        .then((svgString) => {\n                        this.renderer.setProperty(element, 'innerHTML', svgString);\n                        const innerElement = element.firstChild;\n                        this.renderer.setAttribute(innerElement, 'height', `${this.width}`);\n                        this.renderer.setAttribute(innerElement, 'width', `${this.width}`);\n                        this.renderElement(innerElement);\n                    })\n                        .catch((e) => {\n                        console.error('[angularx-qrcode] svg error: ', e);\n                    });\n                    break;\n                case 'url':\n                case 'img':\n                default:\n                    element = this.renderer.createElement('img');\n                    this.toDataURL()\n                        .then((dataUrl) => {\n                        element.setAttribute('src', dataUrl);\n                        this.renderElement(element);\n                    })\n                        .catch((e) => {\n                        console.error('[angularx-qrcode] img/url error: ', e);\n                    });\n            }\n        }\n        catch (e) {\n            console.error('[angularx-qrcode] Error generating QR Code: ', e.message);\n        }\n    }\n}\nQRCodeComponent.ɵfac = function QRCodeComponent_Factory(t) { return new (t || QRCodeComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2)); };\nQRCodeComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: QRCodeComponent, selectors: [[\"qrcode\"]], viewQuery: function QRCodeComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(_c0, true);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.qrcElement = _t.first);\n    } }, inputs: { colordark: \"colordark\", colorlight: \"colorlight\", level: \"level\", hidetitle: \"hidetitle\", size: \"size\", usesvg: \"usesvg\", allowEmptyString: \"allowEmptyString\", qrdata: \"qrdata\", colorDark: \"colorDark\", colorLight: \"colorLight\", cssClass: \"cssClass\", elementType: \"elementType\", errorCorrectionLevel: \"errorCorrectionLevel\", margin: \"margin\", scale: \"scale\", width: \"width\", version: \"version\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 2, vars: 2, consts: [[\"qrcElement\", \"\"]], template: function QRCodeComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"div\", null, 0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassMap(ctx.cssClass);\n    } }, encapsulation: 2, changeDetection: 0 });\nQRCodeComponent.ctorParameters = () => [\n    { type: Renderer2 }\n];\nQRCodeComponent.propDecorators = {\n    colordark: [{ type: Input }],\n    colorlight: [{ type: Input }],\n    level: [{ type: Input }],\n    hidetitle: [{ type: Input }],\n    size: [{ type: Input }],\n    usesvg: [{ type: Input }],\n    allowEmptyString: [{ type: Input }],\n    qrdata: [{ type: Input }],\n    colorDark: [{ type: Input }],\n    colorLight: [{ type: Input }],\n    cssClass: [{ type: Input }],\n    elementType: [{ type: Input }],\n    errorCorrectionLevel: [{ type: Input }],\n    margin: [{ type: Input }],\n    scale: [{ type: Input }],\n    version: [{ type: Input }],\n    width: [{ type: Input }],\n    qrcElement: [{ type: ViewChild, args: ['qrcElement', { static: true },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(QRCodeComponent, [{\n        type: Component,\n        args: [{\n                selector: 'qrcode',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                template: `<div #qrcElement [class]=\"cssClass\"></div>`\n            }]\n    }], function () { return [{ type: ɵngcc0.Renderer2 }]; }, { colordark: [{\n            type: Input\n        }], colorlight: [{\n            type: Input\n        }], level: [{\n            type: Input\n        }], hidetitle: [{\n            type: Input\n        }], size: [{\n            type: Input\n        }], usesvg: [{\n            type: Input\n        }], allowEmptyString: [{\n            type: Input\n        }], qrdata: [{\n            type: Input\n        }], colorDark: [{\n            type: Input\n        }], colorLight: [{\n            type: Input\n        }], cssClass: [{\n            type: Input\n        }], elementType: [{\n            type: Input\n        }], errorCorrectionLevel: [{\n            type: Input\n        }], margin: [{\n            type: Input\n        }], scale: [{\n            type: Input\n        }], width: [{\n            type: Input\n        }], version: [{\n            type: Input\n        }], qrcElement: [{\n            type: ViewChild,\n            args: ['qrcElement', { static: true }]\n        }] }); })();\n\nclass QRCodeModule {\n}\nQRCodeModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: QRCodeModule });\nQRCodeModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function QRCodeModule_Factory(t) { return new (t || QRCodeModule)(); }, providers: [] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(QRCodeModule, { declarations: [QRCodeComponent], exports: [QRCodeComponent] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(QRCodeModule, [{\n        type: NgModule,\n        args: [{\n                providers: [],\n                declarations: [QRCodeComponent],\n                exports: [QRCodeComponent]\n            }]\n    }], null, null); })();\n\n/*\n * Public API Surface of angularx-qrcode\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { QRCodeComponent, QRCodeModule };\n\n//# sourceMappingURL=angularx-qrcode.js.map","import {Component, EventEmitter, Input, OnInit} from '@angular/core';\nimport {\n    BreachControlCategoryReferenceModel,\n    BreachControlModel,\n    BreachControlReferenceModel, ImpactOfBreachModel\n} from '../../../reporting-and-notification/breach-model';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {Subscription} from 'rxjs';\nimport {DataProtectionOfficer} from '../../../models/data-subject.model';\nimport {DataServiceError} from '../../../../../@fury/shared/HttpModel';\nimport {KeycloakService} from 'keycloak-angular';\nimport {SnackBarService} from '../../../../pages/services/snack-bar.service';\nimport {UtilService} from '../../../../../@fury/services/util.service';\n\n@Component({\n    selector: 'fury-data-protection-officers',\n    templateUrl: './data-protection-officers.component.html',\n    styleUrls: ['./data-protection-officers.component.scss']\n})\nexport class DataProtectionOfficersComponent implements OnInit {\n\n    @Input() dataProtectionOfficers: DataProtectionOfficer[];\n    @Input() isViewOnly: boolean;\n    @Input() dataProtectionOfficerEvent = new EventEmitter<DataProtectionOfficer[]>();\n\n    dataProtectionOfficer: DataProtectionOfficer = new DataProtectionOfficer();\n\n    dataProtectionOfficersFormGroup: FormGroup;\n\n    subscriptions: Subscription[] = [];\n\n    //arrays\n    errors: string[] = [];\n    list = [];\n    displayColumns: string [] = ['nber', 'name', 'postionInOrganisation', 'email', 'physicalAddress', 'phoneNumber', 'actions'];\n    $dataProtectionOfficers: DataProtectionOfficer [] = [];\n    //events\n    $processingEvent: EventEmitter<boolean> = new EventEmitter();\n    $errorsEvent: EventEmitter<DataServiceError[]> = new EventEmitter();\n    //Button Config\n    buttonIcon = 'add_circle_outline';\n    buttonLabel = 'Add';\n    //boolean\n    isEditingDataProtectionOfficer = false;\n    tableEditable: boolean = true;\n    // int\n    dataProtectionOfficerIndex = 0;\n    dataProtectionOfficerNumber = 1;\n\n    constructor(\n        private fb: FormBuilder,\n        private auth: KeycloakService,\n        private utilService: UtilService,\n        public snackBar: SnackBarService\n    ) {\n\n    }\n\n    ngOnInit(): void {\n        this.initForms();\n        console.log(\"DPO \" + this.dataProtectionOfficers);\n        if (this.dataProtectionOfficers) {\n            this.dataProtectionOfficers.forEach(dataProtectionOfficer => this.list.push(dataProtectionOfficer));\n        }\n        this.initMainObject();\n    }\n\n    private initMainObject() {\n        this.dataProtectionOfficer = new DataProtectionOfficer();\n    }\n\n    private initForms(): void {\n        this.dataProtectionOfficersFormGroup = this.fb.group(\n            {\n                name: [null, Validators.required],\n                postionInOrgainsation: [null, Validators.required],\n                email: [null, Validators.required],\n                physicalAddress: [null, Validators.required],\n                phoneNumber: [null, Validators.required],\n            }\n        );\n    }\n\n    addOrUpdateDataProtectionOfficer(option: number): void {\n        if (this.dataProtectionOfficersFormGroup.valid) {\n            this.mapFormControlToControl(1);\n            if (option === 1) {\n                this.list.push(this.dataProtectionOfficer);\n                this.dataProtectionOfficers.push(this.dataProtectionOfficer);\n                this.list = [...this.list];\n            } else {\n                this.list[this.dataProtectionOfficerIndex] = this.dataProtectionOfficer;\n                this.dataProtectionOfficers[this.dataProtectionOfficerNumber] = this.dataProtectionOfficer;\n                this.list = [...this.dataProtectionOfficers];\n            }\n            this.restDataProtectionOfficer();\n            console.log(this.list);\n        }\n    }\n\n    private mapFormControlToControl(option: number) {\n        if (option === 1) {\n            this.dataProtectionOfficer.Name = this.dataProtectionOfficersFormGroup.get('name').value;\n            this.dataProtectionOfficer.PositionInOrganisation = this.dataProtectionOfficersFormGroup.get('postionInOrgainsation').value;\n            this.dataProtectionOfficer.EmailAddress = this.dataProtectionOfficersFormGroup.get('email').value;\n            this.dataProtectionOfficer.PhysicalAddress = this.dataProtectionOfficersFormGroup.get('physicalAddress').value;\n            this.dataProtectionOfficer.PhoneNumber = this.dataProtectionOfficersFormGroup.get('phoneNumber').value;\n        } else {\n            this.dataProtectionOfficersFormGroup.get('name').setValue(this.dataProtectionOfficer.Name);\n            this.dataProtectionOfficersFormGroup.get('postionInOrgainsation').setValue(this.dataProtectionOfficer.PositionInOrganisation);\n            this.dataProtectionOfficersFormGroup.get('email').setValue(this.dataProtectionOfficer.EmailAddress);\n            this.dataProtectionOfficersFormGroup.get('physicalAddress').setValue(this.dataProtectionOfficer.PhysicalAddress);\n            this.dataProtectionOfficersFormGroup.get('phoneNumber').setValue(this.dataProtectionOfficer.PhoneNumber);\n        }\n    }\n\n\n    restDataProtectionOfficer() {\n        this.dataProtectionOfficersFormGroup.reset();\n        this.dataProtectionOfficer = new DataProtectionOfficer();\n        this.validateDataProtectionOfficerLabels(1);\n        this.manageDataProtectionOfficer(1);\n    }\n\n    validateDataProtectionOfficerLabels(option: number) {\n        if (option === 1) {\n            this.buttonIcon = 'add_circle_outline';\n            this.buttonLabel = 'Add potential Imapact';\n        } else {\n            this.buttonIcon = 'save';\n            this.buttonLabel = 'Save';\n        }\n    }\n\n    manageDataProtectionOfficer(option: number, id ?: number) {\n        if (option === 2) {\n            this.dataProtectionOfficer = this.dataProtectionOfficers[id];\n            this.isEditingDataProtectionOfficer = true;\n            this.dataProtectionOfficerIndex = id;\n            this.mapFormControlToControl(option);\n        } else {\n            this.isEditingDataProtectionOfficer = false;\n            this.dataProtectionOfficer = new DataProtectionOfficer();\n            this.dataProtectionOfficerIndex = 0;\n        }\n        this.validateDataProtectionOfficerLabels(option);\n    }\n\n    deleteItem(index: number) {\n        this.list.splice(index, 1);\n        this.dataProtectionOfficers.splice(index, 1);\n        this.list = [...this.list];\n        // Send items to parent\n        this.dataProtectionOfficerEvent.emit(this.dataProtectionOfficers);\n        this.isEditingDataProtectionOfficer = false;\n    }\n\n    isValidForm() {\n        let formValid = this.dataProtectionOfficersFormGroup.valid;\n        return formValid;\n    }\n\n}\n\n","<ng-container>\n    <ng-container *ngIf=\"!isViewOnly\">\n        <form [formGroup]=\"dataProtectionOfficersFormGroup\">\n            <ng-template matStepLabel>Data Protection Officers</ng-template>\n\n            <div class=\"content\" fxLayout=\"column\" fxLayoutGap=\"8px\">\n                <mat-form-field fxFlex=\"2 1 auto\">\n                    <mat-label>Name</mat-label>\n                    <input formControlName=\"name\" matInput>\n                </mat-form-field>\n                <mat-form-field fxFlex=\"2 1 auto\">\n                    <mat-label>Position In Organisation</mat-label>\n                    <input formControlName=\"postionInOrgainsation\" matInput>\n                </mat-form-field>\n                <mat-form-field fxFlex=\"2 1 auto\">\n                    <mat-label>Email Address</mat-label>\n                    <input formControlName=\"email\" matInput>\n                </mat-form-field>\n                <mat-form-field fxFlex=\"2 1 auto\">\n                    <mat-label>Physical Address</mat-label>\n                    <input formControlName=\"physicalAddress\" matInput>\n                </mat-form-field>\n                <mat-form-field fxFlex=\"2 1 auto\">\n                    <mat-label>Phone Number</mat-label>\n                    <input formControlName=\"phoneNumber\" matInput>\n                </mat-form-field>\n            </div>\n        </form>\n        <div *ngIf=\"!isViewOnly\" style=\"text-align: right; padding-top: 5px; padding-bottom: 5px;\">\n            <button mat-raised-button\n                    (click)=\"addOrUpdateDataProtectionOfficer(isEditingDataProtectionOfficer?2:1)\" color=\"primary\"\n                    [disabled]=\"!isValidForm()\">\n                <mat-icon>{{buttonIcon}}</mat-icon>\n                <span>{{buttonLabel}}</span>\n            </button>&nbsp;\n            <span class=\"example-spacer\"></span>\n            <button mat-raised-button (click)=\"restDataProtectionOfficer()\" color=\"warn\">\n                <mat-icon>cancel</mat-icon>\n                <span>Cancel</span>\n            </button>\n        </div>\n    </ng-container>\n\n    <div class=\"content\" fxLayout=\"column\" fxLayoutGap=\"8px\">\n        <table mat-table [dataSource]=\"list\">\n            <ng-container matColumnDef=\"nber\">\n                <th mat-header-cell *matHeaderCellDef style=\"width: 5%\"\n                    class=\"tableFontSize firstColumnTable alignCenter\">#\n                </th>\n                <td mat-cell *matCellDef=\"let element; let j=index;\"\n                    class=\"tableFontSize firstColumnTable alignCenter\">\n                    {{j + 1}}\n                </td>\n            </ng-container>\n            <ng-container matColumnDef=\"name\">\n                <th mat-header-cell *matHeaderCellDef class=\"tableFontSize \" style=\"width: 20%\">Name</th>\n                <td mat-cell *matCellDef=\"let element\" class=\"tableFontSize \">\n                    {{element.Name}}\n                </td>\n            </ng-container>\n            <ng-container matColumnDef=\"postionInOrganisation\">\n                <th mat-header-cell *matHeaderCellDef class=\"tableFontSize \" style=\"width: 20%\">Postion In\n                    Organisation\n                </th>\n                <td mat-cell *matCellDef=\"let element\" class=\"tableFontSize \">\n                    {{element.PositionInOrganisation}}\n                </td>\n            </ng-container>\n            <ng-container matColumnDef=\"email\">\n                <th mat-header-cell *matHeaderCellDef class=\"tableFontSize \" style=\"width: 20%\">Email</th>\n                <td mat-cell *matCellDef=\"let element\" class=\"tableFontSize \">\n                    {{element.EmailAddress}}\n                </td>\n            </ng-container>\n            <ng-container matColumnDef=\"physicalAddress\">\n                <th mat-header-cell *matHeaderCellDef class=\"tableFontSize \" style=\"width: 20%\">Physical Address</th>\n                <td mat-cell *matCellDef=\"let element\" class=\"tableFontSize \">\n                    {{element.PhysicalAddress}}\n                </td>\n            </ng-container>\n            <ng-container matColumnDef=\"phoneNumber\">\n                <th mat-header-cell *matHeaderCellDef class=\"tableFontSize \" style=\"width: 20%\"> Phone Number</th>\n                <td mat-cell *matCellDef=\"let element\" class=\"tableFontSize \">\n                    {{element.PhoneNumber}}\n                </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"actions\">\n                <th mat-header-cell *matHeaderCellDef style=\"width: 5%\">Actions</th>\n                <td mat-cell *matCellDef=\"let element; let j=index\" class=\"actions\">\n                    <ng-container *ngIf=\"!isViewOnly\">\n                        <a class=\"link\" (click)=\"manageDataProtectionOfficer(2,j)\">\n                            <mat-icon color=\"primary\" class=\"material-icons-outlined\" matTooltip=\"Edit item\">edit\n                            </mat-icon>\n                        </a>&nbsp;&nbsp;\n                        <a class=\"link\" (click)=\"deleteItem(j)\">\n                            <mat-icon color=\"warn\" class=\"material-icons-outlined\" matTooltip=\"Delete item\">delete\n                            </mat-icon>\n                        </a>\n                    </ng-container>\n                </td>\n            </ng-container>\n            <ng-container matColumnDef=\"noData\">\n                <td mat-footer-cell *matFooterCellDef colspan=\"7\">\n                    There is no data!\n                </td>\n            </ng-container>\n            <tr mat-header-row *matHeaderRowDef=\"displayColumns;sticky:true\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayColumns;\"></tr>\n            <tr mat-footer-row *matFooterRowDef=\"['noData']\" [ngClass]=\"{'hide':!(list?.length==0)}\"></tr>\n        </table>\n    </div>\n</ng-container>\n\n\n<!-- LIST OF ITEMS -->\n\n","/**\n * Alignment pattern are fixed reference pattern in defined positions\n * in a matrix symbology, which enables the decode software to re-synchronise\n * the coordinate mapping of the image modules in the event of moderate amounts\n * of distortion of the image.\n *\n * Alignment patterns are present only in QR Code symbols of version 2 or larger\n * and their number depends on the symbol version.\n */\n\nvar getSymbolSize = require('./utils').getSymbolSize\n\n/**\n * Calculate the row/column coordinates of the center module of each alignment pattern\n * for the specified QR Code version.\n *\n * The alignment patterns are positioned symmetrically on either side of the diagonal\n * running from the top left corner of the symbol to the bottom right corner.\n *\n * Since positions are simmetrical only half of the coordinates are returned.\n * Each item of the array will represent in turn the x and y coordinate.\n * @see {@link getPositions}\n *\n * @param  {Number} version QR Code version\n * @return {Array}          Array of coordinate\n */\nexports.getRowColCoords = function getRowColCoords (version) {\n  if (version === 1) return []\n\n  var posCount = Math.floor(version / 7) + 2\n  var size = getSymbolSize(version)\n  var intervals = size === 145 ? 26 : Math.ceil((size - 13) / (2 * posCount - 2)) * 2\n  var positions = [size - 7] // Last coord is always (size - 7)\n\n  for (var i = 1; i < posCount - 1; i++) {\n    positions[i] = positions[i - 1] - intervals\n  }\n\n  positions.push(6) // First coord is always 6\n\n  return positions.reverse()\n}\n\n/**\n * Returns an array containing the positions of each alignment pattern.\n * Each array's element represent the center point of the pattern as (x, y) coordinates\n *\n * Coordinates are calculated expanding the row/column coordinates returned by {@link getRowColCoords}\n * and filtering out the items that overlaps with finder pattern\n *\n * @example\n * For a Version 7 symbol {@link getRowColCoords} returns values 6, 22 and 38.\n * The alignment patterns, therefore, are to be centered on (row, column)\n * positions (6,22), (22,6), (22,22), (22,38), (38,22), (38,38).\n * Note that the coordinates (6,6), (6,38), (38,6) are occupied by finder patterns\n * and are not therefore used for alignment patterns.\n *\n * var pos = getPositions(7)\n * // [[6,22], [22,6], [22,22], [22,38], [38,22], [38,38]]\n *\n * @param  {Number} version QR Code version\n * @return {Array}          Array of coordinates\n */\nexports.getPositions = function getPositions (version) {\n  var coords = []\n  var pos = exports.getRowColCoords(version)\n  var posLength = pos.length\n\n  for (var i = 0; i < posLength; i++) {\n    for (var j = 0; j < posLength; j++) {\n      // Skip if position is occupied by finder patterns\n      if ((i === 0 && j === 0) ||             // top-left\n          (i === 0 && j === posLength - 1) || // bottom-left\n          (i === posLength - 1 && j === 0)) { // top-right\n        continue\n      }\n\n      coords.push([pos[i], pos[j]])\n    }\n  }\n\n  return coords\n}\n","\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n// tslint:disable-next-line:max-line-length\n// import { CountryOfTransfer, DataProtectionOfficer, DataPurposes, DataSource, DataSubCategory, FileUpload, NatureOfBusinessSubCat, SecurityMeasure, ThirdParty } from 'src/app/services/api.model';\nimport * as html2pdf from 'html2pdf.js';\n\n\n\ninterface Data {\n  download: boolean;\n  row: FormData;\n  Attachment: any;\n  Form3: any;\n  ProofOfPayment: any;\n  OrganizationType: string;\n  Sector: string;\n  NatureOfBusinessCat: string;\n  CountryOfIncorporation: string;\n}\n\ninterface FormData {\n  OrganisationName: string;\n  OrganisationCategory: string;\n  OrganizationTypeID: string;\n  CountryOfIncorporation: string;\n  URSBNumber: string;\n  SectorID: string;\n  OtherSector: string;\n  Location: string;\n  PhoneNumber: string;\n  EmailAddress: string;\n  NatureOfBusinessCatID: number;\n  NatureOfBusiness: any [];\n  DPORequired: string;\n  DPOName: string;\n  DPOPhysicalAddress: string;\n  DPOPhoneNumber: string;\n  DPOEmailAddress: string;\n  DPOPositionInOrganisation: string;\n  SourceOfDataID: any [];\n  PersonalDataCollected: any [];\n  Purpose: any [];\n  SpecifyTheLaw: string;\n  ServiceOrProductProvided: string;\n  SpecifyLegalObligation: string;\n  TotalRecordsAtRegistration: number;\n  RecordPercentageGrowth: number;\n  RetentionPeriod: number;\n  PersonalDataIsForDisclosure: string;\n  ThirdParties: any [];\n  StoreDataOutsideCountry: string;\n  Countries: any [];\n  SecurityMeasures: any [];\n  Attachment: string;\n  Form3Attachment: string;\n  RegistrationConsent: string;\n  RegistrationDoneBy: string;\n  ProofOfPayment: string;\n}\n\n@Component({\n  selector: 'fury-test-preview',\n  templateUrl: './test-preview.component.html',\n  styleUrls: ['./test-preview.component.scss']\n})\n\nexport class TestPreviewComponent implements OnInit {\n\n  downloading = false;\n\n  constructor(\n      private dialogRef: MatDialogRef<TestPreviewComponent>,\n      @Inject(MAT_DIALOG_DATA) public data: Data,\n      // private service: ApiService,\n  ) { }\n\n  ngOnInit(): void {\n\n    console.log('data:', this.data);\n\n    if (this.data.download) {\n      this.onDownloadLetter();\n    }\n\n  }\n\n  onCloseWindow(): void {\n    this.dialogRef.close();\n  }\n\n  onDownloadLetter(): void {\n    this.downloading = true;\n\n    setTimeout(() => {\n      // this.service.openSnackBar('Downloading. Please wait.', 'nuetral');\n\n      const options = {\n        filename: 'Registration.pdf',\n        image: { type: 'jpeg', quality: 1.00 },\n        html2canvas: {\n          scale: 2,\n          backgroundColor: null,\n        },\n        jspdf: {\n          unit: 'in',\n          format: 'letter',\n          orientation: 'landscape '\n        },\n        margin: 1,\n      };\n\n      const content: Element = document.getElementById('letterBodyContainer');\n\n      html2pdf()\n          .from(content)\n          .set(options)\n          .save()\n          .then((onFulfilled) => {\n\n            setTimeout(() => {\n              this.downloading = false;\n\n              if (this.data.download) {\n                this.onCloseWindow();\n              }\n\n              // this.service.openSnackBar('Downloaded. Please check in your downloads.', 'success-lg');\n            }, 1000);\n\n          });\n    }, 1000);\n  }\n}\n\n","<main>\n    <button mat-button class=\"close-window-btn\" (click)=\"onCloseWindow()\">\n        <mat-icon>clear</mat-icon>\n    </button>\n\n    <article\n            style=\"width: 100%; margin: 0px 0px 30px; position: relative;\"\n            id=\"letterBodyContainer\">\n\n        <button\n                *ngIf=\"!downloading\"\n                mat-button\n                color=\"primary\"\n                [disabled]=\"downloading\"\n                class=\"download-button\"\n                (click)=\"onDownloadLetter()\">\n            <div class=\"button-label\">\n                <mat-icon>cloud_download</mat-icon>\n                <span>Download </span>\n            </div>\n        </button>\n\n        <div class=\"image-wrapper\" [ngStyle]=\"{'margin': downloading ? '10px auto 40px' : '30px auto 40px', 'width': '200px', 'overflow': 'hidden'}\">\n            <img src=\"./assets/icons/Final-logos-28.png\" style=\"width: 100%; \" alt=\"\">\n        </div>\n\n        <section class=\"letter-body\" style=\"padding: 0px 40px 45px;\">\n            <div style=\"position:absolute;left:0px;top:0px\">\n                <img src=\"./assets/img/background1.jpg\" style=\"width:841px; height:595px\" alt=\"\">\n            </div>\n            <div style=\"position:absolute;left:113.50px;top:59.40px\" class=\"cls_003\"><span class=\"cls_003\">Regulation 19(2)</span></div>\n            <div style=\"position:absolute;left:113.50px;top:75.00px\" class=\"cls_003\"><span class=\"cls_003\">FORM 4</span></div>\n            <div style=\"position:absolute;left:269.94px;top:167.49px\" class=\"cls_002\"><span class=\"cls_002\">CERTIFICATE OF REGISTRATION</span></div>\n            <div style=\"position:absolute;left:352.45px;top:218.12px\" class=\"cls_004\"><span class=\"cls_004\">I CERTIFY THAT</span></div>\n            <div style=\"position:absolute;left:119.76px;top:256.17px\" class=\"cls_004\"><span class=\"cls_004\">………………………………………</span> <b> </b></div>\n            <div style=\"position:absolute;left:475.80px;top:256.17px\" class=\"cls_004\"><span class=\"cls_004\">……………………………………………...</span></div>\n            <div style=\"position:absolute;left:315.83px;top:294.21px\" class=\"cls_004\"><span class=\"cls_004\">has this day been registered as</span></div>\n            <div style=\"position:absolute;left:233.56px;top:313.22px\" class=\"cls_005\"><span class=\"cls_005\">a data collector/data processor/data controller </span><span class=\"cls_004\">under</span></div>\n            <div style=\"position:absolute;left:212.22px;top:332.24px\" class=\"cls_004\"><span class=\"cls_004\">the Data Protection and Privacy Act, 2019 under the following</span></div>\n            <div style=\"position:absolute;left:149.82px;top:370.28px\" class=\"cls_004\"><span class=\"cls_004\">registration number…………………………………<b></b>………………………………</span></div>\n            <div style=\"position:absolute;left:204.77px;top:389.29px\" class=\"cls_004\"><span class=\"cls_004\">This certificate is valid for twelve months from the date of issue.</span></div>\n            <div style=\"position:absolute;left:166.46px;top:427.33px\" class=\"cls_004\"><span class=\"cls_004\">Dated this………<b></b>………day of…………<b></b>……………the year…………<b></b>…………</span></div>\n            <div style=\"position:absolute;left:268.90px;top:478.98px\" class=\"cls_004\"><span class=\"cls_004\">……………………………………………………</span></div>\n            <div style=\"position:absolute;left:270.92px;top:502.54px\" class=\"cls_005\"><span class=\"cls_005\">National Personal Data Protection Director</span></div>\n            <div style=\"position:absolute;left:177.83px;top:557.48px\" class=\"cls_006\"><span class=\"cls_006\">This certificate shall remain in force unless revoked by the Personal Data Protection Office</span></div>\n\n        </section>\n\n    </article>\n</main>\n","var Mode = require('./mode')\n\nfunction NumericData (data) {\n  this.mode = Mode.NUMERIC\n  this.data = data.toString()\n}\n\nNumericData.getBitsLength = function getBitsLength (length) {\n  return 10 * Math.floor(length / 3) + ((length % 3) ? ((length % 3) * 3 + 1) : 0)\n}\n\nNumericData.prototype.getLength = function getLength () {\n  return this.data.length\n}\n\nNumericData.prototype.getBitsLength = function getBitsLength () {\n  return NumericData.getBitsLength(this.data.length)\n}\n\nNumericData.prototype.write = function write (bitBuffer) {\n  var i, group, value\n\n  // The input data string is divided into groups of three digits,\n  // and each group is converted to its 10-bit binary equivalent.\n  for (i = 0; i + 3 <= this.data.length; i += 3) {\n    group = this.data.substr(i, 3)\n    value = parseInt(group, 10)\n\n    bitBuffer.put(value, 10)\n  }\n\n  // If the number of input digits is not an exact multiple of three,\n  // the final one or two digits are converted to 4 or 7 bits respectively.\n  var remainingNum = this.data.length - i\n  if (remainingNum > 0) {\n    group = this.data.substr(i)\n    value = parseInt(group, 10)\n\n    bitBuffer.put(value, remainingNum * 3 + 1)\n  }\n}\n\nmodule.exports = NumericData\n","import {NgModule} from '@angular/core';\nimport {CommonModule, DatePipe} from '@angular/common';\n\nimport {CompanyRegistrationRoutingModule} from './company-registration-routing.module';\nimport {FindCompanyRegistrationComponent} from './components/find-company-registration/find-company-registration.component';\nimport {EditCompanyRegistrationComponent} from './components/edit-company-registration/edit-company-registration.component';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {MaterialModule} from '../../../@fury/shared/material-components.module';\nimport {FurySharedModule} from '../../../@fury/fury-shared.module';\nimport {ListModule} from '../../../@fury/shared/list/list.module';\nimport {CustomerCreateUpdateModule} from '../../pages/tables/all-in-one-table/customer-create-update/customer-create-update.module';\nimport {BreadcrumbsModule} from '../../../@fury/shared/breadcrumbs/breadcrumbs.module';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {ReportingAndNotificationRoutingModule} from '../reporting-and-notification/reporting-and-notification-routing.module';\nimport {FormElementsRoutingModule} from '../../pages/forms/form-elements/form-elements-routing.module';\nimport {FormWizardRoutingModule} from '../../pages/forms/form-wizard/form-wizard-routing.module';\nimport {HighlightModule} from '../../../@fury/shared/highlightjs/highlight.module';\nimport {FuryCardModule} from '../../../@fury/shared/card/card.module';\nimport { SecurityMeasuresComponent } from './components/security-measures/security-measures.component';\nimport { ThirdPartiesComponent } from './components/third-parties/third-parties.component';\nimport { DataProtectionOfficersComponent } from './components/data-protection-officers/data-protection-officers.component';\nimport {ReviewCommentsModule} from '../../layout/review-comments/review-comments.module';\nimport { CompanyCertComponent } from './components/company-cert/company-cert.component';\nimport { CertPreviewComponent } from './components/cert-preview/cert-preview.component';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {ApplicationTimelineModule} from '../../layout/application-timeline/application-timeline.module';\nimport {MglTimelineModule} from 'angular-mgl-timeline';\nimport { CountriesComponent } from './components/countries/countries.component';\nimport { TestPreviewComponent } from './components/test-preview/test-preview.component';\nimport { RegisterOrganisationComponent } from './components/register-organisation/register-organisation.component';\nimport { SharedModule } from '../../../@fury/shared/shared-module.module';\nimport { UpdateRegistrationComponent } from './components/update-registration/update-registration.component';\nimport { RenewalsComponent } from './components/cert-renewals/renewals/renewals.component';\nimport { UpdateInformationComponent } from './components/update/update-information/update-information.component';\nimport { ManageRegistrationUpdateComponent } from './components/manage-registration-update/manage-registration-update.component';\nimport { UraPaymentsComponent } from './components/ura-payments/ura-payments.component';\nimport { QRCodeModule } from 'angularx-qrcode';\n\nimport {MatTableModule} from '@angular/material/table';\nimport {Component} from '@angular/core';\nimport { ManageUraPaymentComponent } from './components/manage-ura-payment/manage-ura-payment.component';\nimport { CancelRegistrationComponent } from './components/cancel-registration/cancel-registration.component';\nimport { ViewCancelRegistrationComponent } from './components/view-cancel-registration/view-cancel-registration.component';\nimport { CompanyRegistrationDetailComponent } from './components/company-registration-detail/company-registration-detail.component';\n\n@NgModule({\n    declarations: [\n        FindCompanyRegistrationComponent,\n        EditCompanyRegistrationComponent,\n        SecurityMeasuresComponent,\n        ThirdPartiesComponent,\n        DataProtectionOfficersComponent,\n        CompanyCertComponent,\n        CertPreviewComponent,\n        CountriesComponent,\n        TestPreviewComponent,\n        RegisterOrganisationComponent,\n        UpdateRegistrationComponent,\n        RenewalsComponent,\n        UpdateInformationComponent,\n        ManageRegistrationUpdateComponent,\n        UraPaymentsComponent,\n        ManageUraPaymentComponent,\n        CancelRegistrationComponent,\n        ViewCancelRegistrationComponent,\n        CompanyRegistrationDetailComponent\n    ],\n    imports: [\n        CommonModule,\n        CompanyRegistrationRoutingModule,\n        FormsModule,\n        MaterialModule,\n        SharedModule,\n        FormElementsRoutingModule,\n        ReactiveFormsModule,\n        FurySharedModule,\n        FormWizardRoutingModule,\n        ReviewCommentsModule,\n        ApplicationTimelineModule,\n        // MatTabsModule,\n        // Core\n        ListModule,\n        HighlightModule,\n        FuryCardModule,\n        CustomerCreateUpdateModule,\n        BreadcrumbsModule,\n        QRCodeModule\n    ],\n    providers:[\n        DatePipe\n    ]\n})\nexport class CompanyRegistrationModule {\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","var Buffer = require('../utils/buffer')\nvar Mode = require('./mode')\n\nfunction ByteData (data) {\n  this.mode = Mode.BYTE\n  this.data = new Buffer(data)\n}\n\nByteData.getBitsLength = function getBitsLength (length) {\n  return length * 8\n}\n\nByteData.prototype.getLength = function getLength () {\n  return this.data.length\n}\n\nByteData.prototype.getBitsLength = function getBitsLength () {\n  return ByteData.getBitsLength(this.data.length)\n}\n\nByteData.prototype.write = function (bitBuffer) {\n  for (var i = 0, l = this.data.length; i < l; i++) {\n    bitBuffer.put(this.data[i], 8)\n  }\n}\n\nmodule.exports = ByteData\n","var numeric = '[0-9]+'\nvar alphanumeric = '[A-Z $%*+\\\\-./:]+'\nvar kanji = '(?:[u3000-u303F]|[u3040-u309F]|[u30A0-u30FF]|' +\n  '[uFF00-uFFEF]|[u4E00-u9FAF]|[u2605-u2606]|[u2190-u2195]|u203B|' +\n  '[u2010u2015u2018u2019u2025u2026u201Cu201Du2225u2260]|' +\n  '[u0391-u0451]|[u00A7u00A8u00B1u00B4u00D7u00F7])+'\nkanji = kanji.replace(/u/g, '\\\\u')\n\nvar byte = '(?:(?![A-Z0-9 $%*+\\\\-./:]|' + kanji + ')(?:.|[\\r\\n]))+'\n\nexports.KANJI = new RegExp(kanji, 'g')\nexports.BYTE_KANJI = new RegExp('[^A-Z0-9 $%*+\\\\-./:]+', 'g')\nexports.BYTE = new RegExp(byte, 'g')\nexports.NUMERIC = new RegExp(numeric, 'g')\nexports.ALPHANUMERIC = new RegExp(alphanumeric, 'g')\n\nvar TEST_KANJI = new RegExp('^' + kanji + '$')\nvar TEST_NUMERIC = new RegExp('^' + numeric + '$')\nvar TEST_ALPHANUMERIC = new RegExp('^[A-Z0-9 $%*+\\\\-./:]+$')\n\nexports.testKanji = function testKanji (str) {\n  return TEST_KANJI.test(str)\n}\n\nexports.testNumeric = function testNumeric (str) {\n  return TEST_NUMERIC.test(str)\n}\n\nexports.testAlphanumeric = function testAlphanumeric (str) {\n  return TEST_ALPHANUMERIC.test(str)\n}\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {SecurityMeasuresModel} from '../company-registration.model';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {Subscription} from 'rxjs';\nimport {DataServiceError} from '../../../../../@fury/shared/HttpModel';\nimport {KeycloakService} from 'keycloak-angular';\nimport {UtilService} from '../../../../../@fury/services/util.service';\nimport {SnackBarService} from '../../../../pages/services/snack-bar.service';\n\n@Component({\n  selector: 'fury-security-measures',\n  templateUrl: './security-measures.component.html',\n  styleUrls: ['./security-measures.component.scss']\n})\nexport class SecurityMeasuresComponent implements OnInit {\n\n  @Input() securityMeasures: SecurityMeasuresModel[];\n  @Input() isViewOnly: boolean;\n  @Output() securityEvent = new EventEmitter<SecurityMeasuresModel[]>();\n\n  securityMeasure : SecurityMeasuresModel = new SecurityMeasuresModel();\n\n  securityFormGroup: FormGroup;\n\n  subscriptions: Subscription[] = [];\n\n  // arrays\n  errors: string[] = [];\n  list = [];\n  displayColumns: string [] = ['nber', 'security_measure', 'actions'];\n  $securityMeasure: Subscription [] = [];\n\n  // events\n  $processingEvent: EventEmitter<boolean> = new EventEmitter();\n  $errorsEvent: EventEmitter<DataServiceError[]> = new EventEmitter();\n  // Button Config\n  buttonIcon = 'add_circle_outline';\n  buttonLabel = 'Add';\n  // boolean\n  isEditingSecurityMeasure = false;\n  tableEditable = true;\n  // int\n  securityMeasureIndex = 0;\n  securityMeasureNumber = 1;\n\n  constructor(\n      private fb: FormBuilder,\n      private auth: KeycloakService,\n      private utilService: UtilService,\n      public snackBar: SnackBarService\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.initForms();\n    if (this.securityMeasures) {\n      this.securityMeasures.forEach(securityMeasure => this.list.push(securityMeasure));\n    }\n    this.initMainObject();\n  }\n\n  private initMainObject() {\n    this.securityMeasure = new SecurityMeasuresModel();\n  }\n\n  private initForms(): void {\n    this.securityFormGroup = this.fb.group(\n        {\n          security_measure: [null, Validators.required],\n        }\n    );\n  }\n\n  addOrUpdateSecurityMeasure(option: number): void {\n\n    if (this.securityFormGroup.valid) {\n      this.mapFormControlToControl(1);\n      if (option === 1) {\n        this.list.push(this.securityMeasure);\n        this.securityMeasures.push(this.securityMeasure);\n        this.list = [...this.list];\n      } else {\n        this.list[this.securityMeasureIndex] = this.securityMeasure;\n        this.securityMeasures[this.securityMeasureIndex] = this.securityMeasure;\n        this.list = [...this.securityMeasures];\n      }\n      this.securityEvent.emit(this.securityMeasures);\n      this.resetControl();\n    }\n  }\n\n  resetControl() {\n    this.securityFormGroup.reset();\n    this.securityMeasure = new SecurityMeasuresModel();\n    this.validateSecurityMeasureLabels(1);\n    this.manageControl(1);\n  }\n  validateSecurityMeasureLabels(option: number) {\n    if (option === 1) {\n      this.buttonIcon = 'add_circle_outline';\n      this.buttonLabel = 'Add new Security Measure';\n    } else {\n      this.buttonIcon = 'save';\n      this.buttonLabel = 'Save';\n    }\n  }\n\n  manageControl(option: number, id ?: number) {\n    if (option === 2) {\n      this.securityMeasure = this.securityMeasures[id];\n      this.isEditingSecurityMeasure = true;\n      this.securityMeasureIndex = id;\n      this.mapFormControlToControl(option);\n    } else {\n      this.isEditingSecurityMeasure = false;\n      this.securityMeasure = new SecurityMeasuresModel();\n      this.securityMeasureIndex = 0;\n    }\n    this.validateSecurityMeasureLabels(option);\n  }\n\n\n  private mapFormControlToControl(option: number) {\n    if (option === 1) {\n      this.securityMeasure.Name = this.securityFormGroup.get('fileName').value;\n    } else {\n      this.securityFormGroup.get('fileName').setValue(this.securityMeasures);\n    }\n  }\n\n  deleteItem(index: number) {\n    this.list.splice(index, 1);\n    this.securityMeasures.splice(index, 1);\n    this.list = [...this.list];\n    // Send items to parent\n    this.securityEvent.emit(this.securityMeasures);\n    this.isEditingSecurityMeasure = false;\n  }\n\n  isValidForm() {\n    return this.securityFormGroup.valid;\n  }\n\n}\n","<ng-container>\n\n    <fieldset>\n        <legend>Security Measures</legend>\n        <ng-container  *ngIf=\"!isViewOnly\">\n            <form [formGroup]=\"securityFormGroup\">\n                <ng-template matStepLabel>Security Measures</ng-template>\n\n                <div class=\"content\" fxLayout=\"column\" fxLayoutGap=\"8px\">\n                    <div fxLayout=\"column\" fxLayout.gt-xs=\"row\" fxLayoutGap=\"8px\" fxLayoutGap.gt-xs=\"24px\">\n\n                        <mat-form-field fxFlex=\"auto\">\n                            <mat-label>Security Measure</mat-label>\n                            <input formControlName=\"security_measure\" matInput>\n                            <mat-hint></mat-hint>\n                        </mat-form-field>\n\n                    </div>\n                </div>\n            </form>\n            <div style=\"text-align: right; padding-top: 5px; padding-bottom: 5px;\">\n                <button mat-raised-button\n                        (click)=\"addOrUpdateSecurityMeasure(isEditingSecurityMeasure?2:1)\" color=\"primary\"\n                        [disabled]=\"!isValidForm()\">\n                    <mat-icon>{{buttonIcon}}</mat-icon>\n                    <span>{{buttonLabel}}</span>\n                </button>&nbsp;\n                <span class=\"example-spacer\"></span>\n                <button mat-raised-button (click)=\"resetControl()\" color=\"warn\">\n                    <mat-icon>cancel</mat-icon>\n                    <span>Cancel</span>\n                </button>\n            </div>\n        </ng-container>\n\n        <div class=\"content\" fxLayout=\"column\" fxLayoutGap=\"8px\">\n            <table mat-table [dataSource]=\"list\">\n                <ng-container matColumnDef=\"nber\">\n                    <th mat-header-cell *matHeaderCellDef style=\"width: 5%\"\n                        class=\"tableFontSize firstColumnTable alignCenter\">#\n                    </th>\n                    <td mat-cell *matCellDef=\"let element; let j=index;\"\n                        class=\"tableFontSize firstColumnTable alignCenter\">\n                        {{j + 1}}\n                    </td>\n                </ng-container>\n                <ng-container matColumnDef=\"security_measure\">\n                    <th mat-header-cell *matHeaderCellDef class=\"tableFontSize \" style=\"width: 20%\">Security Measure</th>\n                    <td mat-cell *matCellDef=\"let element\" class=\"tableFontSize \"> {{element.Name}}</td>\n                </ng-container>\n\n<!--                <ng-container matColumnDef=\"size\">-->\n<!--                    <th mat-header-cell *matHeaderCellDef class=\"tableFontSize \" style=\"width: 20%\">Size</th>-->\n<!--                    <td mat-cell *matCellDef=\"let element\" class=\"tableFontSize \"> {{element.FileSize}}</td>-->\n<!--                </ng-container>-->\n\n<!--                <ng-container matColumnDef=\"link\">-->\n<!--                    <th mat-header-cell *matHeaderCellDef class=\"tableFontSize \" style=\"width: 20%\">Download Link</th>-->\n<!--                    <td mat-cell *matCellDef=\"let element\" class=\"tableFontSize \"> {{element.Link}}</td>-->\n<!--                </ng-container>-->\n\n                <ng-container matColumnDef=\"actions\">\n                    <th mat-header-cell *matHeaderCellDef style=\"width: 5%\">Actions</th>\n                    <td mat-cell *matCellDef=\"let element; let j=index\" class=\"actions\">\n                        <ng-container>\n                            <a class=\"link\" (click)=\"manageControl(2,j)\">\n                                <mat-icon color=\"primary\" class=\"material-icons-outlined\" matTooltip=\"Edit item\">edit\n                                </mat-icon>\n                            </a>&nbsp;&nbsp;\n                            <a class=\"link\" (click)=\"deleteItem(j)\">\n                                <mat-icon color=\"warn\" class=\"material-icons-outlined\" matTooltip=\"Delete item\">delete\n                                </mat-icon>\n                            </a>\n                        </ng-container>\n                    </td>\n                </ng-container>\n                <ng-container matColumnDef=\"noData\">\n                    <td mat-footer-cell *matFooterCellDef colspan=\"7\">\n                        There is no data!\n                    </td>\n                </ng-container>\n                <tr mat-header-row *matHeaderRowDef=\"displayColumns;sticky:true\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: displayColumns;\"></tr>\n                <tr mat-footer-row *matFooterRowDef=\"['noData']\" [ngClass]=\"{'hide':!(list?.length==0)}\"></tr>\n            </table>\n        </div>\n\n    </fieldset>\n</ng-container>\n\n\n<!-- LIST OF ITEMS -->\n\n","import {AfterViewInit, Component, EventEmitter, Input, OnChanges, OnInit, Output, ViewChild} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {Subscription} from 'rxjs';\nimport {ThirdParties} from '../company-registration.model';\nimport {DataServiceError} from '../../../../../@fury/shared/HttpModel';\nimport {KeycloakService} from 'keycloak-angular';\nimport {UtilService} from '../../../../../@fury/services/util.service';\nimport {SnackBarService} from '../../../../pages/services/snack-bar.service';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatTableDataSource} from '@angular/material/table';\n\n@Component({\n  selector: 'fury-third-parties',\n  templateUrl: './third-parties.component.html',\n  styleUrls: ['./third-parties.component.scss']\n})\nexport class ThirdPartiesComponent implements OnInit, AfterViewInit, OnChanges {\n\n  @Input() thirdParties: ThirdParties[];\n  @Input() isViewOnly: boolean;\n  @Input() disclosePersonalData: string;\n  @Output() thirdPartiesEvent: EventEmitter<ThirdParties[]> = new EventEmitter<ThirdParties[]>();\n\n  thirdParty: ThirdParties = new ThirdParties();\n\n  thirdPartyFormGroup: FormGroup;\n  disclosePersonalDataTrimmed = '';\n  subscriptions: Subscription[] = [];\n\n  // arrays\n  errors: string[] = [];\n  list: MatTableDataSource<ThirdParties>;\n  displayColumns: string [] = ['nber', 'ThirdPartyName', 'purposeOfDisclosure', 'actions'];\n  $impactOfBreaches: ThirdParties [] = [];\n\n  // events\n  $processingEvent: EventEmitter<boolean> = new EventEmitter();\n  $errorsEvent: EventEmitter<DataServiceError[]> = new EventEmitter();\n  // Button Config\n  buttonIcon = 'add_circle_outline';\n  buttonLabel = 'Add';\n  // boolean\n  isEditingThirdParty = false;\n  tableEditable = true;\n  // int\n  thirdPartiesIndex = 0;\n  thirdPartiesNumber = 1;\n  thirdPartiesList: any;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  constructor(\n      private fb: FormBuilder,\n      public snackBar: SnackBarService\n  ) {\n  }\n\n\n  ngOnInit(): void {\n    this.initForms();\n    this.initMainObject();\n  }\n\n  ngOnChanges(): void {\n    if (this.thirdParties) {\n      this.list = new MatTableDataSource<ThirdParties>(this.thirdParties);\n      this.list.paginator = this.paginator;\n    }\n  }\n\n  ngAfterViewInit() {\n  }\n\n  private initMainObject() {\n    this.thirdParty = new ThirdParties();\n  }\n\n  private initForms(): void {\n    this.thirdPartyFormGroup = this.fb.group(\n        {\n          // contactPerson: [null, Validators.required],\n          thirdPartyName: [null, Validators.required],\n          purposeOfDisclosure: [null, Validators.required],\n          // phoneNumber: [null, Validators.required],\n        }\n    );\n  }\n\n  addOrUpdateThirdParties(option: number): void {\n    if (this.thirdPartyFormGroup.valid) {\n      this.mapFormControlToControl(1);\n      if (option === 1) {\n        this.list.data.push(this.thirdParty);\n        this.thirdParties.push(this.thirdParty);\n        this.list.data = [...this.list.data];\n      } else {\n        this.list[this.thirdPartiesIndex] = this.thirdParty;\n        this.thirdParties[this.thirdPartiesIndex] = this.thirdParty;\n        this.list.data = [...this.thirdParties];\n      }\n      this.thirdPartiesEvent.emit(this.thirdParties);\n      this.resetControl();\n    }\n  }\n\n  resetControl() {\n    this.thirdPartyFormGroup.reset();\n    this.thirdParty = new ThirdParties();\n    this.validateThirdPartiesLabels(1);\n    this.manageControl(1);\n  }\n\n  validateThirdPartiesLabels(option: number) {\n    if (option === 1) {\n      this.buttonIcon = 'add_circle_outline';\n      this.buttonLabel = 'Add new thirdParty data';\n    } else {\n      this.buttonIcon = 'save';\n      this.buttonLabel = 'Save';\n    }\n  }\n\n  manageControl(option: number, id ?: number) {\n    if (option === 2) {\n      this.thirdParty = this.thirdParties[id];\n      this.isEditingThirdParty = true;\n      this.thirdPartiesIndex = id;\n      this.mapFormControlToControl(option);\n    } else {\n      this.isEditingThirdParty = false;\n      this.thirdParty = new ThirdParties();\n      this.thirdPartiesIndex = 0;\n    }\n    this.validateThirdPartiesLabels(option);\n  }\n\n\n  private mapFormControlToControl(option: number) {\n    if (option === 1) {\n      // this.thirdParty.ContactPerson = this.thirdPartyFormGroup.get('contactPerson').value;\n      this.thirdParty.ThirdPartyName = this.thirdPartyFormGroup.get('thirdPartyName').value;\n      this.thirdParty.EmailAddress = this.thirdPartyFormGroup.get('purposeOfDisclosure').value;\n      // this.thirdParty.PhoneNumber = this.thirdPartyFormGroup.get('phoneNumber').value;\n    } else {\n      this.thirdParty.ThirdPartyName = this.thirdPartyFormGroup.get('thirdPartyName').value;\n      this.thirdParty.EmailAddress = this.thirdPartyFormGroup.get('purposeOfDisclosure').value;\n      // this.thirdPartyFormGroup.get('contactPerson').setValue(this.thirdParty.ContactPerson);\n      // this.thirdPartyFormGroup.get('thirdPartyName').setValue(this.thirdParty.ThirdPartyName);\n      // this.thirdPartyFormGroup.get('emailAddress').setValue(this.thirdParty.EmailAddress);\n      // this.thirdPartyFormGroup.get('phoneNumber').setValue(this.thirdParty.PhoneNumber);\n    }\n  }\n\n  deleteItem(index: number) {\n    this.list.data.splice(index, 1);\n    this.thirdParties.splice(index, 1);\n    this.list.data = [...this.list.data];\n    // Send items to parent\n    this.thirdPartiesEvent.emit(this.thirdParties);\n    this.isEditingThirdParty = false;\n  }\n\n  isValidForm() {\n    return this.thirdPartyFormGroup.valid;\n  }\n\n\n}\n","<ng-container *ngIf=\"disclosePersonalData !== 'No'\">\n\n    <fieldset>\n        <legend>ThirdParties</legend>\n        <ng-container *ngIf=\"!isViewOnly\">\n            <form [formGroup]=\"thirdPartyFormGroup\">\n                <ng-template matStepLabel>ThirdParties</ng-template>\n\n                <div class=\"content\" fxLayout=\"column\" fxLayoutGap=\"8px\">\n                    <div fxLayout=\"column\" fxLayout.gt-xs=\"row\" fxLayoutGap=\"8px\" fxLayoutGap.gt-xs=\"24px\">\n                        <mat-form-field fxFlex=\"auto\">\n                            <mat-label>ThirdParty Name</mat-label>\n                            <input formControlName=\"thirdPartyName\" matInput>\n                            <mat-hint></mat-hint>\n                        </mat-form-field>\n\n                        <mat-form-field fxFlex=\"auto\">\n                            <mat-label>Email Address</mat-label>\n                            <input formControlName=\"purposeOfDisclosure\" matInput>\n                            <mat-hint></mat-hint>\n                        </mat-form-field>\n                    </div>\n                </div>\n            </form>\n            <div style=\"text-align: right; padding-top: 5px; padding-bottom: 5px;\">\n                <button mat-raised-button\n                        (click)=\"addOrUpdateThirdParties(isEditingThirdParty?2:1)\" color=\"primary\"\n                        [disabled]=\"!isValidForm()\">\n                    <mat-icon>{{buttonIcon}}</mat-icon>\n                    <span>{{buttonLabel}}</span>\n                </button>&nbsp;\n                <span class=\"example-spacer\"></span>\n                <button mat-raised-button (click)=\"resetControl()\" color=\"warn\">\n                    <mat-icon>cancel</mat-icon>\n                    <span>Cancel</span>\n                </button>\n            </div>\n        </ng-container>\n\n        <div class=\"table-responsive\" fxLayout=\"column\" fxLayoutGap=\"8px\">\n            <table mat-table [dataSource]=\"list\" >\n                <ng-container matColumnDef=\"nber\">\n                    <th mat-header-cell *matHeaderCellDef style=\"width: 5%\"\n                        class=\"tableFontSize firstColumnTable alignCenter\">#\n                    </th>\n                    <td mat-cell *matCellDef=\"let element; let j=index;\"\n                        class=\"tableFontSize firstColumnTable alignCenter\">\n                        {{j + 1}}\n                    </td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"ThirdPartyName\">\n                    <th mat-header-cell *matHeaderCellDef class=\"tableFontSize \" style=\"width: 20%\">Title</th>\n                    <td mat-cell *matCellDef=\"let element\"\n                        class=\"tableFontSize \"> {{element.ThirdPartyName}}</td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"purposeOfDisclosure\">\n                    <th mat-header-cell *matHeaderCellDef class=\"tableFontSize \" style=\"width: 20%\"> Purpose of\n                        Disclosure\n                    </th>\n                    <td mat-cell *matCellDef=\"let element\" class=\"tableFontSize \"> {{element.EmailAddress}}</td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"actions\">\n                    <th mat-header-cell *matHeaderCellDef style=\"width: 5%\">Actions</th>\n                    <td mat-cell *matCellDef=\"let element; let j=index\" class=\"actions\">\n                        <ng-container>\n                            <a class=\"link\" (click)=\"manageControl(2,j)\" *ngIf=\"!isViewOnly\">\n                                <mat-icon color=\"primary\" class=\"material-icons-outlined\" matTooltip=\"Edit item\">edit\n                                </mat-icon>\n                            </a>&nbsp;&nbsp;\n                            <a class=\"link\" (click)=\"deleteItem(j)\" *ngIf=\"!isViewOnly\">\n                                <mat-icon color=\"warn\" class=\"material-icons-outlined\" matTooltip=\"Delete item\">delete\n                                </mat-icon>\n                            </a>\n                        </ng-container>\n                    </td>\n                </ng-container>\n                <ng-container matColumnDef=\"noData\">\n                    <td mat-footer-cell *matFooterCellDef colspan=\"7\">\n                        There is no data!\n                    </td>\n                </ng-container>\n                <tr mat-header-row *matHeaderRowDef=\"displayColumns;sticky:true\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: displayColumns;\"></tr>\n                <tr mat-footer-row *matFooterRowDef=\"['noData']\" [ngClass]=\"{'hide':!(list?.data.length==0)}\"></tr>\n            </table>\n            <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\"\n                           showFirstLastButtons\n                           aria-label=\"Select page of periodic elements\">\n            </mat-paginator>\n        </div>\n    </fieldset>\n\n</ng-container>\n\n\n<!-- LIST OF ITEMS -->\n\n","import {HttpClient} from '@angular/common/http';\nimport {AfterContentInit, ChangeDetectorRef, Component, OnDestroy, OnInit, ViewChild} from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {MatDialog} from '@angular/material/dialog';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {forkJoin, Observable, Subscription} from 'rxjs';\n// tslint:disable-next-line:max-line-length\nimport {\n  ApiPayload,\n  Country,\n  CountryOfTransfer,\n  DataCategory,\n  DataProtectionOfficer,\n  DataPurposes,\n  DataSource,\n  DataSubCategory,\n  FileUpload,\n  MainActivity,\n  NatureOfBusinessCat,\n  NatureOfBusinessSubCat,\n  OrganisationCategory,\n  OrganisationType,\n  Sector,\n  SecurityMeasure,\n  ThirdParty\n} from '../../../../../services/api.model';\nimport {catchError} from 'rxjs/operators';\nimport {MatCheckboxChange} from '@angular/material/checkbox';\nimport {ApiEndpointsService} from '../../../../../services/api-endpoints.service';\nimport {ApiService} from '../../../../../services/api.service';\nimport {OrgNoticeComponent} from '../../../../../layout/dialogs/org-registration/org-notice/org-notice.component';\nimport {OrgMainActivityComponent} from '../../../../../layout/dialogs/org-registration/org-main-activity/org-main-activity.component';\nimport {\n  OrgDataProtectionOfficerComponent\n} from '../../../../../layout/dialogs/org-registration/org-data-protection-officer/org-data-protection-officer.component';\nimport {\n  OrgSecurityMeasuresComponent\n} from '../../../../../layout/dialogs/org-registration/org-security-measures/org-security-measures.component';\nimport {OrgThirdPartyComponent} from '../../../../../layout/dialogs/org-registration/org-third-party/org-third-party.component';\nimport {OrgCountryComponent} from '../../../../../layout/dialogs/org-registration/org-country/org-country.component';\nimport {OrgUploadComponent} from '../../../../../layout/dialogs/org-upload/org-upload.component';\nimport {OrgForm3DialogComponent} from '../../../../../layout/dialogs/org-registration/org-form3-dialog/org-form3-dialog.component';\nimport {\n  OrgRegistrationPreviewDialogComponent\n} from '../../../../../layout/dialogs/org-registration/org-registration-preview-dialog/org-registration-preview-dialog.component';\nimport {SuccessfulMessageDialogComponent} from '../../../../../layout/dialogs/successful-message-dialog/successful-message-dialog.component';\nimport {BaseFuryForm} from '../../../../../../@fury/shared/base-fury-form';\nimport {KeycloakService} from 'keycloak-angular';\nimport {WorkflowServiceService} from '../../../../../services/workflow-service.service';\nimport {CompanyRegistrationService} from '../../../company-registration.service';\nimport {AuthenticationService} from '../../../../../authentication/authentication.service';\nimport {fadeInRightAnimation} from '../../../../../../@fury/animations/fade-in-right.animation';\nimport {fadeInUpAnimation} from '../../../../../../@fury/animations/fade-in-up.animation';\nimport { ViewPdfDocumentBottomsheetComponent } from '../../../../../layout/bottomsheets/view-pdf-document-bottomsheet/view-pdf-document-bottomsheet.component';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { NatureOfBusiness, NewCompanyRegistrationModel } from '../../company-registration.model';\nimport { Router } from '@angular/router';\nimport { KeycloakProfile } from 'keycloak-js';\nimport { environment } from '../../../../../../environments/environment';\nimport { ComplaintService } from '../../../../complaints/complaints.service';\n\n\n@Component({\n  selector: 'fury-update-information',\n  templateUrl: './update-information.component.html',\n  styleUrls: ['./update-information.component.scss']\n})\nexport class UpdateInformationComponent extends BaseFuryForm implements OnInit, OnDestroy {\n\n  dialogRef;\n    bottomsheetRef;\n    processing = false;\n    formGeneralInformation: FormGroup;\n    formOrganisationDetails: FormGroup;\n    formPersonalDataHeld: FormGroup;\n    formPurposeRetention: FormGroup;\n    formSecurityMeasures: FormGroup;\n    formThirdParties: FormGroup;\n    formChildrenData: FormGroup;\n    // selectedIndex = 5;\n    selectedIndex = 0;\n    isLinear = true;\n    // isLinear = false;\n    today = new Date();\n    sectors: Sector[];\n    countries: Country[];\n    selected = false;\n    OrganisationID:number;\n    DPOSelected = false;\n    natureOfbusinesses: any;\n    natureOfbusinesses_arr: any = [];\n    organisationCategories: OrganisationCategory[] = [];\n    selectedOrganisationCategories: OrganisationCategory[] = [];\n    organisationTypes: OrganisationType[];\n    dataSources: DataSource[];\n    selectedDataSources: DataSource[] = [];\n    httpSub: Subscription;\n    MainActivitiesDisplayedColumns: string[] = ['Count', 'MainActivity', 'Actions'];\n    dpoDisplayedColumns: string[] = ['Count', 'Name', 'Telephone', 'Email', 'PhysicalAddress', 'Actions'];\n    securityMeasuresDisplayedColumns: string[] = ['Count', 'SecurityMeasure', 'Actions'];\n    thirdPartyDisplayedColumns: string[] = ['Count', 'NameOfThirdParty', 'Purpose', 'Actions'];\n    countryDisplayedColumns: string[] = ['Count', 'Country', 'Purpose', 'Description', 'Actions'];\n    mainActivities: MainActivity[] = [];\n    mainActivitiesDataSource: MatTableDataSource<MainActivity>;\n    dataProtectionOfficers: DataProtectionOfficer[] = [];\n    dpoDataSource: MatTableDataSource<DataProtectionOfficer>;\n    securityMeasures: SecurityMeasure[] = [];\n    securityMeasureDataSource: MatTableDataSource<SecurityMeasure>;\n    thirdParties: ThirdParty[] = [];\n    thirdPartyDataSource: MatTableDataSource<ThirdParty>;\n    countriesOfTransfer: CountryOfTransfer[] = [];\n    countriesDataSource: MatTableDataSource<CountryOfTransfer>;\n    selectedDataCategory: DataCategory[] = [];\n    selectedDataSubCategory: DataSubCategory[] = [];\n    dataCategories: DataCategory[];\n    dataPurposes: DataPurposes[];\n    selectedDataPurposes: DataPurposes[] = [];\n    natureOfBusinessCat: NatureOfBusinessCat[] = [];\n    natureOfBusinessSubCat: NatureOfBusinessSubCat[] = [];\n    selectedNatureOfBusinessSubCat: NatureOfBusinessSubCat[] = [];\n    SpecifyTheLaw = false;\n    ServiceOrProductProvided = false;\n    SpecifyLegalObligation = false;\n    document: FileUpload | null;\n    documentForm3: FileUpload | null;\n    proofOfPayment: FileUpload | null;\n    OrganizationType = null;\n    SectorName = null;\n    NatureOfBusinessCat = null;\n    CountryOfIncorporation = null;\n    application: NewCompanyRegistrationModel = new NewCompanyRegistrationModel();\n    public userProfile: KeycloakProfile | null = null;\n    regTrackingNo: any;\n  \n    dataCategory = new FormControl();\n  \n    @ViewChild('MainActivityPaginator', { static: false }) MainActivityPaginator: MatPaginator;\n    @ViewChild('MainActivityMatSort', { static: false }) MainActivityMatSort: MatSort;\n    @ViewChild('dpoPaginator', { static: false }) dpoPaginator: MatPaginator;\n    @ViewChild('dpoMatSort', { static: false }) dpoMatSort: MatSort;\n    @ViewChild('securityMeasurePaginator', { static: false }) securityMeasurePaginator: MatPaginator;\n    @ViewChild('securityMeasureMatSort', { static: false }) securityMeasureMatSort: MatSort;\n    @ViewChild('thirdPartyPaginator', { static: false }) thirdPartyPaginator: MatPaginator;\n    @ViewChild('thirdPartyMatSort', { static: false }) thirdPartyMatSort: MatSort;\n    @ViewChild('countryOfTransferPaginator', { static: false }) countryOfTransferPaginator: MatPaginator;\n    @ViewChild('countryOfTransferMatSort', { static: false }) countryOfTransferMatSort: MatSort;\n\n\n  constructor(\n\n    private formBuilder: FormBuilder,\n    private service: ApiService,\n    private endpoints: ApiEndpointsService,\n    private dialog: MatDialog,\n    private bottomsheet: MatBottomSheet,\n    public authService: KeycloakService,\n    public _auth: AuthenticationService,\n    public _workflowService: WorkflowServiceService,\n    private http: HttpClient,\n    private changeDetector: ChangeDetectorRef,\n    public registrationService: CompanyRegistrationService,\n    public complaintService:ComplaintService,\n    private route: Router,\n\n  ) {\n\n    super(\n      authService,\n      _workflowService,\n      registrationService,\n      complaintService\n    );\n\n    // this.regTrackingNo = this.route.getCurrentNavigation().extras.state.regTrackingNo;\n\n    this.service.updatePageTitle(['Organisations', 'New Registration']);\n\n   }\n\n  ngOnInit(): void {\n\n    this.formGeneralInformation = this.formBuilder.group({\n      OrganizationName: [{value: this._auth.getOrganisationName()}],\n      DPPActCategory: new FormControl('', [Validators.required]),\n      OrganizationTypeID: new FormControl('', [Validators.required]),\n      CountryOfIncorporation: new FormControl('', [Validators.required]),\n      URSBNumber: new FormControl(''),\n      SectorID: new FormControl('', [Validators.required]),\n      OtherSector: new FormControl('', [Validators.maxLength(50)]),\n      Location: new FormControl('', [Validators.required]),\n      PhoneNumberCode: new FormControl({ value: '', disabled: false }, [Validators.required]),\n      PhoneNumber: new FormControl({ value: '', disabled: false}, [\n        Validators.required,\n        Validators.pattern(/^[0-9 ]+$/),\n      ]),\n      EmailAddress: new FormControl({ value: '', disabled: false }, [\n        Validators.required,\n        Validators.email\n      ]),\n      // NatureOfBusiness: new FormControl('', [Validators.required]),\n      NatureOfBusinessCat: new FormControl('', [Validators.required]),\n      NatureOfBusinessSubCat: new FormControl('', [Validators.required]),\n    });\n\n    this.formOrganisationDetails = this.formBuilder.group({\n      DPORequired: new FormControl(''),\n      DPOName: new FormControl(''),\n      DPOPhysicalAddress: new FormControl(''),\n      PhoneNumberCode: new FormControl(''),\n      DPOPhoneNumber: new FormControl(''),\n      DPOEmailAddress: new FormControl(''),\n      DPOPositionInOrganisation: new FormControl(''),\n    });\n\n    this.formPersonalDataHeld = this.formBuilder.group({\n      SourceOfDataID: new FormControl('', [Validators.required]),\n    });\n\n    this.formPurposeRetention = this.formBuilder.group({\n      Purpose: new FormControl('', [Validators.required]),\n      SpecifyTheLaw: new FormControl(''),\n      ServiceOrProductProvided: new FormControl(''),\n      SpecifyLegalObligation: new FormControl(''),\n      TotalRecordsAtRegistration: new FormControl('', [Validators.pattern(/^[0-9,]+$/)]),\n      RecordPercentageGrowth: new FormControl('' , [\n        Validators.pattern(/^[0-9,]+$/),\n        Validators.max(100),\n      ]),\n      RetentionPeriod: new FormControl('', [\n        Validators.required,\n        Validators.pattern(/^[0-9,]+$/),\n        Validators.max(100),\n      ]),\n    });\n\n    this.formSecurityMeasures = this.formBuilder.group({\n      RegistrationConsent: new FormControl('', [Validators.required]),\n      RegistrationDoneBy: new FormControl('', [Validators.required, Validators.pattern(/^[a-zA-Z ]+$/)]),\n    });\n\n    this.formThirdParties = this.formBuilder.group({\n      PersonalDataIsForDisclosure: new FormControl('', [Validators.required]),\n      StoreDataOutsideCountry: new FormControl('', [Validators.required]),\n    });\n    this.Listeners();\n  }\n\n  ngAfterContentInit(): void {\n    this.httpSub = this.fetchMultiple()\n    .pipe(catchError(this.service.handleError))\n    .subscribe((responseList) => {\n      console.log(responseList)\n      this.countries = responseList[0];\n\n      this.organisationCategories = [\n        {\n          OrganisationCategoryId: 1,\n          OrganisationCategoryName: 'Data Controller'\n        },\n        {\n          OrganisationCategoryId: 2,\n          OrganisationCategoryName: 'Data Processor'\n        },\n        {\n          OrganisationCategoryId: 3,\n          OrganisationCategoryName: 'Data Collector'\n        },\n      ];\n\n      this.formGeneralInformation.get('PhoneNumberCode').patchValue('256');\n      this.formOrganisationDetails.get('PhoneNumberCode').patchValue('256');\n\n      this.dataSources = responseList[1];\n\n      this.organisationTypes = responseList[2];\n\n      this.sectors = responseList[3];\n\n      this.dataCategories = responseList[4];\n\n      this.dataPurposes = responseList[5];\n\n      this.natureOfBusinessCat = responseList[6];\n\n      this._loadApplicationDraft(responseList[7]);\n\n      this.processing = false;\n    }, (error) => {\n      this.processing = false;\n      this.service.determineErrorResponse(error);\n    });\n  }\n\n  private Listeners(): void {\n    // STEP ONE\n    this.formGeneralInformation.get('DPPActCategory').valueChanges.subscribe((value) => {\n      const values: number[] = value;\n      this.selectedOrganisationCategories.length = 0;\n\n      this.organisationCategories.filter((item) => {\n        if (values.includes(item.OrganisationCategoryId)) {\n          this.selectedOrganisationCategories.push(item);\n        }\n      });\n    });\n\n    this.formGeneralInformation.get('OrganizationTypeID').valueChanges.subscribe((value) => {\n      if (value !== 4) {\n        this.formGeneralInformation.get('CountryOfIncorporation').setValidators([Validators.required]);\n        this.formGeneralInformation.get('URSBNumber').setValidators([Validators.required]);\n      } else {\n        this.formGeneralInformation.get('CountryOfIncorporation').clearValidators();\n        this.formGeneralInformation.get('CountryOfIncorporation').reset();\n        this.formGeneralInformation.get('URSBNumber').clearValidators();\n        this.formGeneralInformation.get('URSBNumber').reset();\n        this.CountryOfIncorporation = null;\n      }\n\n      this.formGeneralInformation.controls['CountryOfIncorporation'].updateValueAndValidity();\n      this.formGeneralInformation.controls['URSBNumber'].updateValueAndValidity();\n    });\n\n    this.formGeneralInformation.get('SectorID').valueChanges.subscribe((value) => {\n      if (value === 14) {\n        this.formGeneralInformation.get('OtherSector').setValidators([Validators.required]);\n      } else {\n        this.formGeneralInformation.get('OtherSector').clearValidators();\n        this.formGeneralInformation.get('OtherSector').reset();\n      }\n\n      this.formGeneralInformation.controls['OtherSector'].updateValueAndValidity();\n    });\n\n    this.formGeneralInformation.get('NatureOfBusinessCat').valueChanges.subscribe((value) => {\n      this.onNatureOfBusinessCatSelected(value);\n    });\n\n    this.formGeneralInformation.get('NatureOfBusinessSubCat').valueChanges.subscribe((value) => {\n      const values: number[] = value;\n      this.selectedNatureOfBusinessSubCat.length = 0;\n\n      this.natureOfBusinessSubCat.filter((item) => {\n        if (values.includes(item.NatureOfBusinessSubCatId)) {\n          this.selectedNatureOfBusinessSubCat.push(item);\n        }\n      });\n    });\n\n    // STEP TWO\n    this.formOrganisationDetails.get('DPORequired').valueChanges.subscribe((value) => {\n\n      if (value === 'Yes') {\n        this.formOrganisationDetails.get('DPOName').setValidators([Validators.required, Validators.pattern(/^[a-zA-Z ]+$/), ]);\n        this.formOrganisationDetails.get('DPOPhysicalAddress').setValidators([Validators.required]);\n        this.formOrganisationDetails.get('DPOPhoneNumber').setValidators([Validators.required, Validators.pattern(/^[0-9 ]+$/)]);\n        this.formOrganisationDetails.get('DPOEmailAddress').setValidators([Validators.required, Validators.email]);\n        this.formOrganisationDetails.get('DPOPositionInOrganisation').setValidators([Validators.required]);\n      } else {\n        this.formOrganisationDetails.get('DPOName').clearValidators();\n        this.formOrganisationDetails.get('DPOName').reset();\n        this.formOrganisationDetails.get('DPOPhysicalAddress').clearValidators();\n        this.formOrganisationDetails.get('DPOPhysicalAddress').reset();\n        this.formOrganisationDetails.get('DPOPhoneNumber').clearValidators();\n        this.formOrganisationDetails.get('DPOPhoneNumber').reset();\n        this.formOrganisationDetails.get('DPOEmailAddress').clearValidators();\n        this.formOrganisationDetails.get('DPOEmailAddress').reset();\n        this.formOrganisationDetails.get('DPOPositionInOrganisation').clearValidators();\n        this.formOrganisationDetails.get('DPOPositionInOrganisation').reset();\n      }\n\n      this.formOrganisationDetails.controls['DPOName'].updateValueAndValidity();\n      this.formOrganisationDetails.controls['DPOPhysicalAddress'].updateValueAndValidity();\n      this.formOrganisationDetails.controls['DPOPhoneNumber'].updateValueAndValidity();\n      this.formOrganisationDetails.controls['DPOEmailAddress'].updateValueAndValidity();\n      this.formOrganisationDetails.controls['DPOPositionInOrganisation'].updateValueAndValidity();\n    });\n\n    // STEP THREE\n    this.formPersonalDataHeld.get('SourceOfDataID').valueChanges.subscribe((value) => {\n      const values: number[] = value;\n      this.selectedDataSources.length = 0;\n\n      this.dataSources.filter((item) => {\n        if (values.includes(item.DataSourceID)) {\n          this.selectedDataSources.push(item);\n        }\n      });\n    });\n\n    // STEP FOUR\n    this.formPurposeRetention.get('Purpose').valueChanges.subscribe((value) => {\n      const values: number[] = value;\n\n      this.selectedDataPurposes.length = 0;\n\n      // Reset all the fields first\n      this.SpecifyTheLaw = false;\n      this.ServiceOrProductProvided = false;\n      this.SpecifyLegalObligation = false;\n      this.formPurposeRetention.get('SpecifyTheLaw').clearValidators();\n      this.formPurposeRetention.get('SpecifyTheLaw').reset();\n      this.formPurposeRetention.get('ServiceOrProductProvided').clearValidators();\n      this.formPurposeRetention.get('ServiceOrProductProvided').reset();\n      this.formPurposeRetention.get('SpecifyLegalObligation').clearValidators();\n      this.formPurposeRetention.get('SpecifyLegalObligation').reset();\n\n      values.filter((item) => {\n        if (item === 1) {\n          this.SpecifyTheLaw = true;\n          this.formPurposeRetention.get('SpecifyTheLaw').setValidators([Validators.required]);\n        }\n\n        if (item === 3) {\n          this.ServiceOrProductProvided = true;\n          this.formPurposeRetention.get('ServiceOrProductProvided').setValidators([Validators.required]);\n        }\n\n        if (item === 6) {\n          this.SpecifyLegalObligation = true;\n          this.formPurposeRetention.get('SpecifyLegalObligation').setValidators([Validators.required]);\n        }\n      });\n\n      this.formPurposeRetention.controls['SpecifyTheLaw'].updateValueAndValidity();\n      this.formPurposeRetention.controls['ServiceOrProductProvided'].updateValueAndValidity();\n      this.formPurposeRetention.controls['SpecifyLegalObligation'].updateValueAndValidity();\n\n      this.dataPurposes.filter((item) => {\n        if (values.includes(item.DataPurposeID)) {\n          this.selectedDataPurposes.push(item);\n        }\n      });\n\n      this.changeDetector.detectChanges();\n    });\n\n    this.formPurposeRetention.get('RecordPercentageGrowth').valueChanges.subscribe((value) => {\n\n      if (value > 100) {\n        this.formPurposeRetention.get('RecordPercentageGrowth').patchValue(100);\n      }\n\n      this.changeDetector.detectChanges();\n    });\n\n    this.formPurposeRetention.get('RetentionPeriod').valueChanges.subscribe((value) => {\n\n      if (value > 100) {\n        this.formPurposeRetention.get('RetentionPeriod').patchValue(100);\n      }\n\n      this.changeDetector.detectChanges();\n    });\n\n    // STEP FIVE\n    this.formThirdParties.get('PersonalDataIsForDisclosure').valueChanges.subscribe((value) => {\n      this.thirdParties.length = 0;\n    });\n\n    this.formThirdParties.get('StoreDataOutsideCountry').valueChanges.subscribe((value) => {\n      this.countriesOfTransfer.length = 0;\n    });\n  }\n\n  private onShowNotice(): void {\n    this.dialogRef = this.dialog.open(OrgNoticeComponent, {\n      panelClass: ['organisation-data-protection-officer-dialog', 'dialogs'],\n      disableClose: true,\n    });\n\n    this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: DataProtectionOfficer }) => {\n\n    });\n  }\n\n  getOrganizationNameErrorMessage(): string {\n    return this.formGeneralInformation.get('OrganizationName').hasError('required') ? 'Please enter a value' : '';\n  }\n\n  getURSBNumberErrorMessage(): string {\n    return this.formGeneralInformation.get('URSBNumber').hasError('required') ? 'Please enter a value' : '';\n  }\n\n  getSelectErrorMessage(): string {\n    return this.formGeneralInformation.get('DPPActCategory').hasError('required')\n    || this.formGeneralInformation.get('OrganizationTypeID').hasError('required')\n    || this.formGeneralInformation.get('CountryOfIncorporation').hasError('required')\n    || this.formGeneralInformation.get('SectorID').hasError('required')\n    || this.formGeneralInformation.get('NatureOfBusinessCat').hasError('required')\n    || this.formGeneralInformation.get('NatureOfBusinessSubCat').hasError('required')\n    || this.formPersonalDataHeld.get('SourceOfDataID').hasError('required')\n    || this.formPurposeRetention.get('Purpose').hasError('required')\n    ? 'Please choose a value' : '';\n  }\n\n  getTelephoneNumberErrorMessage(): string {\n    return this.formGeneralInformation.get('PhoneNumber').hasError('required') ? 'Please enter a value' :\n    this.formGeneralInformation.get('PhoneNumber').hasError('pattern') ? 'Wrong Phone number' : '';\n  }\n\n  getEmailAddressErrorMessage(): string {\n    return this.formGeneralInformation.get('EmailAddress').hasError('required') ? 'Please enter a value' :\n    this.formGeneralInformation.get('EmailAddress').hasError('email') ? 'Wrong Email Address.' : '';\n  }\n\n  getOtherSectorErrorMessage(): string {\n    return this.formGeneralInformation.get('OtherSector').hasError('required') ? 'Please enter a value' : '';\n  }\n\n  getLocationErrorMessage(): string {\n    return this.formGeneralInformation.get('Location').hasError('required') ? 'Please enter a location' : '';\n  }\n\n  getDPONameErrorMessage(): string {\n    return this.formOrganisationDetails.get('DPOName').hasError('required') ? 'Please enter a value' :\n    this.formOrganisationDetails.get('DPOName').hasError('pattern') ? 'Please enter a correct name' : '';\n  }\n\n  getDPOPhysicalAddressErrorMessage(): string {\n    return this.formOrganisationDetails.get('DPOPhysicalAddress').hasError('required') ? 'Please enter a location' : '';\n  }\n\n  getDPOPhoneNumberErrorMessage(): string {\n    return this.formOrganisationDetails.get('DPOPhoneNumber').hasError('required') ? 'Please enter a value' :\n    this.formOrganisationDetails.get('DPOPhoneNumber').hasError('pattern') ? 'Wrong Phone number' : '';\n  }\n\n  getDPOEmailAddressErrorMessage(): string {\n    return this.formOrganisationDetails.get('DPOEmailAddress').hasError('required') ? 'Please enter a value' :\n    this.formOrganisationDetails.get('DPOEmailAddress').hasError('email') ? 'Wrong Email Address.' : '';\n  }\n\n  getDPOPositionInOrganisationErrorMessage(): string {\n    return this.formOrganisationDetails.get('DPOPositionInOrganisation').hasError('required') ? 'Please enter a value' : '';\n  }\n\n  getRequiredErrorMessage(): string {\n    return this.formPurposeRetention.get('SpecifyTheLaw').hasError('required')\n    || this.formPurposeRetention.get('ServiceOrProductProvided').hasError('required')\n    || this.formPurposeRetention.get('SpecifyLegalObligation').hasError('required')\n    ? 'Please enter a value' : '';\n  }\n\n  getPatternErrorMessage(): string {\n    return this.formPurposeRetention.get('TotalRecordsAtRegistration').hasError('pattern')\n    ? 'Please enter correct information' : '';\n  }\n\n  getRetentionPeriodErrorMessage(): string {\n    return this.formPurposeRetention.get('RetentionPeriod').hasError('required') ? 'Please enter a value' :\n    this.formPurposeRetention.get('RetentionPeriod').hasError('max') ? 'Maximum of 100' :\n    this.formPurposeRetention.get('RetentionPeriod').hasError('pattern') ? 'Not valid' : '';\n  }\n\n  getRecordPercentageGrowthErrorMessage(): string {\n    return this.formPurposeRetention.get('RecordPercentageGrowth').hasError('max') ? 'Maximum of 100' :\n    this.formPurposeRetention.get('RecordPercentageGrowth').hasError('pattern') ? 'Not valid' : '';\n  }\n\n  getCheckboxErrorMessage(): string {\n    return this.formSecurityMeasures.get('RegistrationConsent').hasError('max') ? 'This field is required' : '';\n  }\n\n  getRegistrationDoneByErrorMessage(): string {\n    return this.formSecurityMeasures.get('RegistrationDoneBy').hasError('required') ? 'Please enter a value' :\n    this.formSecurityMeasures.get('RegistrationDoneBy').hasError('pattern') ? 'Please enter a correct name' : '';\n  }\n\n  onAddMainActivity(): void {\n    this.dialogRef = this.dialog.open(OrgMainActivityComponent, {\n      panelClass: ['organisation-main-activity-dialog', 'dialogs'],\n      disableClose: true,\n    });\n\n    this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: MainActivity }) => {\n      if (result.status) {\n          let found = false;\n          this.mainActivities.filter((activity) => {\n            if (activity.Activity === result.row.Activity) {\n              found = true;\n            }\n          });\n\n          if (found) {\n            this.service.openSnackBar('Sorry, this record already exists', 'error-lg');\n          } else {\n            this.mainActivities.push(result.row);\n          }\n\n        this.mainActivitiesDataSource = new MatTableDataSource(this.mainActivities);\n\n        setTimeout(() => {\n          this.mainActivitiesDataSource.paginator = this.MainActivityPaginator;\n          this.mainActivitiesDataSource.sort = this.MainActivityMatSort;\n        });\n      }\n    });\n  }\n\n  onEditMainActivity(row: MainActivity): void {\n    this.dialogRef = this.dialog.open(OrgMainActivityComponent, {\n      panelClass: ['organisation-main-activity-dialog', 'dialogs'],\n      disableClose: true,\n      data: { row }\n    });\n\n    this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: MainActivity }) => {\n      if (result.status) {\n\n        this.mainActivities[this.mainActivities.indexOf(row)] = {\n          Activity: result.row.Activity,\n        };\n\n        this.mainActivitiesDataSource = new MatTableDataSource(this.mainActivities);\n\n        setTimeout(() => {\n          this.mainActivitiesDataSource.paginator = this.MainActivityPaginator;\n          this.mainActivitiesDataSource.sort = this.MainActivityMatSort;\n        });\n      }\n    });\n  }\n\n  onRemoveMainActivity(row: MainActivity): void {\n    this.mainActivities.splice(this.mainActivities.indexOf(row), 1);\n\n    this.mainActivitiesDataSource = new MatTableDataSource(this.mainActivities);\n\n    setTimeout(() => {\n      this.mainActivitiesDataSource.paginator = this.MainActivityPaginator;\n      this.mainActivitiesDataSource.sort = this.MainActivityMatSort;\n    });\n  }\n\n  onAddADPO(): void {\n    this.dialogRef = this.dialog.open(OrgDataProtectionOfficerComponent, {\n      panelClass: ['organisation-data-protection-officer-dialog', 'dialogs'],\n      disableClose: true,\n    });\n\n    this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: DataProtectionOfficer }) => {\n      if (result.status) {\n        let found = false;\n        this.dataProtectionOfficers.filter((dpo) => {\n          if (dpo.EmailAddress === result.row.EmailAddress || dpo.PhoneNumber === result.row.PhoneNumber) {\n            found = true;\n          }\n        });\n\n        if (found) {\n          this.service.openSnackBar('Sorry, this record already exists', 'error-lg');\n        } else {\n          this.dataProtectionOfficers.push(result.row);\n        }\n\n        this.dpoDataSource = new MatTableDataSource(this.dataProtectionOfficers);\n\n        setTimeout(() => {\n          this.dpoDataSource.paginator = this.dpoPaginator;\n          this.dpoDataSource.sort = this.dpoMatSort;\n        });\n      }\n    });\n  }\n\n  onEditDPO(row: DataProtectionOfficer): void {\n    this.dialogRef = this.dialog.open(OrgDataProtectionOfficerComponent, {\n      panelClass: ['organisation-data-protection-officer-dialog', 'dialogs'],\n      disableClose: true,\n      data: { row }\n    });\n\n    this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: DataProtectionOfficer }) => {\n      if (result.status) {\n\n        this.dataProtectionOfficers[this.dataProtectionOfficers.indexOf(row)] = {\n          Name: result.row.Name,\n          EmailAddress: result.row.EmailAddress,\n          PhoneNumber: result.row.PhoneNumber,\n          PhysicalAddress: result.row.PhysicalAddress,\n          PositionInOrganisation: result.row.PositionInOrganisation,\n        };\n\n        this.dpoDataSource = new MatTableDataSource(this.dataProtectionOfficers);\n\n        setTimeout(() => {\n          this.dpoDataSource.paginator = this.dpoPaginator;\n          this.dpoDataSource.sort = this.dpoMatSort;\n        });\n      }\n    });\n  }\n\n  onRemoveDPO(row: DataProtectionOfficer): void {\n    this.dataProtectionOfficers.splice(this.dataProtectionOfficers.indexOf(row), 1);\n\n    this.dpoDataSource = new MatTableDataSource(this.dataProtectionOfficers);\n\n    setTimeout(() => {\n      this.dpoDataSource.paginator = this.dpoPaginator;\n      this.dpoDataSource.sort = this.dpoMatSort;\n    });\n  }\n\n  onAddSecurityMeasure(): void {\n    this.dialogRef = this.dialog.open(OrgSecurityMeasuresComponent, {\n      panelClass: ['organisation-security-measure-dialog', 'dialogs'],\n      disableClose: true,\n    });\n\n    this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: SecurityMeasure }) => {\n      if (result.status) {\n        let found = false;\n        this.securityMeasures.filter((item) => {\n          if (item.SecurityMeasure === result.row.SecurityMeasure) {\n            found = true;\n          }\n        });\n\n        if (found) {\n          this.service.openSnackBar('Sorry, this record already exists', 'error-lg');\n        } else {\n          this.securityMeasures.push(result.row);\n        }\n\n        this.securityMeasureDataSource = new MatTableDataSource(this.securityMeasures);\n\n        setTimeout(() => {\n          this.securityMeasureDataSource.paginator = this.securityMeasurePaginator;\n          this.securityMeasureDataSource.sort = this.securityMeasureMatSort;\n        });\n      }\n    });\n  }\n\n  onEditSecurityMeasure(row: SecurityMeasure): void {\n    this.dialogRef = this.dialog.open(OrgSecurityMeasuresComponent, {\n      panelClass: ['organisation-security-measure-dialog', 'dialogs'],\n      disableClose: true,\n      data: { row }\n    });\n\n    this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: SecurityMeasure }) => {\n      if (result.status) {\n\n        this.securityMeasures[this.securityMeasures.indexOf(row)] = {\n          SecurityMeasure: result.row.SecurityMeasure,\n        };\n\n        this.securityMeasureDataSource = new MatTableDataSource(this.securityMeasures);\n\n        setTimeout(() => {\n          this.securityMeasureDataSource.paginator = this.securityMeasurePaginator;\n          this.securityMeasureDataSource.sort = this.securityMeasureMatSort;\n        });\n      }\n    });\n  }\n\n  onRemoveSecurityMeasure(row: SecurityMeasure): void {\n    this.securityMeasures.splice(this.securityMeasures.indexOf(row), 1);\n\n    this.securityMeasureDataSource = new MatTableDataSource(this.securityMeasures);\n\n    setTimeout(() => {\n      this.securityMeasureDataSource.paginator = this.securityMeasurePaginator;\n      this.securityMeasureDataSource.sort = this.securityMeasureMatSort;\n    });\n  }\n\n  onAddAThirdParty(): void {\n    this.dialogRef = this.dialog.open(OrgThirdPartyComponent, {\n      panelClass: ['organisation-third-party-dialog', 'dialogs'],\n      disableClose: true,\n    });\n\n    this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: ThirdParty }) => {\n      if (result.status) {\n          let found = false;\n\n          this.thirdParties.filter((party) => {\n            if (party.ThirdPartyName === result.row.ThirdPartyName) {\n              found = true;\n            }\n          });\n\n          if (found) {\n            this.service.openSnackBar('Sorry, this record already exists', 'error-lg');\n          } else {\n            this.thirdParties.push(result.row);\n          }\n\n        this.thirdPartyDataSource = new MatTableDataSource(this.thirdParties);\n\n        setTimeout(() => {\n          this.thirdPartyDataSource.paginator = this.thirdPartyPaginator;\n          this.thirdPartyDataSource.sort = this.thirdPartyMatSort;\n        });\n      }\n    });\n  }\n\n  onEditThirdParty(row: ThirdParty): void {\n    this.dialogRef = this.dialog.open(OrgThirdPartyComponent, {\n      panelClass: ['organisation-third-party-dialog', 'dialogs'],\n      disableClose: true,\n      data: { row }\n    });\n\n    this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: ThirdParty }) => {\n      if (result.status) {\n\n        this.thirdParties[this.thirdParties.indexOf(row)] = {\n          ThirdPartyName: result.row.ThirdPartyName,\n          Purpose: result.row.Purpose,\n        };\n\n        this.thirdPartyDataSource = new MatTableDataSource(this.thirdParties);\n\n        setTimeout(() => {\n          this.thirdPartyDataSource.paginator = this.thirdPartyPaginator;\n          this.thirdPartyDataSource.sort = this.thirdPartyMatSort;\n        });\n      }\n    });\n  }\n\n  onRemoveThirdParty(row: ThirdParty): void {\n    this.thirdParties.splice(this.thirdParties.indexOf(row), 1);\n\n    this.thirdPartyDataSource = new MatTableDataSource(this.thirdParties);\n\n    setTimeout(() => {\n      this.thirdPartyDataSource.paginator = this.thirdPartyPaginator;\n      this.thirdPartyDataSource.sort = this.thirdPartyMatSort;\n    });\n  }\n\n  onAddACountry(): void {\n    this.dialogRef = this.dialog.open(OrgCountryComponent, {\n      panelClass: ['organisation-country-dialog', 'dialogs'],\n      disableClose: true,\n    });\n\n    this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: CountryOfTransfer }) => {\n      if (result.status) {\n          let found = false;\n          this.countriesOfTransfer.filter((party) => {\n            if (party.Country === result.row.Country) {\n              found = true;\n            }\n          });\n\n          if (found) {\n            this.service.openSnackBar('Sorry, this record already exists', 'error-lg');\n          } else {\n            this.countriesOfTransfer.push(result.row);\n          }\n\n        this.countriesDataSource = new MatTableDataSource(this.countriesOfTransfer);\n\n        setTimeout(() => {\n          this.countriesDataSource.paginator = this.countryOfTransferPaginator;\n          this.countriesDataSource.sort = this.countryOfTransferMatSort;\n        });\n      }\n    });\n  }\n\n  onEditCountry(row: CountryOfTransfer): void {\n    this.dialogRef = this.dialog.open(OrgCountryComponent, {\n      panelClass: ['organisation-country-dialog', 'dialogs'],\n      disableClose: true,\n      data: { row }\n    });\n\n    this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: CountryOfTransfer }) => {\n      if (result.status) {\n        this.countriesOfTransfer[this.countriesOfTransfer.indexOf(row)] = {\n          CountryID: result.row.CountryID,\n          Country: result.row.Country,\n          Purpose: result.row.Purpose,\n          Description: result.row.Description,\n        };\n\n        this.countriesDataSource = new MatTableDataSource(this.countriesOfTransfer);\n\n        setTimeout(() => {\n          this.countriesDataSource.paginator = this.countryOfTransferPaginator;\n          this.countriesDataSource.sort = this.countryOfTransferMatSort;\n        });\n      }\n    });\n  }\n\n  onRemoveCountry(row: CountryOfTransfer): void {\n    this.countriesOfTransfer.splice(this.countriesOfTransfer.indexOf(row), 1);\n\n    this.countriesDataSource = new MatTableDataSource(this.countriesOfTransfer);\n\n    setTimeout(() => {\n      this.countriesDataSource.paginator = this.countryOfTransferPaginator;\n      this.countriesDataSource.sort = this.countryOfTransferMatSort;\n    });\n  }\n\n  onUploadAttachments(): void {\n    this.dialogRef = this.dialog.open(OrgUploadComponent, {\n      panelClass: ['organisation-upload-dialog', 'dialogs'],\n      disableClose: true,\n      data: {\n        multiple: false\n      }\n    });\n\n    this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: FileUpload }) => {\n      console.log('row:', result.row);\n\n      if (result.status) {\n        this.document = result.row;\n      }\n    });\n  }\n\n  onRemoveDocument(): void {\n    this.document = null;\n  }\n\n  onDownloadForm3(): void {\n    this.dialogRef = this.dialog.open(OrgForm3DialogComponent, {\n      panelClass: ['organisation-form-3-dialog', 'dialogs'],\n      disableClose: true,\n      data: {\n        OrganisationName: this.formGeneralInformation.get('OrganizationName').value,\n        PhysicalAddress: this.formGeneralInformation.get('Location').value,\n        Date: new Date()\n      }\n    });\n  }\n\n  onUploadProofOfPayment(): void {\n    this.dialogRef = this.dialog.open(OrgUploadComponent, {\n      panelClass: ['organisation-upload-dialog', 'dialogs'],\n      disableClose: true,\n      data: {\n        multiple: false\n      }\n    });\n\n    this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: FileUpload }) => {\n\n      if (result.status) {\n        this.proofOfPayment = result.row;\n      }\n    });\n  }\n\n  onRemoveProofOfPaymen(): void {\n    this.proofOfPayment = null;\n  }\n\n  onUploadForm3Attachments(): void {\n    this.dialogRef = this.dialog.open(OrgUploadComponent, {\n      panelClass: ['organisation-upload-dialog', 'dialogs'],\n      disableClose: true,\n      data: {\n        multiple: false\n      }\n    });\n\n    this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: FileUpload }) => {\n      if (result.status) {\n        this.documentForm3 = result.row;\n      }\n    });\n  }\n\n  onRemoveForm3Document(): void {\n    this.documentForm3 = null;\n  }\n\n  onChangeSubCategory(event: MatCheckboxChange, SubCategory: DataSubCategory): void {\n    if (event.checked) {\n      this.selectedDataSubCategory.push(SubCategory);\n    } else {\n      this.selectedDataSubCategory.splice(this.selectedDataSubCategory.indexOf(SubCategory), 1);\n    }\n  }\n\n  private fetchMultiple(): Observable<any[]> {\n    this.processing = true;\n    const reqCountries = this.http.get<ApiPayload>(this.endpoints.countries);\n    const reqDataSources = this.http.get<ApiPayload>(this.endpoints.dataSources);\n    const reqOrganisationType = this.http.get<ApiPayload>(this.endpoints.organisationType);\n    const reqSector = this.http.get<ApiPayload>(this.endpoints.sector);\n    const reqDataSubcategories = this.http.get<ApiPayload>(this.endpoints.dataSubcategories);\n    const reqDataPurpose = this.http.get<ApiPayload>(this.endpoints.dataPurpose);\n    const reqNatureOfBusiness = this.http.get<ApiPayload>(this.endpoints.natureOfBusiness);\n    const reqOrgRegSaveDraft = this.http.get<ApiPayload>(this.endpoints.getOrgDetailsById, { params: { OrganizationID: this._auth.getOrganisationID() } });\n    // tslint:disable-next-line:max-line-length\n    return forkJoin([\n      reqCountries, \n      reqDataSources, \n      reqOrganisationType, \n      reqSector, \n      reqDataSubcategories, \n      reqDataPurpose, \n      reqNatureOfBusiness,\n      reqOrgRegSaveDraft,\n    ]);\n  }\n\n  private getFormData(): any {\n\n    return {\n      OrganisationUserID: +this._auth.getOrganisationID(),\n      OrganisationName: this.formGeneralInformation.get('OrganizationName').value,\n      OrganisationCategory: this.selectedOrganisationCategories ? this.selectedOrganisationCategories : [],\n      OrganizationTypeID: this.formGeneralInformation.get('OrganizationTypeID').value ? this.formGeneralInformation.get('OrganizationTypeID').value : 0,\n      CountryOfIncorporation: this.formGeneralInformation.get('CountryOfIncorporation').value ? this.formGeneralInformation.get('CountryOfIncorporation').value : 0,\n      URSBNumber: this.formGeneralInformation.get('URSBNumber').value ? this.formGeneralInformation.get('URSBNumber').value : '',\n      SectorID: this.formGeneralInformation.get('SectorID').value ? this.formGeneralInformation.get('SectorID').value : 0,\n      OtherSector: this.formGeneralInformation.get('OtherSector').value ? this.formGeneralInformation.get('OtherSector').value : '',\n      Location: this.formGeneralInformation.get('Location').value ? this.formGeneralInformation.get('Location').value : '',\n      // tslint:disable-next-line:max-line-length\n      // PhoneNumber: this.formGeneralInformation.get('PhoneNumberCode').value + (this.formGeneralInformation.get('PhoneNumber').value).replaceAll(' ', ''),\n      // EmailAddress: this.formGeneralInformation.get('EmailAddress').value,\n      RegTrackingNo: this.regTrackingNo,\n      OrganisationID: this.OrganisationID.toString(),\n      PhoneNumber: this.application.PhoneNumber,\n      EmailAddress: this.application.EmailAddress,\n      NatureOfBusinessCatID: this.formGeneralInformation.get('NatureOfBusinessCat').value ? this.formGeneralInformation.get('NatureOfBusinessCat').value : 0,\n      NatureOfBusiness: this.selectedNatureOfBusinessSubCat ? this.selectedNatureOfBusinessSubCat : [],\n      \n      DPORequired: this.formOrganisationDetails.get('DPORequired').value,\n      DPOName: this.formOrganisationDetails.get('DPORequired').value === 'Yes' ? this.formOrganisationDetails.get('DPOName').value : '',\n      DPOPhysicalAddress: this.formOrganisationDetails.get('DPORequired').value === 'Yes' ? this.formOrganisationDetails.get('DPOPhysicalAddress').value : '',\n      // tslint:disable-next-line:max-line-length\n      DPOPhoneNumber: this.formOrganisationDetails.get('DPOPhoneNumber').value ? this.formOrganisationDetails.get('PhoneNumberCode').value + (this.formOrganisationDetails.get('DPOPhoneNumber').value).replaceAll(' ', '') : '',\n      // tslint:disable-next-line:max-line-length\n      DPOEmailAddress: this.formOrganisationDetails.get('DPORequired').value === 'Yes' ? this.formOrganisationDetails.get('DPOEmailAddress').value : '',\n      DPOPositionInOrganisation: this.formOrganisationDetails.get('DPORequired').value === 'Yes' ? this.formOrganisationDetails.get('DPOPositionInOrganisation').value : '',\n      SourceOfDataID: this.selectedDataSources ? this.selectedDataSources : [],\n      PersonalDataCollected: this.selectedDataSubCategory ? this.selectedDataSubCategory : [],\n      Purpose: this.selectedDataPurposes ? this.selectedDataPurposes : [],\n      SpecifyTheLaw: this.formPurposeRetention.get('SpecifyTheLaw').value ? this.formPurposeRetention.get('SpecifyTheLaw').value : '',\n      ServiceOrProductProvided: this.formPurposeRetention.get('ServiceOrProductProvided').value ? this.formPurposeRetention.get('ServiceOrProductProvided').value : '',\n      SpecifyLegalObligation: this.formPurposeRetention.get('SpecifyLegalObligation').value ? this.formPurposeRetention.get('SpecifyLegalObligation').value : '',\n      // tslint:disable-next-line:max-line-length\n      TotalRecordsAtRegistration: this.formPurposeRetention.get('TotalRecordsAtRegistration').value ? parseInt(this.formPurposeRetention.get('TotalRecordsAtRegistration').value, 10) : 0,\n      RecordPercentageGrowth: this.formPurposeRetention.get('RecordPercentageGrowth').value ? parseInt(this.formPurposeRetention.get('RecordPercentageGrowth').value, 10) : 0,\n      // RetentionPeriod: this.formPurposeRetention.get('RetentionPeriod').value,\n      RetentionPeriod: this.formPurposeRetention.get('RetentionPeriod').value ? parseInt(this.formPurposeRetention.get('RetentionPeriod').value, 10) : 0,\n      PersonalDataIsForDisclosure: this.formThirdParties.get('PersonalDataIsForDisclosure').value ? this.formThirdParties.get('PersonalDataIsForDisclosure').value : '',\n      ThirdParties: this.thirdParties ? this.thirdParties : [],\n      StoreDataOutsideCountry: this.formThirdParties.get('StoreDataOutsideCountry').value ? this.formThirdParties.get('StoreDataOutsideCountry').value : '',\n      Countries: this.countriesOfTransfer ? this.countriesOfTransfer : [],\n      SecurityMeasures: this.securityMeasures ? this.securityMeasures : [],\n      Attachment: this.document ? this.document.Base64 : '',\n      Form3Attachment: this.documentForm3 ? this.documentForm3.Base64 : '',\n      RegistrationConsent: this.formSecurityMeasures.get('RegistrationConsent').value ? true : false,\n      RegistrationDoneBy: this.formSecurityMeasures.get('RegistrationDoneBy').value ? this.formSecurityMeasures.get('RegistrationDoneBy').value : '',\n      ProofOfPayment: this.proofOfPayment ? this.proofOfPayment.Base64 : '',\n    };\n  }\n\n  onNatureOfBusinessCatSelected(NatureOfBusinessCatId): void {\n    // tslint:disable-next-line:max-line-length\n    this.httpSub = this.http.get<NatureOfBusinessSubCat[]>(this.endpoints.natureOfBusiness + '?NatureOfBusinessSubCat=' + NatureOfBusinessCatId)\n    .pipe(catchError(this.service.handleError))\n    .subscribe((response) => {\n\n      this.natureOfBusinessSubCat = response;\n\n    }, (error) => {\n      this.processing = false;\n      this.service.determineErrorResponse(error);\n    });\n  }\n\n  onPreviewForm(download: boolean): void {\n    this.dialogRef = this.dialog.open(OrgRegistrationPreviewDialogComponent, {\n      panelClass: ['organisation-registration-preview-form-3-dialog', 'dialogs'],\n      disableClose: true,\n      data: {\n        download: download,\n        row: this.getFormData(),\n        Attachment: this.document ? this.document : '',\n        Form3: this.documentForm3 ? this.documentForm3 : '',\n        ProofOfPayment: this.proofOfPayment ? this.proofOfPayment : '',\n        OrganizationType: this.OrganizationType,\n        // tslint:disable-next-line:max-line-length\n        Sector: this.formGeneralInformation.get('OtherSector').value ? this.formGeneralInformation.get('OtherSector').value : this.SectorName,\n        NatureOfBusinessCat: this.NatureOfBusinessCat,\n        CountryOfIncorporation: this.CountryOfIncorporation\n      }\n    });\n  }\n\n  onSubmit(): void {\n    this.processing = true;\n    console.log('save the registration information:', this.getFormData());\n\n    this.httpSub = this.http.post<ApiPayload>(this.endpoints.updateRegistrationDetails, this.getFormData())\n    .pipe(catchError(this.service.handleError))\n    .subscribe((response) => {\n      this.dialogRef = this.dialog.open(SuccessfulMessageDialogComponent, {\n        panelClass: ['successful-message-dialog', 'dialogs'],\n        disableClose: true,\n        data: {\n          title: response.message['title'],\n          message: response.message['body'],\n          status: response.code === 200 ? true : false,\n        }\n      });\n\n      this.dialogRef.afterClosed().subscribe(() => {\n        this.route.navigate(['/company-registration/find']);\n      });\n\n      this.processing = false;\n    }, (error) => {\n      this.processing = false;\n\n      if (error.error.message) {\n        this.dialogRef = this.dialog.open(SuccessfulMessageDialogComponent, {\n          panelClass: ['successful-message-dialog', 'dialogs'],\n          disableClose: true,\n          data: {\n            title: error.error.message['title'] ? error.error.message['title'] : 'Operation Failed',\n            message: error.error.message['body'] ? error.error.message['body'] : environment.technicalErrorResponse,\n            status: false,\n          }\n        });\n      } else {\n        this.service.determineErrorResponse(error);\n      }\n    });\n  }\n\n  onReadDocument(document: FileUpload): void {\n    console.log(document.Base64)\n    this.bottomsheetRef = this.bottomsheet.open(ViewPdfDocumentBottomsheetComponent, {\n      disableClose: true,\n      panelClass: ['view-pdf-document-bottomsheet', 'bottomsheets'],\n      data: {\n        url: document.Base64,\n        title: document.Name\n      }\n    });      \n  }\n\n  private _loadApplicationDraft(response): void {\n    console.log(response)\n    this.application = response[0];\n    this.processing = false;\n\n    this.regTrackingNo = response[0]['RegTrackingNo'];\n    this.OrganisationID = response[0]['OrganisationID'];\n    console.log(this.regTrackingNo);\n    console.log(this.application);\n    console.log(\"here\");\n\n    if (this.application.CurrentStepName !== 'Certificate Issued') {      \n      this.dialogRef = this.dialog.open(SuccessfulMessageDialogComponent, {\n        panelClass: ['successful-message-dialog', 'dialogs'],\n        disableClose: true,\n        data: {\n          title: 'No Previous Certificate',\n          message: 'Please complete your registration',\n          status: false,\n        }\n      });\n\n      this.dialogRef.afterClosed().subscribe(() => {\n        // console.log('regTrackingNo:', this.regTrackingNo);\n        this.route.navigate(\n          ['/company-registration/view'],\n          { state: { regTrackingNo: this.regTrackingNo }}\n        ).then();\n      });      \n\n    } else {\n\n      if (this.application.OrganisationCategory) {\n        let organisationCategories: any = this.application.OrganisationCategory;\n        let cat: number[] = [];\n    \n        organisationCategories.filter((item) => {\n          cat.push(item.OrganisationCategoryId);\n        });\n    \n        this.formGeneralInformation.get('DPPActCategory').patchValue(cat);\n      }\n  \n      this.formGeneralInformation.get('OrganizationTypeID').patchValue(this.application.OrganizationTypeID);\n      this.formGeneralInformation.get('OrganizationName').patchValue(this.application.OrganisationName);\n      this.formGeneralInformation.get('URSBNumber').patchValue(this.application.URSBNumber);\n      this.formGeneralInformation.get('SectorID').patchValue(this.application.SectorID);\n      this.formGeneralInformation.get('CountryOfIncorporation').patchValue(this.application['CountryOfIncorporation']);\n      this.formGeneralInformation.get('OtherSector').patchValue(this.application['OtherSector']);\n      this.formGeneralInformation.get('Location').patchValue(this.application.Location);\n      this.formGeneralInformation.get('PhoneNumberCode').patchValue(this.application.PhoneNumber.substring(0, 3));\n      this.formGeneralInformation.get('PhoneNumber').patchValue(this.application.PhoneNumber.substring(3, 13));\n      this.formGeneralInformation.get('EmailAddress').patchValue(this.application.EmailAddress);\n  \n      if (response[0]['NatureOfBusiness'].length) {\n        this.formGeneralInformation.get('NatureOfBusinessCat').patchValue(response[0]['NatureOfBusiness'][0]['NatureOfBusinessCatID']);\n        this.natureOfbusinesses = response[0]['NatureOfBusiness'];\n\n        this.onNatureOfBusinessCatSelected(response[0]['NatureOfBusiness'][0]['NatureOfBusinessCatID']);\n        \n        let _selectedNatureOfBusinessSubCat: NatureOfBusinessSubCat[] = [];\n        this.natureOfbusinesses.filter((item) => {\n            this.natureOfbusinesses_arr.push(item.NatureOfBusinessSubatID);\n\n            _selectedNatureOfBusinessSubCat.push({\n                NatureOfBusinessSubCatId: item.NatureOfBusinessSubatID,\n                NatureOfBusinessSubCategoryName: item.NatureOfBusinessSubCategoryName\n            });\n        });\n\n                  \n        this.formGeneralInformation.get('NatureOfBusinessSubCat').patchValue(this.natureOfbusinesses_arr);\n        this.selectedNatureOfBusinessSubCat = _selectedNatureOfBusinessSubCat;\n      }\n  \n      // STEP TWO\n      this.formOrganisationDetails.get('DPORequired').patchValue(this.application['DPORequired']);\n  \n      this.formOrganisationDetails.get('DPOName').patchValue(this.application['DPOName']);\n      this.formOrganisationDetails.get('DPOPhysicalAddress').patchValue(this.application['DPOPhysicalAddress']);\n      this.formOrganisationDetails.get('PhoneNumberCode').patchValue(this.application['DPOPhoneNumber'].substring(0, 3));\n      this.formOrganisationDetails.get('DPOPhoneNumber').patchValue(this.application['DPOPhoneNumber'].substring(3, 13));\n      this.formOrganisationDetails.get('DPOEmailAddress').patchValue(this.application['DPOEmailAddress']);\n      this.formOrganisationDetails.get('DPOPositionInOrganisation').patchValue(this.application['DPOPositionInOrganisation']);\n  \n      // STEP THREE\n      let sourceofdata = this.application['SourceOfDataID'];\n      let sourceofdata_arr: number [] = [];\n      \n      sourceofdata.filter((item) => {\n        sourceofdata_arr.push(item.DataSourceID);\n      });\n  \n      this.formPersonalDataHeld.get('SourceOfDataID').patchValue(sourceofdata_arr);\n  \n      if (this.application['PersonalDataCollected']) {\n        const personalDataCollected: any[] = this.application['PersonalDataCollected'];\n    \n        this.dataCategories.filter((category) => {\n          category.SubCategories.filter((subCat) => {\n            personalDataCollected.filter((selectedSubCat) => {            \n              if (subCat.DataSubCategoryID === selectedSubCat.DataSubCategoryID) {\n                subCat.IsChecked = true;\n                this.selectedDataSubCategory.push(subCat);\n              }\n            });\n          });\n        });\n      }\n  \n      // STEP FOUR\n      const purpose: any = this.application['Purpose'];\n      let purpose_arr: any[] = [];\n      let _selectedDataPurposes: DataPurposes[]  = [];\n  \n      purpose.filter((item) => {\n        if (item.DataPurposeID === 1) {\n          this.SpecifyTheLaw = true;\n          this.formPurposeRetention.get('SpecifyTheLaw').setValidators([Validators.required]);\n        }\n  \n        if (item.DataPurposeID === 3) {\n          this.ServiceOrProductProvided = true;\n          this.formPurposeRetention.get('ServiceOrProductProvided').setValidators([Validators.required]);\n        }\n  \n        if (item.DataPurposeID === 6) {\n          this.SpecifyLegalObligation = true;\n          this.formPurposeRetention.get('SpecifyLegalObligation').setValidators([Validators.required]);\n        }\n  \n        purpose_arr.push(item.DataPurposeID);\n  \n        _selectedDataPurposes.push(item);\n      });\n      \n      this.formPurposeRetention.get('Purpose').patchValue(purpose_arr);\n      this.selectedDataPurposes = _selectedDataPurposes;\n  \n      this.formPurposeRetention.get('SpecifyTheLaw').patchValue(this.application['SpecifyTheLaw']);\n      this.formPurposeRetention.get('ServiceOrProductProvided').patchValue(this.application['ServiceOrProductProvided']);\n      this.formPurposeRetention.get('SpecifyLegalObligation').patchValue(this.application['SpecifyLegalObligation']);\n      this.formPurposeRetention.get('TotalRecordsAtRegistration').patchValue(this.application['TotalRecordsAtRegistration']);\n      this.formPurposeRetention.get('RecordPercentageGrowth').patchValue(this.application['RecordPercentageGrowth']);\n      this.formPurposeRetention.get('RetentionPeriod').patchValue(this.application['RetentionPeriod']);\n  \n      // STEP FIVE\n      this.formThirdParties.get('PersonalDataIsForDisclosure').patchValue(this.application['PersonalDataIsForDisclosure'].replace(/\\s/g, ''));\n      this.thirdParties = this.application['ThirdParties'];\n      this.thirdPartyDataSource = new MatTableDataSource(this.thirdParties);\n  \n      setTimeout(() => {\n        this.thirdPartyDataSource.paginator = this.thirdPartyPaginator;\n        this.thirdPartyDataSource.sort = this.thirdPartyMatSort;\n      });\n  \n      this.formThirdParties.get('StoreDataOutsideCountry').patchValue(this.application['StoreDataOutsideCountry']);\n      this.countriesOfTransfer = this.application['Countries'];\n      this.countriesDataSource = new MatTableDataSource(this.countriesOfTransfer);\n  \n      setTimeout(() => {\n        this.countriesDataSource.paginator = this.countryOfTransferPaginator;\n        this.countriesDataSource.sort = this.countryOfTransferMatSort;\n      });\n  \n      // STEP SIX\n      this.securityMeasures = this.application['SecurityMeasures'];\n      this.securityMeasureDataSource = new MatTableDataSource(this.securityMeasures);\n      setTimeout(() => {\n          this.securityMeasureDataSource.paginator = this.securityMeasurePaginator;\n          this.securityMeasureDataSource.sort = this.securityMeasureMatSort;\n      });\n  \n      if (this.application.Attachment) {\n        this.document = { \n          Document: null, \n          Name: 'Supporting Documentation.pdf', \n          Size: null, \n          Base64: this.application.Attachment \n        };\n      }\n\n      this.formSecurityMeasures.get('RegistrationConsent').patchValue(this.application['RegistrationConsent'] == true ? true : null);\n      this.formSecurityMeasures.get('RegistrationDoneBy').patchValue(this.application['RegistrationDoneBy']);    \n    }\n  }\n\n  onSaveDraft(): void {\n    this.processing = true;\n\n    this.httpSub = this.http.put<ApiPayload>(this.endpoints.orgRegSaveDraft, this.getFormData())\n    .pipe(catchError(this.service.handleError))\n    .subscribe((response) => {\n\n      this.dialogRef = this.dialog.open(SuccessfulMessageDialogComponent, {\n        panelClass: ['successful-message-dialog', 'dialogs'],\n        disableClose: true,\n        data: {\n          title: response.message['title'],\n          message: response.message['body'],\n          status: response.code === 200 ? true : false,\n        }\n      });\n\n      this.processing = false;\n    }, (error) => {\n      this.processing = false;\n\n      if (error.error.message) {\n        this.dialogRef = this.dialog.open(SuccessfulMessageDialogComponent, {\n          panelClass: ['successful-message-dialog', 'dialogs'],\n          disableClose: true,\n          data: {\n            title: error.error.message['title'] ? error.error.message['title'] : 'Operation Failed',\n            message: error.error.message['body'] ? error.error.message['body'] : environment.technicalErrorResponse,\n            status: false,\n          }\n        });\n      } else {\n        this.service.determineErrorResponse(error);\n      }\n    });    \n  }\n\n  ngOnDestroy(): void {\n    if (this.httpSub) { this.httpSub.unsubscribe(); }\n  }\n\n\n}\n","\n<fury-page-layout mode=\"card\">\n    <fury-page-layout-header>\n        <fury-breadcrumbs [@fadeInRight] [crumbs]=\"['New Registration']\"\n                          current=\"New Application\"></fury-breadcrumbs>\n    </fury-page-layout-header>\n\n    <fury-page-layout-content [@fadeInUp]>\n        <main class=\"fadeInUp _delay4ms\">\n\n            <!-- <app-page-breadcrumb [title]=\"'Application for New Registration / Renewal'\"></app-page-breadcrumb> -->\n        \n            <mat-horizontal-stepper \n                [linear]=\"isLinear\"\n                [selectedIndex]=\"selectedIndex\"\n                labelPosition=\"bottom\" #stepper>\n        \n                <mat-step [stepControl]=\"formGeneralInformation\">\n                    <ng-template matStepLabel>\n                        <h3>Applicant</h3>\n                    </ng-template>\n        \n                    <form [formGroup]=\"formGeneralInformation\">\n                        <h1 class=\"full-width step-header\">Details of the applicant which could be an organisation or Individual that collects or processes Personal Data </h1>\n        \n                        <mat-form-field>\n                            <mat-label>Name of Organisation <span class=\"required-field\">required</span></mat-label>\n                            <input appUppercase matInput formControlName=\"OrganizationName\">       \n                            <mat-error *ngIf=\"formGeneralInformation.get('OrganizationName').invalid\">{{ getOrganizationNameErrorMessage() }}</mat-error>\n                        </mat-form-field>  \n        \n                        <div class=\"telephone-code-number-wrapper\">\n                            <mat-form-field class=\"fadeInUp _delay2ms\">\n                                <mat-label>Pick one </mat-label>\n                                <mat-select formControlName=\"PhoneNumberCode\">\n                                    <mat-option selected *ngIf=\"!selected\" value=\"256\">+256</mat-option>\n                                    <!-- <mat-option selected *ngIf=\"!selected\" value=\"256\">+256 - Uganda</mat-option> -->\n                                    <mat-option *ngFor=\"let code of countries\" [value]=\"code.PhoneCode\" (click)=\"selected = true\">\n                                        +{{ code.PhoneCode }}\n                                    </mat-option>\n                                </mat-select>\n                            </mat-form-field>\n        \n                            <!-- <mat-form-field class=\"fadeInUp _delay2ms\" [hintLabel]=\"'Organisation Telephone Number.'\"> -->\n                            <mat-form-field class=\"fadeInUp _delay2ms\">\n                                <mat-label>Organisation Telephone Number <span class=\"required-field\">required</span></mat-label>\n                                <input type=\"text\" maxlength=\"11\" matInput appTelephoneFormaterDirective formControlName=\"PhoneNumber\" placeholder=\"Ex. 414 318 111\">\n                                <mat-error *ngIf=\"formGeneralInformation.get('PhoneNumber').invalid\">{{ getTelephoneNumberErrorMessage() }}</mat-error>\n                            </mat-form-field> \n                        </div>                \n        \n                        <mat-form-field>\n                            <mat-label>Organisation Email Address <span class=\"required-field\">required</span></mat-label>\n                            <input appRemoveSpaces matInput formControlName=\"EmailAddress\">\n                            <mat-error *ngIf=\"formGeneralInformation.get('EmailAddress').invalid\">{{ getEmailAddressErrorMessage() }}</mat-error>\n                        </mat-form-field>   \n                                \n                        <mat-form-field [hintLabel]=\"'Choose all that apply'\">\n                            <mat-label>Category <span class=\"required-field\">required</span></mat-label>\n                            <mat-select multiple formControlName=\"DPPActCategory\">\n                                <mat-option *ngFor=\"let cat of organisationCategories\" [value]=\"cat.OrganisationCategoryId\">\n                                    {{ cat.OrganisationCategoryName }}\n                                </mat-option>\n                            </mat-select>   \n                            <mat-error *ngIf=\"formGeneralInformation.get('DPPActCategory').invalid\">{{ getSelectErrorMessage() }}</mat-error> \n                        </mat-form-field>                             \n        \n                        <mat-form-field>\n                            <mat-label>Type of Organisation <span class=\"required-field\">required</span></mat-label>\n                            <mat-select formControlName=\"OrganizationTypeID\" #typeOfOrganisation>\n                                <mat-option *ngFor=\"let type of organisationTypes\" (click)=\"OrganizationType = type.OrganisationType\" [value]=\"type.OrganisationTypeID\">\n                                    {{ type.OrganisationType }}\n                                </mat-option>\n                            </mat-select>\n                            <mat-error *ngIf=\"formGeneralInformation.get('OrganizationTypeID').invalid\">{{ getSelectErrorMessage() }}</mat-error> \n                        </mat-form-field>                   \n        \n                        <mat-form-field *ngIf=\"typeOfOrganisation.value && typeOfOrganisation.value !== 4\">\n                            <mat-label>Country of Incorporation <span class=\"required-field\">required</span></mat-label>\n                            <mat-select formControlName=\"CountryOfIncorporation\">\n                                <mat-option *ngFor=\"let country of countries\" (click)=\"CountryOfIncorporation = country.Name\" [value]=\"country.CountryID\">\n                                    {{ country.Name }}\n                                </mat-option>\n                            </mat-select>\n                            <mat-error *ngIf=\"formGeneralInformation.get('CountryOfIncorporation').invalid\">{{ getSelectErrorMessage() }}</mat-error> \n                        </mat-form-field>        \n        \n                        <mat-form-field *ngIf=\"typeOfOrganisation.value && typeOfOrganisation.value !== 4\">\n                            <mat-label>Registration Number <span class=\"required-field\">required</span></mat-label>\n                            <input appUppercase appRemoveSpaces matInput maxlength=\"25\" formControlName=\"URSBNumber\"> \n                            <mat-error *ngIf=\"formGeneralInformation.get('URSBNumber').invalid\">{{ getURSBNumberErrorMessage() }}</mat-error>\n                        </mat-form-field>     \n                        \n                        <mat-form-field>\n                            <mat-label>Sector <span class=\"required-field\">required</span></mat-label>\n                            <mat-select formControlName=\"SectorID\" #Sector>\n                                <mat-option *ngFor=\"let sector of sectors\" (click)=\"SectorName = sector.Sector\" [value]=\"sector.SectorID\">\n                                    {{ sector.Sector }}\n                                </mat-option>\n                            </mat-select>\n                            <mat-error *ngIf=\"formGeneralInformation.get('SectorID').invalid\">{{ getSelectErrorMessage() }}</mat-error>\n                        </mat-form-field>        \n                        \n                        <mat-form-field hintLabel=\"If Other, Please specify the Sector.\" *ngIf=\"Sector.value === 14\">\n                            <mat-label>Specify Sector <span class=\"required-field\">required</span></mat-label>\n                            <input appUppercase matInput maxlength=\"50\" formControlName=\"OtherSector\">    \n                            <mat-error *ngIf=\"formGeneralInformation.get('OtherSector').invalid\">{{ getOtherSectorErrorMessage() }}</mat-error>\n                        </mat-form-field>                 \n        \n                        <mat-form-field>\n                            <mat-label>Physical Address <span class=\"required-field\">required</span></mat-label>\n                            <input appUppercase matInput maxlength=\"255\" formControlName=\"Location\">            \n                            <mat-error *ngIf=\"formGeneralInformation.get('Location').invalid\">{{ getLocationErrorMessage() }}</mat-error>                \n                        </mat-form-field>  \n        \n                        <mat-form-field>\n                            <mat-label>Nature of Business Categories<span class=\"required-field\">required</span></mat-label>\n                            <mat-select formControlName=\"NatureOfBusinessCat\">\n                                <mat-option *ngFor=\"let cat of natureOfBusinessCat\" (click)=\"NatureOfBusinessCat = cat.NatureOfBusinessCategoryName\" [value]=\"cat.NatureOfBusinessCatId\">\n                                    {{ cat.NatureOfBusinessCategoryName }}\n                                </mat-option>\n                            </mat-select>    \n                            <mat-error *ngIf=\"formGeneralInformation.get('NatureOfBusinessCat').invalid\">{{ getSelectErrorMessage() }}</mat-error>\n                        </mat-form-field>                   \n        \n                        <mat-form-field [hintLabel]=\"'Choose all that apply'\">\n                            <mat-label>Nature of Business Sub-Categories <span class=\"required-field\">required</span></mat-label>\n                            <mat-select multiple formControlName=\"NatureOfBusinessSubCat\">\n                                <mat-option *ngFor=\"let sub of natureOfBusinessSubCat\" [value]=\"sub.NatureOfBusinessSubCatId\" [matTooltip]=\"sub.NatureOfBusinessSubCategoryName\">\n                                    {{ sub.NatureOfBusinessSubCategoryName }}\n                                </mat-option>\n                            </mat-select> \n                            <mat-error *ngIf=\"formGeneralInformation.get('NatureOfBusinessSubCat').invalid\">{{ getSelectErrorMessage() }}</mat-error>   \n                        </mat-form-field>                   \n                    </form>\n        \n                    <div class=\"button-wrapper\">\n                               \n        \n                        <button \n                            [disabled]=\"formGeneralInformation.invalid\"\n                            mat-button \n                            class=\"next-btn\" \n                            color=\"primary\" \n                            matStepperNext>\n                            Next\n                        </button>\n                    </div>             \n                </mat-step>\n        \n                <mat-step [stepControl]=\"formOrganisationDetails\">\n                    <ng-template matStepLabel>\n                        <h3>Data Protection <br />Officer</h3>\n                    </ng-template>\n        \n                    <form [formGroup]=\"formOrganisationDetails\">     \n        \n                        <h1 class=\"full-width step-header\">Details of Data Protection Officer </h1>    \n        \n                        <div class=\"grouped-items\" [ngClass]=\"{'full-width': formOrganisationDetails.get('DPORequired').value !== 'Yes'}\">\n                            <h3>Do you have a designated data protection officer ? </h3>\n            \n                            <mat-radio-group \n                                color=\"primary\" \n                                formControlName=\"DPORequired\" \n                                aria-label=\"Pick one\">\n                                <mat-radio-button value=\"Yes\">Yes</mat-radio-button>\n                                <mat-radio-button value=\"No\">No</mat-radio-button>\n                            </mat-radio-group>        \n                        </div>                  \n                        \n                        <mat-form-field *ngIf=\"formOrganisationDetails.get('DPORequired').value === 'Yes'\">\n                            <mat-label>Name <span class=\"required-field\">required</span></mat-label>\n                            <input formControlName=\"DPOName\" matInput>\n                            <mat-error *ngIf=\"formOrganisationDetails.get('DPOName').invalid\">{{ getDPONameErrorMessage() }}</mat-error>\n                        </mat-form-field>\n                \n                        <mat-form-field *ngIf=\"formOrganisationDetails.get('DPORequired').value === 'Yes'\">\n                            <mat-label>Physical Address <span class=\"required-field\">required</span></mat-label>\n                            <input formControlName=\"DPOPhysicalAddress\" maxlength=\"255\" matInput>\n                            <mat-error *ngIf=\"formOrganisationDetails.get('DPOPhysicalAddress').invalid\">{{ getDPOPhysicalAddressErrorMessage() }}</mat-error>\n                        </mat-form-field>\n                        \n                        <div class=\"telephone-code-number-wrapper\" *ngIf=\"formOrganisationDetails.get('DPORequired').value === 'Yes'\">\n                            <mat-form-field class=\"fadeInUp _delay2ms\">\n                                <mat-label>Pick one </mat-label>\n                                <mat-select formControlName=\"PhoneNumberCode\">\n                                    <mat-option selected *ngIf=\"!DPOSelected\" value=\"256\">+256</mat-option>\n                                    <!-- <mat-option selected *ngIf=\"!selected\" value=\"256\">+256 - Uganda</mat-option> -->\n                                    <mat-option *ngFor=\"let code of countries\" [value]=\"code.PhoneCode\" (click)=\"DPOSelected = true\">\n                                        +{{ code.PhoneCode }}\n                                    </mat-option>\n                                </mat-select>\n                                <!-- <mat-error *ngIf=\"formGeneralInformation.get('PhoneNumberCode').invalid\">{{ getSelectInputErrorMessage() }}</mat-error>      -->\n                            </mat-form-field>\n        \n                            <!-- <mat-form-field class=\"fadeInUp _delay2ms\" [hintLabel]=\"'Organisation Telephone Number.'\"> -->\n                            <mat-form-field class=\"fadeInUp _delay2ms\">\n                                <mat-label>Telephone Number <span class=\"required-field\">required</span></mat-label>\n                                <input type=\"text\" maxlength=\"11\" matInput appTelephoneFormaterDirective formControlName=\"DPOPhoneNumber\" placeholder=\"Ex. 414 318 111\">\n                                <mat-error *ngIf=\"formOrganisationDetails.get('DPOPhoneNumber').invalid\">{{ getDPOPhoneNumberErrorMessage() }}</mat-error>\n                            </mat-form-field> \n                        </div>                  \n                \n                        <mat-form-field *ngIf=\"formOrganisationDetails.get('DPORequired').value === 'Yes'\">\n                            <mat-label>Email Address <span class=\"required-field\">required</span></mat-label>\n                            <input appRemoveSpaces formControlName=\"DPOEmailAddress\" matInput>\n                            <mat-error *ngIf=\"formOrganisationDetails.get('DPOEmailAddress').invalid\">{{ getDPOEmailAddressErrorMessage() }}</mat-error>\n                        </mat-form-field>       \n        \n                        <mat-form-field *ngIf=\"formOrganisationDetails.get('DPORequired').value === 'Yes'\" class=\"full-width\" hintLabel=\"Any other title held apart from DPO (Data Protection Officer).\">\n                            <mat-label>Title Held <span class=\"required-field\">required</span></mat-label>\n                            <textarea #PositionInput matInput formControlName=\"DPOPositionInOrganisation\" maxlength=\"1000\"></textarea>\n                            <mat-hint align=\"end\">{{ PositionInput.value.length }} / 1000</mat-hint>\n                            <mat-error *ngIf=\"formOrganisationDetails.get('DPOPositionInOrganisation').invalid\">{{ getDPOPositionInOrganisationErrorMessage() }}</mat-error>\n                        </mat-form-field>                  \n                    </form>\n        \n                    <div class=\"button-wrapper\">       \n                        <button mat-button class=\"back-btn\" matStepperPrevious>Back</button>   \n                        \n                        \n\n                        <button \n                            [disabled]=\"formOrganisationDetails.invalid\"\n                            mat-button \n                            class=\"next-btn\" \n                            color=\"primary\" \n                            matStepperNext>\n                            Next\n                        </button>\n                    </div>             \n                </mat-step>\n        \n                <mat-step [stepControl]=\"formPersonalDataHeld\">\n                    <ng-template matStepLabel>\n                        <h3>Data Collected <br /> or Processed</h3>\n                    </ng-template>\n        \n                    <form [formGroup]=\"formPersonalDataHeld\" class=\"personal-data-affected\">       \n                        \n                        <h1 class=\"full-width step-header\">Description of Data collected or processed </h1>\n        \n                        <mat-form-field hintLabel=\"Choose all that apply.\" class=\"full-width\">\n                            <mat-label>Source of Data <span class=\"required-field\">required</span></mat-label>\n                            <mat-select multiple formControlName=\"SourceOfDataID\">\n                                <mat-option *ngFor=\"let source of dataSources\" [value]=\"source.DataSourceID\">\n                                    {{ source.DataSource }}\n                                </mat-option>\n                            </mat-select>    \n                            <mat-error *ngIf=\"formPersonalDataHeld.get('SourceOfDataID').invalid\">{{ getSelectErrorMessage() }}</mat-error> \n                        </mat-form-field>        \n        \n                        <h1 class=\"full-width heading\">Personal Data Collected Or Processed</h1>\n                        \n                        <section *ngFor=\"let category of dataCategories; let i = index\" class=\"expand-section categories\">        \n                            <div>\n                                <h3 [innerHTML]=\"category.DataCategory\"></h3>\n                                <mat-icon matTooltipPosition=\"right\"  [matTooltip]=\"category.DataDescription\">info</mat-icon>\n                            </div>\n\n                            <mat-checkbox\n                                *ngFor=\"let SubCategory of category.SubCategories\" \n                                [ngClass]=\"{'full-width': category.SubCategories.length === 1}\"\n                                color=\"primary\"\n                                [checked]=\"SubCategory.IsChecked\"\n                                (change)=\"onChangeSubCategory($event,SubCategory)\"\n                                [required]=\"'false'\">\n                                {{ SubCategory.DataSubCategory }}\n                            </mat-checkbox>    \n                        </section>\n                    </form>\n        \n                    <div class=\"button-wrapper\">       \n                        <button mat-button class=\"back-btn\" matStepperPrevious>Back</button>\n        \n                     \n\n                        <button \n                            [disabled]=\"formPersonalDataHeld.invalid || selectedDataSubCategory.length === 0\"\n                            mat-button \n                            class=\"next-btn\" \n                            color=\"primary\" \n                            matStepperNext>\n                            Next\n                        </button>\n                    </div>             \n                </mat-step>\n        \n                <mat-step [stepControl]=\"formPurposeRetention\">\n                    <ng-template matStepLabel>\n                        <h3>Purpose & Retention</h3>\n                    </ng-template>\n        \n                    <form [formGroup]=\"formPurposeRetention\">       \n                        \n                        <h1 class=\"full-width step-header\">Description of Purpose for which data is collected or processed </h1>\n        \n                        <mat-form-field hintLabel=\"Why do you collect personal Data?\">\n                            <mat-label>For What Purpose ?<span class=\"required-field\">required</span></mat-label>\n                            <mat-select formControlName=\"Purpose\" multiple>\n                                <mat-option *ngFor=\"let purpose of dataPurposes\" [value]=\"purpose.DataPurposeID\">\n                                    {{ purpose.DataPurpose }}\n                                </mat-option>\n                            </mat-select>  \n                            <mat-error *ngIf=\"formPurposeRetention.get('Purpose').invalid\">{{ getSelectErrorMessage() }}</mat-error>   \n                        </mat-form-field>\n        \n                        <mat-form-field hintLabel=\"If the purpose is Collection / Processing is required by Law.\" *ngIf=\"SpecifyTheLaw\">\n                            <mat-label>Specify the Law <span class=\"required-field\">required</span></mat-label>\n                            <input matInput #SpecifyTheLawInput maxlength=\"1000\" formControlName=\"SpecifyTheLaw\">        \n                            <mat-hint align=\"end\">{{ SpecifyTheLawInput.value.length }} / 1000</mat-hint>    \n                            <mat-error *ngIf=\"formPurposeRetention.get('SpecifyTheLaw').invalid\">{{ getRequiredErrorMessage() }}</mat-error>\n                        </mat-form-field>  \n        \n                        <mat-form-field hintLabel=\"If the purpose is to provide services / products to Individuals.\" *ngIf=\"ServiceOrProductProvided\">\n                            <mat-label>Specify the Service / Product Provided<span class=\"required-field\">required</span></mat-label>\n                            <input matInput #ServiceOrProductProvidedInput maxlength=\"1000\" formControlName=\"ServiceOrProductProvided\">     \n                            <mat-hint align=\"end\">{{ ServiceOrProductProvidedInput.value.length }} / 1000</mat-hint>    \n                            <mat-error *ngIf=\"formPurposeRetention.get('ServiceOrProductProvided').invalid\">{{ getRequiredErrorMessage() }}</mat-error>\n                        </mat-form-field>  \n        \n                        <mat-form-field hintLabel=\"If the purpose is for Compliance with a Legal Obligation.\" *ngIf=\"SpecifyLegalObligation\">\n                            <mat-label>Specify the Legal Obligation<span class=\"required-field\">required</span></mat-label>\n                            <input matInput #SpecifyLegalObligationInput maxlength=\"1000\" formControlName=\"SpecifyLegalObligation\">  \n                            <mat-hint align=\"end\">{{ SpecifyLegalObligationInput.value.length }} / 1000</mat-hint>    \n                            <mat-error *ngIf=\"formPurposeRetention.get('SpecifyLegalObligation').invalid\">{{ getRequiredErrorMessage() }}</mat-error>\n                        </mat-form-field>  \n                        \n                        <mat-form-field hintLabel=\"Approximate number of Personal Data Records held.\">\n                            <mat-label>Total Records <span class=\"optional-field\">optional</span></mat-label>\n                            <input appCurrencyDirective matInput maxlength=\"14\" formControlName=\"TotalRecordsAtRegistration\">                            \n                            <mat-error *ngIf=\"formPurposeRetention.get('TotalRecordsAtRegistration').invalid\">{{ getPatternErrorMessage() }}</mat-error>\n                        </mat-form-field>  \n                        \n                        <mat-form-field hintLabel=\"The % annual growth of Personal Records held\">\n                            <mat-label>Percentage Annual Growth <span class=\"optional-field\">optional</span></mat-label>\n                            <input appCurrencyDirective matInput max=\"100\" maxlength=\"3\" formControlName=\"RecordPercentageGrowth\">                            \n                            <mat-error *ngIf=\"formPurposeRetention.get('RecordPercentageGrowth').invalid\">{{ getRecordPercentageGrowthErrorMessage() }}</mat-error>\n                            <mat-hint align=\"end\">Max. 100%</mat-hint>      \n                            <span matSuffix>%</span>\n                        </mat-form-field>   \n        \n                        <mat-form-field hintLabel=\"Duration for which personal data shall be kept (Years).\">\n                            <mat-label>Retention period <span class=\"required-field\">required</span></mat-label>\n                            <input appCurrencyDirective max=\"100\" matInput maxlength=\"3\" formControlName=\"RetentionPeriod\">                          \n                            <mat-error *ngIf=\"formPurposeRetention.get('RetentionPeriod').invalid\">{{ getRetentionPeriodErrorMessage() }}</mat-error>\n                            <mat-hint align=\"end\">Max. 100 years</mat-hint>      \n                            <span matSuffix>Year(s)</span>\n                        </mat-form-field>\n                    </form>\n        \n                    <div class=\"button-wrapper\">       \n                        <button mat-button class=\"back-btn\" matStepperPrevious>Back</button>\n        \n                      \n\n                        <button \n                            [disabled]=\"formPurposeRetention.invalid\"\n                            mat-button \n                            class=\"next-btn\" \n                            color=\"primary\" \n                            matStepperNext>\n                            Next\n                        </button>\n                    </div>             \n                </mat-step>\n        \n                <mat-step [stepControl]=\"formThirdParties\">\n                    <ng-template matStepLabel>\n                        <h3>Disclosure & Transfer</h3>\n                    </ng-template>\n        \n                    <form [formGroup]=\"formThirdParties\">\n        \n                        <h1 class=\"full-width step-header\">List of persons or Bodies to whom personal data may be disclosed</h1>\n                        \n                        <div class=\"grouped-items full-width\">\n                            <h3>Do you disclose Personal Data to other Persons or Bodies ?</h3>\n            \n                            <mat-radio-group color=\"primary\" aria-label=\"Pick one\" formControlName=\"PersonalDataIsForDisclosure\">\n                                <mat-radio-button value=\"Yes\">Yes</mat-radio-button>\n                                <mat-radio-button value=\"No\">No</mat-radio-button>\n                            </mat-radio-group>        \n                        </div>    \n\n                        <section \n                            *ngIf=\"formThirdParties.get('PersonalDataIsForDisclosure').value === 'Yes'\"\n                            class=\"expand-section reduced-properties table-wrapper fadeInUp _delay3ms\">\n                            <button \n                                mat-button\n                                color=\"primary\"\n                                [disabled]=\"processing\"\n                                class=\"add-item-button\"\n                                (click)=\"onAddAThirdParty()\">\n                                <div class=\"button-label\">\n                                    <mat-icon>add</mat-icon>                            \n                                    <span>Add Person / Body</span>\n                                </div>\n                            </button>\n                            \n                            <div class=\"table-wrapper\">\n                                <table \n                                    mat-table \n                                    #thirdPartyMatSort=\"matSort\"\n                                    matSortDisableClear=\"true\"\n                                    [dataSource]=\"thirdPartyDataSource\"\n                                    matSort>\n                    \n                                    <ng-container matColumnDef=\"Count\">\n                                        <th mat-header-cell *matHeaderCellDef> # </th>\n                                        <td mat-cell *matCellDef=\"let index = index\"> {{ index + 1 }} </td>\n                                    </ng-container>\n                    \n                                    <ng-container matColumnDef=\"NameOfThirdParty\">\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Person / Body </th>\n                                        <td mat-cell *matCellDef=\"let row\">{{ row.ThirdPartyName }}</td>\n                                    </ng-container>          \n                    \n                                    <ng-container matColumnDef=\"Purpose\">\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Purpose </th>\n                                        <td mat-cell *matCellDef=\"let row\">{{ row.Purpose }}</td>\n                                    </ng-container>                                 \n                    \n                                    <!-- Actions Column -->\n                                    <ng-container matColumnDef=\"Actions\">\n                                        <th mat-header-cell *matHeaderCellDef> Actions </th>\n                                        <td mat-cell *matCellDef=\"let row; let index = index\">\n                                            <button \n                                                mat-button \n                                                class=\"action-btn\"\n                                                [matMenuTriggerFor]=\"menu\" \n                                                (click)=\"$event.stopPropagation()\"\n                                                matTooltip=\"See more options\">\n                                                <mat-icon>more_vert</mat-icon>\n                                            </button>\n                    \n                                            <mat-menu yPosition=\"below\" #menu=\"matMenu\" class=\"more-options-mat-menu\">\n                    \n                                                <button \n                                                    mat-menu-item \n                                                    (click)=\"$event.stopPropagation();onEditThirdParty(row)\">\n                                                    <mat-icon>edit</mat-icon>\n                                                    <span>Make Changes</span>\n                                                </button>\n                                                      \n                                                <hr />\n                    \n                                                <button \n                                                    mat-menu-item \n                                                    (click)=\"$event.stopPropagation();onRemoveThirdParty(row)\">\n                                                    <mat-icon color=\"warn\">delete</mat-icon>\n                                                    <span>Remove</span>\n                                                </button>\n                    \n                                            </mat-menu>                                                  \n                                        </td>\n                                    </ng-container>\n                    \n                                    <tr mat-header-row *matHeaderRowDef=\"thirdPartyDisplayedColumns\"></tr>\n                                    <tr mat-row *matRowDef=\"let row; columns: thirdPartyDisplayedColumns;\" class=\"mat-data-row\"></tr>\n                                </table>\n        \n                                <mat-paginator \n                                    #thirdPartyPaginator\n                                    [pageSize]=\"10\"\n                                    [pageSizeOptions]=\"[5, 10]\">\n                                </mat-paginator>                    \n                            </div>                \n                        </section>    \n                        \n                        <hr class=\"full-width\" />\n        \n                        <div class=\"grouped-items full-width\">\n                            <h3>Do you Transfer personal data outside Uganda ?</h3>\n            \n                            <mat-radio-group color=\"primary\" aria-label=\"Pick one\" formControlName=\"StoreDataOutsideCountry\">\n                                <mat-radio-button value=\"Yes\">Yes</mat-radio-button>\n                                <mat-radio-button value=\"No\">No</mat-radio-button>\n                            </mat-radio-group>        \n                        </div> \n        \n                        <section \n                            *ngIf=\"formThirdParties.get('StoreDataOutsideCountry').value === 'Yes'\"\n                            class=\"expand-section reduced-properties table-wrapper\">\n                            <button \n                                mat-button\n                                color=\"primary\"\n                                [disabled]=\"processing\"\n                                class=\"add-item-button\"\n                                (click)=\"onAddACountry()\">\n                                <div class=\"button-label\">\n                                    <mat-icon>add</mat-icon>                            \n                                    <span>Add A Country</span>\n                                </div>\n                            </button>\n                            \n                            <div class=\"table-wrapper\">\n                                <table \n                                    mat-table \n                                    #countryOfTransferMatSort=\"matSort\"\n                                    matSortDisableClear=\"true\"\n                                    [dataSource]=\"countriesDataSource\"\n                                    matSort>\n                    \n                                    <ng-container matColumnDef=\"Count\">\n                                        <th mat-header-cell *matHeaderCellDef> # </th>\n                                        <td mat-cell *matCellDef=\"let index = index\"> {{ index + 1 }} </td>\n                                    </ng-container>\n                    \n                                    <ng-container matColumnDef=\"Country\">\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Country </th>\n                                        <td mat-cell *matCellDef=\"let row\">{{ row.Country }}</td>\n                                    </ng-container>          \n                    \n                                    <ng-container matColumnDef=\"Purpose\">\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Purpose </th>\n                                        <td mat-cell *matCellDef=\"let row\">{{ row.Purpose }}</td>\n                                    </ng-container>                                 \n                    \n                                    <ng-container matColumnDef=\"Description\">\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Description </th>\n                                        <td mat-cell *matCellDef=\"let row\">{{ row.Description }}</td>\n                                    </ng-container>                                 \n                    \n                                    <!-- Actions Column -->\n                                    <ng-container matColumnDef=\"Actions\">\n                                        <th mat-header-cell *matHeaderCellDef> Actions </th>\n                                        <td mat-cell *matCellDef=\"let row; let index = index\">\n                                            <button \n                                                mat-button \n                                                class=\"action-btn\"\n                                                [matMenuTriggerFor]=\"menu\" \n                                                (click)=\"$event.stopPropagation()\"\n                                                matTooltip=\"See more options\">\n                                                <mat-icon>more_vert</mat-icon>\n                                            </button>\n                    \n                                            <mat-menu yPosition=\"below\" #menu=\"matMenu\" class=\"more-options-mat-menu\">\n                    \n                                                <button \n                                                    mat-menu-item \n                                                    (click)=\"$event.stopPropagation();onEditCountry(row)\">\n                                                    <mat-icon>edit</mat-icon>\n                                                    <span>Make Changes</span>\n                                                </button>\n                                                      \n                                                <hr />\n                    \n                                                <button \n                                                    mat-menu-item \n                                                    (click)=\"$event.stopPropagation();onRemoveCountry(row)\">\n                                                    <mat-icon color=\"warn\">delete</mat-icon>\n                                                    <span>Remove</span>\n                                                </button>\n                    \n                                            </mat-menu>                                                  \n                                        </td>\n                                    </ng-container>\n                    \n                                    <tr mat-header-row *matHeaderRowDef=\"countryDisplayedColumns\"></tr>\n                                    <tr mat-row *matRowDef=\"let row; columns: countryDisplayedColumns;\" class=\"mat-data-row\"></tr>\n                                </table>\n        \n                                <mat-paginator \n                                    #countryOfTransferPaginator\n                                    [pageSize]=\"10\"\n                                    [pageSizeOptions]=\"[5, 10]\">\n                                </mat-paginator>                    \n                            </div>                \n                        </section>                   \n        \n                    </form>\n        \n                    <div class=\"button-wrapper\">\n                        <button mat-button class=\"back-btn\" matStepperPrevious>Back</button>\n                        \n                  \n\n                        <button \n                            mat-button \n                            [disabled]=\"formThirdParties.invalid \n                            || processing \n                            || ((formThirdParties.get('PersonalDataIsForDisclosure').value === 'Yes') && (thirdParties.length === 0)) \n                            || ((formThirdParties.get('StoreDataOutsideCountry').value === 'Yes') && (countries.length === 0))\" \n                            class=\"next-btn\" \n                            color=\"primary\" \n                            matStepperNext>\n                            Next\n                        </button>\n                    </div>\n                </mat-step>\n        \n                <mat-step [stepControl]=\"formSecurityMeasures\">\n                    <ng-template matStepLabel>\n                        <h3>Security Information</h3>\n                    </ng-template>\n        \n                    <form [formGroup]=\"formSecurityMeasures\">\n        \n                        <h1 class=\"full-width step-header\">State security measures in place to safeguard personal data collected or processed.</h1>\n        \n                        <section class=\"expand-section reduced-properties table-wrapper no-padding\">\n                            <button \n                                mat-button\n                                color=\"primary\"\n                                [disabled]=\"processing\"\n                                class=\"add-item-button\"\n                                (click)=\"onAddSecurityMeasure()\">\n                                <div class=\"button-label\">\n                                    <mat-icon>add</mat-icon>                            \n                                    <span>Add A Security Measure</span>\n                                </div>\n                            </button>\n                            \n                            <div class=\"table-wrapper\">\n                                <table \n                                    mat-table \n                                    #securityMeasureMatSort=\"matSort\"\n                                    matSortDisableClear=\"true\"\n                                    [dataSource]=\"securityMeasureDataSource\"\n                                    matSort>\n                    \n                                    <ng-container matColumnDef=\"Count\">\n                                        <th mat-header-cell *matHeaderCellDef> # </th>\n                                        <td mat-cell *matCellDef=\"let index = index\"> {{ index + 1 }} </td>\n                                    </ng-container>\n                    \n                                    <ng-container matColumnDef=\"SecurityMeasure\">\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Security Measure </th>\n                                        <td mat-cell *matCellDef=\"let row\">{{ row.SecurityMeasure }}</td>\n                                    </ng-container>                                  \n                    \n                                    <!-- Actions Column -->\n                                    <ng-container matColumnDef=\"Actions\">\n                                        <th mat-header-cell *matHeaderCellDef> Actions </th>\n                                        <td mat-cell *matCellDef=\"let row; let index = index\">\n                                            <button \n                                                mat-button \n                                                class=\"action-btn\"\n                                                [matMenuTriggerFor]=\"menu\" \n                                                (click)=\"$event.stopPropagation()\"\n                                                matTooltip=\"See more options\">\n                                                <mat-icon>more_vert</mat-icon>\n                                            </button>\n                    \n                                            <mat-menu yPosition=\"below\" #menu=\"matMenu\" class=\"more-options-mat-menu\">\n                \n                                                <button \n                                                    mat-menu-item \n                                                    (click)=\"$event.stopPropagation();onEditSecurityMeasure(row)\">\n                                                    <mat-icon>edit</mat-icon>\n                                                    <span>Make Changes</span>\n                                                </button>\n                                                      \n                                                <hr />\n                    \n                                                <button \n                                                    mat-menu-item \n                                                    (click)=\"$event.stopPropagation();onRemoveSecurityMeasure(row)\">\n                                                    <mat-icon color=\"warn\">delete</mat-icon>\n                                                    <span>Remove</span>\n                                                </button>                                        \n                    \n                                            </mat-menu>                                                  \n                                        </td>\n                                    </ng-container>\n                    \n                                    <tr mat-header-row *matHeaderRowDef=\"securityMeasuresDisplayedColumns\"></tr>\n                                    <tr mat-row *matRowDef=\"let row; columns: securityMeasuresDisplayedColumns;\" [ngClass]=\"{'selected-mat-data-row': selectedSpouse === row}\" class=\"mat-data-row\"></tr>\n                                </table>\n        \n                                <mat-paginator \n                                    #securityMeasurePaginator\n                                    [pageSize]=\"10\"\n                                    [pageSizeOptions]=\"[5, 10]\">\n                                </mat-paginator>                    \n                            </div>                \n                        </section>    \n                        \n                        <section class=\"expand-section reduced-properties table-wrapper margin documents\">\n                            <h1 class=\"full-width step-header\">Attach supporting documentation eg approved information security policy.</h1>\n        \n                            <div class=\"buttons\">\n                                <button \n                                    mat-button\n                                    color=\"primary\"\n                                    [disabled]=\"processing\"\n                                    class=\"add-item-button\"\n                                    (click)=\"onUploadAttachments()\">\n                                    <div class=\"button-label\">\n                                        <mat-icon>add</mat-icon>                            \n                                        <span> {{ document ? 'Replace Document' : 'Upload Attachment' }} </span>\n                                    </div>\n                                </button>\n            \n                                <button \n                                    mat-button\n                                    *ngIf=\"document\"\n                                    color=\"primary\"\n                                    [disabled]=\"processing\"\n                                    class=\"remove-button\"\n                                    (click)=\"onRemoveDocument()\">\n                                    <div class=\"button-label\">\n                                        <mat-icon>clear</mat-icon>\n                                        <span> Remove Document </span>\n                                    </div>\n                                </button>\n                            </div>\n        \n                            <div *ngIf=\"document\" class=\"uploaded-document\" matTooltip=\"Open Document\" (click)=\"onReadDocument(document)\">\n                                <img src=\"./assets/img/pdf.png\" alt=\"\">\n        \n                                <span>Document: {{ document.Name }} <span>  -  {{ document.Size }} Mbs</span></span>\n                            </div>\n        \n                        </section>\n        \n                        <hr class=\"full-width\" />\n        \n                        \n                        \n        \n                        <hr class=\"full-width\" />\n        \n                        <mat-checkbox\n                            class=\"full-width\"\n                            formControlName=\"RegistrationConsent\"\n                            color=\"primary\">\n                            I certify that the above information is correct and complete and here by apply to be registered as \n                            data collector/ data processor / data controller (This shall be based on th category selected) \n                            under the data Protection and Privacy Act.\n                            <mat-error *ngIf=\"formSecurityMeasures.get('RegistrationConsent').invalid\">{{ getCheckboxErrorMessage() }}</mat-error>   \n                        </mat-checkbox>       \n                        \n                        <mat-form-field class=\"full-width\" hintLabel=\"The person authorized to complete and submit this application on the behalf of the applicant organization\">\n                            <mat-label>Name and title of person submitting the application<span class=\"required-field\">required</span></mat-label>\n                            <input appUppercase #RegistrationDoneByInput matInput maxlength=\"50\" formControlName=\"RegistrationDoneBy\">  \n                            <mat-error *ngIf=\"formSecurityMeasures.get('RegistrationDoneBy').invalid\">{{ getRegistrationDoneByErrorMessage() }}</mat-error>                             \n                            <mat-hint align=\"end\">{{ RegistrationDoneByInput.value.length }} / 50</mat-hint>    \n                        </mat-form-field>                  \n        \n                    </form>\n        \n                    <div class=\"button-wrapper\">\n                        <button mat-button class=\"back-btn\" matStepperPrevious>Back</button>\n\n                                     \n\n                        <div class=\"buttons\">\n                            <button\n                                mat-button\n                                color=\"primary\" \n                                [disabled]=\"formGeneralInformation.invalid || formOrganisationDetails.invalid || formPersonalDataHeld.invalid || formPurposeRetention.invalid || formThirdParties.invalid || formSecurityMeasures.invalid || processing || securityMeasures.length === 0 || !documentForm3 || !proofOfPayment\" \n                                class=\"download\" \n                                matTooltip=\"Keep a copy of the information you have filled in\"\n                                (click)=\"onPreviewForm(true)\">\n                                <div class=\"button-label\">\n                                    <mat-icon>sim_card_download</mat-icon>\n                                    <span>Download</span>\n                                </div>\n                            </button>\n        \n                            <button\n                                mat-button\n                                color=\"primary\" \n                                [disabled]=\"formGeneralInformation.invalid || formOrganisationDetails.invalid || formPersonalDataHeld.invalid || formPurposeRetention.invalid || formThirdParties.invalid || formSecurityMeasures.invalid || processing || securityMeasures.length === 0 || !documentForm3 || !proofOfPayment\" \n                                class=\"preview\" \n                                matTooltip=\"Have a look at all the information you have filled in before sending.\"\n                                (click)=\"onPreviewForm(false)\">\n                                <div class=\"button-label\">\n                                    <mat-icon>visibility</mat-icon>\n                                    <span>Preview</span>\n                                </div>\n                            </button>\n        \n                        \n                            <button \n                                mat-button \n                                class=\"next-btn submit-btn\" \n                                [disabled]=\"formGeneralInformation.invalid || formOrganisationDetails.invalid || formPersonalDataHeld.invalid || formPurposeRetention.invalid || formThirdParties.invalid || formSecurityMeasures.invalid || processing || securityMeasures.length === 0 || !documentForm3 || !proofOfPayment\" \n                                [ngClass]=\"{'inline-processing-btn': processing}\" \n                                color=\"primary\" \n                                (click)=\"onSubmit()\">\n                                <app-inline-mat-spinner *ngIf=\"processing\"></app-inline-mat-spinner>                  \n                                <span>Submit Application</span>                    \n                            </button>                \n                        </div>\n                    </div>\n                </mat-step>\n        \n            </mat-horizontal-stepper>   \n        </main>\n    </fury-page-layout-content>\n</fury-page-layout>\n\n\n","'use strict';\n\n/******************************************************************************\n * Created 2008-08-19.\n *\n * Dijkstra path-finding functions. Adapted from the Dijkstar Python project.\n *\n * Copyright (C) 2008\n *   Wyatt Baldwin <self@wyattbaldwin.com>\n *   All rights reserved\n *\n * Licensed under the MIT license.\n *\n *   http://www.opensource.org/licenses/mit-license.php\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *****************************************************************************/\nvar dijkstra = {\n  single_source_shortest_paths: function(graph, s, d) {\n    // Predecessor map for each node that has been encountered.\n    // node ID => predecessor node ID\n    var predecessors = {};\n\n    // Costs of shortest paths from s to all nodes encountered.\n    // node ID => cost\n    var costs = {};\n    costs[s] = 0;\n\n    // Costs of shortest paths from s to all nodes encountered; differs from\n    // `costs` in that it provides easy access to the node that currently has\n    // the known shortest path from s.\n    // XXX: Do we actually need both `costs` and `open`?\n    var open = dijkstra.PriorityQueue.make();\n    open.push(s, 0);\n\n    var closest,\n        u, v,\n        cost_of_s_to_u,\n        adjacent_nodes,\n        cost_of_e,\n        cost_of_s_to_u_plus_cost_of_e,\n        cost_of_s_to_v,\n        first_visit;\n    while (!open.empty()) {\n      // In the nodes remaining in graph that have a known cost from s,\n      // find the node, u, that currently has the shortest path from s.\n      closest = open.pop();\n      u = closest.value;\n      cost_of_s_to_u = closest.cost;\n\n      // Get nodes adjacent to u...\n      adjacent_nodes = graph[u] || {};\n\n      // ...and explore the edges that connect u to those nodes, updating\n      // the cost of the shortest paths to any or all of those nodes as\n      // necessary. v is the node across the current edge from u.\n      for (v in adjacent_nodes) {\n        if (adjacent_nodes.hasOwnProperty(v)) {\n          // Get the cost of the edge running from u to v.\n          cost_of_e = adjacent_nodes[v];\n\n          // Cost of s to u plus the cost of u to v across e--this is *a*\n          // cost from s to v that may or may not be less than the current\n          // known cost to v.\n          cost_of_s_to_u_plus_cost_of_e = cost_of_s_to_u + cost_of_e;\n\n          // If we haven't visited v yet OR if the current known cost from s to\n          // v is greater than the new cost we just found (cost of s to u plus\n          // cost of u to v across e), update v's cost in the cost list and\n          // update v's predecessor in the predecessor list (it's now u).\n          cost_of_s_to_v = costs[v];\n          first_visit = (typeof costs[v] === 'undefined');\n          if (first_visit || cost_of_s_to_v > cost_of_s_to_u_plus_cost_of_e) {\n            costs[v] = cost_of_s_to_u_plus_cost_of_e;\n            open.push(v, cost_of_s_to_u_plus_cost_of_e);\n            predecessors[v] = u;\n          }\n        }\n      }\n    }\n\n    if (typeof d !== 'undefined' && typeof costs[d] === 'undefined') {\n      var msg = ['Could not find a path from ', s, ' to ', d, '.'].join('');\n      throw new Error(msg);\n    }\n\n    return predecessors;\n  },\n\n  extract_shortest_path_from_predecessor_list: function(predecessors, d) {\n    var nodes = [];\n    var u = d;\n    var predecessor;\n    while (u) {\n      nodes.push(u);\n      predecessor = predecessors[u];\n      u = predecessors[u];\n    }\n    nodes.reverse();\n    return nodes;\n  },\n\n  find_path: function(graph, s, d) {\n    var predecessors = dijkstra.single_source_shortest_paths(graph, s, d);\n    return dijkstra.extract_shortest_path_from_predecessor_list(\n      predecessors, d);\n  },\n\n  /**\n   * A very naive priority queue implementation.\n   */\n  PriorityQueue: {\n    make: function (opts) {\n      var T = dijkstra.PriorityQueue,\n          t = {},\n          key;\n      opts = opts || {};\n      for (key in T) {\n        if (T.hasOwnProperty(key)) {\n          t[key] = T[key];\n        }\n      }\n      t.queue = [];\n      t.sorter = opts.sorter || T.default_sorter;\n      return t;\n    },\n\n    default_sorter: function (a, b) {\n      return a.cost - b.cost;\n    },\n\n    /**\n     * Add a new item to the queue and ensure the highest priority element\n     * is at the front of the queue.\n     */\n    push: function (value, cost) {\n      var item = {value: value, cost: cost};\n      this.queue.push(item);\n      this.queue.sort(this.sorter);\n    },\n\n    /**\n     * Return the highest priority element in the queue.\n     */\n    pop: function () {\n      return this.queue.shift();\n    },\n\n    empty: function () {\n      return this.queue.length === 0;\n    }\n  }\n};\n\n\n// node.js module exports\nif (typeof module !== 'undefined') {\n  module.exports = dijkstra;\n}\n","import {HttpClient} from '@angular/common/http';\nimport {AfterContentInit, ChangeDetectorRef, Component, OnDestroy, OnInit, ViewChild} from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {MatDialog} from '@angular/material/dialog';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {forkJoin, Observable, Subscription} from 'rxjs';\n// tslint:disable-next-line:max-line-length\nimport {\n  ApiPayload,\n  Country,\n  CountryOfTransfer,\n  DataCategory,\n  DataProtectionOfficer,\n  DataPurposes,\n  DataSource,\n  DataSubCategory,\n  FileUpload,\n  MainActivity,\n  NatureOfBusinessCat,\n  NatureOfBusinessSubCat,\n  OrganisationCategory,\n  OrganisationType,\n  Sector,\n  SecurityMeasure,\n  ThirdParty,\n  ChildrenDataPurpose\n} from '../../../../../services/api.model';\nimport {catchError} from 'rxjs/operators';\nimport {MatCheckboxChange} from '@angular/material/checkbox';\nimport {ApiEndpointsService} from '../../../../../services/api-endpoints.service';\nimport {ApiService} from '../../../../../services/api.service';\nimport {OrgNoticeComponent} from '../../../../../layout/dialogs/org-registration/org-notice/org-notice.component';\nimport {OrgMainActivityComponent} from '../../../../../layout/dialogs/org-registration/org-main-activity/org-main-activity.component';\nimport {\n  OrgDataProtectionOfficerComponent\n} from '../../../../../layout/dialogs/org-registration/org-data-protection-officer/org-data-protection-officer.component';\nimport {\n  OrgSecurityMeasuresComponent\n} from '../../../../../layout/dialogs/org-registration/org-security-measures/org-security-measures.component';\nimport {OrgThirdPartyComponent} from '../../../../../layout/dialogs/org-registration/org-third-party/org-third-party.component';\nimport {OrgCountryComponent} from '../../../../../layout/dialogs/org-registration/org-country/org-country.component';\nimport {OrgUploadComponent} from '../../../../../layout/dialogs/org-upload/org-upload.component';\nimport {OrgForm3DialogComponent} from '../../../../../layout/dialogs/org-registration/org-form3-dialog/org-form3-dialog.component';\nimport {\n  OrgRegistrationPreviewDialogComponent\n} from '../../../../../layout/dialogs/org-registration/org-registration-preview-dialog/org-registration-preview-dialog.component';\nimport {SuccessfulMessageDialogComponent} from '../../../../../layout/dialogs/successful-message-dialog/successful-message-dialog.component';\nimport {BaseFuryForm} from '../../../../../../@fury/shared/base-fury-form';\nimport {KeycloakService} from 'keycloak-angular';\nimport {WorkflowServiceService} from '../../../../../services/workflow-service.service';\nimport {CompanyRegistrationService} from '../../../company-registration.service';\nimport {AuthenticationService} from '../../../../../authentication/authentication.service';\nimport {fadeInRightAnimation} from '../../../../../../@fury/animations/fade-in-right.animation';\nimport {fadeInUpAnimation} from '../../../../../../@fury/animations/fade-in-up.animation';\nimport { ViewPdfDocumentBottomsheetComponent } from '../../../../../layout/bottomsheets/view-pdf-document-bottomsheet/view-pdf-document-bottomsheet.component';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { NatureOfBusiness, NewCompanyRegistrationModel } from '../../company-registration.model';\nimport { Router } from '@angular/router';\nimport { KeycloakProfile } from 'keycloak-js';\nimport { environment } from '../../../../../../environments/environment';\nimport { ComplaintService } from '../../../../complaints/complaints.service';\nimport { DownloadPRNReceiptComponent } from '../../../../../layout/dialogs/download-prnreceipt/download-prnreceipt.component';\n\n@Component({\n  selector: 'fury-renewals',\n  templateUrl: './renewals.component.html',\n  styleUrls: ['./renewals.component.scss']\n})\nexport class RenewalsComponent extends BaseFuryForm implements OnInit, OnDestroy {\n\n    dialogRef;\n    bottomsheetRef;\n    processing = false;\n    formGeneralInformation: FormGroup;\n    formOrganisationDetails: FormGroup;\n    formPersonalDataHeld: FormGroup;\n    formPurposeRetention: FormGroup;\n    formSecurityMeasures: FormGroup;\n    formThirdParties: FormGroup;\n    formChildrenData: FormGroup;\n    // selectedIndex = 5;\n    selectedIndex = 0;\n    isLinear = true;\n    // isLinear = false;\n    today = new Date();\n    sectors: Sector[];\n    countries: Country[];\n    childDataPurposeResults:any = [];\n    selected = false;\n    OrganisationID:number;\n    DPOSelected = false;\n    natureOfbusinesses: any;\n    natureOfbusinesses_arr: any = [];\n    organisationCategories: OrganisationCategory[] = [];\n    selectedOrganisationCategories: OrganisationCategory[] = [];\n    organisationTypes: OrganisationType[];\n    dataSources: DataSource[];\n    selectedDataSources: DataSource[] = [];\n    httpSub: Subscription;\n    showChildrenDataFields = false;\n    showPRNDownload = false;\n    MainActivitiesDisplayedColumns: string[] = ['Count', 'MainActivity', 'Actions'];\n    dpoDisplayedColumns: string[] = ['Count', 'Name', 'Telephone', 'Email', 'PhysicalAddress', 'Actions'];\n    securityMeasuresDisplayedColumns: string[] = ['Count', 'SecurityMeasure', 'Actions'];\n    thirdPartyDisplayedColumns: string[] = ['Count', 'NameOfThirdParty', 'Purpose', 'Actions'];\n    countryDisplayedColumns: string[] = ['Count', 'Country', 'Purpose', 'Description', 'Actions'];\n    mainActivities: MainActivity[] = [];\n    childDataPurposes: ChildrenDataPurpose[] = [];\n    selectedChildDataPurposes: ChildrenDataPurpose[] = [];\n    mainActivitiesDataSource: MatTableDataSource<MainActivity>;\n    dataProtectionOfficers: DataProtectionOfficer[] = [];\n    dpoDataSource: MatTableDataSource<DataProtectionOfficer>;\n    securityMeasures: SecurityMeasure[] = [];\n    securityMeasureDataSource: MatTableDataSource<SecurityMeasure>;\n    thirdParties: ThirdParty[] = [];\n    thirdPartyDataSource: MatTableDataSource<ThirdParty>;\n    countriesOfTransfer: CountryOfTransfer[] = [];\n    countriesDataSource: MatTableDataSource<CountryOfTransfer>;\n    selectedDataCategory: DataCategory[] = [];\n    selectedDataSubCategory: DataSubCategory[] = [];\n    dataCategories: DataCategory[];\n    dataPurposes: DataPurposes[];\n    selectedDataPurposes: DataPurposes[] = [];\n    natureOfBusinessCat: NatureOfBusinessCat[] = [];\n    natureOfBusinessSubCat: NatureOfBusinessSubCat[] = [];\n    selectedNatureOfBusinessSubCat: NatureOfBusinessSubCat[] = [];\n    SpecifyTheLaw = false;\n    ServiceOrProductProvided = false;\n    SpecifyLegalObligation = false;\n    Organisation_User_ID;\n    document: FileUpload | null;\n    documentForm3: FileUpload | null;\n    proofOfPayment: FileUpload | null;\n    OrganizationType = null;\n    SectorName = null;\n    NatureOfBusinessCat = null;\n    CountryOfIncorporation = null;\n    application: NewCompanyRegistrationModel = new NewCompanyRegistrationModel();\n    public userProfile: KeycloakProfile | null = null;\n    regTrackingNo: any;\n  \n    dataCategory = new FormControl();\n  \n    @ViewChild('MainActivityPaginator', { static: false }) MainActivityPaginator: MatPaginator;\n    @ViewChild('MainActivityMatSort', { static: false }) MainActivityMatSort: MatSort;\n    @ViewChild('dpoPaginator', { static: false }) dpoPaginator: MatPaginator;\n    @ViewChild('dpoMatSort', { static: false }) dpoMatSort: MatSort;\n    @ViewChild('securityMeasurePaginator', { static: false }) securityMeasurePaginator: MatPaginator;\n    @ViewChild('securityMeasureMatSort', { static: false }) securityMeasureMatSort: MatSort;\n    @ViewChild('thirdPartyPaginator', { static: false }) thirdPartyPaginator: MatPaginator;\n    @ViewChild('thirdPartyMatSort', { static: false }) thirdPartyMatSort: MatSort;\n    @ViewChild('countryOfTransferPaginator', { static: false }) countryOfTransferPaginator: MatPaginator;\n    @ViewChild('countryOfTransferMatSort', { static: false }) countryOfTransferMatSort: MatSort;\n  \n\n  constructor(\n\n    private formBuilder: FormBuilder,\n    private service: ApiService,\n    private endpoints: ApiEndpointsService,\n    private dialog: MatDialog,\n    private bottomsheet: MatBottomSheet,\n    public authService: KeycloakService,\n    public _auth: AuthenticationService,\n    public _workflowService: WorkflowServiceService,\n    private http: HttpClient,\n    private changeDetector: ChangeDetectorRef,\n    public registrationService: CompanyRegistrationService,\n    public complaintService:ComplaintService,\n    private route: Router,\n\n  ) { \n\n    super(\n        authService,\n        _workflowService,\n        registrationService,\n        complaintService\n      );\n  \n      // this.regTrackingNo = this.route.getCurrentNavigation().extras.state.regTrackingNo;\n  \n      this.service.updatePageTitle(['Organisations', 'New Registration']);\n\n  }\n\n  ngOnInit(): void {\n\n    this.formGeneralInformation = this.formBuilder.group({\n        OrganizationName: [{value: this._auth.getOrganisationName(), disabled: false}],\n        DPPActCategory: new FormControl('', [Validators.required]),\n        OrganizationTypeID: new FormControl('', [Validators.required]),\n        CountryOfIncorporation: new FormControl('', [Validators.required]),\n        URSBNumber: new FormControl(''),\n        SectorID: new FormControl('', [Validators.required]),\n        OtherSector: new FormControl('', [Validators.maxLength(50)]),\n        Location: new FormControl('', [Validators.required]),\n        PhoneNumberCode: new FormControl({ value: '', disabled: false }, [Validators.required]),\n        PhoneNumber: new FormControl({ value: '', disabled: false }, [\n          Validators.required,\n          Validators.pattern(/^[0-9 ]+$/),\n        ]),\n        \n        EmailAddress: new FormControl({ value: '', disabled: false }, [\n          Validators.required,\n          Validators.email\n        ]),\n        // NatureOfBusiness: new FormControl('', [Validators.required]),\n        NatureOfBusinessCat: new FormControl('', [Validators.required]),\n        NatureOfBusinessSubCat: new FormControl('', [Validators.required]),\n      });\n  \n      this.formOrganisationDetails = this.formBuilder.group({\n        DPORequired: new FormControl(''),\n        DPOName: new FormControl(''),\n        DPOPhysicalAddress: new FormControl(''),\n        PhoneNumberCode: new FormControl(''),\n        DPOPhoneNumber: new FormControl(''),\n        DPOEmailAddress: new FormControl(''),\n        DPOPositionInOrganisation: new FormControl(''),\n      });\n  \n      this.formPersonalDataHeld = this.formBuilder.group({\n        SourceOfDataID: new FormControl('', [Validators.required]),\n      });\n\n      this.formChildrenData = this.formBuilder.group({\n        CollectChildrenData: new FormControl('', [Validators.required]),\n        PurposeForCollection: new FormControl(''),\n      });\n  \n      this.formPurposeRetention = this.formBuilder.group({\n        Purpose: new FormControl('', [Validators.required]),\n        SpecifyTheLaw: new FormControl(''),\n        ServiceOrProductProvided: new FormControl(''),\n        SpecifyLegalObligation: new FormControl(''),\n        TotalRecordsAtRegistration: new FormControl('', [Validators.pattern(/^[0-9,]+$/)]),\n        RecordPercentageGrowth: new FormControl('' , [\n          Validators.pattern(/^[0-9,]+$/),\n          Validators.max(100),\n        ]),\n        RetentionPeriod: new FormControl('', [\n          Validators.required,\n          Validators.pattern(/^[0-9,]+$/),\n          Validators.max(100),\n        ]),\n      });\n  \n      this.formSecurityMeasures = this.formBuilder.group({\n        RegistrationConsent: new FormControl('', [Validators.required]),\n        RegistrationDoneBy: new FormControl('', [Validators.required, Validators.pattern(/^[a-zA-Z ]+$/)]),\n      });\n  \n      this.formThirdParties = this.formBuilder.group({\n        PersonalDataIsForDisclosure: new FormControl('', [Validators.required]),\n        StoreDataOutsideCountry: new FormControl('', [Validators.required]),\n      });\n      this.Listeners();\n\n  }\n\n  ngAfterContentInit(): void {\n    this.httpSub = this.fetchMultiple()\n    .pipe(catchError(this.service.handleError))\n    .subscribe((responseList) => {\n      console.log(responseList)\n      this.countries = responseList[0];\n\n      this.organisationCategories = [\n        {\n          OrganisationCategoryId: 1,\n          OrganisationCategoryName: 'Data Controller'\n        },\n        {\n          OrganisationCategoryId: 2,\n          OrganisationCategoryName: 'Data Processor'\n        },\n        {\n          OrganisationCategoryId: 3,\n          OrganisationCategoryName: 'Data Collector'\n        },\n      ];\n\n      this.childDataPurposes = [\n        {\n          ChildDataID: 1,\n          ChildDataPurpose: 'Carried out with prior consent of the parent,guardian, or  any other person having authority to make decisions on behalf of the child '\n        },\n        {\n          ChildDataID: 2,\n          ChildDataPurpose: 'Necessary to comply with the law'\n        },\n        {\n          ChildDataID: 3,\n          ChildDataPurpose: 'For research or statistical purposes'\n        }\n      ]\n\n      this.formGeneralInformation.get('PhoneNumberCode').patchValue('256');\n      this.formOrganisationDetails.get('PhoneNumberCode').patchValue('256');\n\n      this.dataSources = responseList[1];\n\n      this.organisationTypes = responseList[2];\n\n      this.sectors = responseList[3];\n\n      this.dataCategories = responseList[4];\n\n      this.dataPurposes = responseList[5];\n\n      this.natureOfBusinessCat = responseList[6];\n\n      this._loadApplicationDraft(responseList[7]);\n\n      this.processing = false;\n    }, (error) => {\n      this.processing = false;\n      this.service.determineErrorResponse(error);\n    });\n  }\n\n  private Listeners(): void {\n    // STEP ONE\n    this.formGeneralInformation.get('DPPActCategory').valueChanges.subscribe((value) => {\n      const values: number[] = value;\n      this.selectedOrganisationCategories.length = 0;\n\n      this.organisationCategories.filter((item) => {\n        if (values.includes(item.OrganisationCategoryId)) {\n          this.selectedOrganisationCategories.push(item);\n        }\n      });\n    });\n\n    this.formGeneralInformation.get('OrganizationTypeID').valueChanges.subscribe((value) => {\n      if (value !== 4) {\n        this.formGeneralInformation.get('CountryOfIncorporation').setValidators([Validators.required]);\n        this.formGeneralInformation.get('URSBNumber').setValidators([Validators.required]);\n      } else {\n        this.formGeneralInformation.get('CountryOfIncorporation').clearValidators();\n        this.formGeneralInformation.get('CountryOfIncorporation').reset();\n        this.formGeneralInformation.get('URSBNumber').clearValidators();\n        this.formGeneralInformation.get('URSBNumber').reset();\n        this.CountryOfIncorporation = null;\n      }\n\n      this.formGeneralInformation.controls['CountryOfIncorporation'].updateValueAndValidity();\n      this.formGeneralInformation.controls['URSBNumber'].updateValueAndValidity();\n    });\n\n    this.formGeneralInformation.get('SectorID').valueChanges.subscribe((value) => {\n      if (value === 14) {\n        this.formGeneralInformation.get('OtherSector').setValidators([Validators.required]);\n      } else {\n        this.formGeneralInformation.get('OtherSector').clearValidators();\n        this.formGeneralInformation.get('OtherSector').reset();\n      }\n\n      this.formGeneralInformation.controls['OtherSector'].updateValueAndValidity();\n    });\n\n    this.formGeneralInformation.get('NatureOfBusinessCat').valueChanges.subscribe((value) => {\n      this.onNatureOfBusinessCatSelected(value);\n    });\n\n    this.formGeneralInformation.get('NatureOfBusinessSubCat').valueChanges.subscribe((value) => {\n      const values: number[] = value;\n      this.selectedNatureOfBusinessSubCat.length = 0;\n\n      this.natureOfBusinessSubCat.filter((item) => {\n        if (values.includes(item.NatureOfBusinessSubCatId)) {\n          this.selectedNatureOfBusinessSubCat.push(item);\n        }\n      });\n    });\n\n    // STEP TWO\n    this.formOrganisationDetails.get('DPORequired').valueChanges.subscribe((value) => {\n\n      if (value === 'Yes') {\n        this.formOrganisationDetails.get('DPOName').setValidators([Validators.required, Validators.pattern(/^[a-zA-Z ]+$/), ]);\n        this.formOrganisationDetails.get('DPOPhysicalAddress').setValidators([Validators.required]);\n        this.formOrganisationDetails.get('DPOPhoneNumber').setValidators([Validators.required, Validators.pattern(/^[0-9 ]+$/)]);\n        this.formOrganisationDetails.get('DPOEmailAddress').setValidators([Validators.required, Validators.email]);\n        this.formOrganisationDetails.get('DPOPositionInOrganisation').setValidators([Validators.required]);\n      } else {\n        this.formOrganisationDetails.get('DPOName').clearValidators();\n        this.formOrganisationDetails.get('DPOName').reset();\n        this.formOrganisationDetails.get('DPOPhysicalAddress').clearValidators();\n        this.formOrganisationDetails.get('DPOPhysicalAddress').reset();\n        this.formOrganisationDetails.get('DPOPhoneNumber').clearValidators();\n        this.formOrganisationDetails.get('DPOPhoneNumber').reset();\n        this.formOrganisationDetails.get('DPOEmailAddress').clearValidators();\n        this.formOrganisationDetails.get('DPOEmailAddress').reset();\n        this.formOrganisationDetails.get('DPOPositionInOrganisation').clearValidators();\n        this.formOrganisationDetails.get('DPOPositionInOrganisation').reset();\n      }\n\n      this.formOrganisationDetails.controls['DPOName'].updateValueAndValidity();\n      this.formOrganisationDetails.controls['DPOPhysicalAddress'].updateValueAndValidity();\n      this.formOrganisationDetails.controls['DPOPhoneNumber'].updateValueAndValidity();\n      this.formOrganisationDetails.controls['DPOEmailAddress'].updateValueAndValidity();\n      this.formOrganisationDetails.controls['DPOPositionInOrganisation'].updateValueAndValidity();\n    });\n\n    // STEP THREE\n    this.formPersonalDataHeld.get('SourceOfDataID').valueChanges.subscribe((value) => {\n      const values: number[] = value;\n      this.selectedDataSources.length = 0;\n\n      this.dataSources.filter((item) => {\n        if (values.includes(item.DataSourceID)) {\n          this.selectedDataSources.push(item);\n        }\n      });\n    });\n    ///CHILDREN DATA PURPOSES\n\n    this.formChildrenData.get('PurposeForCollection').valueChanges.subscribe((value) => {\n      const values: number[] = value;\n      this.selectedChildDataPurposes.length = 0;\n\n      this.childDataPurposes.filter((item) => {\n        if (values.includes(item.ChildDataID)) {\n          this.selectedChildDataPurposes.push(item);\n        }\n      });\n\n      console.log(this.selectedChildDataPurposes);\n    });\n\n    // STEP FOUR\n    this.formPurposeRetention.get('Purpose').valueChanges.subscribe((value) => {\n      const values: number[] = value;\n\n      this.selectedDataPurposes.length = 0;\n\n      // Reset all the fields first\n      this.SpecifyTheLaw = false;\n      this.ServiceOrProductProvided = false;\n      this.SpecifyLegalObligation = false;\n      this.formPurposeRetention.get('SpecifyTheLaw').clearValidators();\n      this.formPurposeRetention.get('SpecifyTheLaw').reset();\n      this.formPurposeRetention.get('ServiceOrProductProvided').clearValidators();\n      this.formPurposeRetention.get('ServiceOrProductProvided').reset();\n      this.formPurposeRetention.get('SpecifyLegalObligation').clearValidators();\n      this.formPurposeRetention.get('SpecifyLegalObligation').reset();\n\n      values.filter((item) => {\n        if (item === 1) {\n          this.SpecifyTheLaw = true;\n          this.formPurposeRetention.get('SpecifyTheLaw').setValidators([Validators.required]);\n        }\n\n        if (item === 3) {\n          this.ServiceOrProductProvided = true;\n          this.formPurposeRetention.get('ServiceOrProductProvided').setValidators([Validators.required]);\n        }\n\n        if (item === 6) {\n          this.SpecifyLegalObligation = true;\n          this.formPurposeRetention.get('SpecifyLegalObligation').setValidators([Validators.required]);\n        }\n      });\n\n      this.formPurposeRetention.controls['SpecifyTheLaw'].updateValueAndValidity();\n      this.formPurposeRetention.controls['ServiceOrProductProvided'].updateValueAndValidity();\n      this.formPurposeRetention.controls['SpecifyLegalObligation'].updateValueAndValidity();\n\n      this.dataPurposes.filter((item) => {\n        if (values.includes(item.DataPurposeID)) {\n          this.selectedDataPurposes.push(item);\n        }\n      });\n\n      this.changeDetector.detectChanges();\n    });\n\n    this.formPurposeRetention.get('RecordPercentageGrowth').valueChanges.subscribe((value) => {\n\n      if (value > 100) {\n        this.formPurposeRetention.get('RecordPercentageGrowth').patchValue(100);\n      }\n\n      this.changeDetector.detectChanges();\n    });\n\n    this.formPurposeRetention.get('RetentionPeriod').valueChanges.subscribe((value) => {\n\n      if (value > 100) {\n        this.formPurposeRetention.get('RetentionPeriod').patchValue(100);\n      }\n\n      this.changeDetector.detectChanges();\n    });\n\n    // STEP FIVE\n    this.formThirdParties.get('PersonalDataIsForDisclosure').valueChanges.subscribe((value) => {\n      this.thirdParties.length = 0;\n    });\n\n    this.formThirdParties.get('StoreDataOutsideCountry').valueChanges.subscribe((value) => {\n      this.countriesOfTransfer.length = 0;\n    });\n  }\n\n  private onShowNotice(): void {\n    this.dialogRef = this.dialog.open(OrgNoticeComponent, {\n      panelClass: ['organisation-data-protection-officer-dialog', 'dialogs'],\n      disableClose: true,\n    });\n\n    this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: DataProtectionOfficer }) => {\n\n    });\n  }\n\n  getOrganizationNameErrorMessage(): string {\n    return this.formGeneralInformation.get('OrganizationName').hasError('required') ? 'Please enter a value' : '';\n  }\n\n  getURSBNumberErrorMessage(): string {\n    return this.formGeneralInformation.get('URSBNumber').hasError('required') ? 'Please enter a value' : '';\n  }\n\n  getSelectErrorMessage(): string {\n    return this.formGeneralInformation.get('DPPActCategory').hasError('required')\n    || this.formGeneralInformation.get('OrganizationTypeID').hasError('required')\n    || this.formGeneralInformation.get('CountryOfIncorporation').hasError('required')\n    || this.formGeneralInformation.get('SectorID').hasError('required')\n    || this.formGeneralInformation.get('NatureOfBusinessCat').hasError('required')\n    || this.formGeneralInformation.get('NatureOfBusinessSubCat').hasError('required')\n    || this.formPersonalDataHeld.get('SourceOfDataID').hasError('required')\n    || this.formPurposeRetention.get('Purpose').hasError('required')\n    ? 'Please choose a value' : '';\n  }\n\n  getTelephoneNumberErrorMessage(): string {\n    return this.formGeneralInformation.get('PhoneNumber').hasError('required') ? 'Please enter a value' :\n    this.formGeneralInformation.get('PhoneNumber').hasError('pattern') ? 'Wrong Phone number' : '';\n  }\n\n  getEmailAddressErrorMessage(): string {\n    return this.formGeneralInformation.get('EmailAddress').hasError('required') ? 'Please enter a value' :\n    this.formGeneralInformation.get('EmailAddress').hasError('email') ? 'Wrong Email Address.' : '';\n  }\n\n  getOtherSectorErrorMessage(): string {\n    return this.formGeneralInformation.get('OtherSector').hasError('required') ? 'Please enter a value' : '';\n  }\n\n  getLocationErrorMessage(): string {\n    return this.formGeneralInformation.get('Location').hasError('required') ? 'Please enter a location' : '';\n  }\n\n  getDPONameErrorMessage(): string {\n    return this.formOrganisationDetails.get('DPOName').hasError('required') ? 'Please enter a value' :\n    this.formOrganisationDetails.get('DPOName').hasError('pattern') ? 'Please enter a correct name' : '';\n  }\n\n  getDPOPhysicalAddressErrorMessage(): string {\n    return this.formOrganisationDetails.get('DPOPhysicalAddress').hasError('required') ? 'Please enter a location' : '';\n  }\n\n  getDPOPhoneNumberErrorMessage(): string {\n    return this.formOrganisationDetails.get('DPOPhoneNumber').hasError('required') ? 'Please enter a value' :\n    this.formOrganisationDetails.get('DPOPhoneNumber').hasError('pattern') ? 'Wrong Phone number' : '';\n  }\n\n  getDPOEmailAddressErrorMessage(): string {\n    return this.formOrganisationDetails.get('DPOEmailAddress').hasError('required') ? 'Please enter a value' :\n    this.formOrganisationDetails.get('DPOEmailAddress').hasError('email') ? 'Wrong Email Address.' : '';\n  }\n\n  getDPOPositionInOrganisationErrorMessage(): string {\n    return this.formOrganisationDetails.get('DPOPositionInOrganisation').hasError('required') ? 'Please enter a value' : '';\n  }\n\n  getRequiredErrorMessage(): string {\n    return this.formPurposeRetention.get('SpecifyTheLaw').hasError('required')\n    || this.formPurposeRetention.get('ServiceOrProductProvided').hasError('required')\n    || this.formPurposeRetention.get('SpecifyLegalObligation').hasError('required')\n    ? 'Please enter a value' : '';\n  }\n\n  getPatternErrorMessage(): string {\n    return this.formPurposeRetention.get('TotalRecordsAtRegistration').hasError('pattern')\n    ? 'Please enter correct information' : '';\n  }\n\n  getRetentionPeriodErrorMessage(): string {\n    return this.formPurposeRetention.get('RetentionPeriod').hasError('required') ? 'Please enter a value' :\n    this.formPurposeRetention.get('RetentionPeriod').hasError('max') ? 'Maximum of 100' :\n    this.formPurposeRetention.get('RetentionPeriod').hasError('pattern') ? 'Not valid' : '';\n  }\n\n  getRecordPercentageGrowthErrorMessage(): string {\n    return this.formPurposeRetention.get('RecordPercentageGrowth').hasError('max') ? 'Maximum of 100' :\n    this.formPurposeRetention.get('RecordPercentageGrowth').hasError('pattern') ? 'Not valid' : '';\n  }\n\n  getCheckboxErrorMessage(): string {\n    return this.formSecurityMeasures.get('RegistrationConsent').hasError('max') ? 'This field is required' : '';\n  }\n\n  getRegistrationDoneByErrorMessage(): string {\n    return this.formSecurityMeasures.get('RegistrationDoneBy').hasError('required') ? 'Please enter a value' :\n    this.formSecurityMeasures.get('RegistrationDoneBy').hasError('pattern') ? 'Please enter a correct name' : '';\n  }\n\n  onAddMainActivity(): void {\n    this.dialogRef = this.dialog.open(OrgMainActivityComponent, {\n      panelClass: ['organisation-main-activity-dialog', 'dialogs'],\n      disableClose: true,\n    });\n\n    this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: MainActivity }) => {\n      if (result.status) {\n          let found = false;\n          this.mainActivities.filter((activity) => {\n            if (activity.Activity === result.row.Activity) {\n              found = true;\n            }\n          });\n\n          if (found) {\n            this.service.openSnackBar('Sorry, this record already exists', 'error-lg');\n          } else {\n            this.mainActivities.push(result.row);\n          }\n\n        this.mainActivitiesDataSource = new MatTableDataSource(this.mainActivities);\n\n        setTimeout(() => {\n          this.mainActivitiesDataSource.paginator = this.MainActivityPaginator;\n          this.mainActivitiesDataSource.sort = this.MainActivityMatSort;\n        });\n      }\n    });\n  }\n  updateCollecthildrenData(event){\n\n    console.log(event.value);\n\n    if(event.value == 'Yes'){\n      this.showChildrenDataFields = true;\n      this.formChildrenData.get('PurposeForCollection').setValidators([Validators.required]);\n\n      this.formChildrenData.controls['PurposeForCollection'].updateValueAndValidity();\n    }\n    else{\n      this.showChildrenDataFields = false;\n\n      this.formChildrenData.get('PurposeForCollection').setValidators([]);\n\n      this.formChildrenData.get('PurposeForCollection').reset();\n\n      this.formChildrenData.controls['PurposeForCollection'].updateValueAndValidity();\n    }\n  }\n\n\n  onEditMainActivity(row: MainActivity): void {\n    this.dialogRef = this.dialog.open(OrgMainActivityComponent, {\n      panelClass: ['organisation-main-activity-dialog', 'dialogs'],\n      disableClose: true,\n      data: { row }\n    });\n\n    this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: MainActivity }) => {\n      if (result.status) {\n\n        this.mainActivities[this.mainActivities.indexOf(row)] = {\n          Activity: result.row.Activity,\n        };\n\n        this.mainActivitiesDataSource = new MatTableDataSource(this.mainActivities);\n\n        setTimeout(() => {\n          this.mainActivitiesDataSource.paginator = this.MainActivityPaginator;\n          this.mainActivitiesDataSource.sort = this.MainActivityMatSort;\n        });\n      }\n    });\n  }\n\n  onRemoveMainActivity(row: MainActivity): void {\n    this.mainActivities.splice(this.mainActivities.indexOf(row), 1);\n\n    this.mainActivitiesDataSource = new MatTableDataSource(this.mainActivities);\n\n    setTimeout(() => {\n      this.mainActivitiesDataSource.paginator = this.MainActivityPaginator;\n      this.mainActivitiesDataSource.sort = this.MainActivityMatSort;\n    });\n  }\n\n  onAddADPO(): void {\n    this.dialogRef = this.dialog.open(OrgDataProtectionOfficerComponent, {\n      panelClass: ['organisation-data-protection-officer-dialog', 'dialogs'],\n      disableClose: true,\n    });\n\n    this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: DataProtectionOfficer }) => {\n      if (result.status) {\n        let found = false;\n        this.dataProtectionOfficers.filter((dpo) => {\n          if (dpo.EmailAddress === result.row.EmailAddress || dpo.PhoneNumber === result.row.PhoneNumber) {\n            found = true;\n          }\n        });\n\n        if (found) {\n          this.service.openSnackBar('Sorry, this record already exists', 'error-lg');\n        } else {\n          this.dataProtectionOfficers.push(result.row);\n        }\n\n        this.dpoDataSource = new MatTableDataSource(this.dataProtectionOfficers);\n\n        setTimeout(() => {\n          this.dpoDataSource.paginator = this.dpoPaginator;\n          this.dpoDataSource.sort = this.dpoMatSort;\n        });\n      }\n    });\n  }\n\n  onEditDPO(row: DataProtectionOfficer): void {\n    this.dialogRef = this.dialog.open(OrgDataProtectionOfficerComponent, {\n      panelClass: ['organisation-data-protection-officer-dialog', 'dialogs'],\n      disableClose: true,\n      data: { row }\n    });\n\n    this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: DataProtectionOfficer }) => {\n      if (result.status) {\n\n        this.dataProtectionOfficers[this.dataProtectionOfficers.indexOf(row)] = {\n          Name: result.row.Name,\n          EmailAddress: result.row.EmailAddress,\n          PhoneNumber: result.row.PhoneNumber,\n          PhysicalAddress: result.row.PhysicalAddress,\n          PositionInOrganisation: result.row.PositionInOrganisation,\n        };\n\n        this.dpoDataSource = new MatTableDataSource(this.dataProtectionOfficers);\n\n        setTimeout(() => {\n          this.dpoDataSource.paginator = this.dpoPaginator;\n          this.dpoDataSource.sort = this.dpoMatSort;\n        });\n      }\n    });\n  }\n\n  onRemoveDPO(row: DataProtectionOfficer): void {\n    this.dataProtectionOfficers.splice(this.dataProtectionOfficers.indexOf(row), 1);\n\n    this.dpoDataSource = new MatTableDataSource(this.dataProtectionOfficers);\n\n    setTimeout(() => {\n      this.dpoDataSource.paginator = this.dpoPaginator;\n      this.dpoDataSource.sort = this.dpoMatSort;\n    });\n  }\n\n  onAddSecurityMeasure(): void {\n    this.dialogRef = this.dialog.open(OrgSecurityMeasuresComponent, {\n      panelClass: ['organisation-security-measure-dialog', 'dialogs'],\n      disableClose: true,\n    });\n\n    this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: SecurityMeasure }) => {\n      if (result.status) {\n        let found = false;\n        this.securityMeasures.filter((item) => {\n          if (item.SecurityMeasure === result.row.SecurityMeasure) {\n            found = true;\n          }\n        });\n\n        if (found) {\n          this.service.openSnackBar('Sorry, this record already exists', 'error-lg');\n        } else {\n          this.securityMeasures.push(result.row);\n        }\n\n        this.securityMeasureDataSource = new MatTableDataSource(this.securityMeasures);\n\n        setTimeout(() => {\n          this.securityMeasureDataSource.paginator = this.securityMeasurePaginator;\n          this.securityMeasureDataSource.sort = this.securityMeasureMatSort;\n        });\n      }\n    });\n  }\n\n  onEditSecurityMeasure(row: SecurityMeasure): void {\n    this.dialogRef = this.dialog.open(OrgSecurityMeasuresComponent, {\n      panelClass: ['organisation-security-measure-dialog', 'dialogs'],\n      disableClose: true,\n      data: { row }\n    });\n\n    this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: SecurityMeasure }) => {\n      if (result.status) {\n\n        this.securityMeasures[this.securityMeasures.indexOf(row)] = {\n          SecurityMeasure: result.row.SecurityMeasure,\n        };\n\n        this.securityMeasureDataSource = new MatTableDataSource(this.securityMeasures);\n\n        setTimeout(() => {\n          this.securityMeasureDataSource.paginator = this.securityMeasurePaginator;\n          this.securityMeasureDataSource.sort = this.securityMeasureMatSort;\n        });\n      }\n    });\n  }\n\n  onRemoveSecurityMeasure(row: SecurityMeasure): void {\n    this.securityMeasures.splice(this.securityMeasures.indexOf(row), 1);\n\n    this.securityMeasureDataSource = new MatTableDataSource(this.securityMeasures);\n\n    setTimeout(() => {\n      this.securityMeasureDataSource.paginator = this.securityMeasurePaginator;\n      this.securityMeasureDataSource.sort = this.securityMeasureMatSort;\n    });\n  }\n\n  onAddAThirdParty(): void {\n    this.dialogRef = this.dialog.open(OrgThirdPartyComponent, {\n      panelClass: ['organisation-third-party-dialog', 'dialogs'],\n      disableClose: true,\n    });\n\n    this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: ThirdParty }) => {\n      if (result.status) {\n          let found = false;\n\n          this.thirdParties.filter((party) => {\n            if (party.ThirdPartyName === result.row.ThirdPartyName) {\n              found = true;\n            }\n          });\n\n          if (found) {\n            this.service.openSnackBar('Sorry, this record already exists', 'error-lg');\n          } else {\n            this.thirdParties.push(result.row);\n          }\n\n        this.thirdPartyDataSource = new MatTableDataSource(this.thirdParties);\n\n        setTimeout(() => {\n          this.thirdPartyDataSource.paginator = this.thirdPartyPaginator;\n          this.thirdPartyDataSource.sort = this.thirdPartyMatSort;\n        });\n      }\n    });\n  }\n\n  onEditThirdParty(row: ThirdParty): void {\n    this.dialogRef = this.dialog.open(OrgThirdPartyComponent, {\n      panelClass: ['organisation-third-party-dialog', 'dialogs'],\n      disableClose: true,\n      data: { row }\n    });\n\n    this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: ThirdParty }) => {\n      if (result.status) {\n\n        this.thirdParties[this.thirdParties.indexOf(row)] = {\n          ThirdPartyName: result.row.ThirdPartyName,\n          Purpose: result.row.Purpose,\n        };\n\n        this.thirdPartyDataSource = new MatTableDataSource(this.thirdParties);\n\n        setTimeout(() => {\n          this.thirdPartyDataSource.paginator = this.thirdPartyPaginator;\n          this.thirdPartyDataSource.sort = this.thirdPartyMatSort;\n        });\n      }\n    });\n  }\n\n  onRemoveThirdParty(row: ThirdParty): void {\n    this.thirdParties.splice(this.thirdParties.indexOf(row), 1);\n\n    this.thirdPartyDataSource = new MatTableDataSource(this.thirdParties);\n\n    setTimeout(() => {\n      this.thirdPartyDataSource.paginator = this.thirdPartyPaginator;\n      this.thirdPartyDataSource.sort = this.thirdPartyMatSort;\n    });\n  }\n\n  onAddACountry(): void {\n    this.dialogRef = this.dialog.open(OrgCountryComponent, {\n      panelClass: ['organisation-country-dialog', 'dialogs'],\n      disableClose: true,\n    });\n\n    this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: CountryOfTransfer }) => {\n      if (result.status) {\n          let found = false;\n          this.countriesOfTransfer.filter((party) => {\n            if (party.Country === result.row.Country) {\n              found = true;\n            }\n          });\n\n          if (found) {\n            this.service.openSnackBar('Sorry, this record already exists', 'error-lg');\n          } else {\n            this.countriesOfTransfer.push(result.row);\n          }\n\n        this.countriesDataSource = new MatTableDataSource(this.countriesOfTransfer);\n\n        setTimeout(() => {\n          this.countriesDataSource.paginator = this.countryOfTransferPaginator;\n          this.countriesDataSource.sort = this.countryOfTransferMatSort;\n        });\n      }\n    });\n  }\n\n  onEditCountry(row: CountryOfTransfer): void {\n    this.dialogRef = this.dialog.open(OrgCountryComponent, {\n      panelClass: ['organisation-country-dialog', 'dialogs'],\n      disableClose: true,\n      data: { row }\n    });\n\n    this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: CountryOfTransfer }) => {\n      if (result.status) {\n        this.countriesOfTransfer[this.countriesOfTransfer.indexOf(row)] = {\n          CountryID: result.row.CountryID,\n          Country: result.row.Country,\n          Purpose: result.row.Purpose,\n          Description: result.row.Description,\n        };\n\n        this.countriesDataSource = new MatTableDataSource(this.countriesOfTransfer);\n\n        setTimeout(() => {\n          this.countriesDataSource.paginator = this.countryOfTransferPaginator;\n          this.countriesDataSource.sort = this.countryOfTransferMatSort;\n        });\n      }\n    });\n  }\n\n  onRemoveCountry(row: CountryOfTransfer): void {\n    this.countriesOfTransfer.splice(this.countriesOfTransfer.indexOf(row), 1);\n\n    this.countriesDataSource = new MatTableDataSource(this.countriesOfTransfer);\n\n    setTimeout(() => {\n      this.countriesDataSource.paginator = this.countryOfTransferPaginator;\n      this.countriesDataSource.sort = this.countryOfTransferMatSort;\n    });\n  }\n\n  onUploadAttachments(): void {\n    this.dialogRef = this.dialog.open(OrgUploadComponent, {\n      panelClass: ['organisation-upload-dialog', 'dialogs'],\n      disableClose: true,\n      data: {\n        multiple: false\n      }\n    });\n\n    this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: FileUpload }) => {\n      console.log('row:', result.row);\n\n      if (result.status) {\n        this.document = result.row;\n      }\n    });\n  }\n\n  onRemoveDocument(): void {\n    this.document = null;\n  }\n\n  onDownloadForm3(): void {\n    this.dialogRef = this.dialog.open(OrgForm3DialogComponent, {\n      panelClass: ['organisation-form-3-dialog', 'dialogs'],\n      disableClose: true,\n      data: {\n        OrganisationName: this.formGeneralInformation.get('OrganizationName').value,\n        PhysicalAddress: this.formGeneralInformation.get('Location').value,\n        Date: new Date()\n      }\n    });\n  }\n\n  onUploadProofOfPayment(): void {\n    this.dialogRef = this.dialog.open(OrgUploadComponent, {\n      panelClass: ['organisation-upload-dialog', 'dialogs'],\n      disableClose: true,\n      data: {\n        multiple: false\n      }\n    });\n\n    this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: FileUpload }) => {\n\n      if (result.status) {\n        this.proofOfPayment = result.row;\n      }\n    });\n  }\n\n  onRemoveProofOfPaymen(): void {\n    this.proofOfPayment = null;\n  }\n\n  onUploadForm3Attachments(): void {\n    this.dialogRef = this.dialog.open(OrgUploadComponent, {\n      panelClass: ['organisation-upload-dialog', 'dialogs'],\n      disableClose: true,\n      data: {\n        multiple: false\n      }\n    });\n\n    this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: FileUpload }) => {\n      if (result.status) {\n        this.documentForm3 = result.row;\n      }\n    });\n  }\n\n  onRemoveForm3Document(): void {\n    this.documentForm3 = null;\n  }\n\n  onChangeSubCategory(event: MatCheckboxChange, SubCategory: DataSubCategory): void {\n    if (event.checked) {\n      this.selectedDataSubCategory.push(SubCategory);\n    } else {\n      this.selectedDataSubCategory.splice(this.selectedDataSubCategory.indexOf(SubCategory), 1);\n    }\n  }\n\n  private fetchMultiple(): Observable<any[]> {\n    this.processing = true;\n    const reqCountries = this.http.get<ApiPayload>(this.endpoints.countries);\n    const reqDataSources = this.http.get<ApiPayload>(this.endpoints.dataSources);\n    const reqOrganisationType = this.http.get<ApiPayload>(this.endpoints.organisationType);\n    const reqSector = this.http.get<ApiPayload>(this.endpoints.sector);\n    const reqDataSubcategories = this.http.get<ApiPayload>(this.endpoints.dataSubcategories);\n    const reqDataPurpose = this.http.get<ApiPayload>(this.endpoints.dataPurpose);\n    const reqNatureOfBusiness = this.http.get<ApiPayload>(this.endpoints.natureOfBusiness);\n    const reqOrgRegSaveDraft = this.http.get<ApiPayload>(this.endpoints.getOrgDetailsById, { params: { OrganizationID: this._auth.getOrganisationID() } });\n    // tslint:disable-next-line:max-line-length\n    return forkJoin([\n      reqCountries, \n      reqDataSources, \n      reqOrganisationType, \n      reqSector, \n      reqDataSubcategories, \n      reqDataPurpose, \n      reqNatureOfBusiness,\n      reqOrgRegSaveDraft,\n    ]);\n  }\n\n  private getFormData(): any {\n\n    return {\n      OrganisationUserID: +this._auth.getOrganisationID(),\n      OrganisationName: this.formGeneralInformation.get('OrganizationName').value,\n      OrganisationCategory: this.selectedOrganisationCategories ? this.selectedOrganisationCategories : [],\n      OrganizationTypeID: this.formGeneralInformation.get('OrganizationTypeID').value ? this.formGeneralInformation.get('OrganizationTypeID').value : 0,\n      CountryOfIncorporation: this.formGeneralInformation.get('CountryOfIncorporation').value ? this.formGeneralInformation.get('CountryOfIncorporation').value : 0,\n      URSBNumber: this.formGeneralInformation.get('URSBNumber').value ? this.formGeneralInformation.get('URSBNumber').value : '',\n      SectorID: this.formGeneralInformation.get('SectorID').value ? this.formGeneralInformation.get('SectorID').value : 0,\n      OtherSector: this.formGeneralInformation.get('OtherSector').value ? this.formGeneralInformation.get('OtherSector').value : '',\n      Location: this.formGeneralInformation.get('Location').value ? this.formGeneralInformation.get('Location').value : '',\n      // tslint:disable-next-line:max-line-length\n      // PhoneNumber: this.formGeneralInformation.get('PhoneNumberCode').value + (this.formGeneralInformation.get('PhoneNumber').value).replaceAll(' ', ''),\n      // EmailAddress: this.formGeneralInformation.get('EmailAddress').value,\n      RegTrackingNo: this.regTrackingNo,\n      OrganisationID: this.OrganisationID,\n      PhoneNumber: this.application.PhoneNumber,\n      EmailAddress: this.application.EmailAddress,\n      NatureOfBusinessCatID: this.formGeneralInformation.get('NatureOfBusinessCat').value ? this.formGeneralInformation.get('NatureOfBusinessCat').value : 0,\n      NatureOfBusiness: this.selectedNatureOfBusinessSubCat ? this.selectedNatureOfBusinessSubCat : [],\n      \n      DPORequired: this.formOrganisationDetails.get('DPORequired').value,\n      DPOName: this.formOrganisationDetails.get('DPORequired').value === 'Yes' ? this.formOrganisationDetails.get('DPOName').value : '',\n      DPOPhysicalAddress: this.formOrganisationDetails.get('DPORequired').value === 'Yes' ? this.formOrganisationDetails.get('DPOPhysicalAddress').value : '',\n      // tslint:disable-next-line:max-line-length\n      DPOPhoneNumber: this.formOrganisationDetails.get('DPOPhoneNumber').value ? this.formOrganisationDetails.get('PhoneNumberCode').value + (this.formOrganisationDetails.get('DPOPhoneNumber').value).replaceAll(' ', '') : '',\n      // tslint:disable-next-line:max-line-length\n      DPOEmailAddress: this.formOrganisationDetails.get('DPORequired').value === 'Yes' ? this.formOrganisationDetails.get('DPOEmailAddress').value : '',\n      DPOPositionInOrganisation: this.formOrganisationDetails.get('DPORequired').value === 'Yes' ? this.formOrganisationDetails.get('DPOPositionInOrganisation').value : '',\n      SourceOfDataID: this.selectedDataSources ? this.selectedDataSources : [],\n      PersonalDataCollected: this.selectedDataSubCategory ? this.selectedDataSubCategory : [],\n      Purpose: this.selectedDataPurposes ? this.selectedDataPurposes : [],\n      SpecifyTheLaw: this.formPurposeRetention.get('SpecifyTheLaw').value ? this.formPurposeRetention.get('SpecifyTheLaw').value : '',\n      ServiceOrProductProvided: this.formPurposeRetention.get('ServiceOrProductProvided').value ? this.formPurposeRetention.get('ServiceOrProductProvided').value : '',\n      SpecifyLegalObligation: this.formPurposeRetention.get('SpecifyLegalObligation').value ? this.formPurposeRetention.get('SpecifyLegalObligation').value : '',\n      // tslint:disable-next-line:max-line-length\n      TotalRecordsAtRegistration: this.formPurposeRetention.get('TotalRecordsAtRegistration').value ? parseInt(this.formPurposeRetention.get('TotalRecordsAtRegistration').value, 10) : 0,\n      RecordPercentageGrowth: this.formPurposeRetention.get('RecordPercentageGrowth').value ? parseInt(this.formPurposeRetention.get('RecordPercentageGrowth').value, 10) : 0,\n      // RetentionPeriod: this.formPurposeRetention.get('RetentionPeriod').value,\n      RetentionPeriod: this.formPurposeRetention.get('RetentionPeriod').value ? parseInt(this.formPurposeRetention.get('RetentionPeriod').value, 10) : 0,\n      PersonalDataIsForDisclosure: this.formThirdParties.get('PersonalDataIsForDisclosure').value ? this.formThirdParties.get('PersonalDataIsForDisclosure').value : '',\n      ThirdParties: this.thirdParties ? this.thirdParties : [],\n      StoreDataOutsideCountry: this.formThirdParties.get('StoreDataOutsideCountry').value ? this.formThirdParties.get('StoreDataOutsideCountry').value : '',\n      Countries: this.countriesOfTransfer ? this.countriesOfTransfer : [],\n      SecurityMeasures: this.securityMeasures ? this.securityMeasures : [],\n      Attachment: this.document ? this.document.Base64 : '',\n      Form3Attachment: this.documentForm3 ? this.documentForm3.Base64 : '',\n      CollectChildrenData: this.formChildrenData.get('CollectChildrenData').value ? this.formChildrenData.get('CollectChildrenData').value : '',\n      ChildrenDataPurpose: this.selectedChildDataPurposes ? this.selectedChildDataPurposes : [],\n      RegistrationConsent: this.formSecurityMeasures.get('RegistrationConsent').value ? true : false,\n      RegistrationDoneBy: this.formSecurityMeasures.get('RegistrationDoneBy').value ? this.formSecurityMeasures.get('RegistrationDoneBy').value : '',\n      ProofOfPayment: this.proofOfPayment ? this.proofOfPayment.Base64 : '',\n    };\n  }\n\n  onNatureOfBusinessCatSelected(NatureOfBusinessCatId): void {\n    // tslint:disable-next-line:max-line-length\n    this.httpSub = this.http.get<NatureOfBusinessSubCat[]>(this.endpoints.natureOfBusiness + '?NatureOfBusinessSubCat=' + NatureOfBusinessCatId)\n    .pipe(catchError(this.service.handleError))\n    .subscribe((response) => {\n\n      this.natureOfBusinessSubCat = response;\n\n    }, (error) => {\n      this.processing = false;\n      this.service.determineErrorResponse(error);\n    });\n  }\n\n  onPreviewForm(download: boolean): void {\n    this.dialogRef = this.dialog.open(OrgRegistrationPreviewDialogComponent, {\n      panelClass: ['organisation-registration-preview-form-3-dialog', 'dialogs'],\n      disableClose: true,\n      data: {\n        download: download,\n        row: this.getFormData(),\n        Attachment: this.document ? this.document : '',\n        Form3: this.documentForm3 ? this.documentForm3 : '',\n        ProofOfPayment: this.proofOfPayment ? this.proofOfPayment : '',\n        OrganizationType: this.OrganizationType,\n        // tslint:disable-next-line:max-line-length\n        Sector: this.formGeneralInformation.get('OtherSector').value ? this.formGeneralInformation.get('OtherSector').value : this.SectorName,\n        NatureOfBusinessCat: this.NatureOfBusinessCat,\n        CountryOfIncorporation: this.CountryOfIncorporation\n      }\n    });\n  }\n\n  onSubmit(): void {\n    this.processing = true;\n    console.log('save the registration information:', this.getFormData());\n\n    this.httpSub = this.http.post<ApiPayload>(this.endpoints.renewApplication, this.getFormData())\n    .pipe(catchError(this.service.handleError))\n    .subscribe((response) => {\n      this.dialogRef = this.dialog.open(SuccessfulMessageDialogComponent, {\n        panelClass: ['successful-message-dialog', 'dialogs'],\n        disableClose: true,\n        data: {\n          title: response.message['title'],\n          message: response.message['body'],\n          status: response.code === 200 ? true : false,\n        }\n      });\n\n      this.dialogRef.afterClosed().subscribe(() => {\n        this.route.navigate(['/company-registration/find']);\n      });\n\n      this.processing = false;\n    }, (error) => {\n      this.processing = false;\n\n      if (error.error.message) {\n        this.dialogRef = this.dialog.open(SuccessfulMessageDialogComponent, {\n          panelClass: ['successful-message-dialog', 'dialogs'],\n          disableClose: true,\n          data: {\n            title: error.error.message['title'] ? error.error.message['title'] : 'Operation Failed',\n            message: error.error.message['body'] ? error.error.message['body'] : environment.technicalErrorResponse,\n            status: false,\n          }\n        });\n      } else {\n        this.service.determineErrorResponse(error);\n      }\n    });\n  }\n\n  onReadDocument(document: FileUpload): void {\n    this.bottomsheetRef = this.bottomsheet.open(ViewPdfDocumentBottomsheetComponent, {\n      disableClose: true,\n      panelClass: ['view-pdf-document-bottomsheet', 'bottomsheets'],\n      data: {\n        url: document.Base64,\n        title: document.Name\n      }\n    });      \n  }\n\n  private _loadApplicationDraft(response): void {\n    console.log(response)\n    this.application = response[0];\n    this.processing = false;\n\n    this.regTrackingNo = response[0]['RegTrackingNo'];\n    this.OrganisationID = response[0]['OrganisationID'];\n    console.log(this.regTrackingNo);\n    console.log(this.application);\n    console.log(\"here\");\n\n    if (this.application.CurrentStepName !== 'Certificate Issued') {      \n      this.dialogRef = this.dialog.open(SuccessfulMessageDialogComponent, {\n        panelClass: ['successful-message-dialog', 'dialogs'],\n        disableClose: true,\n        data: {\n          title: 'No Previous Certificate',\n          message: 'Please complete your registration',\n          status: false,\n        }\n      });\n\n      this.dialogRef.afterClosed().subscribe(() => {\n        // console.log('regTrackingNo:', this.regTrackingNo);\n        this.route.navigate(\n          ['/company-registration/view'],\n          { state: { regTrackingNo: this.regTrackingNo }}\n        ).then();\n      });      \n\n    } else {\n\n      if (this.application.OrganisationCategory) {\n        let organisationCategories: any = this.application.OrganisationCategory;\n        let cat: number[] = [];\n    \n        organisationCategories.filter((item) => {\n          cat.push(item.OrganisationCategoryId);\n        });\n    \n        this.formGeneralInformation.get('DPPActCategory').patchValue(cat);\n      }\n  \n      this.formGeneralInformation.get('OrganizationTypeID').patchValue(this.application.OrganizationTypeID);\n      this.formGeneralInformation.get('OrganizationName').patchValue(this.application.OrganisationName);\n      this.formGeneralInformation.get('URSBNumber').patchValue(this.application.URSBNumber);\n      this.formGeneralInformation.get('SectorID').patchValue(this.application.SectorID);\n      this.formGeneralInformation.get('CountryOfIncorporation').patchValue(this.application['CountryOfIncorporation']);\n      this.formGeneralInformation.get('OtherSector').patchValue(this.application['OtherSector']);\n      this.formGeneralInformation.get('Location').patchValue(this.application.Location);\n      this.formGeneralInformation.get('PhoneNumberCode').patchValue(this.application.PhoneNumber.substring(0, 3));\n      this.formGeneralInformation.get('PhoneNumber').patchValue(this.application.PhoneNumber.substring(3, 13));\n      this.formGeneralInformation.get('EmailAddress').patchValue(this.application.EmailAddress);\n  \n      if (response[0]['NatureOfBusiness'].length) {\n        this.formGeneralInformation.get('NatureOfBusinessCat').patchValue(response[0]['NatureOfBusiness'][0]['NatureOfBusinessCatID']);\n        this.natureOfbusinesses = response[0]['NatureOfBusiness'];\n\n        this.onNatureOfBusinessCatSelected(response[0]['NatureOfBusiness'][0]['NatureOfBusinessCatID']);\n        \n        let _selectedNatureOfBusinessSubCat: NatureOfBusinessSubCat[] = [];\n        this.natureOfbusinesses.filter((item) => {\n            this.natureOfbusinesses_arr.push(item.NatureOfBusinessSubatID);\n\n            _selectedNatureOfBusinessSubCat.push({\n                NatureOfBusinessSubCatId: item.NatureOfBusinessSubatID,\n                NatureOfBusinessSubCategoryName: item.NatureOfBusinessSubCategoryName\n            });\n        });\n\n                  \n        this.formGeneralInformation.get('NatureOfBusinessSubCat').patchValue(this.natureOfbusinesses_arr);\n        this.selectedNatureOfBusinessSubCat = _selectedNatureOfBusinessSubCat;\n      }\n  \n      // STEP TWO\n      this.formOrganisationDetails.get('DPORequired').patchValue(this.application['DPORequired']);\n  \n      this.formOrganisationDetails.get('DPOName').patchValue(this.application['DPOName']);\n      this.formOrganisationDetails.get('DPOPhysicalAddress').patchValue(this.application['DPOPhysicalAddress']);\n      this.formOrganisationDetails.get('PhoneNumberCode').patchValue(this.application['DPOPhoneNumber'].substring(0, 3));\n      this.formOrganisationDetails.get('DPOPhoneNumber').patchValue(this.application['DPOPhoneNumber'].substring(3, 13));\n      this.formOrganisationDetails.get('DPOEmailAddress').patchValue(this.application['DPOEmailAddress']);\n      this.formOrganisationDetails.get('DPOPositionInOrganisation').patchValue(this.application['DPOPositionInOrganisation']);\n  \n      // STEP THREE\n      let sourceofdata = this.application['SourceOfDataID'];\n      let sourceofdata_arr: number [] = [];\n      \n      sourceofdata.filter((item) => {\n        sourceofdata_arr.push(item.DataSourceID);\n      });\n  \n      this.formPersonalDataHeld.get('SourceOfDataID').patchValue(sourceofdata_arr);\n  \n      if (this.application['PersonalDataCollected']) {\n        const personalDataCollected: any[] = this.application['PersonalDataCollected'];\n    \n        this.dataCategories.filter((category) => {\n          category.SubCategories.filter((subCat) => {\n            personalDataCollected.filter((selectedSubCat) => {            \n              if (subCat.DataSubCategoryID === selectedSubCat.DataSubCategoryID) {\n                subCat.IsChecked = true;\n                this.selectedDataSubCategory.push(subCat);\n              }\n            });\n          });\n        });\n      }\n\n      // CHILDREN'S DATA \n\n      if(this.application['CollectChildrenData']){\n\n        this.formChildrenData.get('CollectChildrenData').patchValue(this.application['CollectChildrenData']);\n      }\n\n     \n\n      if(this.application.CollectChildrenData == 'Yes'){\n\n        this.showChildrenDataFields = true;\n      \n        \n        this.childDataPurposes = this.application['ChildrenDataPurpose']\n        let _selectedChildrenDataPurposes: ChildrenDataPurpose[] = [];\n        this.childDataPurposes.filter((item) => {\n\n            this.childDataPurposeResults.push(item.ChildDataID);\n        })\n        this.formChildrenData.get('PurposeForCollection').patchValue(this.childDataPurposeResults);\n\n      }\n\n        \n      // STEP FOUR\n      const purpose: any = this.application['Purpose'];\n      let purpose_arr: any[] = [];\n      let _selectedDataPurposes: DataPurposes[]  = [];\n  \n      purpose.filter((item) => {\n        if (item.DataPurposeID === 1) {\n          this.SpecifyTheLaw = true;\n          this.formPurposeRetention.get('SpecifyTheLaw').setValidators([Validators.required]);\n        }\n  \n        if (item.DataPurposeID === 3) {\n          this.ServiceOrProductProvided = true;\n          this.formPurposeRetention.get('ServiceOrProductProvided').setValidators([Validators.required]);\n        }\n  \n        if (item.DataPurposeID === 6) {\n          this.SpecifyLegalObligation = true;\n          this.formPurposeRetention.get('SpecifyLegalObligation').setValidators([Validators.required]);\n        }\n  \n        purpose_arr.push(item.DataPurposeID);\n  \n        _selectedDataPurposes.push(item);\n      });\n      \n      this.formPurposeRetention.get('Purpose').patchValue(purpose_arr);\n      this.selectedDataPurposes = _selectedDataPurposes;\n  \n      this.formPurposeRetention.get('SpecifyTheLaw').patchValue(this.application['SpecifyTheLaw']);\n      this.formPurposeRetention.get('ServiceOrProductProvided').patchValue(this.application['ServiceOrProductProvided']);\n      this.formPurposeRetention.get('SpecifyLegalObligation').patchValue(this.application['SpecifyLegalObligation']);\n      this.formPurposeRetention.get('TotalRecordsAtRegistration').patchValue(this.application['TotalRecordsAtRegistration']);\n      this.formPurposeRetention.get('RecordPercentageGrowth').patchValue(this.application['RecordPercentageGrowth']);\n      this.formPurposeRetention.get('RetentionPeriod').patchValue(this.application['RetentionPeriod']);\n  \n      // STEP FIVE\n      this.formThirdParties.get('PersonalDataIsForDisclosure').patchValue(this.application['PersonalDataIsForDisclosure'].replace(/\\s/g, ''));\n      this.thirdParties = this.application['ThirdParties'];\n      this.thirdPartyDataSource = new MatTableDataSource(this.thirdParties);\n  \n      setTimeout(() => {\n        this.thirdPartyDataSource.paginator = this.thirdPartyPaginator;\n        this.thirdPartyDataSource.sort = this.thirdPartyMatSort;\n      });\n  \n      this.formThirdParties.get('StoreDataOutsideCountry').patchValue(this.application['StoreDataOutsideCountry']);\n      this.countriesOfTransfer = this.application['Countries'];\n      this.countriesDataSource = new MatTableDataSource(this.countriesOfTransfer);\n  \n      setTimeout(() => {\n        this.countriesDataSource.paginator = this.countryOfTransferPaginator;\n        this.countriesDataSource.sort = this.countryOfTransferMatSort;\n      });\n  \n      // STEP SIX\n      this.securityMeasures = this.application['SecurityMeasures'];\n      this.securityMeasureDataSource = new MatTableDataSource(this.securityMeasures);\n      setTimeout(() => {\n          this.securityMeasureDataSource.paginator = this.securityMeasurePaginator;\n          this.securityMeasureDataSource.sort = this.securityMeasureMatSort;\n      });\n  \n      if (this.application.Attachment) {\n        this.document = { \n          Document: null, \n          Name: 'Supporting Documentation.pdf', \n          Size: null, \n          Base64: this.application.Attachment \n        };\n      }\n\n      if (this.application.Form3Attachment) {\n        this.documentForm3 = { \n          Document: null, \n          Name: 'Form 3.pdf', \n          Size: null, \n          Base64: this.application.Form3Attachment \n        };\n      }\n\n      this.formSecurityMeasures.get('RegistrationConsent').patchValue(this.application['RegistrationConsent'] == true ? true : null);\n      this.formSecurityMeasures.get('RegistrationDoneBy').patchValue(this.application['RegistrationDoneBy']);    \n    }\n  }\n\n  onSaveDraft(): void {\n    this.processing = true;\n\n    this.httpSub = this.http.put<ApiPayload>(this.endpoints.orgRegSaveDraft, this.getFormData())\n    .pipe(catchError(this.service.handleError))\n    .subscribe((response) => {\n\n      this.dialogRef = this.dialog.open(SuccessfulMessageDialogComponent, {\n        panelClass: ['successful-message-dialog', 'dialogs'],\n        disableClose: true,\n        data: {\n          title: response.message['title'],\n          message: response.message['body'],\n          status: response.code === 200 ? true : false,\n        }\n      });\n\n      this.processing = false;\n    }, (error) => {\n      this.processing = false;\n\n      if (error.error.message) {\n        this.dialogRef = this.dialog.open(SuccessfulMessageDialogComponent, {\n          panelClass: ['successful-message-dialog', 'dialogs'],\n          disableClose: true,\n          data: {\n            title: error.error.message['title'] ? error.error.message['title'] : 'Operation Failed',\n            message: error.error.message['body'] ? error.error.message['body'] : environment.technicalErrorResponse,\n            status: false,\n          }\n        });\n      } else {\n        this.service.determineErrorResponse(error);\n      }\n    });    \n  }\n\n  ngOnDestroy(): void {\n    if (this.httpSub) { this.httpSub.unsubscribe(); }\n  }\n\n  generatePRN(){\n\n    this.Organisation_User_ID = this._auth.getOrganisationID();\n\n    console.log(this.getPRNRequestData()); \n    this.httpSub = this.http.post<ApiPayload>(this.endpoints.generatePRN, this.getPRNRequestData())\n    .pipe(catchError(this.service.handleError))\n    .subscribe((response) => {\n      console.log(response.data);\n      this.showPRNDownload = true;\n      \n      this.dialogRef = this.dialog.open(SuccessfulMessageDialogComponent, {\n        disableClose: true,\n        data: {\n          title: 'URA PRN',\n          message: 'PRN Generated successfully.Check the email and telephone number provided for more details.',\n          status: true,\n        }\n      });\n\n      this.formGeneralInformation.get('PRN').patchValue(response.data.PRN);\n\n      this.processing = false;\n    }, (error) => {\n      this.processing = false;\n\n      if (error.error.message) {\n        this.dialogRef = this.dialog.open( SuccessfulMessageDialogComponent, {\n          panelClass: ['forward-message-dialog', 'dialogs'],\n          disableClose: true,\n          data: {\n            title: error.error.message['title'] ? error.error.message['title'] : 'Operation Failed',\n            message: error.error.message['body'] ? error.error.message['body'] : environment.technicalErrorResponse,\n            status: false,\n          }\n        });\n      } else {\n        this.service.determineErrorResponse(error);\n      }\n    });\n\n  }\n\n  getPRNRequestData(){\n\n    const data =  {\n\n      phone_number: this.formGeneralInformation.get('PhoneNumberCode').value + '' + this.formGeneralInformation.get('PhoneNumber').value,\n      email: this.formGeneralInformation.get('EmailAddress').value,\n      organisation_name: this.formGeneralInformation.get('OrganizationName').value,\n      organisation_user_id : this._auth.getOrganisationID()\n\n    }\n\n    return data;\n  }\n\n\n  checkPRNStatus(){\n\n    this.Organisation_User_ID = this._auth.getOrganisationID();\n\n    console.log(this.getPRNRequestData()); \n    this.httpSub = this.http.post<ApiPayload>(this.endpoints.checkPRN, this.getPRN())\n    .pipe(catchError(this.service.handleError))\n    .subscribe((response) => {\n      console.log(response.data);\n\n      let message;\n      let status;\n\n      if(response.data.ErrorCode == 'A'){\n        message = 'The PRN is valid, however payment has not been made';\n        status = false;\n      }\n      else if(response.data.ErrorCode == 'R'){\n         message =  'The PRN is valid, however the cheque has not yet matured';\n         status = false;\n      }\n      else if(response.data.ErrorCode == 'T'){\n         message = 'Received and credited. The payment has been reconciled with the  bank';\n         status = true;\n      }\n      else if(response.data.ErrorCode == 'D'){\n         message = 'The PRN is valid, however the cheque was dishonoured';\n         status = false;\n      }\n      else if(response.data.ErrorCode == 'C'){\n         message = 'The PRN was cancelled';\n         status = false;\n      }\n      else if(response.data.ErrorCode == 'X'){\n         message = 'THe PRN has expired';\n         status = false;\n      }\n      else if(response.data.ErrorCode == 'APPOO1'){\n        message = response.data.ErrorDesc;\n        status =  false;\n      }\n      else{\n        message = 'An error occured';\n        status = false;\n      }\n      this.showPRNDownload = true;\n\n\n      \n      this.dialogRef = this.dialog.open(SuccessfulMessageDialogComponent, {\n        disableClose: true,\n        data: {\n          title: 'URA PRN',\n          message: message,\n          status: false,\n        }\n      });\n\n\n      this.processing = false;\n    }, (error) => {\n      this.processing = false;\n\n      if (error.error.message) {\n        this.dialogRef = this.dialog.open( SuccessfulMessageDialogComponent, {\n          panelClass: ['forward-message-dialog', 'dialogs'],\n          disableClose: true,\n          data: {\n            title: error.error.message['title'] ? error.error.message['title'] : 'Operation Failed',\n            message: error.error.message['body'] ? error.error.message['body'] : environment.technicalErrorResponse,\n            status: false,\n          }\n        });\n      } else {\n        this.service.determineErrorResponse(error);\n      }\n    });\n  }\n\n  getPRN(){\n\n    const data =  {\n\n      prn : this.formGeneralInformation.get('PRN').value\n\n    }\n\n    return data;\n  }\n\n\n  downloadPRNDownload(){\n\n\n    this.httpSub = this.http.post<ApiPayload>(this.endpoints.checkPRN, this.getPRN())\n    .pipe(catchError(this.service.handleError))\n    .subscribe((response) => {\n\n      console.log(response.data);\n      this.dialogRef = this.dialog.open(DownloadPRNReceiptComponent, {\n        disableClose: true,\n        data: {\n          download: true,\n          prn_data:response.data\n        }\n      \n      });\n\n      \n    }, (error) => {\n      this.processing = false;\n\n      if (error.error.message) {\n        this.dialogRef = this.dialog.open( SuccessfulMessageDialogComponent, {\n          panelClass: ['forward-message-dialog', 'dialogs'],\n          disableClose: true,\n          data: {\n            title: error.error.message['title'] ? error.error.message['title'] : 'Operation Failed',\n            message: error.error.message['body'] ? error.error.message['body'] : environment.technicalErrorResponse,\n            status: false,\n          }\n        });\n      } else {\n        this.service.determineErrorResponse(error);\n      }\n    });\n\n    \n  } \n\n\n}\n","\n<fury-page-layout mode=\"card\">\n    <fury-page-layout-header>\n        <fury-breadcrumbs [@fadeInRight] [crumbs]=\"['New Registration']\"\n                          current=\"New Application\"></fury-breadcrumbs>\n    </fury-page-layout-header>\n\n    <fury-page-layout-content [@fadeInUp]>\n        <main class=\"fadeInUp _delay4ms\">\n\n            <!-- <app-page-breadcrumb [title]=\"'Application for New Registration / Renewal'\"></app-page-breadcrumb> -->\n        \n            <mat-horizontal-stepper \n                [linear]=\"isLinear\"\n                [selectedIndex]=\"selectedIndex\"\n                labelPosition=\"bottom\" #stepper>\n        \n                <mat-step [stepControl]=\"formGeneralInformation\">\n                    <ng-template matStepLabel>\n                        <h3>Applicant</h3>\n                    </ng-template>\n        \n                    <form [formGroup]=\"formGeneralInformation\">\n                        <h1 class=\"full-width step-header\">Details of the applicant which could be an organisation or Individual that collects or processes Personal Data </h1>\n        \n                        <mat-form-field>\n                            <mat-label>Name of Organisation <span class=\"required-field\">required</span></mat-label>\n                            <input appUppercase matInput formControlName=\"OrganizationName\">       \n                            <mat-error *ngIf=\"formGeneralInformation.get('OrganizationName').invalid\">{{ getOrganizationNameErrorMessage() }}</mat-error>\n                        </mat-form-field>  \n        \n                        <div class=\"telephone-code-number-wrapper\">\n                            <mat-form-field class=\"fadeInUp _delay2ms\">\n                                <mat-label>Pick one </mat-label>\n                                <mat-select formControlName=\"PhoneNumberCode\">\n                                    <mat-option selected *ngIf=\"!selected\" value=\"256\">+256</mat-option>\n                                    <!-- <mat-option selected *ngIf=\"!selected\" value=\"256\">+256 - Uganda</mat-option> -->\n                                    <mat-option *ngFor=\"let code of countries\" [value]=\"code.PhoneCode\" (click)=\"selected = true\">\n                                        +{{ code.PhoneCode }}\n                                    </mat-option>\n                                </mat-select>\n                            </mat-form-field>\n        \n                            <!-- <mat-form-field class=\"fadeInUp _delay2ms\" [hintLabel]=\"'Organisation Telephone Number.'\"> -->\n                            <mat-form-field class=\"fadeInUp _delay2ms\">\n                                <mat-label>Organisation Telephone Number <span class=\"required-field\">required</span></mat-label>\n                                <input type=\"text\" maxlength=\"11\" matInput appTelephoneFormaterDirective formControlName=\"PhoneNumber\" placeholder=\"Ex. 414 318 111\">\n                                <mat-error *ngIf=\"formGeneralInformation.get('PhoneNumber').invalid\">{{ getTelephoneNumberErrorMessage() }}</mat-error>\n                            </mat-form-field> \n                        </div>                \n        \n                        <mat-form-field>\n                            <mat-label>Organisation Email Address <span class=\"required-field\">required</span></mat-label>\n                            <input appRemoveSpaces matInput formControlName=\"EmailAddress\">\n                            <mat-error *ngIf=\"formGeneralInformation.get('EmailAddress').invalid\">{{ getEmailAddressErrorMessage() }}</mat-error>\n                        </mat-form-field>   \n                                \n                        <mat-form-field [hintLabel]=\"'Choose all that apply'\">\n                            <mat-label>Category <span class=\"required-field\">required</span></mat-label>\n                            <mat-select multiple formControlName=\"DPPActCategory\">\n                                <mat-option *ngFor=\"let cat of organisationCategories\" [value]=\"cat.OrganisationCategoryId\">\n                                    {{ cat.OrganisationCategoryName }}\n                                </mat-option>\n                            </mat-select>   \n                            <mat-error *ngIf=\"formGeneralInformation.get('DPPActCategory').invalid\">{{ getSelectErrorMessage() }}</mat-error> \n                        </mat-form-field>                             \n        \n                        <mat-form-field>\n                            <mat-label>Type of Organisation <span class=\"required-field\">required</span></mat-label>\n                            <mat-select formControlName=\"OrganizationTypeID\" #typeOfOrganisation>\n                                <mat-option *ngFor=\"let type of organisationTypes\" (click)=\"OrganizationType = type.OrganisationType\" [value]=\"type.OrganisationTypeID\">\n                                    {{ type.OrganisationType }}\n                                </mat-option>\n                            </mat-select>\n                            <mat-error *ngIf=\"formGeneralInformation.get('OrganizationTypeID').invalid\">{{ getSelectErrorMessage() }}</mat-error> \n                        </mat-form-field>                   \n        \n                        <mat-form-field *ngIf=\"typeOfOrganisation.value && typeOfOrganisation.value !== 4\">\n                            <mat-label>Country of Incorporation <span class=\"required-field\">required</span></mat-label>\n                            <mat-select formControlName=\"CountryOfIncorporation\">\n                                <mat-option *ngFor=\"let country of countries\" (click)=\"CountryOfIncorporation = country.Name\" [value]=\"country.CountryID\">\n                                    {{ country.Name }}\n                                </mat-option>\n                            </mat-select>\n                            <mat-error *ngIf=\"formGeneralInformation.get('CountryOfIncorporation').invalid\">{{ getSelectErrorMessage() }}</mat-error> \n                        </mat-form-field>        \n        \n                        <mat-form-field *ngIf=\"typeOfOrganisation.value && typeOfOrganisation.value !== 4\">\n                            <mat-label>Registration Number <span class=\"required-field\">required</span></mat-label>\n                            <input appUppercase appRemoveSpaces matInput maxlength=\"25\" formControlName=\"URSBNumber\"> \n                            <mat-error *ngIf=\"formGeneralInformation.get('URSBNumber').invalid\">{{ getURSBNumberErrorMessage() }}</mat-error>\n                        </mat-form-field>     \n                        \n                        <mat-form-field>\n                            <mat-label>Sector <span class=\"required-field\">required</span></mat-label>\n                            <mat-select formControlName=\"SectorID\" #Sector>\n                                <mat-option *ngFor=\"let sector of sectors\" (click)=\"SectorName = sector.Sector\" [value]=\"sector.SectorID\">\n                                    {{ sector.Sector }}\n                                </mat-option>\n                            </mat-select>\n                            <mat-error *ngIf=\"formGeneralInformation.get('SectorID').invalid\">{{ getSelectErrorMessage() }}</mat-error>\n                        </mat-form-field>        \n                        \n                        <mat-form-field hintLabel=\"If Other, Please specify the Sector.\" *ngIf=\"Sector.value === 14\">\n                            <mat-label>Specify Sector <span class=\"required-field\">required</span></mat-label>\n                            <input appUppercase matInput maxlength=\"50\" formControlName=\"OtherSector\">    \n                            <mat-error *ngIf=\"formGeneralInformation.get('OtherSector').invalid\">{{ getOtherSectorErrorMessage() }}</mat-error>\n                        </mat-form-field>                 \n        \n                        <mat-form-field>\n                            <mat-label>Physical Address <span class=\"required-field\">required</span></mat-label>\n                            <input appUppercase matInput maxlength=\"255\" formControlName=\"Location\">            \n                            <mat-error *ngIf=\"formGeneralInformation.get('Location').invalid\">{{ getLocationErrorMessage() }}</mat-error>                \n                        </mat-form-field>  \n        \n                        <mat-form-field>\n                            <mat-label>Nature of Business Categories<span class=\"required-field\">required</span></mat-label>\n                            <mat-select formControlName=\"NatureOfBusinessCat\">\n                                <mat-option *ngFor=\"let cat of natureOfBusinessCat\" (click)=\"NatureOfBusinessCat = cat.NatureOfBusinessCategoryName\" [value]=\"cat.NatureOfBusinessCatId\">\n                                    {{ cat.NatureOfBusinessCategoryName }}\n                                </mat-option>\n                            </mat-select>    \n                            <mat-error *ngIf=\"formGeneralInformation.get('NatureOfBusinessCat').invalid\">{{ getSelectErrorMessage() }}</mat-error>\n                        </mat-form-field>                   \n        \n                        <mat-form-field [hintLabel]=\"'Choose all that apply'\">\n                            <mat-label>Nature of Business Sub-Categories <span class=\"required-field\">required</span></mat-label>\n                            <mat-select multiple formControlName=\"NatureOfBusinessSubCat\">\n                                <mat-option *ngFor=\"let sub of natureOfBusinessSubCat\" [value]=\"sub.NatureOfBusinessSubCatId\" [matTooltip]=\"sub.NatureOfBusinessSubCategoryName\">\n                                    {{ sub.NatureOfBusinessSubCategoryName }}\n                                </mat-option>\n                            </mat-select> \n                            <mat-error *ngIf=\"formGeneralInformation.get('NatureOfBusinessSubCat').invalid\">{{ getSelectErrorMessage() }}</mat-error>   \n                        </mat-form-field>      \n                        \n                        \n                                 \n                    </form>\n        \n                    <div class=\"button-wrapper\">\n                               \n        \n                        <button \n                            [disabled]=\"formGeneralInformation.invalid\"\n                            mat-button \n                            class=\"next-btn\" \n                            color=\"primary\" \n                            matStepperNext>\n                            Next\n                        </button>\n                    </div>             \n                </mat-step>\n        \n                <mat-step [stepControl]=\"formOrganisationDetails\">\n                    <ng-template matStepLabel>\n                        <h3>Data Protection <br />Officer</h3>\n                    </ng-template>\n        \n                    <form [formGroup]=\"formOrganisationDetails\">     \n        \n                        <h1 class=\"full-width step-header\">Details of Data Protection Officer </h1>    \n        \n                        <div class=\"grouped-items\" [ngClass]=\"{'full-width': formOrganisationDetails.get('DPORequired').value !== 'Yes'}\">\n                            <h3>Do you have a designated data protection officer ? </h3>\n            \n                            <mat-radio-group \n                                color=\"primary\" \n                                formControlName=\"DPORequired\" \n                                aria-label=\"Pick one\">\n                                <mat-radio-button value=\"Yes\">Yes</mat-radio-button>\n                                <mat-radio-button value=\"No\">No</mat-radio-button>\n                            </mat-radio-group>        \n                        </div>                  \n                        \n                        <mat-form-field *ngIf=\"formOrganisationDetails.get('DPORequired').value === 'Yes'\">\n                            <mat-label>Name <span class=\"required-field\">required</span></mat-label>\n                            <input formControlName=\"DPOName\" matInput>\n                            <mat-error *ngIf=\"formOrganisationDetails.get('DPOName').invalid\">{{ getDPONameErrorMessage() }}</mat-error>\n                        </mat-form-field>\n                \n                        <mat-form-field *ngIf=\"formOrganisationDetails.get('DPORequired').value === 'Yes'\">\n                            <mat-label>Physical Address <span class=\"required-field\">required</span></mat-label>\n                            <input formControlName=\"DPOPhysicalAddress\" maxlength=\"255\" matInput>\n                            <mat-error *ngIf=\"formOrganisationDetails.get('DPOPhysicalAddress').invalid\">{{ getDPOPhysicalAddressErrorMessage() }}</mat-error>\n                        </mat-form-field>\n                        \n                        <div class=\"telephone-code-number-wrapper\" *ngIf=\"formOrganisationDetails.get('DPORequired').value === 'Yes'\">\n                            <mat-form-field class=\"fadeInUp _delay2ms\">\n                                <mat-label>Pick one </mat-label>\n                                <mat-select formControlName=\"PhoneNumberCode\">\n                                    <mat-option selected *ngIf=\"!DPOSelected\" value=\"256\">+256</mat-option>\n                                    <!-- <mat-option selected *ngIf=\"!selected\" value=\"256\">+256 - Uganda</mat-option> -->\n                                    <mat-option *ngFor=\"let code of countries\" [value]=\"code.PhoneCode\" (click)=\"DPOSelected = true\">\n                                        +{{ code.PhoneCode }}\n                                    </mat-option>\n                                </mat-select>\n                                <!-- <mat-error *ngIf=\"formGeneralInformation.get('PhoneNumberCode').invalid\">{{ getSelectInputErrorMessage() }}</mat-error>      -->\n                            </mat-form-field>\n        \n                            <!-- <mat-form-field class=\"fadeInUp _delay2ms\" [hintLabel]=\"'Organisation Telephone Number.'\"> -->\n                            <mat-form-field class=\"fadeInUp _delay2ms\">\n                                <mat-label>Telephone Number <span class=\"required-field\">required</span></mat-label>\n                                <input type=\"text\" maxlength=\"11\" matInput appTelephoneFormaterDirective formControlName=\"DPOPhoneNumber\" placeholder=\"Ex. 414 318 111\">\n                                <mat-error *ngIf=\"formOrganisationDetails.get('DPOPhoneNumber').invalid\">{{ getDPOPhoneNumberErrorMessage() }}</mat-error>\n                            </mat-form-field> \n                        </div>                  \n                \n                        <mat-form-field *ngIf=\"formOrganisationDetails.get('DPORequired').value === 'Yes'\">\n                            <mat-label>Email Address <span class=\"required-field\">required</span></mat-label>\n                            <input appRemoveSpaces formControlName=\"DPOEmailAddress\" matInput>\n                            <mat-error *ngIf=\"formOrganisationDetails.get('DPOEmailAddress').invalid\">{{ getDPOEmailAddressErrorMessage() }}</mat-error>\n                        </mat-form-field>       \n        \n                        <mat-form-field *ngIf=\"formOrganisationDetails.get('DPORequired').value === 'Yes'\" class=\"full-width\" hintLabel=\"Any other title held apart from DPO (Data Protection Officer).\">\n                            <mat-label>Title Held <span class=\"required-field\">required</span></mat-label>\n                            <textarea #PositionInput matInput formControlName=\"DPOPositionInOrganisation\" maxlength=\"1000\"></textarea>\n                            <mat-hint align=\"end\">{{ PositionInput.value.length }} / 1000</mat-hint>\n                            <mat-error *ngIf=\"formOrganisationDetails.get('DPOPositionInOrganisation').invalid\">{{ getDPOPositionInOrganisationErrorMessage() }}</mat-error>\n                        </mat-form-field>                  \n                    </form>\n        \n                    <div class=\"button-wrapper\">       \n                        <button mat-button class=\"back-btn\" matStepperPrevious>Back</button>   \n                        \n                        \n\n                        <button \n                            [disabled]=\"formOrganisationDetails.invalid\"\n                            mat-button \n                            class=\"next-btn\" \n                            color=\"primary\" \n                            matStepperNext>\n                            Next\n                        </button>\n                    </div>             \n                </mat-step>\n        \n                <mat-step [stepControl]=\"formPersonalDataHeld\">\n                    <ng-template matStepLabel>\n                        <h3>Data Collected <br /> or Processed</h3>\n                    </ng-template>\n        \n                    <form [formGroup]=\"formPersonalDataHeld\" class=\"personal-data-affected\">       \n                        \n                        <h1 class=\"full-width step-header\">Description of Data collected or processed </h1>\n        \n                        <mat-form-field hintLabel=\"Choose all that apply.\" class=\"full-width\">\n                            <mat-label>Source of Data <span class=\"required-field\">required</span></mat-label>\n                            <mat-select multiple formControlName=\"SourceOfDataID\">\n                                <mat-option *ngFor=\"let source of dataSources\" [value]=\"source.DataSourceID\">\n                                    {{ source.DataSource }}\n                                </mat-option>\n                            </mat-select>    \n                            <mat-error *ngIf=\"formPersonalDataHeld.get('SourceOfDataID').invalid\">{{ getSelectErrorMessage() }}</mat-error> \n                        </mat-form-field>        \n        \n                        <h1 class=\"full-width heading\">Personal Data Collected Or Processed</h1>\n                        \n                        <section *ngFor=\"let category of dataCategories; let i = index\" class=\"expand-section categories\">        \n                            <div>\n                                <h3 [innerHTML]=\"category.DataCategory\"></h3>\n                                <mat-icon matTooltipPosition=\"right\"  [matTooltip]=\"category.DataDescription\">info</mat-icon>\n                            </div>\n\n                            <mat-checkbox\n                                *ngFor=\"let SubCategory of category.SubCategories\" \n                                [ngClass]=\"{'full-width': category.SubCategories.length === 1}\"\n                                color=\"primary\"\n                                [checked]=\"SubCategory.IsChecked\"\n                                (change)=\"onChangeSubCategory($event,SubCategory)\"\n                                [required]=\"'false'\">\n                                {{ SubCategory.DataSubCategory }}\n                            </mat-checkbox>    \n                        </section>\n                    </form>\n        \n                    <div class=\"button-wrapper\">       \n                        <button mat-button class=\"back-btn\" matStepperPrevious>Back</button>\n        \n                     \n\n                        <button \n                            [disabled]=\"formPersonalDataHeld.invalid || selectedDataSubCategory.length === 0\"\n                            mat-button \n                            class=\"next-btn\" \n                            color=\"primary\" \n                            matStepperNext>\n                            Next\n                        </button>\n                    </div>             \n                </mat-step>\n\n\n                <mat-step [stepControl]=\"formChildrenData\">\n                    <ng-template matStepLabel>\n                        <h3>Children's Data</h3>\n                    </ng-template>\n\n                    <form [formGroup]=\"formChildrenData\">\n                        \n                        <div class=\"grouped-items\">\n                            <h3>Do you collect personal data relating to Children?<span class=\"required-field\">required</span></h3>\n            \n                            <mat-radio-group color=\"primary\" aria-label=\"Pick one\" formControlName=\"CollectChildrenData\" (change)=\"updateCollecthildrenData($event)\">\n                                <mat-radio-button value=\"Yes\">Yes</mat-radio-button>\n                                <mat-radio-button value=\"No\">No</mat-radio-button>\n                            </mat-radio-group>        \n                        </div>  \n        \n                        <mat-form-field *ngIf=\"showChildrenDataFields == true\">\n                            <mat-label>Reason / Purpose for collecting children's data<span class=\"required-field\">required</span> </mat-label>\n                        \n                            <mat-select multiple formControlName=\"PurposeForCollection\">\n                                <mat-option *ngFor=\"let child of childDataPurposes\" [value]=\"child.ChildDataID\">\n                                    {{ child.ChildDataPurpose }}\n                                </mat-option>\n                            </mat-select>  \n                        </mat-form-field>                  \n                        \n                                    \n        \n                    </form>\n\n                    <div class=\"button-wrapper\">       \n                        <button mat-button class=\"back-btn\" matStepperPrevious>Back</button>\n\n                        <button \n                            [disabled]=\"formChildrenData.invalid\"\n                            mat-button \n                            class=\"next-btn\" \n                            color=\"primary\" \n                            matStepperNext>\n                            Next\n                        </button>\n                    </div>          \n\n                </mat-step>\n        \n                <mat-step [stepControl]=\"formPurposeRetention\">\n                    <ng-template matStepLabel>\n                        <h3>Purpose & Retention</h3>\n                    </ng-template>\n        \n                    <form [formGroup]=\"formPurposeRetention\">       \n                        \n                        <h1 class=\"full-width step-header\">Description of Purpose for which data is collected or processed </h1>\n        \n                        <mat-form-field hintLabel=\"Why do you collect personal Data?\">\n                            <mat-label>For What Purpose ?<span class=\"required-field\">required</span></mat-label>\n                            <mat-select formControlName=\"Purpose\" multiple>\n                                <mat-option *ngFor=\"let purpose of dataPurposes\" [value]=\"purpose.DataPurposeID\">\n                                    {{ purpose.DataPurpose }}\n                                </mat-option>\n                            </mat-select>  \n                            <mat-error *ngIf=\"formPurposeRetention.get('Purpose').invalid\">{{ getSelectErrorMessage() }}</mat-error>   \n                        </mat-form-field>\n        \n                        <mat-form-field hintLabel=\"If the purpose is Collection / Processing is required by Law.\" *ngIf=\"SpecifyTheLaw\">\n                            <mat-label>Specify the Law <span class=\"required-field\">required</span></mat-label>\n                            <input matInput #SpecifyTheLawInput maxlength=\"1000\" formControlName=\"SpecifyTheLaw\">        \n                            <mat-hint align=\"end\">{{ SpecifyTheLawInput.value.length }} / 1000</mat-hint>    \n                            <mat-error *ngIf=\"formPurposeRetention.get('SpecifyTheLaw').invalid\">{{ getRequiredErrorMessage() }}</mat-error>\n                        </mat-form-field>  \n        \n                        <mat-form-field hintLabel=\"If the purpose is to provide services / products to Individuals.\" *ngIf=\"ServiceOrProductProvided\">\n                            <mat-label>Specify the Service / Product Provided<span class=\"required-field\">required</span></mat-label>\n                            <input matInput #ServiceOrProductProvidedInput maxlength=\"1000\" formControlName=\"ServiceOrProductProvided\">     \n                            <mat-hint align=\"end\">{{ ServiceOrProductProvidedInput.value.length }} / 1000</mat-hint>    \n                            <mat-error *ngIf=\"formPurposeRetention.get('ServiceOrProductProvided').invalid\">{{ getRequiredErrorMessage() }}</mat-error>\n                        </mat-form-field>  \n        \n                        <mat-form-field hintLabel=\"If the purpose is for Compliance with a Legal Obligation.\" *ngIf=\"SpecifyLegalObligation\">\n                            <mat-label>Specify the Legal Obligation<span class=\"required-field\">required</span></mat-label>\n                            <input matInput #SpecifyLegalObligationInput maxlength=\"1000\" formControlName=\"SpecifyLegalObligation\">  \n                            <mat-hint align=\"end\">{{ SpecifyLegalObligationInput.value.length }} / 1000</mat-hint>    \n                            <mat-error *ngIf=\"formPurposeRetention.get('SpecifyLegalObligation').invalid\">{{ getRequiredErrorMessage() }}</mat-error>\n                        </mat-form-field>  \n                        \n                        <mat-form-field hintLabel=\"Approximate number of Personal Data Records held.\">\n                            <mat-label>Total Records <span class=\"optional-field\">optional</span></mat-label>\n                            <input appCurrencyDirective matInput maxlength=\"14\" formControlName=\"TotalRecordsAtRegistration\">                            \n                            <mat-error *ngIf=\"formPurposeRetention.get('TotalRecordsAtRegistration').invalid\">{{ getPatternErrorMessage() }}</mat-error>\n                        </mat-form-field>  \n                        \n                        <mat-form-field hintLabel=\"The % annual growth of Personal Records held\">\n                            <mat-label>Percentage Annual Growth <span class=\"optional-field\">optional</span></mat-label>\n                            <input appCurrencyDirective matInput max=\"100\" maxlength=\"3\" formControlName=\"RecordPercentageGrowth\">                            \n                            <mat-error *ngIf=\"formPurposeRetention.get('RecordPercentageGrowth').invalid\">{{ getRecordPercentageGrowthErrorMessage() }}</mat-error>\n                            <mat-hint align=\"end\">Max. 100%</mat-hint>      \n                            <span matSuffix>%</span>\n                        </mat-form-field>   \n        \n                        <mat-form-field hintLabel=\"Duration for which personal data shall be kept (Years).\">\n                            <mat-label>Retention period <span class=\"required-field\">required</span></mat-label>\n                            <input appCurrencyDirective max=\"100\" matInput maxlength=\"3\" formControlName=\"RetentionPeriod\">                          \n                            <mat-error *ngIf=\"formPurposeRetention.get('RetentionPeriod').invalid\">{{ getRetentionPeriodErrorMessage() }}</mat-error>\n                            <mat-hint align=\"end\">Max. 100 years</mat-hint>      \n                            <span matSuffix>Year(s)</span>\n                        </mat-form-field>\n                    </form>\n        \n                    <div class=\"button-wrapper\">       \n                        <button mat-button class=\"back-btn\" matStepperPrevious>Back</button>\n        \n                      \n\n                        <button \n                            [disabled]=\"formPurposeRetention.invalid\"\n                            mat-button \n                            class=\"next-btn\" \n                            color=\"primary\" \n                            matStepperNext>\n                            Next\n                        </button>\n                    </div>             \n                </mat-step>\n        \n                <mat-step [stepControl]=\"formThirdParties\">\n                    <ng-template matStepLabel>\n                        <h3>Disclosure & Transfer</h3>\n                    </ng-template>\n        \n                    <form [formGroup]=\"formThirdParties\">\n        \n                        <h1 class=\"full-width step-header\">List of persons or Bodies to whom personal data may be disclosed</h1>\n                        \n                        <div class=\"grouped-items full-width\">\n                            <h3>Do you disclose Personal Data to other Persons or Bodies ?</h3>\n            \n                            <mat-radio-group color=\"primary\" aria-label=\"Pick one\" formControlName=\"PersonalDataIsForDisclosure\">\n                                <mat-radio-button value=\"Yes\">Yes</mat-radio-button>\n                                <mat-radio-button value=\"No\">No</mat-radio-button>\n                            </mat-radio-group>        \n                        </div>    \n\n                        <section \n                            *ngIf=\"formThirdParties.get('PersonalDataIsForDisclosure').value === 'Yes'\"\n                            class=\"expand-section reduced-properties table-wrapper fadeInUp _delay3ms\">\n                            <button \n                                mat-button\n                                color=\"primary\"\n                                [disabled]=\"processing\"\n                                class=\"add-item-button\"\n                                (click)=\"onAddAThirdParty()\">\n                                <div class=\"button-label\">\n                                    <mat-icon>add</mat-icon>                            \n                                    <span>Add Person / Body</span>\n                                </div>\n                            </button>\n                            \n                            <div class=\"table-wrapper\">\n                                <table \n                                    mat-table \n                                    #thirdPartyMatSort=\"matSort\"\n                                    matSortDisableClear=\"true\"\n                                    [dataSource]=\"thirdPartyDataSource\"\n                                    matSort>\n                    \n                                    <ng-container matColumnDef=\"Count\">\n                                        <th mat-header-cell *matHeaderCellDef> # </th>\n                                        <td mat-cell *matCellDef=\"let index = index\"> {{ index + 1 }} </td>\n                                    </ng-container>\n                    \n                                    <ng-container matColumnDef=\"NameOfThirdParty\">\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Person / Body </th>\n                                        <td mat-cell *matCellDef=\"let row\">{{ row.ThirdPartyName }}</td>\n                                    </ng-container>          \n                    \n                                    <ng-container matColumnDef=\"Purpose\">\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Purpose </th>\n                                        <td mat-cell *matCellDef=\"let row\">{{ row.Purpose }}</td>\n                                    </ng-container>                                 \n                    \n                                    <!-- Actions Column -->\n                                    <ng-container matColumnDef=\"Actions\">\n                                        <th mat-header-cell *matHeaderCellDef> Actions </th>\n                                        <td mat-cell *matCellDef=\"let row; let index = index\">\n                                            <button \n                                                mat-button \n                                                class=\"action-btn\"\n                                                [matMenuTriggerFor]=\"menu\" \n                                                (click)=\"$event.stopPropagation()\"\n                                                matTooltip=\"See more options\">\n                                                <mat-icon>more_vert</mat-icon>\n                                            </button>\n                    \n                                            <mat-menu yPosition=\"below\" #menu=\"matMenu\" class=\"more-options-mat-menu\">\n                    \n                                                <button \n                                                    mat-menu-item \n                                                    (click)=\"$event.stopPropagation();onEditThirdParty(row)\">\n                                                    <mat-icon>edit</mat-icon>\n                                                    <span>Make Changes</span>\n                                                </button>\n                                                      \n                                                <hr />\n                    \n                                                <button \n                                                    mat-menu-item \n                                                    (click)=\"$event.stopPropagation();onRemoveThirdParty(row)\">\n                                                    <mat-icon color=\"warn\">delete</mat-icon>\n                                                    <span>Remove</span>\n                                                </button>\n                    \n                                            </mat-menu>                                                  \n                                        </td>\n                                    </ng-container>\n                    \n                                    <tr mat-header-row *matHeaderRowDef=\"thirdPartyDisplayedColumns\"></tr>\n                                    <tr mat-row *matRowDef=\"let row; columns: thirdPartyDisplayedColumns;\" class=\"mat-data-row\"></tr>\n                                </table>\n        \n                                <mat-paginator \n                                    #thirdPartyPaginator\n                                    [pageSize]=\"10\"\n                                    [pageSizeOptions]=\"[5, 10]\">\n                                </mat-paginator>                    \n                            </div>                \n                        </section>    \n                        \n                        <hr class=\"full-width\" />\n        \n                        <div class=\"grouped-items full-width\">\n                            <h3>Do you Transfer personal data outside Uganda ?</h3>\n            \n                            <mat-radio-group color=\"primary\" aria-label=\"Pick one\" formControlName=\"StoreDataOutsideCountry\">\n                                <mat-radio-button value=\"Yes\">Yes</mat-radio-button>\n                                <mat-radio-button value=\"No\">No</mat-radio-button>\n                            </mat-radio-group>        \n                        </div> \n        \n                        <section \n                            *ngIf=\"formThirdParties.get('StoreDataOutsideCountry').value === 'Yes'\"\n                            class=\"expand-section reduced-properties table-wrapper\">\n                            <button \n                                mat-button\n                                color=\"primary\"\n                                [disabled]=\"processing\"\n                                class=\"add-item-button\"\n                                (click)=\"onAddACountry()\">\n                                <div class=\"button-label\">\n                                    <mat-icon>add</mat-icon>                            \n                                    <span>Add A Country</span>\n                                </div>\n                            </button>\n                            \n                            <div class=\"table-wrapper\">\n                                <table \n                                    mat-table \n                                    #countryOfTransferMatSort=\"matSort\"\n                                    matSortDisableClear=\"true\"\n                                    [dataSource]=\"countriesDataSource\"\n                                    matSort>\n                    \n                                    <ng-container matColumnDef=\"Count\">\n                                        <th mat-header-cell *matHeaderCellDef> # </th>\n                                        <td mat-cell *matCellDef=\"let index = index\"> {{ index + 1 }} </td>\n                                    </ng-container>\n                    \n                                    <ng-container matColumnDef=\"Country\">\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Country </th>\n                                        <td mat-cell *matCellDef=\"let row\">{{ row.Country }}</td>\n                                    </ng-container>          \n                    \n                                    <ng-container matColumnDef=\"Purpose\">\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Purpose </th>\n                                        <td mat-cell *matCellDef=\"let row\">{{ row.Purpose }}</td>\n                                    </ng-container>                                 \n                    \n                                    <ng-container matColumnDef=\"Description\">\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Description </th>\n                                        <td mat-cell *matCellDef=\"let row\">{{ row.Description }}</td>\n                                    </ng-container>                                 \n                    \n                                    <!-- Actions Column -->\n                                    <ng-container matColumnDef=\"Actions\">\n                                        <th mat-header-cell *matHeaderCellDef> Actions </th>\n                                        <td mat-cell *matCellDef=\"let row; let index = index\">\n                                            <button \n                                                mat-button \n                                                class=\"action-btn\"\n                                                [matMenuTriggerFor]=\"menu\" \n                                                (click)=\"$event.stopPropagation()\"\n                                                matTooltip=\"See more options\">\n                                                <mat-icon>more_vert</mat-icon>\n                                            </button>\n                    \n                                            <mat-menu yPosition=\"below\" #menu=\"matMenu\" class=\"more-options-mat-menu\">\n                    \n                                                <button \n                                                    mat-menu-item \n                                                    (click)=\"$event.stopPropagation();onEditCountry(row)\">\n                                                    <mat-icon>edit</mat-icon>\n                                                    <span>Make Changes</span>\n                                                </button>\n                                                      \n                                                <hr />\n                    \n                                                <button \n                                                    mat-menu-item \n                                                    (click)=\"$event.stopPropagation();onRemoveCountry(row)\">\n                                                    <mat-icon color=\"warn\">delete</mat-icon>\n                                                    <span>Remove</span>\n                                                </button>\n                    \n                                            </mat-menu>                                                  \n                                        </td>\n                                    </ng-container>\n                    \n                                    <tr mat-header-row *matHeaderRowDef=\"countryDisplayedColumns\"></tr>\n                                    <tr mat-row *matRowDef=\"let row; columns: countryDisplayedColumns;\" class=\"mat-data-row\"></tr>\n                                </table>\n        \n                                <mat-paginator \n                                    #countryOfTransferPaginator\n                                    [pageSize]=\"10\"\n                                    [pageSizeOptions]=\"[5, 10]\">\n                                </mat-paginator>                    \n                            </div>                \n                        </section>                   \n        \n                    </form>\n        \n                    <div class=\"button-wrapper\">\n                        <button mat-button class=\"back-btn\" matStepperPrevious>Back</button>\n                        \n                  \n\n                        <button \n                            mat-button \n                            [disabled]=\"formThirdParties.invalid \n                            || processing \n                            || ((formThirdParties.get('PersonalDataIsForDisclosure').value === 'Yes') && (thirdParties.length === 0)) \n                            || ((formThirdParties.get('StoreDataOutsideCountry').value === 'Yes') && (countries.length === 0))\" \n                            class=\"next-btn\" \n                            color=\"primary\" \n                            matStepperNext>\n                            Next\n                        </button>\n                    </div>\n                </mat-step>\n        \n                <mat-step [stepControl]=\"formSecurityMeasures\">\n                    <ng-template matStepLabel>\n                        <h3>Security Information</h3>\n                    </ng-template>\n        \n                    <form [formGroup]=\"formSecurityMeasures\">\n        \n                        <h1 class=\"full-width step-header\">State security measures in place to safeguard personal data collected or processed.</h1>\n        \n                        <section class=\"expand-section reduced-properties table-wrapper no-padding\">\n                            <button \n                                mat-button\n                                color=\"primary\"\n                                [disabled]=\"processing\"\n                                class=\"add-item-button\"\n                                (click)=\"onAddSecurityMeasure()\">\n                                <div class=\"button-label\">\n                                    <mat-icon>add</mat-icon>                            \n                                    <span>Add A Security Measure</span>\n                                </div>\n                            </button>\n                            \n                            <div class=\"table-wrapper\">\n                                <table \n                                    mat-table \n                                    #securityMeasureMatSort=\"matSort\"\n                                    matSortDisableClear=\"true\"\n                                    [dataSource]=\"securityMeasureDataSource\"\n                                    matSort>\n                    \n                                    <ng-container matColumnDef=\"Count\">\n                                        <th mat-header-cell *matHeaderCellDef> # </th>\n                                        <td mat-cell *matCellDef=\"let index = index\"> {{ index + 1 }} </td>\n                                    </ng-container>\n                    \n                                    <ng-container matColumnDef=\"SecurityMeasure\">\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Security Measure </th>\n                                        <td mat-cell *matCellDef=\"let row\">{{ row.SecurityMeasure }}</td>\n                                    </ng-container>                                  \n                    \n                                    <!-- Actions Column -->\n                                    <ng-container matColumnDef=\"Actions\">\n                                        <th mat-header-cell *matHeaderCellDef> Actions </th>\n                                        <td mat-cell *matCellDef=\"let row; let index = index\">\n                                            <button \n                                                mat-button \n                                                class=\"action-btn\"\n                                                [matMenuTriggerFor]=\"menu\" \n                                                (click)=\"$event.stopPropagation()\"\n                                                matTooltip=\"See more options\">\n                                                <mat-icon>more_vert</mat-icon>\n                                            </button>\n                    \n                                            <mat-menu yPosition=\"below\" #menu=\"matMenu\" class=\"more-options-mat-menu\">\n                \n                                                <button \n                                                    mat-menu-item \n                                                    (click)=\"$event.stopPropagation();onEditSecurityMeasure(row)\">\n                                                    <mat-icon>edit</mat-icon>\n                                                    <span>Make Changes</span>\n                                                </button>\n                                                      \n                                                <hr />\n                    \n                                                <button \n                                                    mat-menu-item \n                                                    (click)=\"$event.stopPropagation();onRemoveSecurityMeasure(row)\">\n                                                    <mat-icon color=\"warn\">delete</mat-icon>\n                                                    <span>Remove</span>\n                                                </button>                                        \n                    \n                                            </mat-menu>                                                  \n                                        </td>\n                                    </ng-container>\n                    \n                                    <tr mat-header-row *matHeaderRowDef=\"securityMeasuresDisplayedColumns\"></tr>\n                                    <tr mat-row *matRowDef=\"let row; columns: securityMeasuresDisplayedColumns;\" [ngClass]=\"{'selected-mat-data-row': selectedSpouse === row}\" class=\"mat-data-row\"></tr>\n                                </table>\n        \n                                <mat-paginator \n                                    #securityMeasurePaginator\n                                    [pageSize]=\"10\"\n                                    [pageSizeOptions]=\"[5, 10]\">\n                                </mat-paginator>                    \n                            </div>                \n                        </section>    \n                        \n                        <section class=\"expand-section reduced-properties table-wrapper margin documents\">\n                            <h1 class=\"full-width step-header\">Attach supporting documentation eg approved information security policy.</h1>\n        \n                            <div class=\"buttons\">\n                                <button \n                                    mat-button\n                                    color=\"primary\"\n                                    [disabled]=\"processing\"\n                                    class=\"add-item-button\"\n                                    (click)=\"onUploadAttachments()\">\n                                    <div class=\"button-label\">\n                                        <mat-icon>add</mat-icon>                            \n                                        <span> {{ document ? 'Replace Document' : 'Upload Attachment' }} </span>\n                                    </div>\n                                </button>\n            \n                                <button \n                                    mat-button\n                                    *ngIf=\"document\"\n                                    color=\"primary\"\n                                    [disabled]=\"processing\"\n                                    class=\"remove-button\"\n                                    (click)=\"onRemoveDocument()\">\n                                    <div class=\"button-label\">\n                                        <mat-icon>clear</mat-icon>\n                                        <span> Remove Document </span>\n                                    </div>\n                                </button>\n                            </div>\n        \n                            <div *ngIf=\"document\" class=\"uploaded-document\" matTooltip=\"Open Document\" (click)=\"onReadDocument(document)\">\n                                <img src=\"./assets/img/pdf.png\" alt=\"\">\n        \n                                <span>Document: {{ document.Name }} <span>  -  {{ document.Size }} Mbs</span></span>\n                            </div>\n        \n                        </section>\n        \n                        <hr class=\"full-width\" />\n        \n                        <section class=\"expand-section reduced-properties table-wrapper margin documents\">\n                            <h1 class=\"full-width step-header\">Attach Form 3</h1>\n        \n                            <div class=\"buttons\">        \n                                <!-- <button\n                                    mat-button\n                                    color=\"accent\"\n                                    class=\"download-form\"                           \n                                    (click)=\"onDownloadForm3()\">\n                                    <div class=\"button-label\">\n                                        <mat-icon>sim_card_download</mat-icon>                            \n                                        <span>Download Form 3</span>\n                                    </div>                        \n                                </button> -->\n        \n                                <button \n                                    mat-button\n                                    color=\"primary\"\n                                    [disabled]=\"processing\"\n                                    class=\"add-item-button\"\n                                    (click)=\"onUploadForm3Attachments()\">\n                                    <div class=\"button-label\">\n                                        <mat-icon>add</mat-icon>                            \n                                        <span> {{ documentForm3 ? 'Replace Form 3' : 'Replace Form 3' }} </span>\n                                    </div>\n                                </button>\n            \n                                <button \n                                    mat-button\n                                    *ngIf=\"documentForm3\"\n                                    color=\"primary\"\n                                    [disabled]=\"processing\"\n                                    class=\"remove-button\"\n                                    (click)=\"onRemoveForm3Document()\">\n                                    <div class=\"button-label\">\n                                        <mat-icon>clear</mat-icon>\n                                        <span> Remove Document </span>\n                                    </div>\n                                </button>\n                            </div>\n        \n                            <div *ngIf=\"documentForm3\" class=\"uploaded-document\" matTooltip=\"Open Document\" (click)=\"onReadDocument(documentForm3)\">\n                                <img src=\"./assets/img/pdf.png\" alt=\"\">\n        \n                                <span>Document: {{ documentForm3.Name }} <span>  -  {{ documentForm3.Size }} Mbs</span> </span>\n                            </div>\n        \n                        </section>\n\n                        <section class=\"expand-section reduced-properties table-wrapper margin documents\">\n                            <h1 class=\"full-width step-header\">Attach Proof of Payment</h1>\n        \n                            <div class=\"buttons\">\n                                <button \n                                    mat-button\n                                    color=\"primary\"\n                                    [disabled]=\"processing\"\n                                    class=\"add-item-button\"\n                                    (click)=\"onUploadProofOfPayment()\">\n                                    <div class=\"button-label\">\n                                        <mat-icon>add</mat-icon>                            \n                                        <span> {{ proofOfPayment ? 'Replace Document' : 'Upload Proof of Payment' }} </span>\n                                    </div>\n                                </button>\n            \n                                <button \n                                    mat-button\n                                    *ngIf=\"proofOfPayment\"\n                                    color=\"primary\"\n                                    [disabled]=\"processing\"\n                                    class=\"remove-button\"\n                                    (click)=\"onRemoveProofOfPaymen()\">\n                                    <div class=\"button-label\">\n                                        <mat-icon>clear</mat-icon>\n                                        <span> Remove Document </span>\n                                    </div>\n                                </button>\n                            </div>\n        \n                            <div *ngIf=\"proofOfPayment\" class=\"uploaded-document\" matTooltip=\"Open Document\" (click)=\"onReadDocument(proofOfPayment)\">\n                                <img src=\"./assets/img/pdf.png\" alt=\"\">\n        \n                                <span>Document: {{ proofOfPayment.Name }} <span>  -  {{ proofOfPayment.Size }} Mbs</span> </span>\n                            </div>\n        \n                        </section>\n        \n                        <hr class=\"full-width\" />\n        \n                      \n        \n                        <hr class=\"full-width\" />\n        \n                        <mat-checkbox\n                            class=\"full-width\"\n                            formControlName=\"RegistrationConsent\"\n                            color=\"primary\">\n                            I certify that the above information is correct and complete and here by apply to be registered as \n                            data collector/ data processor / data controller (This shall be based on th category selected) \n                            under the data Protection and Privacy Act.\n                            <mat-error *ngIf=\"formSecurityMeasures.get('RegistrationConsent').invalid\">{{ getCheckboxErrorMessage() }}</mat-error>   \n                        </mat-checkbox>       \n                        \n                        <mat-form-field class=\"full-width\" hintLabel=\"The person authorized to complete and submit this application on the behalf of the applicant organization\">\n                            <mat-label>Name and title of person submitting the application<span class=\"required-field\">required</span></mat-label>\n                            <input appUppercase #RegistrationDoneByInput matInput maxlength=\"50\" formControlName=\"RegistrationDoneBy\">  \n                            <mat-error *ngIf=\"formSecurityMeasures.get('RegistrationDoneBy').invalid\">{{ getRegistrationDoneByErrorMessage() }}</mat-error>                             \n                            <mat-hint align=\"end\">{{ RegistrationDoneByInput.value.length }} / 50</mat-hint>    \n                        </mat-form-field>                  \n        \n                    </form>\n        \n                    <div class=\"button-wrapper\">\n                        <button mat-button class=\"back-btn\" matStepperPrevious>Back</button>\n\n                                     \n\n                        <div class=\"buttons\">\n                            <button\n                                mat-button\n                                color=\"primary\" \n                                [disabled]=\"formGeneralInformation.invalid || formOrganisationDetails.invalid || formPersonalDataHeld.invalid || formPurposeRetention.invalid || formThirdParties.invalid || formSecurityMeasures.invalid || processing || securityMeasures.length === 0 || !documentForm3 || !proofOfPayment\" \n                                class=\"download\" \n                                matTooltip=\"Keep a copy of the information you have filled in\"\n                                (click)=\"onPreviewForm(true)\">\n                                <div class=\"button-label\">\n                                    <mat-icon>sim_card_download</mat-icon>\n                                    <span>Download</span>\n                                </div>\n                            </button>\n        \n                            <button\n                                mat-button\n                                color=\"primary\" \n                                [disabled]=\"formGeneralInformation.invalid || formOrganisationDetails.invalid || formPersonalDataHeld.invalid || formPurposeRetention.invalid || formThirdParties.invalid || formSecurityMeasures.invalid || processing || securityMeasures.length === 0 || !documentForm3 || !proofOfPayment\" \n                                class=\"preview\" \n                                matTooltip=\"Have a look at all the information you have filled in before sending.\"\n                                (click)=\"onPreviewForm(false)\">\n                                <div class=\"button-label\">\n                                    <mat-icon>visibility</mat-icon>\n                                    <span>Preview</span>\n                                </div>\n                            </button>\n        \n                        \n                            <button \n                                mat-button \n                                class=\"next-btn submit-btn\" \n                                [disabled]=\"formGeneralInformation.invalid || formOrganisationDetails.invalid || formPersonalDataHeld.invalid || formPurposeRetention.invalid || formThirdParties.invalid || formSecurityMeasures.invalid || processing || securityMeasures.length === 0 || !documentForm3 || !proofOfPayment\" \n                                [ngClass]=\"{'inline-processing-btn': processing}\" \n                                color=\"primary\" \n                                (click)=\"onSubmit()\">\n                                <app-inline-mat-spinner *ngIf=\"processing\"></app-inline-mat-spinner>                  \n                                <span>Submit Application</span>                    \n                            </button>                \n                        </div>\n                    </div>\n                </mat-step>\n        \n            </mat-horizontal-stepper>   \n        </main>\n    </fury-page-layout-content>\n</fury-page-layout>\n\n\n","/**\n * Check if QR Code version is valid\n *\n * @param  {Number}  version QR Code version\n * @return {Boolean}         true if valid version, false otherwise\n */\nexports.isValid = function isValid (version) {\n  return !isNaN(version) && version >= 1 && version <= 40\n}\n","var Buffer = require('../utils/buffer')\nvar GF = require('./galois-field')\n\n/**\n * Multiplies two polynomials inside Galois Field\n *\n * @param  {Buffer} p1 Polynomial\n * @param  {Buffer} p2 Polynomial\n * @return {Buffer}    Product of p1 and p2\n */\nexports.mul = function mul (p1, p2) {\n  var coeff = new Buffer(p1.length + p2.length - 1)\n  coeff.fill(0)\n\n  for (var i = 0; i < p1.length; i++) {\n    for (var j = 0; j < p2.length; j++) {\n      coeff[i + j] ^= GF.mul(p1[i], p2[j])\n    }\n  }\n\n  return coeff\n}\n\n/**\n * Calculate the remainder of polynomials division\n *\n * @param  {Buffer} divident Polynomial\n * @param  {Buffer} divisor  Polynomial\n * @return {Buffer}          Remainder\n */\nexports.mod = function mod (divident, divisor) {\n  var result = new Buffer(divident)\n\n  while ((result.length - divisor.length) >= 0) {\n    var coeff = result[0]\n\n    for (var i = 0; i < divisor.length; i++) {\n      result[i] ^= GF.mul(divisor[i], coeff)\n    }\n\n    // remove all zeros from buffer head\n    var offset = 0\n    while (offset < result.length && result[offset] === 0) offset++\n    result = result.slice(offset)\n  }\n\n  return result\n}\n\n/**\n * Generate an irreducible generator polynomial of specified degree\n * (used by Reed-Solomon encoder)\n *\n * @param  {Number} degree Degree of the generator polynomial\n * @return {Buffer}        Buffer containing polynomial coefficients\n */\nexports.generateECPolynomial = function generateECPolynomial (degree) {\n  var poly = new Buffer([1])\n  for (var i = 0; i < degree; i++) {\n    poly = exports.mul(poly, [1, GF.exp(i)])\n  }\n\n  return poly\n}\n","var Mode = require('./mode')\nvar Utils = require('./utils')\n\nfunction KanjiData (data) {\n  this.mode = Mode.KANJI\n  this.data = data\n}\n\nKanjiData.getBitsLength = function getBitsLength (length) {\n  return length * 13\n}\n\nKanjiData.prototype.getLength = function getLength () {\n  return this.data.length\n}\n\nKanjiData.prototype.getBitsLength = function getBitsLength () {\n  return KanjiData.getBitsLength(this.data.length)\n}\n\nKanjiData.prototype.write = function (bitBuffer) {\n  var i\n\n  // In the Shift JIS system, Kanji characters are represented by a two byte combination.\n  // These byte values are shifted from the JIS X 0208 values.\n  // JIS X 0208 gives details of the shift coded representation.\n  for (i = 0; i < this.data.length; i++) {\n    var value = Utils.toSJIS(this.data[i])\n\n    // For characters with Shift JIS values from 0x8140 to 0x9FFC:\n    if (value >= 0x8140 && value <= 0x9FFC) {\n      // Subtract 0x8140 from Shift JIS value\n      value -= 0x8140\n\n    // For characters with Shift JIS values from 0xE040 to 0xEBBF\n    } else if (value >= 0xE040 && value <= 0xEBBF) {\n      // Subtract 0xC140 from Shift JIS value\n      value -= 0xC140\n    } else {\n      throw new Error(\n        'Invalid SJIS character: ' + this.data[i] + '\\n' +\n        'Make sure your charset is UTF-8')\n    }\n\n    // Multiply most significant byte of result by 0xC0\n    // and add least significant byte to product\n    value = (((value >>> 8) & 0xff) * 0xC0) + (value & 0xff)\n\n    // Convert result to a 13-bit binary string\n    bitBuffer.put(value, 13)\n  }\n}\n\nmodule.exports = KanjiData\n","import {HttpClient} from '@angular/common/http';\nimport {AfterContentInit, ChangeDetectorRef, Component, EventEmitter, Input, OnDestroy, OnInit, ViewChild} from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {MatDialog} from '@angular/material/dialog';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {forkJoin, Observable, Subscription} from 'rxjs';\nimport {\n    ApiPayload,\n    Country,\n    CountryOfTransfer,\n    DataCategory,\n    DataProtectionOfficer,\n    DataPurposes,\n    DataSource,\n    DataSubCategory,\n    FileUpload,\n    MainActivity,\n    NatureOfBusinessCat,\n    NatureOfBusinessSubCat,\n    OrganisationCategory,\n    OrganisationType,\n    Sector,\n    SecurityMeasure,\n    ThirdParty,\n    ChildrenDataPurpose\n} from '../../../../services/api.model';\nimport {catchError, filter, map, startWith} from 'rxjs/operators';\nimport {MatCheckboxChange} from '@angular/material/checkbox';\nimport {ApiEndpointsService} from '../../../../services/api-endpoints.service';\nimport {ApiService} from '../../../../services/api.service';\nimport {OrgNoticeComponent} from '../../../../layout/dialogs/org-registration/org-notice/org-notice.component';\nimport {OrgMainActivityComponent} from '../../../../layout/dialogs/org-registration/org-main-activity/org-main-activity.component';\nimport {\n    OrgDataProtectionOfficerComponent\n} from '../../../../layout/dialogs/org-registration/org-data-protection-officer/org-data-protection-officer.component';\nimport {\n    OrgSecurityMeasuresComponent\n} from '../../../../layout/dialogs/org-registration/org-security-measures/org-security-measures.component';\nimport {OrgThirdPartyComponent} from '../../../../layout/dialogs/org-registration/org-third-party/org-third-party.component';\nimport {OrgCountryComponent} from '../../../../layout/dialogs/org-registration/org-country/org-country.component';\nimport {OrgUploadComponent} from '../../../../layout/dialogs/org-upload/org-upload.component';\nimport {OrgForm3DialogComponent} from '../../../../layout/dialogs/org-registration/org-form3-dialog/org-form3-dialog.component';\nimport {\n    OrgRegistrationPreviewDialogComponent\n} from '../../../../layout/dialogs/org-registration/org-registration-preview-dialog/org-registration-preview-dialog.component';\nimport {SuccessfulMessageDialogComponent} from '../../../../layout/dialogs/successful-message-dialog/successful-message-dialog.component';\nimport {\n    Action,\n    ActionPerformed,\n    ActionPerformedRequestMoreInfo,\n    WorkFlowConstants,\n    WorkFlowStep,\n    WorkFlowTimeline\n} from '../../../models/document-workflow.model';\nimport {CertificateDetails, CertificateDetailsResponse, CheckListed, CompanyRegistrationModel} from '../company-registration.model';\nimport {BaseFuryForm} from '../../../../../@fury/shared/base-fury-form';\nimport {KeycloakService} from 'keycloak-angular';\nimport {WorkflowServiceService} from '../../../../services/workflow-service.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {$RequestMoreInfoField, Checked, Checklist, RequestMoreInfoField} from '../../../models/reference.model';\nimport {fadeInRightAnimation} from '../../../../../@fury/animations/fade-in-right.animation';\nimport {fadeInUpAnimation} from '../../../../../@fury/animations/fade-in-up.animation';\nimport {SnackBarService} from '../../../../pages/services/snack-bar.service';\nimport {CompanyRegistrationService} from '../../company-registration.service';\nimport {ReviewCommentsComponent} from '../../../../layout/review-comments/review-comments.component';\nimport {CertPreviewComponent} from '../cert-preview/cert-preview.component';\nimport {ApplicationTimelineComponent} from '../../../../layout/application-timeline/application-timeline.component';\nimport {ReferenceTableService} from '../../../../services/reference-table.service';\nimport {AuthenticationService} from '../../../../authentication/authentication.service';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { ViewPdfDocumentBottomsheetComponent } from '../../../../layout/bottomsheets/view-pdf-document-bottomsheet/view-pdf-document-bottomsheet.component';\nimport { environment } from '../../../../../environments/environment';\nimport { ComplaintService } from '../../../complaints/complaints.service';\nimport { CancellationCommentsComponent } from '../../../../layout/dialogs/cancellation-comments/cancellation-comments.component';\n\n\n\n@Component({\n  selector: 'fury-view-cancel-registration',\n  templateUrl: './view-cancel-registration.component.html',\n  styleUrls: ['./view-cancel-registration.component.scss'],\n  animations: [fadeInRightAnimation, fadeInUpAnimation]\n})\nexport class ViewCancelRegistrationComponent extends BaseFuryForm implements OnInit, OnDestroy, AfterContentInit {\n\n  \n  dialogRef;\n  bottomsheetRef;\n  processing = false;\n  formCancelRegistration: FormGroup;\n  selectedIndex = 0;\n  // selectedIndex = 3;\n  // isLinear = true;\n  isLinear = false;\n  today = new Date();\n  contactInformation = true;\n  sectors: Sector[];\n  countries: Country[];\n  selected = false;\n  DPOSelected = false;\n  organisationCategories: OrganisationCategory[] = [];\n  selectedOrganisationCategories: OrganisationCategory[] = [];\n  organisationTypes: OrganisationType[];\n  dataSources: DataSource[];\n  selectedDataSources: DataSource[] = [];\n  httpSub: Subscription;\n  MainActivitiesDisplayedColumns: string[] = ['Count', 'MainActivity', 'Actions'];\n  dpoDisplayedColumns: string[] = ['Count', 'Name', 'Telephone', 'Email', 'PhysicalAddress', 'Actions'];\n  securityMeasuresDisplayedColumns: string[] = ['Count', 'SecurityMeasure', 'Actions'];\n  thirdPartyDisplayedColumns: string[] = ['Count', 'NameOfThirdParty', 'Purpose', 'Actions'];\n  countryDisplayedColumns: string[] = ['Count', 'Country', 'Purpose', 'Description', 'Actions'];\n  mainActivities: MainActivity[] = [];\n  mainActivitiesDataSource: MatTableDataSource<MainActivity>;\n  dataProtectionOfficers: DataProtectionOfficer[] = [];\n  dpoDataSource: MatTableDataSource<DataProtectionOfficer>;\n  securityMeasures: SecurityMeasure[] = [];\n  securityMeasureDataSource: MatTableDataSource<SecurityMeasure>;\n  thirdParties: ThirdParty[] = [];\n  thirdPartyDataSource: MatTableDataSource<ThirdParty>;\n  countriesOfTransfer: CountryOfTransfer[] = [];\n  countriesDataSource: MatTableDataSource<CountryOfTransfer>;\n  selectedDataCategory: DataCategory[] = [];\n  selectedDataSubCategory: DataSubCategory[] = [];\n  dataCategories: DataCategory[];\n  dataPurposes: DataPurposes[];\n  childDataPurposes: ChildrenDataPurpose[] = [];\n  selectedChildDataPurposes: ChildrenDataPurpose[] = [];\n  selectedDataPurposes: DataPurposes[] = [];\n  natureOfBusinessCat: NatureOfBusinessCat[] = [];\n  natureOfBusinessSubCat: NatureOfBusinessSubCat[] = [];\n  selectedNatureOfBusinessSubCat: NatureOfBusinessSubCat[] = [];\n  SpecifyTheLaw = false;\n  ServiceOrProductProvided = false;\n  showChildrenDataFields = false;\n  SpecifyLegalObligation = false;\n  showApprovalButton = false;\n  documentNotice: FileUpload | null;\n  OrganizationType = null;\n  SectorName = null;\n  NatureOfBusinessCat = null;\n  CountryOfIncorporation = null;\n  \n  //\n  role: string;\n  workflowID = '1';\n  workflowTimeLine: WorkFlowTimeline;\n  currentStep: WorkFlowStep;\n  certificateResponse: CertificateDetailsResponse;\n  certificateDetails: CertificateDetails;\n  accesses: string[];\n  regTrackingNo: string;\n  timeLineAccess: string[] = ['data-protection-officer-director', 'data-protection-officer-nita', 'data-protection-officer-technical', 'data-protection-officer-legal'];\n  isOfficer: boolean;\n  isApplicant: boolean;\n  _hasRequestMoreInfo = false;\n  _StepRequestingForMoreInfo = 0;\n  requestMoreInfoFields: RequestMoreInfoField[] = [];\n  canDownloadCertificate = false;\n  $checklist: Checklist[];\n  // Main Object\n  application: CompanyRegistrationModel = new CompanyRegistrationModel();\n  permittedActions: Action[] = [];\n  // Subscriptions\n  subscriptions: Subscription[] = [];\n  $resultRefChecklistEvent: EventEmitter<any> = new EventEmitter();\n  formFieldSections: { SectionID: number; SectionName: string; Count: number }[] = []\n  personalDataCollectedCheckBoxEnabled = false;\n  dataCategory = new FormControl();\n\n\n  OrganizationID: number;\n\n\n\n  uploadedDocument = false\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private service: ApiService,\n    private endpoints: ApiEndpointsService,\n    private dialog: MatDialog,\n    private bottomsheet: MatBottomSheet,\n    private http: HttpClient,\n    private route: Router,\n    public snackBar: SnackBarService,\n    private activateRoute: ActivatedRoute,\n    private changeDetector: ChangeDetectorRef,\n    public authService: KeycloakService,\n    public _authService: AuthenticationService,\n    public _workflowService: WorkflowServiceService,\n    public registrationService: CompanyRegistrationService,\n    private referenceService: ReferenceTableService,\n    public complaintService: ComplaintService,\n  ) {\n    super(\n      authService,\n      _workflowService,\n      registrationService,\n      complaintService\n  );\n\n  this.accesses = authService.getKeycloakInstance().resourceAccess['dps-frontend'].roles;\n  this.operationType = activateRoute.routeConfig.data.action;\n  this.regTrackingNo = this.route.getCurrentNavigation().extras.state.regTrackingNo;\n   }\n\n  ngOnInit(): void {\n    console.log(this.regTrackingNo);\n\n    this.formCancelRegistration = this.formBuilder.group({\n      ReasonForCancellation: new FormControl('', [Validators.required]),\n    });\n  }\n\n  \n  ngAfterContentInit(): void {\n\n    this.OrganizationID = 156;\n    this.getCancelRegistration();\n\n  }\n     \n  ngOnDestroy(): void {\n    if (this.httpSub) { this.httpSub.unsubscribe(); }\n    if (this.bottomsheetRef) { this.bottomsheetRef.dismiss(); }\n}\n\n\n\n  getCancelRegistration(){\n\n    this.httpSub = this.http.get<ApiPayload>(this.endpoints.getCancelRegistration + '?RegTrackingNo='+ this.regTrackingNo)\n      .pipe(catchError(this.service.handleError))\n      .subscribe((response) => {\n        console.log(response.data);\n        this.formCancelRegistration.get('ReasonForCancellation').patchValue(response.data[0].ReasonForCancellation);\n\n        this.documentNotice = {\n          Document: null, \n          Name: 'Notice to cancel registration.pdf', \n          Size: null, \n          Base64: response.data[0].Attachment\n      };\n\n      if(response.data[0].CancellationApproval  == 0){\n\n        this.showApprovalButton =  true;\n      }\n        \n      \n      }, (error) => {\n        this.processing = false;\n  \n        if (error.error.message) {\n          this.dialogRef = this.dialog.open(SuccessfulMessageDialogComponent, {\n            panelClass: ['successful-message-dialog', 'dialogs'],\n            disableClose: true,\n            data: {\n              title: error.error.message['title'] ? error.error.message['title'] : 'Operation Failed',\n              message: error.error.message['body'] ? error.error.message['body'] : environment.technicalErrorResponse,\n              status: false,\n            }\n          });\n        } else {\n          this.service.determineErrorResponse(error);\n        }\n      });\n\n    }\n\n    onReadDocument(document: FileUpload): void {\n      // console.log('document:', document);\n      this.bottomsheetRef = this.bottomsheet.open(ViewPdfDocumentBottomsheetComponent, {\n          disableClose: true,\n          panelClass: ['view-pdf-document-bottomsheet', 'bottomsheets'],\n          data: {\n            url: document.Base64,\n            title: document.Name\n          }\n      });      \n  }\n\n\n  approveCancellation(){\n\n    this.dialog.open(CancellationCommentsComponent, {\n      width: '941px',\n      height: '595px',\n      data: this.regTrackingNo\n  });\n  }\n\n  }\n\n\n","<fury-page-layout>\n    <fury-page-layout-header>\n        <fury-breadcrumbs [@fadeInRight]  current=\"Cancel Registration\"></fury-breadcrumbs>\n    </fury-page-layout-header>\n    <fury-page-layout-content>\n        <div class=\"actions-button-padding\">\n            <mat-toolbar>\n                <mat-toolbar-row>\n                    <button *ngIf=\"showApprovalButton\" mat-raised-button matTooltip=\"View Timeline\" class=\"actions-button-padding\" \n                    color=\"primary\" (click)=\"approveCancellation()\">\n                        <mat-icon>Approve Request</mat-icon>\n                        <span>Approve Request</span>\n                    </button>\n                </mat-toolbar-row>\n            </mat-toolbar>\n        </div>\n        <main class=\"fadeInUp _delay4ms\">\n            <div\n\n                labelPosition=\"bottom\" #stepper>\n        \n                <div>\n                    <ng-template matStepLabel>\n                        <h3>Cancel Registration</h3>\n                    </ng-template>\n                    \n                    <form [formGroup]=\"formCancelRegistration\">\n                        <div>\n\n                            <div>\n                                <h1 style=\"text-align: center; font-weight: bold;\">CANCEL REGISTRATION</h1>\n                            </div>\n\n                            <div>\n                                <mat-form-field fxFlex=\"100\" [ngStyle]=\"{'margin-right': '20px'}\">\n                                    <mat-label>Reason for cancellation<span class=\"required-field\">required</span></mat-label>\n                                    <textarea matInput \n                                        cdkAutosizeMinRows=\"3\"\n                                        formControlName=\"ReasonForCancellation\">\n                                    </textarea>             \n                                </mat-form-field>\n                            </div>\n\n                        </div>\n\n                        <section class=\"expand-section reduced-properties table-wrapper margin documents\">\n                            <h3 class=\"full-width step-header\" style=\"font-weight: bold;\">Attachment</h3>\n        \n                            <div class=\"buttons\" *ngIf=\"documentNotice\">\n                                               \n                            </div>\n        \n                            <div  *ngIf=\"documentNotice && documentNotice.Base64\" class=\"uploaded-document\" matTooltip=\"Open Document\" (click)=\"onReadDocument(documentNotice)\">\n                                <img width=\"40\" height=\"40\" src=\"./assets/img/pdf.png\" alt=\"\">\n        \n                                <span>Document: {{ documentNotice.Name }} <span *ngIf=\"documentNotice.Size\">  -  {{ documentNotice.Size }} Mbs</span> </span>\n                            </div>\n\n                            <p class=\"no-document-found\" *ngIf=\"documentNotice && !documentNotice.Base64\">No document attached</p>\n        \n                        </section>\n                    </form>\n                                \n                </div>\n            </div>    \n        </main>\n    </fury-page-layout-content>   \n</fury-page-layout>\n","var ECLevel = require('./error-correction-level')\r\n\r\nvar EC_BLOCKS_TABLE = [\r\n// L  M  Q  H\r\n  1, 1, 1, 1,\r\n  1, 1, 1, 1,\r\n  1, 1, 2, 2,\r\n  1, 2, 2, 4,\r\n  1, 2, 4, 4,\r\n  2, 4, 4, 4,\r\n  2, 4, 6, 5,\r\n  2, 4, 6, 6,\r\n  2, 5, 8, 8,\r\n  4, 5, 8, 8,\r\n  4, 5, 8, 11,\r\n  4, 8, 10, 11,\r\n  4, 9, 12, 16,\r\n  4, 9, 16, 16,\r\n  6, 10, 12, 18,\r\n  6, 10, 17, 16,\r\n  6, 11, 16, 19,\r\n  6, 13, 18, 21,\r\n  7, 14, 21, 25,\r\n  8, 16, 20, 25,\r\n  8, 17, 23, 25,\r\n  9, 17, 23, 34,\r\n  9, 18, 25, 30,\r\n  10, 20, 27, 32,\r\n  12, 21, 29, 35,\r\n  12, 23, 34, 37,\r\n  12, 25, 34, 40,\r\n  13, 26, 35, 42,\r\n  14, 28, 38, 45,\r\n  15, 29, 40, 48,\r\n  16, 31, 43, 51,\r\n  17, 33, 45, 54,\r\n  18, 35, 48, 57,\r\n  19, 37, 51, 60,\r\n  19, 38, 53, 63,\r\n  20, 40, 56, 66,\r\n  21, 43, 59, 70,\r\n  22, 45, 62, 74,\r\n  24, 47, 65, 77,\r\n  25, 49, 68, 81\r\n]\r\n\r\nvar EC_CODEWORDS_TABLE = [\r\n// L  M  Q  H\r\n  7, 10, 13, 17,\r\n  10, 16, 22, 28,\r\n  15, 26, 36, 44,\r\n  20, 36, 52, 64,\r\n  26, 48, 72, 88,\r\n  36, 64, 96, 112,\r\n  40, 72, 108, 130,\r\n  48, 88, 132, 156,\r\n  60, 110, 160, 192,\r\n  72, 130, 192, 224,\r\n  80, 150, 224, 264,\r\n  96, 176, 260, 308,\r\n  104, 198, 288, 352,\r\n  120, 216, 320, 384,\r\n  132, 240, 360, 432,\r\n  144, 280, 408, 480,\r\n  168, 308, 448, 532,\r\n  180, 338, 504, 588,\r\n  196, 364, 546, 650,\r\n  224, 416, 600, 700,\r\n  224, 442, 644, 750,\r\n  252, 476, 690, 816,\r\n  270, 504, 750, 900,\r\n  300, 560, 810, 960,\r\n  312, 588, 870, 1050,\r\n  336, 644, 952, 1110,\r\n  360, 700, 1020, 1200,\r\n  390, 728, 1050, 1260,\r\n  420, 784, 1140, 1350,\r\n  450, 812, 1200, 1440,\r\n  480, 868, 1290, 1530,\r\n  510, 924, 1350, 1620,\r\n  540, 980, 1440, 1710,\r\n  570, 1036, 1530, 1800,\r\n  570, 1064, 1590, 1890,\r\n  600, 1120, 1680, 1980,\r\n  630, 1204, 1770, 2100,\r\n  660, 1260, 1860, 2220,\r\n  720, 1316, 1950, 2310,\r\n  750, 1372, 2040, 2430\r\n]\r\n\r\n/**\r\n * Returns the number of error correction block that the QR Code should contain\r\n * for the specified version and error correction level.\r\n *\r\n * @param  {Number} version              QR Code version\r\n * @param  {Number} errorCorrectionLevel Error correction level\r\n * @return {Number}                      Number of error correction blocks\r\n */\r\nexports.getBlocksCount = function getBlocksCount (version, errorCorrectionLevel) {\r\n  switch (errorCorrectionLevel) {\r\n    case ECLevel.L:\r\n      return EC_BLOCKS_TABLE[(version - 1) * 4 + 0]\r\n    case ECLevel.M:\r\n      return EC_BLOCKS_TABLE[(version - 1) * 4 + 1]\r\n    case ECLevel.Q:\r\n      return EC_BLOCKS_TABLE[(version - 1) * 4 + 2]\r\n    case ECLevel.H:\r\n      return EC_BLOCKS_TABLE[(version - 1) * 4 + 3]\r\n    default:\r\n      return undefined\r\n  }\r\n}\r\n\r\n/**\r\n * Returns the number of error correction codewords to use for the specified\r\n * version and error correction level.\r\n *\r\n * @param  {Number} version              QR Code version\r\n * @param  {Number} errorCorrectionLevel Error correction level\r\n * @return {Number}                      Number of error correction codewords\r\n */\r\nexports.getTotalCodewordsCount = function getTotalCodewordsCount (version, errorCorrectionLevel) {\r\n  switch (errorCorrectionLevel) {\r\n    case ECLevel.L:\r\n      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 0]\r\n    case ECLevel.M:\r\n      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 1]\r\n    case ECLevel.Q:\r\n      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 2]\r\n    case ECLevel.H:\r\n      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 3]\r\n    default:\r\n      return undefined\r\n  }\r\n}\r\n","import {HttpClient} from '@angular/common/http';\nimport {AfterContentInit, ChangeDetectorRef, Component, EventEmitter, Input, OnDestroy, OnInit, ViewChild} from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {MatDialog} from '@angular/material/dialog';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {forkJoin, Observable, Subscription} from 'rxjs';\nimport {\n    ApiPayload,\n    Country,\n    CountryOfTransfer,\n    DataCategory,\n    DataProtectionOfficer,\n    DataPurposes,\n    DataSource,\n    DataSubCategory,\n    FileUpload,\n    MainActivity,\n    NatureOfBusinessCat,\n    NatureOfBusinessSubCat,\n    OrganisationCategory,\n    OrganisationType,\n    Sector,\n    SecurityMeasure,\n    ThirdParty,\n    ChildrenDataPurpose\n} from '../../../../services/api.model';\nimport { NatureOfBusiness, NewCompanyRegistrationModel } from '../company-registration.model';\nimport {catchError, filter, map, startWith} from 'rxjs/operators';\nimport {MatCheckboxChange} from '@angular/material/checkbox';\nimport {ApiEndpointsService} from '../../../../services/api-endpoints.service';\nimport {ApiService} from '../../../../services/api.service';\nimport {OrgNoticeComponent} from '../../../../layout/dialogs/org-registration/org-notice/org-notice.component';\nimport {OrgMainActivityComponent} from '../../../../layout/dialogs/org-registration/org-main-activity/org-main-activity.component';\nimport {\n    OrgDataProtectionOfficerComponent\n} from '../../../../layout/dialogs/org-registration/org-data-protection-officer/org-data-protection-officer.component';\nimport {\n    OrgSecurityMeasuresComponent\n} from '../../../../layout/dialogs/org-registration/org-security-measures/org-security-measures.component';\nimport {OrgThirdPartyComponent} from '../../../../layout/dialogs/org-registration/org-third-party/org-third-party.component';\nimport {OrgCountryComponent} from '../../../../layout/dialogs/org-registration/org-country/org-country.component';\nimport {OrgUploadComponent} from '../../../../layout/dialogs/org-upload/org-upload.component';\nimport {OrgForm3DialogComponent} from '../../../../layout/dialogs/org-registration/org-form3-dialog/org-form3-dialog.component';\nimport {\n    OrgRegistrationPreviewDialogComponent\n} from '../../../../layout/dialogs/org-registration/org-registration-preview-dialog/org-registration-preview-dialog.component';\nimport {SuccessfulMessageDialogComponent} from '../../../../layout/dialogs/successful-message-dialog/successful-message-dialog.component';\nimport {\n    Action,\n    ActionPerformed,\n    ActionPerformedRequestMoreInfo,\n    WorkFlowConstants,\n    WorkFlowStep,\n    WorkFlowTimeline\n} from '../../../models/document-workflow.model';\nimport {CertificateDetails, CertificateDetailsResponse, CheckListed, CompanyRegistrationModel} from '../company-registration.model';\nimport {BaseFuryForm} from '../../../../../@fury/shared/base-fury-form';\nimport {KeycloakService} from 'keycloak-angular';\nimport {WorkflowServiceService} from '../../../../services/workflow-service.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {$RequestMoreInfoField, Checked, Checklist, RequestMoreInfoField} from '../../../models/reference.model';\nimport {fadeInRightAnimation} from '../../../../../@fury/animations/fade-in-right.animation';\nimport {fadeInUpAnimation} from '../../../../../@fury/animations/fade-in-up.animation';\nimport {SnackBarService} from '../../../../pages/services/snack-bar.service';\nimport {CompanyRegistrationService} from '../../company-registration.service';\nimport {ReviewCommentsComponent} from '../../../../layout/review-comments/review-comments.component';\nimport {CertPreviewComponent} from '../cert-preview/cert-preview.component';\nimport {ApplicationTimelineComponent} from '../../../../layout/application-timeline/application-timeline.component';\nimport {ReferenceTableService} from '../../../../services/reference-table.service';\nimport {AuthenticationService} from '../../../../authentication/authentication.service';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { ViewPdfDocumentBottomsheetComponent } from '../../../../layout/bottomsheets/view-pdf-document-bottomsheet/view-pdf-document-bottomsheet.component';\nimport { environment } from '../../../../../environments/environment';\nimport { ComplaintService } from '../../../complaints/complaints.service';\nimport { UpdateRegistrationComponent } from '../../../../layout/dialogs/update-message-dialog/update-registration/update-registration.component';\n\n@Component({\n  selector: 'fury-manage-registration-update',\n  templateUrl: './manage-registration-update.component.html',\n  styleUrls: ['./manage-registration-update.component.scss']\n})\nexport class ManageRegistrationUpdateComponent extends BaseFuryForm implements OnInit, AfterContentInit {\n\n  dialogRef;\n  bottomsheetRef;\n  processing = false;\n  formGeneralInformation: FormGroup;\n  formOrganisationDetails: FormGroup;\n  formPersonalDataHeld: FormGroup;\n  formPurposeRetention: FormGroup;\n  formSecurityMeasures: FormGroup;\n  formThirdParties: FormGroup;\n  formChildrenData: FormGroup;\n  selectedIndex = 0;\n  // selectedIndex = 3;\n  // isLinear = true;\n  isLinear = false;\n  today = new Date();\n  contactInformation = true;\n  sectors: Sector[];\n  countries: Country[];\n  selected = false;\n  thirdParties;\n  DPOSelected = false;\n  organisationCategories: OrganisationCategory[] = [];\n  selectedOrganisationCategories: OrganisationCategory[] = [];\n  organisationTypes: OrganisationType[];\n  dataSources: DataSource[];\n  selectedDataSources: DataSource[] = [];\n  httpSub: Subscription;\n  MainActivitiesDisplayedColumns: string[] = ['Count', 'MainActivity', 'Actions'];\n  dpoDisplayedColumns: string[] = ['Count', 'Name', 'Telephone', 'Email', 'PhysicalAddress', 'Actions'];\n  securityMeasuresDisplayedColumns: string[] = ['Count', 'SecurityMeasure', 'Actions'];\n  thirdPartyDisplayedColumns: string[] = ['Count', 'NameOfThirdParty', 'Purpose', 'Actions'];\n  countryDisplayedColumns: string[] = ['Count', 'Country', 'Purpose', 'Description', 'Actions'];\n  mainActivities: MainActivity[] = [];\n  mainActivitiesDataSource: MatTableDataSource<MainActivity>;\n  dataProtectionOfficers: DataProtectionOfficer[] = [];\n  dpoDataSource: MatTableDataSource<DataProtectionOfficer>;\n  securityMeasures: SecurityMeasure[] = [];\n  securityMeasureDataSource: MatTableDataSource<SecurityMeasure>;\n  thirdPartyDataSource: MatTableDataSource<ThirdParty>;\n  childDataPurposes: ChildrenDataPurpose[] = [];\n  selectedChildDataPurposes: ChildrenDataPurpose[] = [];\n  countriesOfTransfer: CountryOfTransfer[] = [];\n  countriesDataSource: MatTableDataSource<CountryOfTransfer>;\n  selectedDataCategory: DataCategory[] = [];\n  selectedDataSubCategory: DataSubCategory[] = [];\n  dataCategories: DataCategory[];\n  dataPurposes: DataPurposes[];\n  selectedDataPurposes: DataPurposes[] = [];\n  natureOfBusinessCat: NatureOfBusinessCat[] = [];\n  natureOfBusinessSubCat: NatureOfBusinessSubCat[] = [];\n  selectedNatureOfBusinessSubCat: NatureOfBusinessSubCat[] = [];\n  SpecifyTheLaw = false;\n  ServiceOrProductProvided = false;\n  SpecifyLegalObligation = false;\n  document: FileUpload | null;\n  documentForm3: FileUpload | null;\n  proofOfPayment: FileUpload | null;\n  OrganizationType = null;\n  SectorName = null;\n  NatureOfBusinessCat = null;\n  CountryOfIncorporation = null;\n  \n  //\n  role: string;\n  workflowID = '1';\n  workflowTimeLine: WorkFlowTimeline;\n  currentStep: WorkFlowStep;\n  certificateResponse: CertificateDetailsResponse;\n  certificateDetails: CertificateDetails;\n  accesses: string[];\n  regTrackingNo: string;\n  timeLineAccess: string[] = ['data-protection-officer-director', 'data-protection-officer-nita', 'data-protection-officer-technical', 'data-protection-officer-legal'];\n  isOfficer: boolean;\n  isApplicant: boolean;\n  _hasRequestMoreInfo = false;\n  _StepRequestingForMoreInfo = 0;\n  requestMoreInfoFields: RequestMoreInfoField[] = [];\n  canDownloadCertificate = false;\n  $checklist: Checklist[];\n  // Main Object\n  application: CompanyRegistrationModel = new CompanyRegistrationModel();\n  new_data: CompanyRegistrationModel = new CompanyRegistrationModel();\n  permittedActions: Action[] = [];\n  // Subscriptions\n  subscriptions: Subscription[] = [];\n  $resultRefChecklistEvent: EventEmitter<any> = new EventEmitter();\n  formFieldSections: { SectionID: number; SectionName: string; Count: number }[] = []\n  personalDataCollectedCheckBoxEnabled = false;\n  dataCategory = new FormControl();\n\n  @ViewChild('MainActivityPaginator', {static: false}) MainActivityPaginator: MatPaginator;\n  @ViewChild('MainActivityMatSort', {static: false}) MainActivityMatSort: MatSort;\n  @ViewChild('dpoPaginator', {static: false}) dpoPaginator: MatPaginator;\n  @ViewChild('dpoMatSort', {static: false}) dpoMatSort: MatSort;\n  @ViewChild('securityMeasurePaginator', {static: false}) securityMeasurePaginator: MatPaginator;\n  @ViewChild('securityMeasureMatSort', {static: false}) securityMeasureMatSort: MatSort;\n  @ViewChild('thirdPartyPaginator', {static: false}) thirdPartyPaginator: MatPaginator;\n  @ViewChild('thirdPartyMatSort', {static: false}) thirdPartyMatSort: MatSort;\n  @ViewChild('countryOfTransferPaginator', {static: false}) countryOfTransferPaginator: MatPaginator;\n  @ViewChild('countryOfTransferMatSort', {static: false}) countryOfTransferMatSort: MatSort;\n  @Input() checked: Boolean;\n\n  OrganizationID: number;\n  OrgID : number;\n  CurrentStepID: number;\n  cat: number[] = [];\n  organisationcategories: any;\n  natureOfbusinesses: any;\n  natureOfbusinesses_arr: any = [];\n  sourceofdata: any;\n  sourceofdata_arr: any = [];\n  purpose: any;\n  purpose_arr: any = [];\n\n  _updateAttachment = false;\n  _updateForm3Attachment = false;\n  _updateProofOfPayment = false;\n  securityMeasuresEnabled = false;\n  thirdPartiesEnabled = false;\n  countriesOfTransferEnabled = false;\n\n  constructor(\n      private formBuilder: FormBuilder,\n      private service: ApiService,\n      private endpoints: ApiEndpointsService,\n      private dialog: MatDialog,\n      private bottomsheet: MatBottomSheet,\n      private http: HttpClient,\n      private route: Router,\n      public snackBar: SnackBarService,\n      private activateRoute: ActivatedRoute,\n      private changeDetector: ChangeDetectorRef,\n      public authService: KeycloakService,\n      public _authService: AuthenticationService,\n      public _workflowService: WorkflowServiceService,\n      public registrationService: CompanyRegistrationService,\n      private referenceService: ReferenceTableService,\n      public complaintService: ComplaintService,\n  ) {\n      super(\n          authService,\n          _workflowService,\n          registrationService,\n          complaintService\n      );\n\n      this.accesses = authService.getKeycloakInstance().resourceAccess['dps-frontend'].roles;\n      this.operationType = activateRoute.routeConfig.data.action;\n      this.regTrackingNo = this.route.getCurrentNavigation().extras.state.regTrackingNo;\n      this.OrgID = this.route.getCurrentNavigation().extras.state.OrganisationID;\n      this.CurrentStepID = this.route.getCurrentNavigation().extras.state.CurrentStepID;\n\n      \n      if (this.operationType === 'EDIT') {\n          this.isEditMode = true;\n      } else if (this.operationType === 'CREATE') {\n          this.isEditMode = false;\n      } else if (this.operationType === 'VIEW') {\n          this.isEditMode = false;\n          this.isViewOnly = true;\n      } else if (this.operationType === 'MANAGE') {\n          this.isEditMode = false;\n          this.isViewOnly = true;\n      }\n\n      // console.log('isViewOnly:', this.isViewOnly);\n\n      this.pageTitle();\n\n      this.formFieldSections = [\n          {\n              SectionID: 1,\n              SectionName: 'Applicant',\n              Count: 0,\n          },\n          {\n              SectionID: 2,\n              SectionName: 'Data Protection Officer',\n              Count: 0,\n          },\n          {\n              SectionID: 3,\n              SectionName: 'Data Collected or Processed',\n              Count: 0,\n          },\n          {\n              SectionID: 4,\n              SectionName: 'Purpose & Retention',\n              Count: 0,\n          },\n          {\n              SectionID: 5,\n              SectionName: 'Disclosure & Transfer',\n              Count: 0,\n          },\n          {\n              SectionID: 6,\n              SectionName: 'Security Information',\n              Count: 0,\n          },\n      ]        \n  }\n\n  pageTitle() {\n      const pageTitle = this.isOfficer ? this.application.OrganisationName + 'Application' : ' My Application';\n      this.service.updatePageTitle(['Organisations', pageTitle]);\n  }\n\n  ngOnInit(): void {\n      this.formGeneralInformation = this.formBuilder.group({\n          OrganizationName: new FormControl('', [Validators.required]),\n          DPPActCategory: new FormControl('', [Validators.required]),\n          OrganizationTypeID: new FormControl('', [Validators.required]),\n          CountryOfIncorporation: new FormControl('', [Validators.required]),\n          URSBNumber: new FormControl(''),\n          SectorID: new FormControl('', [Validators.required]),\n          OtherSector: new FormControl('', [Validators.maxLength(50)]),\n          Location: new FormControl('', [Validators.required]),\n          PhoneNumberCode: new FormControl('', [Validators.required]),\n          PhoneNumber: new FormControl('', [\n              Validators.required,\n              Validators.pattern(/^[0-9 ]+$/),\n          ]),\n          EmailAddress: new FormControl('', [\n              Validators.required,\n              Validators.email\n          ]),\n          // NatureOfBusiness: new FormControl('', [Validators.required]),\n          NatureOfBusinessCat: new FormControl('', [Validators.required]),\n          NatureOfBusinessSubCat: new FormControl('', [Validators.required]),\n      });\n\n      this.formOrganisationDetails = this.formBuilder.group({\n          DPORequired: new FormControl(''),\n          DPOName: new FormControl(''),\n          DPOPhysicalAddress: new FormControl(''),\n          PhoneNumberCode: new FormControl(''),\n          DPOPhoneNumber: new FormControl(''),\n          DPOEmailAddress: new FormControl(''),\n          DPOPositionInOrganisation: new FormControl(''),\n      });\n\n      this.formPersonalDataHeld = this.formBuilder.group({\n          SourceOfDataID: new FormControl('', [Validators.required]),\n      });\n\n      this.formPurposeRetention = this.formBuilder.group({\n          Purpose: new FormControl('', [Validators.required]),\n          SpecifyTheLaw: new FormControl(''),\n          ServiceOrProductProvided: new FormControl(''),\n          SpecifyLegalObligation: new FormControl(''),\n          TotalRecordsAtRegistration: new FormControl('', [Validators.pattern(/^[0-9,]+$/)]),\n          RecordPercentageGrowth: new FormControl('', [\n              Validators.pattern(/^[0-9,]+$/),\n              Validators.max(100),\n          ]),\n          RetentionPeriod: new FormControl('', [\n              Validators.required,\n              Validators.pattern(/^[0-9,]+$/),\n              Validators.max(100),\n          ]),\n      });\n\n      this.formSecurityMeasures = this.formBuilder.group({\n          RegistrationConsent: new FormControl('', [Validators.required]),\n          RegistrationDoneBy: new FormControl('', [Validators.required, Validators.pattern(/^[a-zA-Z ]+$/)]),\n      });\n\n      this.formThirdParties = this.formBuilder.group({\n          PersonalDataIsForDisclosure: new FormControl('', [Validators.required]),\n          StoreDataOutsideCountry: new FormControl('', [Validators.required]),\n      });\n\n      // this.Listeners();\n      // console.log('operationType:', this.operationType);\n      if (this.operationType === 'CREATE' || this.operationType === 'MANAGE') {\n          this.Listeners();\n      }\n      \n      \n  \n      // Set OfficerRole\n      this.isOfficer = this.timeLineAccess.includes(this.realmRole);\n  \n      this.formGeneralInformation.valueChanges\n          .pipe(\n              filter(() => this.formGeneralInformation.valid)\n          ).subscribe(val => localStorage.setItem('STEP_1', JSON.stringify(val)));\n  }\n\n  ngAfterContentInit(): void {\n      this.OrganizationID = 156;\n      this.getDataFromMultipleRequests();\n  }\n\n  private getDataFromMultipleRequests(): void {\n      this.httpSub = this.fetchMultiple(this.OrgID)\n      .pipe(catchError(this.service.handleError))\n      .subscribe((responseList) => {\n          this.countries = responseList[0];\n\n          this.organisationCategories = [\n              {\n                  OrganisationCategoryId: 1,\n                  OrganisationCategoryName: 'Data Controller'\n              },\n              {\n                  OrganisationCategoryId: 2,\n                  OrganisationCategoryName: 'Data Processor'\n              },\n              {\n                  OrganisationCategoryId: 3,\n                  OrganisationCategoryName: 'Data Collector'\n              },\n          ];\n\n          this.formGeneralInformation.get('PhoneNumberCode').patchValue('256');\n          this.formOrganisationDetails.get('PhoneNumberCode').patchValue('256');\n\n          this.dataSources = responseList[1];\n\n          this.organisationTypes = responseList[2];\n\n          this.sectors = responseList[3];\n\n          this.dataCategories = responseList[4];\n\n          this.dataPurposes = responseList[5];\n\n          this.natureOfBusinessCat = responseList[6];\n          console.log(responseList[7]);\n\n          this.new_data = responseList[7].data;\n          console.log(this.new_data);\n\n\n          this.fetchSingleApplication(responseList[7]);\n\n          this.processing = false;\n      }, (error) => {\n          this.processing = false;\n          this.service.determineErrorResponse(error);\n      });        \n  }\n\n  private Listeners(): void {\n      // STEP ONE\n      this.formGeneralInformation.get('DPPActCategory').valueChanges.subscribe((value) => {\n          const values: number[] = value;\n          this.selectedOrganisationCategories.length = 0;\n\n          this.organisationCategories.filter((item) => {\n              if (values.includes(item.OrganisationCategoryId)) {\n                  this.selectedOrganisationCategories.push(item);\n              }\n          });\n      });\n\n      this.formGeneralInformation.get('OrganizationTypeID').valueChanges.subscribe((value) => {\n          if (value !== 4) {\n              this.formGeneralInformation.get('CountryOfIncorporation').setValidators([Validators.required]);\n              this.formGeneralInformation.get('URSBNumber').setValidators([Validators.required]);\n          } else {\n              this.formGeneralInformation.get('CountryOfIncorporation').clearValidators();\n              this.formGeneralInformation.get('CountryOfIncorporation').reset();\n              this.formGeneralInformation.get('URSBNumber').clearValidators();\n              this.formGeneralInformation.get('URSBNumber').reset();\n              this.CountryOfIncorporation = null;\n          }\n\n          this.formGeneralInformation.controls['CountryOfIncorporation'].updateValueAndValidity();\n          this.formGeneralInformation.controls['URSBNumber'].updateValueAndValidity();\n      });\n\n      this.formGeneralInformation.get('SectorID').valueChanges.subscribe((value) => {\n          if (value === 14) {\n              this.formGeneralInformation.get('OtherSector').setValidators([Validators.required]);\n          } else {\n              this.formGeneralInformation.get('OtherSector').clearValidators();\n              this.formGeneralInformation.get('OtherSector').reset();\n          }\n\n          this.formGeneralInformation.controls['OtherSector'].updateValueAndValidity();\n      });\n\n      this.formGeneralInformation.get('NatureOfBusinessCat').valueChanges.subscribe((value) => {\n          if (value) { \n              this.onNatureOfBusinessCatSelected(value);\n          }\n      });\n\n      this.formGeneralInformation.get('NatureOfBusinessSubCat').valueChanges.subscribe((value) => {\n          const values: number[] = value;\n          this.selectedNatureOfBusinessSubCat.length = 0;\n\n          this.natureOfBusinessSubCat.filter((item) => {\n              if (values.includes(item.NatureOfBusinessSubCatId)) {\n                  this.selectedNatureOfBusinessSubCat.push(item);\n              }\n          });\n      });\n\n      // STEP TWO\n      this.formOrganisationDetails.get('DPORequired').valueChanges.subscribe((value) => {\n\n          if (value === 'Yes') {\n              this.formOrganisationDetails.get('DPOName').setValidators([Validators.required, Validators.pattern(/^[a-zA-Z ]+$/), ]);\n              this.formOrganisationDetails.get('DPOPhysicalAddress').setValidators([Validators.required]);\n              this.formOrganisationDetails.get('DPOPhoneNumber').setValidators([Validators.required, Validators.pattern(/^[0-9 ]+$/)]);\n              this.formOrganisationDetails.get('DPOEmailAddress').setValidators([Validators.required, Validators.email]);\n              this.formOrganisationDetails.get('DPOPositionInOrganisation').setValidators([Validators.required]);\n          } else {\n              this.formOrganisationDetails.get('DPOName').clearValidators();\n              this.formOrganisationDetails.get('DPOName').reset();\n              this.formOrganisationDetails.get('DPOPhysicalAddress').clearValidators();\n              this.formOrganisationDetails.get('DPOPhysicalAddress').reset();\n              this.formOrganisationDetails.get('DPOPhoneNumber').clearValidators();\n              this.formOrganisationDetails.get('DPOPhoneNumber').reset();\n              this.formOrganisationDetails.get('DPOEmailAddress').clearValidators();\n              this.formOrganisationDetails.get('DPOEmailAddress').reset();\n              this.formOrganisationDetails.get('DPOPositionInOrganisation').clearValidators();\n              this.formOrganisationDetails.get('DPOPositionInOrganisation').reset();\n          }\n\n          this.formOrganisationDetails.controls['DPOName'].updateValueAndValidity();\n          this.formOrganisationDetails.controls['DPOPhysicalAddress'].updateValueAndValidity();\n          this.formOrganisationDetails.controls['DPOPhoneNumber'].updateValueAndValidity();\n          this.formOrganisationDetails.controls['DPOEmailAddress'].updateValueAndValidity();\n          this.formOrganisationDetails.controls['DPOPositionInOrganisation'].updateValueAndValidity();\n      });\n\n      // STEP THREE\n      this.formPersonalDataHeld.get('SourceOfDataID').valueChanges.subscribe((value) => {\n          const values: number[] = value;\n          this.selectedDataSources.length = 0;\n\n          this.dataSources?.filter((item) => {\n              if (values.includes(item.DataSourceID)) {\n                  this.selectedDataSources.push(item);\n              }\n          });\n      });\n\n       ///CHILDREN DATA PURPOSES\n\n    this.formChildrenData.get('PurposeForCollection').valueChanges.subscribe((value) => {\n        const values: number[] = value;\n        this.selectedChildDataPurposes.length = 0;\n  \n        this.childDataPurposes.filter((item) => {\n          if (values.includes(item.ChildDataID)) {\n            this.selectedChildDataPurposes.push(item);\n          }\n        });\n  \n        console.log(this.selectedChildDataPurposes);\n      });\n\n      // STEP FOUR\n      this.formPurposeRetention.get('Purpose').valueChanges.subscribe((value) => {\n          const values: number[] = value;\n\n          this.selectedDataPurposes.length = 0;\n\n          // Reset all the fields first\n          this.SpecifyTheLaw = false;\n          this.ServiceOrProductProvided = false;\n          this.SpecifyLegalObligation = false;\n          this.formPurposeRetention.get('SpecifyTheLaw').clearValidators();\n          this.formPurposeRetention.get('SpecifyTheLaw').reset();\n          this.formPurposeRetention.get('ServiceOrProductProvided').clearValidators();\n          this.formPurposeRetention.get('ServiceOrProductProvided').reset();\n          this.formPurposeRetention.get('SpecifyLegalObligation').clearValidators();\n          this.formPurposeRetention.get('SpecifyLegalObligation').reset();\n\n          values?.filter((item) => {\n              if (item === 1) {\n                  this.SpecifyTheLaw = true;\n                  this.formPurposeRetention.get('SpecifyTheLaw').setValidators([Validators.required]);\n              }\n\n              if (item === 3) {\n                  this.ServiceOrProductProvided = true;\n                  this.formPurposeRetention.get('ServiceOrProductProvided').setValidators([Validators.required]);\n              }\n\n              if (item === 6) {\n                  this.SpecifyLegalObligation = true;\n                  this.formPurposeRetention.get('SpecifyLegalObligation').setValidators([Validators.required]);\n              }\n          });\n\n          this.formPurposeRetention.controls['SpecifyTheLaw'].updateValueAndValidity();\n          this.formPurposeRetention.controls['ServiceOrProductProvided'].updateValueAndValidity();\n          this.formPurposeRetention.controls['SpecifyLegalObligation'].updateValueAndValidity();\n\n          this.dataPurposes.filter((item) => {\n              if (values.includes(item.DataPurposeID)) {\n                  this.selectedDataPurposes.push(item);\n              }\n          });\n\n          this.changeDetector.detectChanges();\n      });\n\n      this.formPurposeRetention.get('RecordPercentageGrowth').valueChanges.subscribe((value) => {\n\n          if (value > 100) {\n              this.formPurposeRetention.get('RecordPercentageGrowth').patchValue(100);\n          }\n\n          this.changeDetector.detectChanges();\n      });\n\n      this.formPurposeRetention.get('RetentionPeriod').valueChanges.subscribe((value) => {\n\n          if (value > 100) {\n              this.formPurposeRetention.get('RetentionPeriod').patchValue(100);\n          }\n\n          this.changeDetector.detectChanges();\n      });\n\n      // STEP FIVE\n      this.formThirdParties.get('PersonalDataIsForDisclosure').valueChanges.subscribe((value) => {        \n          if (value === 'No') {\n              this.thirdParties.length = 0;\n  \n              this.thirdPartyDataSource = new MatTableDataSource(this.thirdParties);\n  \n              setTimeout(() => {\n                  this.thirdPartyDataSource.paginator = this.thirdPartyPaginator;\n                  this.thirdPartyDataSource.sort = this.thirdPartyMatSort;\n              });\n          }\n      });\n\n      this.formThirdParties.get('StoreDataOutsideCountry').valueChanges.subscribe((value) => {\n          if (value === 'No') {\n              this.countriesOfTransfer.length = 0;\n  \n              this.countriesDataSource = new MatTableDataSource(this.countriesOfTransfer);\n  \n              setTimeout(() => {\n                  this.countriesDataSource.paginator = this.countryOfTransferPaginator;\n                  this.countriesDataSource.sort = this.countryOfTransferMatSort;\n              });            \n          }\n      });\n  }\n\n  private onShowNotice(): void {\n      this.dialogRef = this.dialog.open(OrgNoticeComponent, {\n          panelClass: ['organisation-data-protection-officer-dialog', 'dialogs'],\n          disableClose: true,\n      });\n\n      this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: DataProtectionOfficer }) => {\n\n      });\n  }\n\n  getOrganizationNameErrorMessage(): string {\n      return this.formGeneralInformation.get('OrganizationName').hasError('required') ? 'Please enter a value' : '';\n  }\n\n  getURSBNumberErrorMessage(): string {\n      return this.formGeneralInformation.get('URSBNumber').hasError('required') ? 'Please enter a value' : '';\n  }\n\n  getSelectErrorMessage(): string {\n      return this.formGeneralInformation.get('DPPActCategory').hasError('required')\n      || this.formGeneralInformation.get('OrganizationTypeID').hasError('required')\n      || this.formGeneralInformation.get('CountryOfIncorporation').hasError('required')\n      || this.formGeneralInformation.get('SectorID').hasError('required')\n      || this.formGeneralInformation.get('NatureOfBusinessCat').hasError('required')\n      || this.formGeneralInformation.get('NatureOfBusinessSubCat').hasError('required')\n      || this.formPersonalDataHeld.get('SourceOfDataID').hasError('required')\n      || this.formPurposeRetention.get('Purpose').hasError('required')\n          ? 'Please choose a value' : '';\n  }\n\n  getTelephoneNumberErrorMessage(): string {\n      return this.formGeneralInformation.get('PhoneNumber').hasError('required') ? 'Please enter a value' :\n          this.formGeneralInformation.get('PhoneNumber').hasError('pattern') ? 'Wrong Phone number' : '';\n  }\n\n  getEmailAddressErrorMessage(): string {\n      return this.formGeneralInformation.get('EmailAddress').hasError('required') ? 'Please enter a value' :\n          this.formGeneralInformation.get('EmailAddress').hasError('email') ? 'Wrong Email Address.' : '';\n  }\n\n  getOtherSectorErrorMessage(): string {\n      return this.formGeneralInformation.get('OtherSector').hasError('required') ? 'Please enter a value' : '';\n  }\n\n  getLocationErrorMessage(): string {\n      return this.formGeneralInformation.get('Location').hasError('required') ? 'Please enter a location' : '';\n  }\n\n  getDPONameErrorMessage(): string {\n      return this.formOrganisationDetails.get('DPOName').hasError('required') ? 'Please enter a value' :\n          this.formOrganisationDetails.get('DPOName').hasError('pattern') ? 'Please enter a correct name' : '';\n  }\n\n  getDPOPhysicalAddressErrorMessage(): string {\n      return this.formOrganisationDetails.get('DPOPhysicalAddress').hasError('required') ? 'Please enter a location' : '';\n  }\n\n  getDPOPhoneNumberErrorMessage(): string {\n      return this.formOrganisationDetails.get('DPOPhoneNumber').hasError('required') ? 'Please enter a value' :\n          this.formOrganisationDetails.get('DPOPhoneNumber').hasError('pattern') ? 'Wrong Phone number' : '';\n  }\n\n  getDPOEmailAddressErrorMessage(): string {\n      return this.formOrganisationDetails.get('DPOEmailAddress').hasError('required') ? 'Please enter a value' :\n          this.formOrganisationDetails.get('DPOEmailAddress').hasError('email') ? 'Wrong Email Address.' : '';\n  }\n\n  getDPOPositionInOrganisationErrorMessage(): string {\n      return this.formOrganisationDetails.get('DPOPositionInOrganisation').hasError('required') ? 'Please enter a value' : '';\n  }\n\n  getRequiredErrorMessage(): string {\n      return this.formPurposeRetention.get('SpecifyTheLaw').hasError('required')\n      || this.formPurposeRetention.get('ServiceOrProductProvided').hasError('required')\n      || this.formPurposeRetention.get('SpecifyLegalObligation').hasError('required')\n          ? 'Please enter a value' : '';\n  }\n\n  getPatternErrorMessage(): string {\n      return this.formPurposeRetention.get('TotalRecordsAtRegistration').hasError('pattern')\n          ? 'Please enter correct information' : '';\n  }\n\n  getRetentionPeriodErrorMessage(): string {\n      return this.formPurposeRetention.get('RetentionPeriod').hasError('required') ? 'Please enter a value' :\n          this.formPurposeRetention.get('RetentionPeriod').hasError('max') ? 'Maximum of 100' :\n              this.formPurposeRetention.get('RetentionPeriod').hasError('pattern') ? 'Not valid' : '';\n  }\n\n  getRecordPercentageGrowthErrorMessage(): string {\n      return this.formPurposeRetention.get('RecordPercentageGrowth').hasError('max') ? 'Maximum of 100' :\n          this.formPurposeRetention.get('RecordPercentageGrowth').hasError('pattern') ? 'Not valid' : '';\n  }\n\n  getCheckboxErrorMessage(): string {\n      return this.formSecurityMeasures.get('RegistrationConsent').hasError('max') ? 'This field is required' : '';\n  }\n\n  getRegistrationDoneByErrorMessage(): string {\n      return this.formSecurityMeasures.get('RegistrationDoneBy').hasError('required') ? 'Please enter a value' :\n          this.formSecurityMeasures.get('RegistrationDoneBy').hasError('pattern') ? 'Please enter a correct name' : '';\n  }\n\n  onAddMainActivity(): void {\n      this.dialogRef = this.dialog.open(OrgMainActivityComponent, {\n          panelClass: ['organisation-main-activity-dialog', 'dialogs'],\n          disableClose: true,\n      });\n\n      this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: MainActivity }) => {\n          if (result.status) {\n              let found = false;\n              this.mainActivities.filter((activity) => {\n                  if (activity.Activity === result.row.Activity) {\n                      found = true;\n                  }\n              });\n\n              if (found) {\n                  this.service.openSnackBar('Sorry, this record already exists', 'error-lg');\n              } else {\n                  this.mainActivities.push(result.row);\n              }\n\n              this.mainActivitiesDataSource = new MatTableDataSource(this.mainActivities);\n\n              setTimeout(() => {\n                  this.mainActivitiesDataSource.paginator = this.MainActivityPaginator;\n                  this.mainActivitiesDataSource.sort = this.MainActivityMatSort;\n              });\n          }\n      });\n  }\n\n  onEditMainActivity(row: MainActivity): void {\n      this.dialogRef = this.dialog.open(OrgMainActivityComponent, {\n          panelClass: ['organisation-main-activity-dialog', 'dialogs'],\n          disableClose: true,\n          data: {row}\n      });\n\n      this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: MainActivity }) => {\n          if (result.status) {\n\n              this.mainActivities[this.mainActivities.indexOf(row)] = {\n                  Activity: result.row.Activity,\n              };\n\n              this.mainActivitiesDataSource = new MatTableDataSource(this.mainActivities);\n\n              setTimeout(() => {\n                  this.mainActivitiesDataSource.paginator = this.MainActivityPaginator;\n                  this.mainActivitiesDataSource.sort = this.MainActivityMatSort;\n              });\n          }\n      });\n  }\n\n  onRemoveMainActivity(row: MainActivity): void {\n      this.mainActivities.splice(this.mainActivities.indexOf(row), 1);\n\n      this.mainActivitiesDataSource = new MatTableDataSource(this.mainActivities);\n\n      setTimeout(() => {\n          this.mainActivitiesDataSource.paginator = this.MainActivityPaginator;\n          this.mainActivitiesDataSource.sort = this.MainActivityMatSort;\n      });\n  }\n\n  onAddADPO(): void {\n      this.dialogRef = this.dialog.open(OrgDataProtectionOfficerComponent, {\n          panelClass: ['organisation-data-protection-officer-dialog', 'dialogs'],\n          disableClose: true,\n      });\n\n      this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: DataProtectionOfficer }) => {\n          if (result.status) {\n              let found = false;\n              this.dataProtectionOfficers.filter((dpo) => {\n                  if (dpo.EmailAddress === result.row.EmailAddress || dpo.PhoneNumber === result.row.PhoneNumber) {\n                      found = true;\n                  }\n              });\n\n              if (found) {\n                  this.service.openSnackBar('Sorry, this record already exists', 'error-lg');\n              } else {\n                  this.dataProtectionOfficers.push(result.row);\n              }\n\n              this.dpoDataSource = new MatTableDataSource(this.dataProtectionOfficers);\n\n              setTimeout(() => {\n                  this.dpoDataSource.paginator = this.dpoPaginator;\n                  this.dpoDataSource.sort = this.dpoMatSort;\n              });\n          }\n      });\n  }\n\n  onEditDPO(row: DataProtectionOfficer): void {\n      this.dialogRef = this.dialog.open(OrgDataProtectionOfficerComponent, {\n          panelClass: ['organisation-data-protection-officer-dialog', 'dialogs'],\n          disableClose: true,\n          data: {row}\n      });\n\n      this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: DataProtectionOfficer }) => {\n          if (result.status) {\n\n              this.dataProtectionOfficers[this.dataProtectionOfficers.indexOf(row)] = {\n                  Name: result.row.Name,\n                  EmailAddress: result.row.EmailAddress,\n                  PhoneNumber: result.row.PhoneNumber,\n                  PhysicalAddress: result.row.PhysicalAddress,\n                  PositionInOrganisation: result.row.PositionInOrganisation,\n              };\n\n              this.dpoDataSource = new MatTableDataSource(this.dataProtectionOfficers);\n\n              setTimeout(() => {\n                  this.dpoDataSource.paginator = this.dpoPaginator;\n                  this.dpoDataSource.sort = this.dpoMatSort;\n              });\n          }\n      });\n  }\n\n  onRemoveDPO(row: DataProtectionOfficer): void {\n      this.dataProtectionOfficers.splice(this.dataProtectionOfficers.indexOf(row), 1);\n\n      this.dpoDataSource = new MatTableDataSource(this.dataProtectionOfficers);\n\n      setTimeout(() => {\n          this.dpoDataSource.paginator = this.dpoPaginator;\n          this.dpoDataSource.sort = this.dpoMatSort;\n      });\n  }\n\n  onAddSecurityMeasure(): void {\n      this.dialogRef = this.dialog.open(OrgSecurityMeasuresComponent, {\n          panelClass: ['organisation-security-measure-dialog', 'dialogs'],\n          disableClose: true,\n      });\n\n      this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: SecurityMeasure }) => {\n          if (result.status) {\n              let found = false;\n              this.securityMeasures.filter((item) => {\n                  if (item.SecurityMeasure === result.row.SecurityMeasure) {\n                      found = true;\n                  }\n              });\n\n              if (found) {\n                  this.service.openSnackBar('Sorry, this record already exists', 'error-lg');\n              } else {\n                  this.securityMeasures.push(result.row);\n              }\n\n              this.securityMeasureDataSource = new MatTableDataSource(this.securityMeasures);\n\n              setTimeout(() => {\n                  this.securityMeasureDataSource.paginator = this.securityMeasurePaginator;\n                  this.securityMeasureDataSource.sort = this.securityMeasureMatSort;\n              });\n          }\n      });\n  }\n\n  onEditSecurityMeasure(row: SecurityMeasure): void {\n      this.dialogRef = this.dialog.open(OrgSecurityMeasuresComponent, {\n          panelClass: ['organisation-security-measure-dialog', 'dialogs'],\n          disableClose: true,\n          data: {row}\n      });\n\n      this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: SecurityMeasure }) => {\n          if (result.status) {\n\n              this.securityMeasures[this.securityMeasures.indexOf(row)] = {\n                  SecurityMeasure: result.row.SecurityMeasure,\n              };\n\n              this.securityMeasureDataSource = new MatTableDataSource(this.securityMeasures);\n\n              setTimeout(() => {\n                  this.securityMeasureDataSource.paginator = this.securityMeasurePaginator;\n                  this.securityMeasureDataSource.sort = this.securityMeasureMatSort;\n              });\n          }\n      });\n  }\n\n  onRemoveSecurityMeasure(row: SecurityMeasure): void {\n      this.securityMeasures.splice(this.securityMeasures.indexOf(row), 1);\n\n      this.securityMeasureDataSource = new MatTableDataSource(this.securityMeasures);\n\n      setTimeout(() => {\n          this.securityMeasureDataSource.paginator = this.securityMeasurePaginator;\n          this.securityMeasureDataSource.sort = this.securityMeasureMatSort;\n      });\n  }\n\n  onAddAThirdParty(): void {\n      this.dialogRef = this.dialog.open(OrgThirdPartyComponent, {\n          panelClass: ['organisation-third-party-dialog', 'dialogs'],\n          disableClose: true,\n      });\n\n      this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: ThirdParty }) => {\n          if (result.status) {\n              let found = false;\n\n              this.thirdParties.filter((party) => {\n                  if (party.ThirdPartyName === result.row.ThirdPartyName) {\n                      found = true;\n                  }\n              });\n\n              if (found) {\n                  this.service.openSnackBar('Sorry, this record already exists', 'error-lg');\n              } else {\n                  this.thirdParties.push(result.row);\n              }\n\n              this.thirdPartyDataSource = new MatTableDataSource(this.thirdParties);\n\n              setTimeout(() => {\n                  this.thirdPartyDataSource.paginator = this.thirdPartyPaginator;\n                  this.thirdPartyDataSource.sort = this.thirdPartyMatSort;\n              });\n          }\n      });\n  }\n\n  onEditThirdParty(row: ThirdParty): void {\n      this.dialogRef = this.dialog.open(OrgThirdPartyComponent, {\n          panelClass: ['organisation-third-party-dialog', 'dialogs'],\n          disableClose: true,\n          data: {row}\n      });\n\n      this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: ThirdParty }) => {\n          if (result.status) {\n\n              this.thirdParties[this.thirdParties.indexOf(row)] = {\n                  ThirdPartyName: result.row.ThirdPartyName,\n                  Purpose: result.row.Purpose,\n              };\n\n              this.thirdPartyDataSource = new MatTableDataSource(this.thirdParties);\n\n              setTimeout(() => {\n                  this.thirdPartyDataSource.paginator = this.thirdPartyPaginator;\n                  this.thirdPartyDataSource.sort = this.thirdPartyMatSort;\n              });\n          }\n      });\n  }\n\n  onRemoveThirdParty(row: ThirdParty): void {\n      this.thirdParties.splice(this.thirdParties.indexOf(row), 1);\n\n      this.thirdPartyDataSource = new MatTableDataSource(this.thirdParties);\n\n      setTimeout(() => {\n          this.thirdPartyDataSource.paginator = this.thirdPartyPaginator;\n          this.thirdPartyDataSource.sort = this.thirdPartyMatSort;\n      });\n  }\n\n  onAddACountry(): void {\n      this.dialogRef = this.dialog.open(OrgCountryComponent, {\n          panelClass: ['organisation-country-dialog', 'dialogs'],\n          disableClose: true,\n      });\n\n      this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: CountryOfTransfer }) => {\n          if (result.status) {\n              let found = false;\n              this.countriesOfTransfer.filter((party) => {\n                  if (party.Country === result.row.Country) {\n                      found = true;\n                  }\n              });\n\n              if (found) {\n                  this.service.openSnackBar('Sorry, this record already exists', 'error-lg');\n              } else {\n                  this.countriesOfTransfer.push(result.row);\n              }\n\n              this.countriesDataSource = new MatTableDataSource(this.countriesOfTransfer);\n\n              setTimeout(() => {\n                  this.countriesDataSource.paginator = this.countryOfTransferPaginator;\n                  this.countriesDataSource.sort = this.countryOfTransferMatSort;\n              });\n          }\n      });\n  }\n\n  onEditCountry(row: CountryOfTransfer): void {\n      this.dialogRef = this.dialog.open(OrgCountryComponent, {\n          panelClass: ['organisation-country-dialog', 'dialogs'],\n          disableClose: true,\n          data: {row}\n      });\n\n      this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: CountryOfTransfer }) => {\n          if (result.status) {\n              this.countriesOfTransfer[this.countriesOfTransfer.indexOf(row)] = {\n                  CountryID: result.row.CountryID,\n                  Country: result.row.Country,\n                  Purpose: result.row.Purpose,\n                  Description: result.row.Description,\n              };\n\n              this.countriesDataSource = new MatTableDataSource(this.countriesOfTransfer);\n\n              setTimeout(() => {\n                  this.countriesDataSource.paginator = this.countryOfTransferPaginator;\n                  this.countriesDataSource.sort = this.countryOfTransferMatSort;\n              });\n          }\n      });\n  }\n\n  onRemoveCountry(row: CountryOfTransfer): void {\n      this.countriesOfTransfer.splice(this.countriesOfTransfer.indexOf(row), 1);\n\n      this.countriesDataSource = new MatTableDataSource(this.countriesOfTransfer);\n\n      setTimeout(() => {\n          this.countriesDataSource.paginator = this.countryOfTransferPaginator;\n          this.countriesDataSource.sort = this.countryOfTransferMatSort;\n      });\n  }\n\n  onUploadAttachments(): void {\n      this.dialogRef = this.dialog.open(OrgUploadComponent, {\n          panelClass: ['organisation-upload-dialog', 'dialogs'],\n          disableClose: true,\n          data: {\n              multiple: false\n          }\n      });\n\n      this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: FileUpload }) => {\n          // console.log('row:', result.row);\n\n          if (result.status) {\n              this.document = result.row;\n          }\n      });\n  }\n\n  onRemoveDocument(): void {\n      this.document = null;\n  }\n\n  onDownloadForm3(): void {\n      // this.formGeneralInformation.get('OrganizationName').patchValue('Applied Principles Consulting');\n      // this.formGeneralInformation.get('Location').patchValue('Bukoto street 764');\n\n      this.dialogRef = this.dialog.open(OrgForm3DialogComponent, {\n          panelClass: ['organisation-form-3-dialog', 'dialogs'],\n          disableClose: true,\n          data: {\n              OrganisationName: this.formGeneralInformation.get('OrganizationName').value,\n              PhysicalAddress: this.formGeneralInformation.get('Location').value,\n              Date: new Date()\n          }\n      });\n  }\n\n  onUploadProofOfPayment(): void {\n      this.dialogRef = this.dialog.open(OrgUploadComponent, {\n          panelClass: ['organisation-upload-dialog', 'dialogs'],\n          disableClose: true,\n          data: {\n              multiple: false\n          }\n      });\n\n      this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: FileUpload }) => {\n\n          if (result.status) {\n              this.proofOfPayment = result.row;\n          }\n      });\n  }\n\n  onRemoveProofOfPaymen(): void {\n      this.proofOfPayment = null;\n  }\n\n  onUploadForm3Attachments(): void {\n      this.dialogRef = this.dialog.open(OrgUploadComponent, {\n          panelClass: ['organisation-upload-dialog', 'dialogs'],\n          disableClose: true,\n          data: {\n              multiple: false\n          }\n      });\n\n      this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: FileUpload }) => {\n          if (result.status) {\n              this.documentForm3 = result.row;\n          }\n      });\n  }\n\n  onRemoveForm3Document(): void {\n      this.documentForm3 = null;\n  }\n\n  onChangeSubCategory(event: MatCheckboxChange, SubCategory: DataSubCategory): void {\n      if (event.checked) {\n          this.selectedDataSubCategory.push(SubCategory);\n      } else {\n          this.selectedDataSubCategory.splice(this.selectedDataSubCategory.indexOf(SubCategory), 1);\n      }\n  }\n\n  private fetchMultiple(OrgID: any): Observable<any[]> {\n      this.processing = true;\n      const reqCountries = this.http.get<ApiPayload>(this.endpoints.countries);\n      const reqDataSources = this.http.get<ApiPayload>(this.endpoints.dataSources);\n      const reqOrganisationType = this.http.get<ApiPayload>(this.endpoints.organisationType);\n      const reqSector = this.http.get<ApiPayload>(this.endpoints.sector);\n      const reqDataSubcategories = this.http.get<ApiPayload>(this.endpoints.dataSubcategories);\n      const reqDataPurpose = this.http.get<ApiPayload>(this.endpoints.dataPurpose);\n      const reqNatureOfBusiness = this.http.get<ApiPayload>(this.endpoints.natureOfBusiness);\n      const reqFetchOrganisatioDetails = this.http.get<ApiPayload>(this.endpoints.getUpdatedRegistrationDetails, {params: {RegTrackingNo: OrgID}});\n\n      // tslint:disable-next-line:max-line-length\n      return forkJoin([reqCountries, reqDataSources, reqOrganisationType, reqSector, reqDataSubcategories, reqDataPurpose, reqNatureOfBusiness, reqFetchOrganisatioDetails]);\n  }\n\n  private getFormData(): any {\n      const data = {\n          OrganisationID: this.application && this.application.OrganisationID ? String(this.application.OrganisationID) : '',\n          RegTrackingNo: this.application && this.application.RegTrackingNo ? this.application.RegTrackingNo : '',\n          OrganisationName: this.formGeneralInformation.get('OrganizationName').value,\n          OrganisationCategory: this.selectedOrganisationCategories,\n          OrganizationTypeID: this.formGeneralInformation.get('OrganizationTypeID').value,\n          CountryOfIncorporation: this.formGeneralInformation.get('CountryOfIncorporation').value ? this.formGeneralInformation.get('CountryOfIncorporation').value : 0,\n          URSBNumber: this.formGeneralInformation.get('URSBNumber').value ? this.formGeneralInformation.get('URSBNumber').value : '',\n          SectorID: this.formGeneralInformation.get('SectorID').value,\n          OtherSector: this.formGeneralInformation.get('OtherSector').value ? this.formGeneralInformation.get('OtherSector').value : '',\n          Location: this.formGeneralInformation.get('Location').value,\n          // tslint:disable-next-line:max-line-length\n          PhoneNumber: this.formGeneralInformation.get('PhoneNumberCode').value + (this.formGeneralInformation.get('PhoneNumber').value).replaceAll(' ', ''),\n          EmailAddress: this.formGeneralInformation.get('EmailAddress').value,\n          NatureOfBusinessCatID: this.formGeneralInformation.get('NatureOfBusinessCat').value ? this.formGeneralInformation.get('NatureOfBusinessCat').value : 0,\n          NatureOfBusiness: this.selectedNatureOfBusinessSubCat,\n          DPORequired: this.formOrganisationDetails.get('DPORequired').value,\n          DPOName: this.formOrganisationDetails.get('DPORequired').value === 'Yes' ? this.formOrganisationDetails.get('DPOName').value : '',\n          DPOPhysicalAddress: this.formOrganisationDetails.get('DPORequired').value === 'Yes' ? this.formOrganisationDetails.get('DPOPhysicalAddress').value : '',\n          // tslint:disable-next-line:max-line-length\n          DPOPhoneNumber: this.formOrganisationDetails.get('DPOPhoneNumber').value ? this.formOrganisationDetails.get('PhoneNumberCode').value + (this.formOrganisationDetails.get('DPOPhoneNumber').value).replaceAll(' ', '') : '',\n          DPOEmailAddress: this.formOrganisationDetails.get('DPORequired').value === 'Yes' ? this.formOrganisationDetails.get('DPOEmailAddress').value : '',\n          DPOPositionInOrganisation: this.formOrganisationDetails.get('DPORequired').value === 'Yes' ? this.formOrganisationDetails.get('DPOPositionInOrganisation').value : '',\n          SourceOfDataID: this.selectedDataSources,\n          PersonalDataCollected: this.selectedDataSubCategory,\n          Purpose: this.selectedDataPurposes,\n          SpecifyTheLaw: this.formPurposeRetention.get('SpecifyTheLaw').value ? this.formPurposeRetention.get('SpecifyTheLaw').value : '',\n          ServiceOrProductProvided: this.formPurposeRetention.get('ServiceOrProductProvided').value ? this.formPurposeRetention.get('ServiceOrProductProvided').value : '',\n          SpecifyLegalObligation: this.formPurposeRetention.get('SpecifyLegalObligation').value ? this.formPurposeRetention.get('SpecifyLegalObligation').value : '',\n          // tslint:disable-next-line:max-line-length\n          TotalRecordsAtRegistration: this.formPurposeRetention.get('TotalRecordsAtRegistration').value ? parseInt(this.formPurposeRetention.get('TotalRecordsAtRegistration').value, 10) : 0,\n          RecordPercentageGrowth: this.formPurposeRetention.get('RecordPercentageGrowth').value ? parseInt(this.formPurposeRetention.get('RecordPercentageGrowth').value, 10) : 0,\n          RetentionPeriod: this.formPurposeRetention.get('RetentionPeriod').value ? parseInt(this.formPurposeRetention.get('RetentionPeriod').value, 10) : 0,\n          PersonalDataIsForDisclosure: this.formThirdParties.get('PersonalDataIsForDisclosure').value,\n          ThirdParties: this.thirdParties,\n          StoreDataOutsideCountry: this.formThirdParties.get('StoreDataOutsideCountry').value,\n          Countries: this.countriesOfTransfer,\n          SecurityMeasures: this.securityMeasures,\n          Attachment: this.document && this.document.Base64 ? this.document.Base64 : '',\n          Form3Attachment: this.documentForm3 && this.documentForm3.Base64 ? this.documentForm3.Base64 : '',\n          RegistrationConsent: this.formSecurityMeasures.get('RegistrationConsent').value ? true : false,\n          RegistrationDoneBy: this.formSecurityMeasures.get('RegistrationDoneBy').value ? this.formSecurityMeasures.get('RegistrationDoneBy').value : '',\n          ProofOfPayment: this.proofOfPayment && this.proofOfPayment.Base64 ? this.proofOfPayment.Base64 : '',\n          ChildrenDataPurpose: this.selectedChildDataPurposes ? this.selectedChildDataPurposes : [],\n          CollectChildrenData: this.formChildrenData.get('CollectChildrenData').value ? this.formChildrenData.get('CollectChildrenData').value : '',\n      };\n\n      return data;\n  }\n\n  onNatureOfBusinessCatSelected(NatureOfBusinessCatId): void {\n      // console.log('here:', NatureOfBusinessCatId);\n      // tslint:disable-next-line:max-line-length\n      this.httpSub = this.http.get<NatureOfBusinessSubCat[]>(this.endpoints.natureOfBusiness + '?NatureOfBusinessSubCat=' + NatureOfBusinessCatId)\n      .pipe(catchError(this.service.handleError))\n      .subscribe((response) => {\n          \n          this.natureOfBusinessSubCat = response;\n          // console.log('natureOfBusinessSubCat:', this.natureOfBusinessSubCat);\n\n          }, (error) => {\n              this.processing = false;\n              this.service.determineErrorResponse(error);\n          });\n  }\n\n  onPreviewForm(download: boolean): void {\n      this.dialogRef = this.dialog.open(OrgRegistrationPreviewDialogComponent, {\n          panelClass: ['organisation-registration-preview-form-3-dialog', 'dialogs'],\n          disableClose: true,\n          data: {\n              download: download,\n              row: this.getFormData(),\n              Attachment: this.document ? this.document : '',\n              Form3: this.documentForm3 ? this.documentForm3 : '',\n              ProofOfPayment: this.proofOfPayment ? this.proofOfPayment : '',\n              OrganizationType: this.OrganizationType,\n              // tslint:disable-next-line:max-line-length\n              Sector: this.formGeneralInformation.get('OtherSector').value ? this.formGeneralInformation.get('OtherSector').value : this.SectorName,\n              NatureOfBusinessCat: this.NatureOfBusinessCat,\n              CountryOfIncorporation: this.CountryOfIncorporation\n          }\n      });\n  }\n\n  fetchSingleApplication(response): void {\n      this.application = response.data;\n\n      response = response.data;\n      console.log(this.application)\n\n      // console.log('application:', this.application);\n      // console.log('_StepRequestingForMoreInfo:', this._StepRequestingForMoreInfo);\n\n      this.hasRequestForMoreInfo(this.application.RegTrackingNo);\n      this.findDocumentActions(1, this.application.CurrentStepID);\n      this.getDocumentWorkflow(this.application.RegTrackingNo, this.workflowID);\n\n     \n\n      if (this.application.OrganisationCategory) {\n        let organisationCategories: any = this.application.OrganisationCategory;\n        let cat: number[] = [];\n    \n        organisationCategories.filter((item) => {\n          cat.push(item.OrganisationCategoryId);\n        });\n    \n        this.formGeneralInformation.get('DPPActCategory').patchValue(cat);\n      }\n  \n      this.formGeneralInformation.get('OrganizationTypeID').patchValue(this.application.OrganizationTypeID);\n      this.formGeneralInformation.get('OrganizationName').patchValue(this.application.OrganisationName);\n      this.formGeneralInformation.get('URSBNumber').patchValue(this.application.URSBNumber);\n      this.formGeneralInformation.get('SectorID').patchValue(this.application.SectorID);\n      this.formGeneralInformation.get('CountryOfIncorporation').patchValue(this.application['CountryOfIncorporation']);\n      this.formGeneralInformation.get('OtherSector').patchValue(this.application['OtherSector']);\n      this.formGeneralInformation.get('Location').patchValue(this.application.Location);\n      this.formGeneralInformation.get('PhoneNumberCode').patchValue(this.application.PhoneNumber.substring(0, 3));\n      this.formGeneralInformation.get('PhoneNumber').patchValue(this.application.PhoneNumber.substring(3, 13));\n      this.formGeneralInformation.get('EmailAddress').patchValue(this.application.EmailAddress);\n  \n      if (this.application['NatureOfBusiness'].length) {\n        this.formGeneralInformation.get('NatureOfBusinessCat').patchValue(this.application['NatureOfBusinessCatID']);\n        \n        let natureOfbusinesses: NatureOfBusiness[] = this.application['NatureOfBusiness'];\n        let natureOfbusinesses_arr: any[] = [];\n  \n        let _selectedNatureOfBusinessSubCat: NatureOfBusinessSubCat[] = [];\n        natureOfbusinesses.filter((item) => {\n          natureOfbusinesses_arr.push(item['NatureOfBusinessSubCatId']);\n  \n          _selectedNatureOfBusinessSubCat.push({\n            NatureOfBusinessSubCatId: item['NatureOfBusinessSubCatId'],\n            NatureOfBusinessSubCategoryName: item.NatureOfBusinessSubCategoryName\n          });\n        });\n        \n        this.formGeneralInformation.get('NatureOfBusinessSubCat').patchValue(natureOfbusinesses_arr);\n        this.selectedNatureOfBusinessSubCat = _selectedNatureOfBusinessSubCat;\n      }\n  \n      // STEP TWO\n      this.formOrganisationDetails.get('DPORequired').patchValue(this.application['DPORequired']);\n  \n      this.formOrganisationDetails.get('DPOName').patchValue(this.application['DPOName']);\n      this.formOrganisationDetails.get('DPOPhysicalAddress').patchValue(this.application['DPOPhysicalAddress']);\n      this.formOrganisationDetails.get('PhoneNumberCode').patchValue(this.application['DPOPhoneNumber'].substring(0, 3));\n      this.formOrganisationDetails.get('DPOPhoneNumber').patchValue(this.application['DPOPhoneNumber'].substring(3, 13));\n      this.formOrganisationDetails.get('DPOEmailAddress').patchValue(this.application['DPOEmailAddress']);\n      this.formOrganisationDetails.get('DPOPositionInOrganisation').patchValue(this.application['DPOPositionInOrganisation']);\n  \n      // STEP THREE\n      let sourceofdata = this.application['SourceOfDataID'];\n      let sourceofdata_arr: number [] = [];\n      \n      sourceofdata.filter((item) => {\n        sourceofdata_arr.push(item.DataSourceID);\n      });\n  \n      this.formPersonalDataHeld.get('SourceOfDataID').patchValue(sourceofdata_arr);\n  \n      if (this.application['PersonalDataCollected']) {\n        const personalDataCollected: any[] = this.application['PersonalDataCollected'];\n    \n        this.dataCategories.filter((category) => {\n          category.SubCategories.filter((subCat) => {\n            personalDataCollected.filter((selectedSubCat) => {            \n              if (subCat.DataSubCategoryID === selectedSubCat.DataSubCategoryID) {\n                subCat.IsChecked = true;\n                this.selectedDataSubCategory.push(subCat);\n              }\n            });\n          });\n        });\n      }\n  \n      // STEP FOUR\n      const purpose: any = this.application['Purpose'];\n      let purpose_arr: any[] = [];\n      let _selectedDataPurposes: DataPurposes[]  = [];\n  \n      purpose.filter((item) => {\n        if (item.DataPurposeID === 1) {\n          this.SpecifyTheLaw = true;\n          this.formPurposeRetention.get('SpecifyTheLaw').setValidators([Validators.required]);\n        }\n  \n        if (item.DataPurposeID === 3) {\n          this.ServiceOrProductProvided = true;\n          this.formPurposeRetention.get('ServiceOrProductProvided').setValidators([Validators.required]);\n        }\n  \n        if (item.DataPurposeID === 6) {\n          this.SpecifyLegalObligation = true;\n          this.formPurposeRetention.get('SpecifyLegalObligation').setValidators([Validators.required]);\n        }\n  \n        purpose_arr.push(item.DataPurposeID);\n  \n        _selectedDataPurposes.push(item);\n      });\n      \n      this.formPurposeRetention.get('Purpose').patchValue(purpose_arr);\n      this.selectedDataPurposes = _selectedDataPurposes;\n  \n      this.formPurposeRetention.get('SpecifyTheLaw').patchValue(this.application['SpecifyTheLaw']);\n      this.formPurposeRetention.get('ServiceOrProductProvided').patchValue(this.application['ServiceOrProductProvided']);\n      this.formPurposeRetention.get('SpecifyLegalObligation').patchValue(this.application['SpecifyLegalObligation']);\n      this.formPurposeRetention.get('TotalRecordsAtRegistration').patchValue(this.application['TotalRecordsAtRegistration']);\n      this.formPurposeRetention.get('RecordPercentageGrowth').patchValue(this.application['RecordPercentageGrowth']);\n      this.formPurposeRetention.get('RetentionPeriod').patchValue(this.application['RetentionPeriod']);\n  \n      // STEP FIVE\n      this.formThirdParties.get('PersonalDataIsForDisclosure').patchValue(this.application['PersonalDataIsForDisclosure'].replace(/\\s/g, ''));\n      this.thirdParties = this.application['ThirdParties'];\n      this.thirdPartyDataSource = new MatTableDataSource(this.thirdParties);\n  \n      setTimeout(() => {\n        this.thirdPartyDataSource.paginator = this.thirdPartyPaginator;\n        this.thirdPartyDataSource.sort = this.thirdPartyMatSort;\n      });\n  \n      this.formThirdParties.get('StoreDataOutsideCountry').patchValue(this.application['StoreDataOutsideCountry']);\n      this.countriesOfTransfer = this.application['Countries'];\n      this.countriesDataSource = new MatTableDataSource(this.countriesOfTransfer);\n  \n      setTimeout(() => {\n        this.countriesDataSource.paginator = this.countryOfTransferPaginator;\n        this.countriesDataSource.sort = this.countryOfTransferMatSort;\n      });\n  \n      // STEP SIX\n      this.securityMeasures = this.application['SecurityMeasures'];\n      this.securityMeasureDataSource = new MatTableDataSource(this.securityMeasures);\n      setTimeout(() => {\n          this.securityMeasureDataSource.paginator = this.securityMeasurePaginator;\n          this.securityMeasureDataSource.sort = this.securityMeasureMatSort;\n      });\n  \n      if (this.application.Attachment) {\n        this.document = { \n          Document: null, \n          Name: 'Supporting Documentation.pdf', \n          Size: null, \n          Base64: this.application.Attachment \n        };\n      }\n  \n      if (this.application.Form3Attachment) {\n        this.documentForm3 = { \n          Document: null, \n          Name: 'Form 3.pdf', \n          Size: null, \n          Base64: this.application.Form3Attachment \n        };\n      }\n  \n      if (this.application.ProofOfPayment) {\n        this.proofOfPayment = {\n            Document: null, \n            Name: 'Proof of Payment.pdf', \n            Size: null, \n            Base64: this.application.ProofOfPayment \n        };\n      }\n  \n      this.formSecurityMeasures.get('RegistrationConsent').patchValue(this.application['RegistrationConsent'] == true ? true : null);\n      this.formSecurityMeasures.get('RegistrationDoneBy').patchValue(this.application['RegistrationDoneBy']);    \n    \n  }\n\n  onSubmit(): void {\n      this.processing = true;\n      // console.log('save the registration information:', this.getFormData());\n\n      this.httpSub = this.http.post<ApiPayload>(this.endpoints.orgRegistration, this.getFormData())\n          .pipe(catchError(this.service.handleError))\n          .subscribe((response) => {\n\n              // console.log('response:', response);\n\n              // Clear all the form Data\n\n              // console.log('response:', response);\n              // Show the dialog window for processing payment.\n\n              this.dialogRef = this.dialog.open(SuccessfulMessageDialogComponent, {\n                  panelClass: ['successful-message-dialog', 'dialogs'],\n                  disableClose: true,\n                  data: {\n                      title: response.message['title'],\n                      message: response.message['body'],\n                      status: response.code === 200 ? true : false,\n                  }\n              });\n\n              this.dialogRef.afterClosed().subscribe(() => {\n                  window.location.reload();\n              });\n\n              this.processing = false;\n          }, (error) => {\n              this.processing = false;\n\n              if (error.error.message) {\n                  this.dialogRef = this.dialog.open(SuccessfulMessageDialogComponent, {\n                      panelClass: ['successful-message-dialog', 'dialogs'],\n                      disableClose: true,\n                      data: {\n                          title: error.error.message['title'],\n                          message: error.error.message['body'],\n                          status: false,\n                      }\n                  });\n              } else {\n                  this.service.determineErrorResponse(error);\n              }\n          });\n  }\n\n  onSubmitRequestedInfor(): void {\n      this.processing = true;\n      // console.log('save the registration information:', this.getFormData());\n\n      this.httpSub = this.http.put<ApiPayload>(this.endpoints.orgRegistration, this.getFormData())\n          .pipe(catchError(this.service.handleError))\n          .subscribe((response) => {\n\n              this.dialogRef = this.dialog.open(SuccessfulMessageDialogComponent, {\n                  panelClass: ['successful-message-dialog', 'dialogs'],\n                  disableClose: true,\n                  data: {\n                      title: response.message['title'],\n                      message: response.message['body'],\n                      status: response.code === 200 ? true : false,\n                  }\n              });\n\n              this.dialogRef.afterClosed().subscribe(() => {\n                  // window.location.reload();\n                  // this.getDataFromMultipleRequests();\n                  this.route.navigate(['/company-registration/find']);\n              });\n\n              this.processing = false;\n          }, (error) => {\n              this.processing = false;\n\n              if (error.error.message) {\n                  this.dialogRef = this.dialog.open(SuccessfulMessageDialogComponent, {\n                      panelClass: ['successful-message-dialog', 'dialogs'],\n                      disableClose: true,\n                      data: {\n                          title: error.error.message['title'] ? error.error.message['title'] : 'Operation Failed',\n                          message: error.error.message['body'] ? error.error.message['body'] : environment.technicalErrorResponse,\n                          status: false,\n                      }\n                  });\n              } else {\n                  this.service.determineErrorResponse(error);\n              }\n          });\n  }\n\n  ngOnDestroy(): void {\n      if (this.httpSub) { this.httpSub.unsubscribe(); }\n      if (this.bottomsheetRef) { this.bottomsheetRef.dismiss(); }\n  }\n\n  // DisableByStatus\n  disableByStatus() {\n      if ((this.isApplicant && this.application &&\n              this.application.CurrentStepName !== 'Application Review - Legal' &&\n              this.application.CurrentStepName !== 'Application Review - Legal' &&\n              this.application.CurrentStepName !== 'Final Approver' &&\n              this.application.CurrentStepName !== 'Application Review - Technical' &&\n              this.application.CurrentStepName !== 'Certificate Issued') ||\n          (!this.isApplicant)) {\n          this.disableAllControls();\n      }\n  }\n\n  disableAllControls() {\n      this.formSecurityMeasures.disable();\n      this.formGeneralInformation.disable();\n      this.formOrganisationDetails.disable();\n      this.formPersonalDataHeld.disable();\n      this.formPurposeRetention.disable();\n      this.formThirdParties.disable();\n  }\n\n \n\n  \n\n \n\n\n\n  viewApplicationTimeLine() {\n      this.dialog.open(ApplicationTimelineComponent, {\n          width: '941px',\n          height: '595px',\n          data: this.workflowTimeLine\n      });\n  }\n\n \n\n  onReadDocument(document: FileUpload): void {\n      // console.log('document:', document);\n      this.bottomsheetRef = this.bottomsheet.open(ViewPdfDocumentBottomsheetComponent, {\n          disableClose: true,\n          panelClass: ['view-pdf-document-bottomsheet', 'bottomsheets'],\n          data: {\n            url: document.Base64,\n            title: document.Name\n          }\n      });      \n  }\n\n  getSelectedPurpose(): string {\n      let _purpose = '';\n      this.selectedDataPurposes.filter((item, index: number) => {\n          _purpose += (index > 0 ? ', ' : '') +  item.DataPurpose \n      });\n\n      return _purpose;\n  }\n\n  getSelectedNatureOfBusinessSubCat(): string {\n      let _subcategories = '';\n      this.selectedNatureOfBusinessSubCat.filter((item, index: number) => {\n          _subcategories += (index > 0 ? ', ' : '') +  item.NatureOfBusinessSubCategoryName \n      });\n\n      return _subcategories;\n  }\n\n\n  forwardToLegal(){\n\n    const dialogRef = this.dialog.open(UpdateRegistrationComponent, {\n      width: '500px',\n      height: '200px',\n      data: {\n          Status: 8,   \n          OrganisationID : this.OrgID\n          \n      }     \n  });\n\n    \n  }\n\n  approveRegistrationDetailsUpdate(){\n\n    const dialogRef = this.dialog.open(UpdateRegistrationComponent, {\n      width: '500px',\n      height: '200px',\n      data: {\n          Status: 'approved',   \n          OrganisationID : this.OrgID,\n          data : this.new_data\n\n          \n      }     \n  });\n  }\n\n}\n","\n<fury-page-layout mode=\"card\">\n    <fury-page-layout-header>\n        <fury-breadcrumbs \n            [@fadeInRight] \n            [crumbs]=\"[application ? application.OrganisationName : 'New Application']\"\n            [current]=\" application ? application.RegTrackingNo : 'New Application' \">\n        </fury-breadcrumbs>\n    </fury-page-layout-header>\n\n    <fury-page-layout-content [@fadeInUp]>\n        \n        <div class=\"actions-button-padding\">\n            <mat-toolbar>    \n                <mat-toolbar-row>\n                    \n\n                    <span class=\"example-spacer\"></span>\n\n                    <button *ngIf=\"CurrentStepID === 7\"\n                    mat-raised-button \n                    matTooltip=\"Forward to legal\" \n                    class=\"actions-button-padding\" \n                    color=\"primary\" \n                    (click)=\"forwardToLegal()\">\n                    <span>Forward to legal</span>\n                    </button>\n\n                    <button *ngIf=\"CurrentStepID === 8\"\n                    mat-raised-button \n                    matTooltip=\"Approve Update\" \n                    class=\"actions-button-padding\" \n                    color=\"primary\" \n                    (click)=\"approveRegistrationDetailsUpdate()\">\n                    <span>Approve Changes</span>\n                    </button>\n\n                </mat-toolbar-row>\n            </mat-toolbar>\n        </div>\n\n        <main class=\"fadeInUp _delay4ms\">\n\n            <!-- <app-page-breadcrumb [title]=\"'Application for New Registration / Renewal'\"></app-page-breadcrumb> -->\n        \n            <mat-horizontal-stepper \n                [linear]=\"isLinear\"\n                [selectedIndex]=\"selectedIndex\"\n                labelPosition=\"bottom\" #stepper>\n        \n                <mat-step [stepControl]=\"formGeneralInformation\">\n                    <ng-template matStepLabel>\n                        <h3>Applicant</h3>\n\n                        <span class=\"request-for-more-info-count\" *ngIf=\"formFieldSections[0].Count\">{{ formFieldSections[0].Count }}</span>\n                    </ng-template>\n        \n                    <form [formGroup]=\"formGeneralInformation\">\n                        <h1 class=\"full-width step-header\">Details of the applicant which could be an organisation or Individual that collects or processes Personal Data </h1>\n        \n                        <mat-form-field>\n                            <mat-label>Name of Organisation <span class=\"required-field\">required</span></mat-label>\n                            <input appUppercase matInput formControlName=\"OrganizationName\">       \n                            <mat-error *ngIf=\"formGeneralInformation.get('OrganizationName').invalid\">{{ getOrganizationNameErrorMessage() }}</mat-error>\n                        </mat-form-field>  \n        \n                        <!-- <mat-form-field [hintLabel]=\"'Data Protection & Privacy Act Categories'\"> -->\n                        <!-- <mat-form-field [hintLabel]=\"'Are you a Data Collector/ Data Processor / Data Controller ?'\"> -->\n                        <mat-form-field [hintLabel]=\"'Choose all that apply'\">\n                            <mat-label>Category <span class=\"required-field\">required</span></mat-label>\n                            <mat-select multiple formControlName=\"DPPActCategory\">\n                                <mat-option *ngFor=\"let cat of organisationCategories\" [value]=\"cat.OrganisationCategoryId\">\n                                    {{ cat.OrganisationCategoryName }}\n                                </mat-option>\n                            </mat-select>   \n                            <mat-error *ngIf=\"formGeneralInformation.get('DPPActCategory').invalid\">{{ getSelectErrorMessage() }}</mat-error> \n                        </mat-form-field>                             \n        \n                        <mat-form-field>\n                            <mat-label>Type of Organisation <span class=\"required-field\">required</span></mat-label>\n                            <mat-select formControlName=\"OrganizationTypeID\" #typeOfOrganisation>\n                                <mat-option *ngFor=\"let type of organisationTypes\" (click)=\"OrganizationType = type.OrganisationType\" [value]=\"type.OrganisationTypeID\">\n                                    {{ type.OrganisationType }}\n                                </mat-option>\n                            </mat-select>\n                            <mat-error *ngIf=\"formGeneralInformation.get('OrganizationTypeID').invalid\">{{ getSelectErrorMessage() }}</mat-error> \n                        </mat-form-field>                   \n        \n                        <mat-form-field *ngIf=\"typeOfOrganisation.value && typeOfOrganisation.value !== 4\">\n                            <mat-label>Country of Incorporation <span class=\"required-field\">required</span></mat-label>\n                            <mat-select formControlName=\"CountryOfIncorporation\">\n                                <mat-option *ngFor=\"let country of countries\" (click)=\"CountryOfIncorporation = country.Name\" [value]=\"country.CountryID\">\n                                    {{ country.Name }}\n                                </mat-option>\n                            </mat-select>\n                            <mat-error *ngIf=\"formGeneralInformation.get('CountryOfIncorporation').invalid\">{{ getSelectErrorMessage() }}</mat-error> \n                        </mat-form-field>        \n        \n                        <mat-form-field *ngIf=\"typeOfOrganisation.value && typeOfOrganisation.value !== 4\">\n                            <mat-label>Registration Number <span class=\"required-field\">required</span></mat-label>\n                            <input appUppercase appRemoveSpaces matInput maxlength=\"25\" formControlName=\"URSBNumber\"> \n                            <mat-error *ngIf=\"formGeneralInformation.get('URSBNumber').invalid\">{{ getURSBNumberErrorMessage() }}</mat-error>\n                        </mat-form-field>     \n                        \n                        <mat-form-field>\n                            <mat-label>Sector <span class=\"required-field\">required</span></mat-label>\n                            <mat-select formControlName=\"SectorID\" #Sector>\n                                <mat-option *ngFor=\"let sector of sectors\" (click)=\"SectorName = sector.Sector\" [value]=\"sector.SectorID\">\n                                    {{ sector.Sector }}\n                                </mat-option>\n                            </mat-select>\n                            <mat-error *ngIf=\"formGeneralInformation.get('SectorID').invalid\">{{ getSelectErrorMessage() }}</mat-error>\n                        </mat-form-field>        \n                        \n                        <mat-form-field hintLabel=\"If Other, Please specify the Sector.\" *ngIf=\"Sector.value === 14\">\n                            <mat-label>Specify Sector <span class=\"required-field\">required</span></mat-label>\n                            <input appUppercase matInput maxlength=\"50\" formControlName=\"OtherSector\">    \n                            <mat-error *ngIf=\"formGeneralInformation.get('OtherSector').invalid\">{{ getOtherSectorErrorMessage() }}</mat-error>\n                        </mat-form-field>                 \n        \n                        <!-- <mat-form-field *ngIf=\"formGeneralInformation.get('PublicBodyTypeID').value === '6'\">\n                            <mat-label>Type of Local Government <span class=\"required-field\">required</span></mat-label>\n                            <mat-select formControlName=\"LocalGovernmentType\">\n                                <mat-option value=\"1\">Body Corporate or otherwise established by Act of Parliament</mat-option>\n                                <mat-option value=\"2\">Cabinet</mat-option>\n                                <mat-option value=\"3\">Court</mat-option>\n                                <mat-option value=\"4\">Commission established by Act of Parliament</mat-option>\n                                <mat-option value=\"5\">Government Department</mat-option>\n                                <mat-option value=\"6\">Local Government Adminstration</mat-option>\n                            </mat-select>\n                        </mat-form-field>                    -->\n                        \n                        <!-- <mat-form-field *ngIf=\"formGeneralInformation.get('PublicBodyTypeID').value === '6'\">\n                            <mat-label>Statute <span class=\"required-field\">required</span></mat-label>\n                            <input appUppercase appRemoveSpaces matInput maxlength=\"255\" formControlName=\"Statute\">                            \n                        </mat-form-field>    \n                         -->\n                        <mat-form-field>\n                            <mat-label>Physical Address <span class=\"required-field\">required</span></mat-label>\n                            <input appUppercase matInput maxlength=\"255\" formControlName=\"Location\">            \n                            <mat-error *ngIf=\"formGeneralInformation.get('Location').invalid\">{{ getLocationErrorMessage() }}</mat-error>                \n                        </mat-form-field>  \n        \n                        <!-- <mat-form-field>\n                            <mat-label>Name of Head of Organisation <span class=\"required-field\">required</span></mat-label>\n                            <input appUppercase appRemoveSpaces matInput maxlength=\"255\" formControlName=\"HeadOfOrganization\">                            \n                        </mat-form-field>    \n        \n                        <mat-form-field>\n                            <mat-label>Title of Head of Organisation <span class=\"required-field\">required</span></mat-label>\n                            <input appUppercase appRemoveSpaces matInput maxlength=\"255\" formControlName=\"TitleOfOrganizationHead\">                            \n                        </mat-form-field>     -->\n        \n                        <!-- <mat-form-field>\n                            <mat-label>Postal Address <span class=\"optional-field\">optional</span></mat-label>\n                            <input appUppercase appRemoveSpaces matInput maxlength=\"255\" formControlName=\"PostalAddress\">                            \n                        </mat-form-field>     -->\n        \n                        <!-- Improve the country code to be dynamic -->\n                        <!-- <mat-form-field>\n                            <span matPrefix>+256 &nbsp;</span>\n                            <mat-label>Organisation Telephone Number <span class=\"required-field\">required</span></mat-label>\n                            <input appTelephoneFormaterDirective maxlength=\"11\" matInput formControlName=\"PhoneNumber\">           \n                        </mat-form-field>    -->\n        \n                        <div class=\"telephone-code-number-wrapper\">\n                            <mat-form-field class=\"fadeInUp _delay2ms\">\n                                <mat-label>Pick one </mat-label>\n                                <mat-select formControlName=\"PhoneNumberCode\">\n                                    <mat-option selected *ngIf=\"!selected\" value=\"256\">+256</mat-option>\n                                    <!-- <mat-option selected *ngIf=\"!selected\" value=\"256\">+256 - Uganda</mat-option> -->\n                                    <mat-option *ngFor=\"let code of countries\" [value]=\"code.PhoneCode\" (click)=\"selected = true\">\n                                        +{{ code.PhoneCode }}\n                                    </mat-option>\n                                </mat-select>\n                            </mat-form-field>\n        \n                            <!-- <mat-form-field class=\"fadeInUp _delay2ms\" [hintLabel]=\"'Organisation Telephone Number.'\"> -->\n                            <mat-form-field class=\"fadeInUp _delay2ms\">\n                                <mat-label>Organisation Telephone Number <span class=\"required-field\">required</span></mat-label>\n                                <input type=\"text\" maxlength=\"11\" matInput appTelephoneFormaterDirective formControlName=\"PhoneNumber\" placeholder=\"Ex. 414 318 111\">\n                                <mat-error *ngIf=\"formGeneralInformation.get('PhoneNumber').invalid\">{{ getTelephoneNumberErrorMessage() }}</mat-error>\n                            </mat-form-field> \n                        </div>                \n        \n                        <!-- <mat-form-field>\n                            <span matPrefix>+256 &nbsp;</span>\n                            <mat-label>Land Line <span class=\"optional-field\">optional</span></mat-label>\n                            <input appTelephoneFormaterDirective maxlength=\"11\" matInput formControlName=\"Landline\">           \n                        </mat-form-field>    -->\n        \n                        <mat-form-field>\n                            <mat-label>Organisation Email Address <span class=\"required-field\">required</span></mat-label>\n                            <input appRemoveSpaces matInput formControlName=\"EmailAddress\">\n                            <mat-error *ngIf=\"formGeneralInformation.get('EmailAddress').invalid\">{{ getEmailAddressErrorMessage() }}</mat-error>\n                        </mat-form-field>   \n        \n                        <!-- <mat-form-field hintLabel=\"Select all the roles performed\">\n                            <mat-label>Nature of Business <span class=\"required-field\">required</span></mat-label>\n                            <mat-select multiple formControlName=\"RolesPerformedID\">\n                                <mat-option value=\"1\">Protection of National Security</mat-option>\n                                <mat-option value=\"2\">Public revenue collection</mat-option>\n                                <mat-option value=\"3\">Enforcement of law which imposes a pecuniary penalty</mat-option>\n                                <mat-option value=\"4\">Conduct proceedings before any court</mat-option>\n                            </mat-select>    \n                        </mat-form-field>     -->\n        \n                        <mat-form-field>\n                            <mat-label>Nature of Business Categories<span class=\"required-field\">required</span></mat-label>\n                            <mat-select formControlName=\"NatureOfBusinessCat\">\n                                <mat-option *ngFor=\"let cat of natureOfBusinessCat\" (click)=\"NatureOfBusinessCat = cat.NatureOfBusinessCategoryName\" [value]=\"cat.NatureOfBusinessCatId\">\n                                    {{ cat.NatureOfBusinessCategoryName }}\n                                </mat-option>\n                            </mat-select>    \n                            <mat-error *ngIf=\"formGeneralInformation.get('NatureOfBusinessCat').invalid\">{{ getSelectErrorMessage() }}</mat-error>\n                        </mat-form-field>                   \n        \n                        <mat-form-field [hintLabel]=\"'Choose all that apply'\" *ngIf=\"_hasRequestMoreInfo && !isOfficer && formGeneralInformation.get('NatureOfBusinessSubCat').enabled\">\n                            <mat-label>Nature of Business Sub-Categories <span class=\"required-field\">required</span></mat-label>\n                            <mat-select multiple formControlName=\"NatureOfBusinessSubCat\">\n                                <mat-option *ngFor=\"let sub of natureOfBusinessSubCat\" [value]=\"sub.NatureOfBusinessSubCatId\" [matTooltip]=\"sub.NatureOfBusinessSubCategoryName\">\n                                    {{ sub.NatureOfBusinessSubCategoryName }}\n                                </mat-option>\n                            </mat-select> \n                            <mat-error *ngIf=\"formGeneralInformation.get('NatureOfBusinessSubCat').invalid\">{{ getSelectErrorMessage() }}</mat-error>   \n                        </mat-form-field>      \n                        \n                        <!-- For viewing purposes only -->\n                        <mat-form-field class=\"span-2-columns\" [hintLabel]=\"'Choose all that apply'\" *ngIf=\"!_hasRequestMoreInfo || (_hasRequestMoreInfo && formGeneralInformation.get('NatureOfBusinessSubCat').disabled) || isOfficer\">\n                            <mat-label>Nature of Business Sub-Categories ?<span class=\"required-field\">required</span></mat-label>\n                            <textarea matInput [value]=\"getSelectedNatureOfBusinessSubCat()\" disabled class=\"textarea-small\"></textarea>\n                        </mat-form-field>                          \n        \n                        <!-- <mat-form-field class=\"full-width\" hintLabel=\"What are the main activities of the organisation ?\">\n                            <mat-label>Nature of Business<span class=\"required-field\">required</span></mat-label>\n                            <textarea #CaseTitleInput matInput maxlength=\"1000\" formControlName=\"NatureOfBusiness\" placeholder=\"\"></textarea>\n                            <mat-hint align=\"end\">{{ CaseTitleInput.value.length }} / 1000</mat-hint>\n                        </mat-form-field>                      -->\n                        \n                        <!-- <section class=\"expand-section reduced-properties table-wrapper\">\n                            <button \n                                mat-button\n                                color=\"primary\"\n                                [disabled]=\"processing\"\n                                class=\"add-item-button\"\n                                (click)=\"onAddMainActivity()\">\n                                <div class=\"button-label\">\n                                    <mat-icon>add</mat-icon>                            \n                                    <span>Add A Main Activity</span>\n                                </div>\n                            </button>\n        \n                            <p class=\"description\">What are the main activities of the organisation ?</p>\n                            \n                            <div class=\"table-wrapper\">\n                                <table \n                                    mat-table \n                                    #dpoMatSort=\"matSort\"\n                                    matSortDisableClear=\"true\"\n                                    [dataSource]=\"mainActivitiesDataSource\"\n                                    matSort>\n                    \n                                    <ng-container matColumnDef=\"Count\">\n                                        <th mat-header-cell *matHeaderCellDef> # </th>\n                                        <td mat-cell *matCellDef=\"let index = index\"> {{ index + 1 }} </td>\n                                    </ng-container>\n                    \n                                    <ng-container matColumnDef=\"MainActivity\">\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Main Activities </th>\n                                        <td mat-cell *matCellDef=\"let row\">{{ row.Activity }}</td>\n                                    </ng-container>                      \n                    \n                                    <ng-container matColumnDef=\"Actions\">\n                                        <th mat-header-cell *matHeaderCellDef> Actions </th>\n                                        <td mat-cell *matCellDef=\"let row; let index = index\">\n                                            <button \n                                                mat-button \n                                                class=\"action-btn\"\n                                                [matMenuTriggerFor]=\"menu\" \n                                                (click)=\"$event.stopPropagation()\"\n                                                matTooltip=\"See more options\">\n                                                <mat-icon>more_vert</mat-icon>\n                                            </button>\n                    \n                                            <mat-menu yPosition=\"below\" #menu=\"matMenu\" class=\"more-options-mat-menu\">\n                    \n                                                <button \n                                                    mat-menu-item \n                                                    (click)=\"$event.stopPropagation();onEditMainActivity(row)\">\n                                                    <mat-icon>edit</mat-icon>\n                                                    <span>Make Changes</span>\n                                                </button>\n                                                      \n                                                <hr />\n                    \n                                                <button \n                                                    mat-menu-item \n                                                    (click)=\"$event.stopPropagation();onRemoveMainActivity(row)\">\n                                                    <mat-icon color=\"warn\">delete</mat-icon>\n                                                    <span>Remove</span>\n                                                </button>\n                    \n                                            </mat-menu>                                                  \n                                        </td>\n                                    </ng-container>\n                    \n                                    <tr mat-header-row *matHeaderRowDef=\"MainActivitiesDisplayedColumns\"></tr>\n                                    <tr mat-row *matRowDef=\"let row; columns: MainActivitiesDisplayedColumns;\" class=\"mat-data-row\"></tr>\n                                </table>\n        \n                                <mat-paginator \n                                    #dpoPaginator\n                                    [pageSize]=\"10\"\n                                    [pageSizeOptions]=\"[5, 10]\">\n                                </mat-paginator>                    \n                            </div>                \n                        </section>                      -->\n                        \n                    </form>\n        \n                    <div class=\"button-wrapper single-button\">\n                        <button  *ngIf=\"!isViewOnly\"\n                            mat-button \n                            color=\"primary\" >\n                            Save as Draft\n                        </button>       \n        \n                        <button \n                            [disabled]=\"formGeneralInformation.invalid\"\n                            mat-button \n                            class=\"next-btn\" \n                            color=\"primary\" \n                            matStepperNext>\n                            Next\n                        </button>\n                    </div>             \n                </mat-step>\n        \n                <mat-step [stepControl]=\"formOrganisationDetails\">\n                    <ng-template matStepLabel>\n                        <h3>Data Protection <br />Officer</h3>\n\n                        <span class=\"request-for-more-info-count\" *ngIf=\"formFieldSections[1].Count\">{{ formFieldSections[1].Count }}</span>\n                    </ng-template>\n        \n                    <form [formGroup]=\"formOrganisationDetails\">     \n        \n                        <h1 class=\"full-width step-header\">Details of Data Protection Officer </h1>    \n                        \n                        <!-- If yes... all the fields should be required. -->\n        \n                        <div class=\"grouped-items\" [ngClass]=\"{'full-width': formOrganisationDetails.get('DPORequired').value !== 'Yes'}\">\n                            <h3>Do you have a designated data protection officer ? </h3>\n        \n                            <mat-radio-group \n                                color=\"primary\" \n                                formControlName=\"DPORequired\" \n                                aria-label=\"Pick one\">\n                                <mat-radio-button [ngClass]=\"{'selected-radio-btn': formOrganisationDetails.get('DPORequired').value === 'Yes' }\" value=\"Yes\">Yes</mat-radio-button>\n                                <mat-radio-button [ngClass]=\"{'selected-radio-btn': formOrganisationDetails.get('DPORequired').value === 'No' }\" value=\"No\">No</mat-radio-button>\n                            </mat-radio-group>        \n                        </div>                  \n                        \n                        <mat-form-field *ngIf=\"formOrganisationDetails.get('DPORequired').value === 'Yes'\">\n                            <mat-label>Name <span class=\"required-field\">required</span></mat-label>\n                            <input formControlName=\"DPOName\" matInput>\n                            <mat-error *ngIf=\"formOrganisationDetails.get('DPOName').invalid\">{{ getDPONameErrorMessage() }}</mat-error>\n                        </mat-form-field>\n                \n                        <mat-form-field *ngIf=\"formOrganisationDetails.get('DPORequired').value === 'Yes'\">\n                            <mat-label>Physical Address <span class=\"required-field\">required</span></mat-label>\n                            <input formControlName=\"DPOPhysicalAddress\" maxlength=\"255\" matInput>\n                            <mat-error *ngIf=\"formOrganisationDetails.get('DPOPhysicalAddress').invalid\">{{ getDPOPhysicalAddressErrorMessage() }}</mat-error>\n                        </mat-form-field>\n        \n                        <!-- <mat-form-field >\n                            <span matPrefix>+256 &nbsp;</span>\n                            <mat-label>Telephone Number <span class=\"required-field\">required</span></mat-label>\n                            <input appTelephoneFormaterDirective maxlength=\"11\" matInput formControlName=\"DPOPhoneNumber\">           \n                        </mat-form-field>  -->\n                        \n                        <div class=\"telephone-code-number-wrapper\" *ngIf=\"formOrganisationDetails.get('DPORequired').value === 'Yes'\">\n                            <mat-form-field class=\"fadeInUp _delay2ms\">\n                                <mat-label>Pick one </mat-label>\n                                <mat-select formControlName=\"PhoneNumberCode\">\n                                    <mat-option selected *ngIf=\"!DPOSelected\" value=\"256\">+256</mat-option>\n                                    <!-- <mat-option selected *ngIf=\"!selected\" value=\"256\">+256 - Uganda</mat-option> -->\n                                    <mat-option *ngFor=\"let code of countries\" [value]=\"code.PhoneCode\" (click)=\"DPOSelected = true\">\n                                        +{{ code.PhoneCode }}\n                                    </mat-option>\n                                </mat-select>\n                                <!-- <mat-error *ngIf=\"formGeneralInformation.get('PhoneNumberCode').invalid\">{{ getSelectInputErrorMessage() }}</mat-error>      -->\n                            </mat-form-field>\n        \n                            <!-- <mat-form-field class=\"fadeInUp _delay2ms\" [hintLabel]=\"'Organisation Telephone Number.'\"> -->\n                            <mat-form-field class=\"fadeInUp _delay2ms\">\n                                <mat-label>Telephone Number <span class=\"required-field\">required</span></mat-label>\n                                <input type=\"text\" maxlength=\"11\" matInput appTelephoneFormaterDirective formControlName=\"DPOPhoneNumber\" placeholder=\"Ex. 414 318 111\">\n                                <mat-error *ngIf=\"formOrganisationDetails.get('DPOPhoneNumber').invalid\">{{ getDPOPhoneNumberErrorMessage() }}</mat-error>\n                            </mat-form-field> \n                        </div>                  \n                \n                        <mat-form-field *ngIf=\"formOrganisationDetails.get('DPORequired').value === 'Yes'\">\n                            <mat-label>Email Address <span class=\"required-field\">required</span></mat-label>\n                            <input appRemoveSpaces formControlName=\"DPOEmailAddress\" matInput>\n                            <mat-error *ngIf=\"formOrganisationDetails.get('DPOEmailAddress').invalid\">{{ getDPOEmailAddressErrorMessage() }}</mat-error>\n                        </mat-form-field>       \n        \n                        <mat-form-field *ngIf=\"formOrganisationDetails.get('DPORequired').value === 'Yes'\" class=\"full-width\" hintLabel=\"Any other title held apart from DPO (Data Protection Officer).\">\n                            <mat-label>Title Held <span class=\"required-field\">required</span></mat-label>\n                            <textarea #PositionInput matInput formControlName=\"DPOPositionInOrganisation\" maxlength=\"1000\"></textarea>\n                            <mat-hint align=\"end\">{{ PositionInput.value.length }} / 1000</mat-hint>\n                            <mat-error *ngIf=\"formOrganisationDetails.get('DPOPositionInOrganisation').invalid\">{{ getDPOPositionInOrganisationErrorMessage() }}</mat-error>\n                        </mat-form-field>                  \n                    </form>\n        \n                    <div class=\"button-wrapper\">       \n                        <button mat-button class=\"back-btn\" matStepperPrevious>Back</button>   \n                        <button  *ngIf=\"!isViewOnly\"\n                            mat-button \n                            color=\"primary\" >\n                            Save as Draft\n                        </button>  \n                        <button \n                            [disabled]=\"formOrganisationDetails.invalid\"\n                            mat-button \n                            class=\"next-btn\" \n                            color=\"primary\" \n                            matStepperNext>\n                            Next\n                        </button>\n                    </div>             \n                </mat-step>\n        \n                <mat-step [stepControl]=\"formPersonalDataHeld\">\n                    <ng-template matStepLabel>\n                        <h3>Data Collected <br /> or Processed</h3>\n\n                        <span class=\"request-for-more-info-count\" *ngIf=\"formFieldSections[2].Count\">{{ formFieldSections[2].Count }}</span>\n                    </ng-template>\n        \n                    <form [formGroup]=\"formPersonalDataHeld\" class=\"personal-data-affected\">       \n                        \n                        <h1 class=\"full-width step-header\">Description of Data collected or processed </h1>\n        \n                        <mat-form-field hintLabel=\"Choose all that apply.\" class=\"full-width\">\n                            <mat-label>Source of Data <span class=\"required-field\">required</span></mat-label>\n                            <mat-select multiple formControlName=\"SourceOfDataID\">\n                                <mat-option *ngFor=\"let source of dataSources\" [value]=\"source.DataSourceID\">\n                                    {{ source.DataSource }}\n                                </mat-option>\n                            </mat-select>    \n                            <mat-error *ngIf=\"formPersonalDataHeld.get('SourceOfDataID').invalid\">{{ getSelectErrorMessage() }}</mat-error> \n                        </mat-form-field>        \n                        \n                        <!-- <div class=\"grouped-items\" class=\"span-2-columns\">\n                            <h3>Do you collect personal data relating to Children?</h3>\n            \n                            <mat-radio-group color=\"primary\" aria-label=\"Pick one\" formControlName=\"CollectChildrenData\">\n                                <mat-radio-button value=\"Yes\">Yes</mat-radio-button>\n                                <mat-radio-button value=\"No\">No</mat-radio-button>\n                            </mat-radio-group>        \n                        </div>   -->\n        \n                        <!-- <mat-form-field class=\"full-width personal-data-affected-field\" hintLabel=\"Choose all that apply\">\n                            <mat-label>Personal Data Collected Or Processed <span class=\"required-field\">required</span></mat-label>\n                            <mat-select [formControl]=\"dataCategory\" multiple>\n                                <mat-option \n                                    *ngFor=\"let category of dataCategories\" \n                                    [value]=\"category.Name\">\n                                    {{ category.Name }}\n                            </mat-option>\n                            </mat-select>\n                        </mat-form-field> -->\n        \n                        <h1 class=\"full-width heading\">Personal Data Collected Or Processed</h1>\n                        \n                        <section \n                            *ngFor=\"let category of dataCategories; let i = index\" \n                            class=\"expand-section categories\">        \n\n                            <div>\n                                <h3 [innerHTML]=\"category.DataCategory\"></h3>\n                                <mat-icon matTooltipPosition=\"right\"  [matTooltip]=\"category.DataDescription\">info</mat-icon>\n                            </div>\n\n                            <mat-checkbox [disabled]=\"isViewOnly && !personalDataCollectedCheckBoxEnabled\"\n                                *ngFor=\"let SubCategory of category.SubCategories\" \n                                [ngClass]=\"{'full-width': category.SubCategories.length === 1, 'selected-checkbox': SubCategory.IsChecked}\"\n                                color=\"primary\"\n                                [checked]=\"SubCategory.IsChecked\"\n                                (change)=\"onChangeSubCategory($event,SubCategory)\"\n                                [required]=\"'false'\">\n                                {{ SubCategory.DataSubCategory }}\n                            </mat-checkbox>\n                            \n                        </section>                            \n                    </form>\n        \n                    <div class=\"button-wrapper\">       \n                        <button mat-button class=\"back-btn\" matStepperPrevious>Back</button>\n        \n                        <button *ngIf=\"!isViewOnly\"\n                            mat-button \n                            color=\"primary\" >\n                            Save as Draft\n                        </button> \n\n                        <button \n                            [disabled]=\"formPersonalDataHeld.invalid || selectedDataSubCategory.length === 0\"\n                            mat-button \n                            class=\"next-btn\" \n                            color=\"primary\" \n                            matStepperNext>\n                            Next\n                        </button>\n                    </div>             \n                </mat-step>\n        \n                <mat-step [stepControl]=\"formPurposeRetention\">\n                    <ng-template matStepLabel>\n                        <h3>Purpose & Retention</h3>\n\n                        <span class=\"request-for-more-info-count\" *ngIf=\"formFieldSections[3].Count\">{{ formFieldSections[3].Count }}</span>\n                    </ng-template>\n        \n                    <form [formGroup]=\"formPurposeRetention\">       \n                        \n                        <h1 class=\"full-width step-header\">Description of Purpose for which data is collected or processed </h1>\n        \n                        <!-- <mat-form-field hintLabel=\"Why do you collect personal Data?\">\n                            <mat-label>For What Purpose ?<span class=\"required-field\">required</span></mat-label>\n                            <mat-select formControlName=\"Purpose\" multiple>\n                                <mat-option *ngFor=\"let purpose of dataPurposes\" [value]=\"purpose.DataPurposeID\">\n                                    {{ purpose.DataPurpose }}\n                                </mat-option>\n                            </mat-select>  \n                            <mat-error *ngIf=\"formPurposeRetention.get('Purpose').invalid\">{{ getSelectErrorMessage() }}</mat-error>   \n                        </mat-form-field> -->\n        \n                        <!-- For editing purposes only -->\n                        <mat-form-field *ngIf=\"_hasRequestMoreInfo && !isOfficer && formPurposeRetention.get('Purpose').enabled\" hintLabel=\"Why do you collect personal Data?\">\n                            <mat-label>For What Purpose ?<span class=\"required-field\">required</span></mat-label>\n                            <mat-select formControlName=\"Purpose\" multiple>\n                                <mat-option *ngFor=\"let purpose of dataPurposes\" [value]=\"purpose.DataPurposeID\">\n                                    {{ purpose.DataPurpose }}\n                                </mat-option>\n                            </mat-select>  \n                            <mat-error *ngIf=\"formPurposeRetention.get('Purpose').invalid\">{{ getSelectErrorMessage() }}</mat-error>   \n                        </mat-form-field>\n\n                        <!-- For viewing purposes only -->\n                        <mat-form-field class=\"full-width\" *ngIf=\"!_hasRequestMoreInfo || (_hasRequestMoreInfo && formPurposeRetention.get('Purpose').disabled) || isOfficer\" hintLabel=\"Why do you collect personal Data?\">\n                            <mat-label>For What Purpose ?<span class=\"required-field\">required</span></mat-label>\n                            <textarea matInput [value]=\"getSelectedPurpose()\" disabled class=\"textarea-small\"></textarea>\n                        </mat-form-field>   \n\n        \n                        <!-- For Edits -->\n                        <mat-form-field hintLabel=\"If the purpose is Collection / Processing is required by Law.\" *ngIf=\"SpecifyTheLaw && _hasRequestMoreInfo && !isOfficer && formPurposeRetention.get('SpecifyTheLaw').enabled\">\n                            <mat-label>Specify the Law <span class=\"required-field\">required</span></mat-label>\n                            <input matInput #SpecifyTheLawInput maxlength=\"1000\" formControlName=\"SpecifyTheLaw\">        \n                            <mat-hint align=\"end\">{{ SpecifyTheLawInput.value.length }} / 1000</mat-hint>    \n                            <mat-error *ngIf=\"formPurposeRetention.get('SpecifyTheLaw').invalid\">{{ getRequiredErrorMessage() }}</mat-error>\n                        </mat-form-field>  \n        \n                        <!-- For viewing only -->\n                        <mat-form-field class=\"full-width\" *ngIf=\"SpecifyTheLaw && (!_hasRequestMoreInfo || (_hasRequestMoreInfo && formPurposeRetention.get('SpecifyTheLaw').disabled) || isOfficer)\" hintLabel=\"If the purpose is Collection / Processing is required by Law.\">\n                            <mat-label>Specify the Law<span class=\"required-field\">required</span></mat-label>\n                            <textarea matInput formControlName=\"SpecifyTheLaw\" disabled class=\"textarea-small\"></textarea>\n                        </mat-form-field>                             \n        \n\n                        <!-- For Edits -->\n                        <mat-form-field hintLabel=\"If the purpose is to provide services / products to Individuals.\" *ngIf=\"ServiceOrProductProvided && _hasRequestMoreInfo && !isOfficer && formPurposeRetention.get('ServiceOrProductProvided').enabled\">\n                            <mat-label>Specify the Service / Product Provided<span class=\"required-field\">required</span></mat-label>\n                            <input matInput #ServiceOrProductProvidedInput maxlength=\"1000\" formControlName=\"ServiceOrProductProvided\">     \n                            <mat-hint align=\"end\">{{ ServiceOrProductProvidedInput.value.length }} / 1000</mat-hint>    \n                            <mat-error *ngIf=\"formPurposeRetention.get('ServiceOrProductProvided').invalid\">{{ getRequiredErrorMessage() }}</mat-error>\n                        </mat-form-field>  \n                        \n                        <!-- For viewing only -->\n                        <mat-form-field class=\"full-width\" *ngIf=\"ServiceOrProductProvided && (!_hasRequestMoreInfo || (_hasRequestMoreInfo && formPurposeRetention.get('ServiceOrProductProvided').disabled) || isOfficer)\" hintLabel=\"If the purpose is to provide services / products to Individuals.\">\n                            <mat-label>Specify the Service / Product Provided<span class=\"required-field\">required</span></mat-label>\n                            <textarea matInput formControlName=\"ServiceOrProductProvided\" disabled class=\"textarea-small\"></textarea>\n                        </mat-form-field>                              \n\n                        <!-- For Edits -->\n                        <mat-form-field hintLabel=\"If the purpose is for Compliance with a Legal Obligation.\" *ngIf=\"SpecifyLegalObligation && _hasRequestMoreInfo && !isOfficer && formPurposeRetention.get('SpecifyLegalObligation').enabled\">\n                            <mat-label>Specify the Legal Obligation<span class=\"required-field\">required</span></mat-label>\n                            <input matInput #SpecifyLegalObligationInput maxlength=\"50\" formControlName=\"SpecifyLegalObligation\">  \n                            <mat-hint align=\"end\">{{ SpecifyLegalObligationInput.value.length }} / 50</mat-hint>    \n                            <mat-error *ngIf=\"formPurposeRetention.get('SpecifyLegalObligation').invalid\">{{ getRequiredErrorMessage() }}</mat-error>\n                        </mat-form-field>  \n\n                        <!-- For viewing only -->\n                        <mat-form-field class=\"full-width\" *ngIf=\"SpecifyLegalObligation && (!_hasRequestMoreInfo || (_hasRequestMoreInfo && formPurposeRetention.get('SpecifyLegalObligation').disabled) || isOfficer)\" hintLabel=\"If the purpose is Collection / Processing is required by Law.\">\n                            <mat-label>Specify the Legal Obligation<span class=\"required-field\">required</span></mat-label>\n                            <textarea matInput formControlName=\"SpecifyLegalObligation\" disabled class=\"textarea-small\"></textarea>\n                        </mat-form-field>                              \n                        \n                        <mat-form-field hintLabel=\"Approximate number of Personal Data Records held.\">\n                            <mat-label>Total Records <span class=\"optional-field\">optional</span></mat-label>\n                            <input appCurrencyDirective matInput maxlength=\"14\" formControlName=\"TotalRecordsAtRegistration\">                            \n                            <mat-error *ngIf=\"formPurposeRetention.get('TotalRecordsAtRegistration').invalid\">{{ getPatternErrorMessage() }}</mat-error>\n                        </mat-form-field>  \n                        \n                        <mat-form-field hintLabel=\"The % annual growth of Personal Records held\">\n                            <mat-label>Percentage Annual Growth <span class=\"optional-field\">optional</span></mat-label>\n                            <input appCurrencyDirective matInput max=\"100\" maxlength=\"3\" formControlName=\"RecordPercentageGrowth\">                            \n                            <mat-error *ngIf=\"formPurposeRetention.get('RecordPercentageGrowth').invalid\">{{ getRecordPercentageGrowthErrorMessage() }}</mat-error>\n                            <mat-hint align=\"end\">Max. 100%</mat-hint>      \n                            <span matSuffix>%</span>\n                        </mat-form-field>   \n        \n                        <mat-form-field hintLabel=\"Duration for which personal data shall be kept (Years).\">\n                            <mat-label>Retention period <span class=\"required-field\">required</span></mat-label>\n                            <input appCurrencyDirective max=\"100\" matInput maxlength=\"3\" formControlName=\"RetentionPeriod\">                          \n                            <mat-error *ngIf=\"formPurposeRetention.get('RetentionPeriod').invalid\">{{ getRetentionPeriodErrorMessage() }}</mat-error>\n                            <mat-hint align=\"end\">Max. 100 years</mat-hint>      \n                            <span matSuffix>Year(s)</span>\n                        </mat-form-field>                            \n        \n                        <!-- <div class=\"grouped-items\">\n                            <h3>Did you get consent from the Data Subject ?</h3>\n            \n                            <mat-radio-group color=\"primary\" aria-label=\"Pick one\" formControlName=\"GetConsent\">\n                                <mat-radio-button value=\"Yes\">Yes</mat-radio-button>\n                                <mat-radio-button value=\"No\">No</mat-radio-button>\n                            </mat-radio-group>        \n                        </div>                 -->\n        \n                        <!-- <mat-form-field hintLabel=\"The nature of processing carried out on the personal data.\">\n                            <mat-label>Nature of Processing <span class=\"optional-field\">optional</span></mat-label>\n                            <mat-select multiple formControlName=\"NatureOfProcessing\">\n                                <mat-option value=\"\">Organized, adapted or altered for use in fulfilling organizations mandate and role</mat-option>\n                                <mat-option value=\"\">Data is stored and retrieved and used for internal consultation or verification</mat-option>\n                                <mat-option value=\"\">Data is disseminated or disclosed</mat-option>\n                            </mat-select>    \n                        </mat-form-field>     -->\n        \n                        <!-- <div class=\"grouped-items\">\n                            <h3>Do you process or store personal data outside Uganda ?</h3>\n            \n                            <mat-radio-group color=\"primary\" aria-label=\"Pick one\" formControlName=\"StoreDataOutsideCountry\">\n                                <mat-radio-button value=\"Yes\">Yes</mat-radio-button>\n                                <mat-radio-button value=\"No\">No</mat-radio-button>\n                            </mat-radio-group>        \n                        </div>    \n        \n                        <mat-form-field hintLabel=\"Where the personal data was obtained from.\">\n                            <mat-label>Countries <span class=\"required-field\">required</span></mat-label>\n                            <mat-select multiple formControlName=\"CountriesStoringYourData\">\n                                <mat-option value=\"1\">Kenya</mat-option>\n                                <mat-option value=\"2\">Tanzania</mat-option>\n                                <mat-option value=\"3\">United States</mat-option>\n                            </mat-select>    \n                        </mat-form-field>                     -->\n        <!--                 \n                        <section class=\"expand-section reduced-properties table-wrapper\">\n                            <h1>Identifiers</h1>\n        \n                            <mat-checkbox\n                                color=\"primary\"\n                                [required]=\"'false'\">\n                                Name\n                            </mat-checkbox>    \n        \n                            <mat-checkbox\n                                color=\"primary\"\n                                [required]=\"'false'\">\n                                Nationality\n                            </mat-checkbox>    \n        \n                            <mat-checkbox\n                                color=\"primary\"\n                                [required]=\"'false'\">\n                                Age\n                            </mat-checkbox>      \n        \n                        </section>    \n                         -->\n                        <!-- <section class=\"expand-section reduced-properties table-wrapper\">\n                            <h1>Individual Commercial Information</h1>\n        \n                            <mat-checkbox\n                                color=\"primary\"\n                                [required]=\"'false'\">\n                                Name\n                            </mat-checkbox>    \n        \n                            <mat-checkbox\n                                color=\"primary\"\n                                [required]=\"'false'\">\n                                Nationality\n                            </mat-checkbox>    \n        \n                            <mat-checkbox\n                                color=\"primary\"\n                                [required]=\"'false'\">\n                                Age\n                            </mat-checkbox>      \n        \n                        </section>     -->\n        \n                    </form>\n        \n                    <div class=\"button-wrapper\">       \n                        <button mat-button class=\"back-btn\" matStepperPrevious>Back</button>\n        \n                        <!-- <button  *ngIf=\"!isViewOnly\"\n                            mat-button \n                            color=\"primary\" >\n                            Save as Draft\n                        </button>  -->\n\n                        <button \n                            [disabled]=\"formPurposeRetention.invalid\"\n                            mat-button \n                            class=\"next-btn\" \n                            color=\"primary\" \n                            matStepperNext>\n                            Next\n                        </button>\n                    </div>             \n                </mat-step>\n                <!-- <mat-step [stepControl]=\"form\">\n                    <ng-template matStepLabel>\n                        <h3>Profile <br /></h3>\n                    </ng-template>\n        \n                    <form [formGroup]=\"form\">\n                        \n                    </form>\n        \n                    <div class=\"button-wrapper\">\n                        <button mat-button class=\"back-btn\" matStepperPrevious>Back</button>\n        \n                        <button \n                            mat-button \n                            [disabled]=\"form.invalid || processing\" \n                            class=\"next-btn\" \n                            color=\"primary\" \n                            matStepperNext>\n                            Next\n                        </button>\n                    </div>\n                </mat-step> -->\n        \n                <mat-step [stepControl]=\"formThirdParties\">\n                    <ng-template matStepLabel>\n                        <h3>Disclosure & Transfer</h3>\n\n                        <span class=\"request-for-more-info-count\" *ngIf=\"formFieldSections[4].Count\">{{ formFieldSections[4].Count }}</span>\n                    </ng-template>\n        \n                    <form [formGroup]=\"formThirdParties\">\n        \n                        <h1 class=\"full-width step-header\">List of persons or Bodies to whom personal data may be disclosed</h1>\n                        \n                        <div class=\"grouped-items full-width\">\n                            <h3>Do you disclose Personal Data to other Persons or Bodies ?</h3>\n            \n                            <mat-radio-group \n                                color=\"primary\" \n                                aria-label=\"Pick one\" \n                                formControlName=\"PersonalDataIsForDisclosure\">\n                                <mat-radio-button [ngClass]=\"{'selected-radio-btn': formThirdParties.get('PersonalDataIsForDisclosure').value === 'Yes' }\" value=\"Yes\">Yes</mat-radio-button>\n                                <mat-radio-button [ngClass]=\"{'selected-radio-btn': formThirdParties.get('PersonalDataIsForDisclosure').value === 'No' }\" value=\"No\">No</mat-radio-button>\n                            </mat-radio-group>        \n                        </div>    \n        \n                        <section \n                            *ngIf=\"formThirdParties.get('PersonalDataIsForDisclosure').value === 'Yes'\"\n                            class=\"expand-section reduced-properties table-wrapper fadeInUp _delay3ms\">\n                            <button *ngIf=\"!isViewOnly || (!isOfficer && _hasRequestMoreInfo && thirdPartiesEnabled)\"\n                                mat-button\n                                color=\"primary\"\n                                [disabled]=\"processing\"\n                                class=\"add-item-button\"\n                                (click)=\"onAddAThirdParty()\">\n                                <div class=\"button-label\">\n                                    <mat-icon>add</mat-icon>                            \n                                    <span>Add Person / Body</span>\n                                </div>\n                            </button>\n                            \n                            <div class=\"table-wrapper\">\n                                <table \n                                    mat-table \n                                    #thirdPartyMatSort=\"matSort\"\n                                    matSortDisableClear=\"true\"\n                                    [dataSource]=\"thirdPartyDataSource\"\n                                    matSort>\n                    \n                                    <ng-container matColumnDef=\"Count\">\n                                        <th mat-header-cell *matHeaderCellDef> # </th>\n                                        <td mat-cell *matCellDef=\"let index = index\"> {{ index + 1 }} </td>\n                                    </ng-container>\n                    \n                                    <ng-container matColumnDef=\"NameOfThirdParty\">\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Person / Body </th>\n                                        <td mat-cell *matCellDef=\"let row\">{{ row.ThirdPartyName }}</td>\n                                    </ng-container>          \n                    \n                                    <ng-container matColumnDef=\"Purpose\">\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Purpose </th>\n                                        <td mat-cell *matCellDef=\"let row\">{{ row.Purpose }}</td>\n                                    </ng-container>                                 \n                    \n                                    <!-- Actions Column -->\n                                    <ng-container matColumnDef=\"Actions\">\n                                        <th mat-header-cell *matHeaderCellDef> Actions </th>\n                                        <td mat-cell *matCellDef=\"let row; let index = index\">\n                                            <button \n                                                mat-button \n                                                class=\"action-btn\"\n                                                [disabled]=\"!_hasRequestMoreInfo || isOfficer || (_hasRequestMoreInfo && !thirdPartiesEnabled)\"\n                                                [matMenuTriggerFor]=\"menu\" \n                                                (click)=\"$event.stopPropagation()\"\n                                                matTooltip=\"See more options\">\n                                                <mat-icon>more_vert</mat-icon>\n                                            </button>\n                    \n                                            <mat-menu yPosition=\"below\" #menu=\"matMenu\" class=\"more-options-mat-menu\">\n                    \n                                                <button \n                                                    mat-menu-item \n                                                    (click)=\"$event.stopPropagation();onEditThirdParty(row)\">\n                                                    <mat-icon>edit</mat-icon>\n                                                    <span>Make Changes</span>\n                                                </button>\n                                                      \n                                                <hr />\n                    \n                                                <button \n                                                    mat-menu-item \n                                                    (click)=\"$event.stopPropagation();onRemoveThirdParty(row)\">\n                                                    <mat-icon color=\"warn\">delete</mat-icon>\n                                                    <span>Remove</span>\n                                                </button>\n                    \n                                            </mat-menu>                                                  \n                                        </td>\n                                    </ng-container>\n                    \n                                    <tr mat-header-row *matHeaderRowDef=\"thirdPartyDisplayedColumns\"></tr>\n                                    <tr mat-row *matRowDef=\"let row; columns: thirdPartyDisplayedColumns;\" class=\"mat-data-row\"></tr>\n                                </table>\n        \n                                <mat-paginator \n                                    #thirdPartyPaginator\n                                    [pageSize]=\"10\"\n                                    [pageSizeOptions]=\"[5, 10]\">\n                                </mat-paginator>                    \n                            </div>                \n                        </section>    \n                        \n                        <hr class=\"full-width\" />\n        \n                        <div class=\"grouped-items full-width\">\n                            <h3>Do you Transfer personal data outside Uganda ?</h3>\n            \n                            <mat-radio-group color=\"primary\" aria-label=\"Pick one\" formControlName=\"StoreDataOutsideCountry\">\n                                <mat-radio-button [ngClass]=\"{'selected-radio-btn': formThirdParties.get('StoreDataOutsideCountry').value === 'Yes' }\" value=\"Yes\">Yes</mat-radio-button>\n                                <mat-radio-button [ngClass]=\"{'selected-radio-btn': formThirdParties.get('StoreDataOutsideCountry').value === 'No' }\" value=\"No\">No</mat-radio-button>\n                            </mat-radio-group>        \n                        </div> \n        \n                        <section \n                            *ngIf=\"formThirdParties.get('StoreDataOutsideCountry').value === 'Yes'\"\n                            class=\"expand-section reduced-properties table-wrapper\">\n                            <button *ngIf=\"!isViewOnly || (!isOfficer && _hasRequestMoreInfo && countriesOfTransferEnabled)\"\n                                mat-button\n                                color=\"primary\"\n                                [disabled]=\"processing\"\n                                class=\"add-item-button\"\n                                (click)=\"onAddACountry()\">\n                                <div class=\"button-label\">\n                                    <mat-icon>add</mat-icon>                            \n                                    <span>Add A Country</span>\n                                </div>\n                            </button>\n                            \n                            <div class=\"table-wrapper\">\n                                <table \n                                    mat-table \n                                    #countryOfTransferMatSort=\"matSort\"\n                                    matSortDisableClear=\"true\"\n                                    [dataSource]=\"countriesDataSource\"\n                                    matSort>\n                    \n                                    <ng-container matColumnDef=\"Count\">\n                                        <th mat-header-cell *matHeaderCellDef> # </th>\n                                        <td mat-cell *matCellDef=\"let index = index\"> {{ index + 1 }} </td>\n                                    </ng-container>\n                    \n                                    <ng-container matColumnDef=\"Country\">\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Country </th>\n                                        <td mat-cell *matCellDef=\"let row\">{{ row.Country }}</td>\n                                    </ng-container>          \n                    \n                                    <ng-container matColumnDef=\"Purpose\">\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Purpose </th>\n                                        <td mat-cell *matCellDef=\"let row\">{{ row.Purpose }}</td>\n                                    </ng-container>                                 \n                    \n                                    <ng-container matColumnDef=\"Description\">\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Description </th>\n                                        <td mat-cell *matCellDef=\"let row\">{{ row.Description }}</td>\n                                    </ng-container>                                 \n                    \n                                    <!-- Actions Column -->\n                                    <ng-container matColumnDef=\"Actions\">\n                                        <th mat-header-cell *matHeaderCellDef> Actions </th>\n                                        <td mat-cell *matCellDef=\"let row; let index = index\">\n                                            <button \n                                                mat-button \n                                                class=\"action-btn\"\n                                                [disabled]=\"!_hasRequestMoreInfo || isOfficer || (_hasRequestMoreInfo && !countriesOfTransferEnabled)\"\n                                                [matMenuTriggerFor]=\"menu\" \n                                                (click)=\"$event.stopPropagation()\"\n                                                matTooltip=\"See more options\">\n                                                <mat-icon>more_vert</mat-icon>\n                                            </button>\n                    \n                                            <mat-menu yPosition=\"below\" #menu=\"matMenu\" class=\"more-options-mat-menu\">\n                    \n                                                <button \n                                                    mat-menu-item \n                                                    (click)=\"$event.stopPropagation();onEditCountry(row)\">\n                                                    <mat-icon>edit</mat-icon>\n                                                    <span>Make Changes</span>\n                                                </button>\n                                                      \n                                                <hr />\n                    \n                                                <button \n                                                    mat-menu-item \n                                                    (click)=\"$event.stopPropagation();onRemoveCountry(row)\">\n                                                    <mat-icon color=\"warn\">delete</mat-icon>\n                                                    <span>Remove</span>\n                                                </button>\n                    \n                                            </mat-menu>                                                  \n                                        </td>\n                                    </ng-container>\n                    \n                                    <tr mat-header-row *matHeaderRowDef=\"countryDisplayedColumns\"></tr>\n                                    <tr mat-row *matRowDef=\"let row; columns: countryDisplayedColumns;\" class=\"mat-data-row\"></tr>\n                                </table>\n        \n                                <mat-paginator \n                                    #countryOfTransferPaginator\n                                    [pageSize]=\"10\"\n                                    [pageSizeOptions]=\"[5, 10]\">\n                                </mat-paginator>                    \n                            </div>                \n                        </section>                   \n        \n                    </form>\n        \n                    <div class=\"button-wrapper\">\n                        <button mat-button class=\"back-btn\" matStepperPrevious>Back</button>\n                        <button  *ngIf=\"!isViewOnly\"\n                            mat-button \n                            color=\"primary\" >\n                            Save as Draft\n                        </button> \n                        <button \n                            mat-button \n                            [disabled]=\"formThirdParties.invalid \n                            || processing \n                            || ((formThirdParties.get('PersonalDataIsForDisclosure').value === 'Yes') && (thirdParties.length === 0)) \n                            || ((formThirdParties.get('StoreDataOutsideCountry').value === 'Yes') && (countries.length === 0))\" \n                            class=\"next-btn\" \n                            color=\"primary\" \n                            matStepperNext>\n                            Next\n                        </button>\n                    </div>\n                </mat-step>\n        \n                <mat-step [stepControl]=\"formSecurityMeasures\">\n                    <ng-template matStepLabel>\n                        <h3>Security Information</h3>\n\n                        <span class=\"request-for-more-info-count\" *ngIf=\"formFieldSections[5].Count\">{{ formFieldSections[5].Count }}</span>\n                    </ng-template>\n        \n                    <form [formGroup]=\"formSecurityMeasures\">\n        \n                        <h1 class=\"full-width step-header\">State security measures in place to safeguard personal data collected or processed.</h1>\n        \n                        <section class=\"expand-section reduced-properties table-wrapper no-padding\">\n                            <button *ngIf=\"!isViewOnly || securityMeasuresEnabled\"\n                                mat-button\n                                color=\"primary\"\n                                [disabled]=\"processing\"\n                                class=\"add-item-button\"\n                                (click)=\"onAddSecurityMeasure()\">\n                                <div class=\"button-label\">\n                                    <mat-icon>add</mat-icon>                            \n                                    <span>Add A Security Measure</span>\n                                </div>\n                            </button>\n                            \n                            <div class=\"table-wrapper\">\n                                <table \n                                    mat-table \n                                    #securityMeasureMatSort=\"matSort\"\n                                    matSortDisableClear=\"true\"\n                                    [dataSource]=\"securityMeasureDataSource\"\n                                    matSort>\n                    \n                                    <ng-container matColumnDef=\"Count\">\n                                        <th mat-header-cell *matHeaderCellDef> # </th>\n                                        <td mat-cell *matCellDef=\"let index = index\"> {{ index + 1 }} </td>\n                                    </ng-container>\n                    \n                                    <ng-container matColumnDef=\"SecurityMeasure\">\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Security Measure </th>\n                                        <td mat-cell *matCellDef=\"let row\">{{ row.SecurityMeasure }}</td>\n                                    </ng-container>                                  \n                    \n                                    <!-- Actions Column -->\n                                    <ng-container matColumnDef=\"Actions\">\n                                        <th mat-header-cell *matHeaderCellDef> Actions </th>\n                                        <td mat-cell *matCellDef=\"let row; let index = index\">\n                                            <button \n                                                mat-button \n                                                class=\"action-btn\"\n                                                [disabled]=\"!_hasRequestMoreInfo || isOfficer || (_hasRequestMoreInfo && !securityMeasuresEnabled)\"\n                                                [matMenuTriggerFor]=\"menu\" \n                                                (click)=\"$event.stopPropagation()\"\n                                                matTooltip=\"See more options\">\n                                                <mat-icon>more_vert</mat-icon>\n                                            </button>\n                    \n                                            <mat-menu yPosition=\"below\" #menu=\"matMenu\" class=\"more-options-mat-menu\">\n                \n                                                <button \n                                                    mat-menu-item \n                                                    (click)=\"$event.stopPropagation();onEditSecurityMeasure(row)\">\n                                                    <mat-icon>edit</mat-icon>\n                                                    <span>Make Changes</span>\n                                                </button>\n                                                      \n                                                <hr />\n                    \n                                                <button \n                                                    mat-menu-item \n                                                    (click)=\"$event.stopPropagation();onRemoveSecurityMeasure(row)\">\n                                                    <mat-icon color=\"warn\">delete</mat-icon>\n                                                    <span>Remove</span>\n                                                </button>                                        \n                    \n                                            </mat-menu>                                                  \n                                        </td>\n                                    </ng-container>\n                    \n                                    <tr mat-header-row *matHeaderRowDef=\"securityMeasuresDisplayedColumns\"></tr>\n                                    <tr mat-row *matRowDef=\"let row; columns: securityMeasuresDisplayedColumns;\" [ngClass]=\"{'selected-mat-data-row': selectedSpouse === row}\" class=\"mat-data-row\"></tr>\n                                </table>\n        \n                                <mat-paginator \n                                    #securityMeasurePaginator\n                                    [pageSize]=\"10\"\n                                    [pageSizeOptions]=\"[5, 10]\">\n                                </mat-paginator>                    \n                            </div>                \n                        </section>    \n                        \n                        <section class=\"expand-section reduced-properties table-wrapper margin documents\">\n                            <h1 class=\"full-width step-header\">Attach supporting documentation eg approved information security policy.</h1>\n        \n                            <div class=\"buttons\" *ngIf=\"!isViewOnly || (_hasRequestMoreInfo && _updateAttachment)\">\n                                <button *ngIf=\"!isViewOnly || (_hasRequestMoreInfo && _updateAttachment)\"\n                                    mat-button\n                                    color=\"primary\"\n                                    [disabled]=\"processing\"\n                                    class=\"add-item-button\"\n                                    (click)=\"onUploadAttachments()\">\n                                    <div class=\"button-label\">\n                                        <mat-icon>add</mat-icon>                            \n                                        <span> {{ document ? 'Replace Document' : 'Upload Attachment' }} </span>\n                                    </div>\n                                </button>\n            \n                                <button \n                                    mat-button\n                                    *ngIf=\"document && (!isViewOnly || (_hasRequestMoreInfo && _updateAttachment))\"\n                                    color=\"primary\"\n                                    [disabled]=\"processing\"\n                                    class=\"remove-button\"\n                                    (click)=\"onRemoveDocument()\">\n                                    <div class=\"button-label\">\n                                        <mat-icon>clear</mat-icon>\n                                        <span> Remove Document </span>\n                                    </div>\n                                </button>\n                            </div>\n        \n                            <div *ngIf=\"document && document.Base64\" class=\"uploaded-document\" matTooltip=\"Open Document\" (click)=\"onReadDocument(document)\">\n                                <img src=\"./assets/img/pdf.png\" alt=\"\">\n        \n                                <span>Document: {{ document.Name }} <span *ngIf=\"document.Size\">  -  {{ document.Size }} Mbs</span></span>\n                            </div>\n\n                            <p class=\"no-document-found\" *ngIf=\"document && !document.Base64\">No document found. Please attach</p>\n        \n                        </section>\n        \n                        <hr class=\"full-width\" />\n        \n                        <section class=\"expand-section reduced-properties table-wrapper margin documents\">\n                            <h1 class=\"full-width step-header\">Attach Form 3</h1>\n        \n                            <div class=\"buttons\" *ngIf=\"!isViewOnly || (_hasRequestMoreInfo && _updateForm3Attachment)\">\n                                <!-- <a \n                                    mat-button\n                                    color=\"accent\"\n                                    [disabled]=\"processing\"\n                                    target=\"_blank\"\n                                    download=\"Form 3 -  Undertaking Not to Process or Store Personal Data\"\n                                    class=\"add-item-button\"\n                                    href=\"./assets/docs/Form 3 -  Undertaking Not to Process or Store Personal Data.pdf\">\n                                    <div class=\"button-label\">\n                                        <mat-icon>sim_card_download</mat-icon>                            \n                                        <span>Download Form 3</span>\n                                    </div>\n                                </a> -->\n        \n                                <button\n                                    mat-button\n                                    *ngIf=\"!isViewOnly || (_hasRequestMoreInfo && _updateForm3Attachment)\"\n                                    color=\"accent\"\n                                    class=\"download-form\"                           \n                                    (click)=\"onDownloadForm3()\">\n                                    <div class=\"button-label\">\n                                        <mat-icon>sim_card_download</mat-icon>                            \n                                        <span>Download Form 3</span>\n                                    </div>                        \n                                </button>\n        \n                                <button *ngIf=\"!isViewOnly || (_hasRequestMoreInfo && _updateForm3Attachment)\"\n                                    mat-button\n                                    color=\"primary\"\n                                    [disabled]=\"processing\"\n                                    class=\"add-item-button\"\n                                    (click)=\"onUploadForm3Attachments()\">\n                                    <div class=\"button-label\">\n                                        <mat-icon>add</mat-icon>                            \n                                        <span> {{ documentForm3 ? 'Replace Form 3' : 'Upload Form 3' }} </span>\n                                    </div>\n                                </button>\n            \n                                <button *ngIf=\"documentForm3 && (!isViewOnly || (_hasRequestMoreInfo && _updateForm3Attachment))\"\n                                    mat-button\n                                    color=\"primary\"\n                                    [disabled]=\"processing\"\n                                    class=\"remove-button\"\n                                    (click)=\"onRemoveForm3Document()\">\n                                    <div class=\"button-label\">\n                                        <mat-icon>clear</mat-icon>\n                                        <span> Remove Document </span>\n                                    </div>\n                                </button>\n                            </div>\n        \n                            <div  *ngIf=\"documentForm3 && documentForm3.Base64\" class=\"uploaded-document\" matTooltip=\"Open Document\" (click)=\"onReadDocument(documentForm3)\">\n                                <img src=\"./assets/img/pdf.png\" alt=\"\">\n        \n                                <span>Document: {{ documentForm3.Name }} <span *ngIf=\"documentForm3.Size\">  -  {{ documentForm3.Size }} Mbs</span> </span>\n                            </div>\n\n                            <p class=\"no-document-found\" *ngIf=\"documentForm3 && !documentForm3.Base64\">No document found. Please attach</p>\n        \n                        </section>\n        \n                        <hr class=\"full-width\" />\n        \n                        <section class=\"expand-section reduced-properties table-wrapper margin documents\">\n                            <h1 class=\"full-width step-header\">Attach Proof of Payment</h1>\n        \n                            <div class=\"buttons\" *ngIf=\"!isViewOnly || (_hasRequestMoreInfo && _updateProofOfPayment)\">\n                                <button *ngIf=\"!isViewOnly || (_hasRequestMoreInfo && _updateProofOfPayment)\"\n                                    mat-button\n                                    color=\"primary\"\n                                    [disabled]=\"processing\"\n                                    class=\"add-item-button\"\n                                    (click)=\"onUploadProofOfPayment()\">\n                                    <div class=\"button-label\">\n                                        <mat-icon>add</mat-icon>                            \n                                        <span> {{ proofOfPayment ? 'Replace Document' : 'Upload Proof of Payment' }} </span>\n                                    </div>\n                                </button>\n            \n                                <button \n                                    mat-button\n                                    *ngIf=\"proofOfPayment && (!isViewOnly || (_hasRequestMoreInfo && _updateProofOfPayment))\"\n                                    color=\"primary\"\n                                    [disabled]=\"processing\"\n                                    class=\"remove-button\"\n                                    (click)=\"onRemoveProofOfPaymen()\">\n                                    <div class=\"button-label\">\n                                        <mat-icon>clear</mat-icon>\n                                        <span> Remove Document </span>\n                                    </div>\n                                </button>\n                            </div>\n        \n                            <div *ngIf=\"proofOfPayment && proofOfPayment.Base64\" class=\"uploaded-document\" matTooltip=\"Open Document\" (click)=\"onReadDocument(proofOfPayment)\">\n                                <img src=\"./assets/img/pdf.png\" alt=\"\">\n        \n                                <span>Document: {{ proofOfPayment.Name }} <span *ngIf=\"proofOfPayment.Size\">  -  {{ proofOfPayment.Size }} Mbs</span> </span>\n                            </div>\n\n                            <p class=\"no-document-found\" *ngIf=\"proofOfPayment && !proofOfPayment.Base64\">No document found. Please attach</p>\n        \n                        </section>\n        \n                        <hr class=\"full-width\" />\n        \n                        <mat-checkbox\n                            class=\"full-width selected-checkbox\"\n                            color=\"primary\"\n                            [checked]=\"true\"                            \n                            formControlName=\"RegistrationConsent\"\n                            color=\"primary\">\n                            I certify that the above information is correct and complete and here by apply to be registered as \n                            data collector/ data processor / data controller (This shall be based on th category selected) \n                            under the data Protection and Privacy Act.\n                            <mat-error *ngIf=\"formSecurityMeasures.get('RegistrationConsent').invalid\">{{ getCheckboxErrorMessage() }}</mat-error>   \n                        </mat-checkbox>       \n                        \n                        <mat-form-field class=\"full-width\" hintLabel=\"The person authorized to complete and submit this application on the behalf of the applicant organization\">\n                            <mat-label>Name and title of person submitting the application<span class=\"required-field\">required</span></mat-label>\n                            <input appUppercase #RegistrationDoneByInput matInput maxlength=\"50\" formControlName=\"RegistrationDoneBy\">  \n                            <mat-error *ngIf=\"formSecurityMeasures.get('RegistrationDoneBy').invalid\">{{ getRegistrationDoneByErrorMessage() }}</mat-error>                             \n                            <mat-hint align=\"end\">{{ RegistrationDoneByInput.value.length }} / 50</mat-hint>    \n                        </mat-form-field>                  \n        \n                    </form>\n        \n                    <div class=\"button-wrapper\">\n                        <button mat-button class=\"back-btn\" matStepperPrevious>Back</button>\n\n                        <!-- <button *ngIf=\"!isViewOnly\"\n                            mat-button \n                            color=\"primary\" >\n                            Save as Draft\n                        </button>  -->\n\n                        <div class=\"buttons\">\n                            <button  *ngIf=\"!isViewOnly\"\n                                mat-button\n                                color=\"primary\" \n                                [disabled]=\"formGeneralInformation.invalid || formOrganisationDetails.invalid || formPersonalDataHeld.invalid || formPurposeRetention.invalid || formThirdParties.invalid || formSecurityMeasures.invalid || processing || securityMeasures.length === 0 || !documentForm3 || !proofOfPayment\" \n                                class=\"download\" \n                                matTooltip=\"Keep a copy of the information you have filled in\"\n                                (click)=\"onPreviewForm(true)\">\n                                <div class=\"button-label\">\n                                    <mat-icon>sim_card_download</mat-icon>\n                                    <span>Download Form</span>\n                                </div>\n                            </button>\n        \n                            <button\n                                mat-button  *ngIf=\" !isViewOnly\"\n                                color=\"primary\" \n                                [disabled]=\"formGeneralInformation.invalid || formOrganisationDetails.invalid || formPersonalDataHeld.invalid || formPurposeRetention.invalid || formThirdParties.invalid || formSecurityMeasures.invalid || processing || securityMeasures.length === 0 || !documentForm3 || !proofOfPayment\" \n                                class=\"preview\" \n                                matTooltip=\"Have a look at all the information you have filled in before sending.\"\n                                (click)=\"onPreviewForm(false)\">\n                                <div class=\"button-label\">\n                                    <mat-icon>visibility</mat-icon>\n                                    <span>Preview Form</span>\n                                </div>\n                            </button>\n        \n                        \n                            <button  *ngIf=\"!isViewOnly\"\n                                mat-button \n                                class=\"next-btn submit-btn\" \n                                [disabled]=\"formGeneralInformation.invalid || formOrganisationDetails.invalid || formPersonalDataHeld.invalid || formPurposeRetention.invalid || formThirdParties.invalid || formSecurityMeasures.invalid || processing || securityMeasures.length === 0 || !documentForm3 || !proofOfPayment\" \n                                [ngClass]=\"{'inline-processing-btn': processing}\" \n                                color=\"primary\" \n                                (click)=\"onSubmit()\">\n                                <app-inline-mat-spinner *ngIf=\"processing\"></app-inline-mat-spinner>                  \n                                <span>Send Application</span>                    \n                            </button>                \n                        \n                            <!-- For submitting Request for more information -->\n                            <!-- <button *ngIf=\"_hasRequestMoreInfo\"\n                                mat-button \n                                class=\"next-btn submit-btn\" \n                                [disabled]=\"formGeneralInformation.invalid || formOrganisationDetails.invalid || formPersonalDataHeld.invalid || formPurposeRetention.invalid || formThirdParties.invalid || formSecurityMeasures.invalid || securityMeasures.length === 0\" \n                                color=\"primary\" \n                                (click)=\"onSubmitRequestedInfor()\">\n                                <span>Submit Changes Application</span>                    \n                            </button>                 -->\n\n                            <button *ngIf=\"_hasRequestMoreInfo && !isOfficer\"\n                                mat-button \n                                class=\"next-btn submit-btn\" \n                                color=\"primary\" \n                                (click)=\"onSubmitRequestedInfor()\">\n                                <span>Submit Changes Application</span>                    \n                            </button>                \n                        </div>\n                    </div>\n                </mat-step>\n        \n                <!-- <mat-step [stepControl]=\"form\">\n                    <ng-template matStepLabel>\n                        <h3>Legal <br /> Details</h3>\n                    </ng-template>\n        \n                    <form [formGroup]=\"form\">\n                        \n                    </form>\n        \n                    <div class=\"button-wrapper\">\n                        <button mat-button class=\"back-btn\" matStepperPrevious>Back</button>\n        \n                        <button \n                            mat-button \n                            [disabled]=\"form.invalid || processing\" \n                            class=\"next-btn\" \n                            color=\"primary\" \n                            matStepperNext>\n                            Next\n                        </button>\n                    </div>\n                </mat-step> -->\n        \n                <!-- <mat-step [stepControl]=\"formChildrenData\">\n                    <ng-template matStepLabel>\n                        <h3>Children <br /> Data</h3>\n                    </ng-template>\n        \n                    <form [formGroup]=\"formChildrenData\">\n                        \n                        <div class=\"grouped-items\">\n                            <h3>Do you collect personal data relating to Children?</h3>\n            \n                            <mat-radio-group color=\"primary\" aria-label=\"Pick one\" formControlName=\"CollectChildrenData\">\n                                <mat-radio-button value=\"Yes\">Yes</mat-radio-button>\n                                <mat-radio-button value=\"No\">No</mat-radio-button>\n                            </mat-radio-group>        \n                        </div>  \n        \n                        <mat-form-field>\n                            <mat-label>Please indicate who gave the consent <span class=\"required-field\">required</span></mat-label>\n                            <mat-select formControlName=\"ChildDataConsentor\">\n                                <mat-option value=\"1\">Parents / Guardian</mat-option>\n                                <mat-option value=\"2\">Relevant Authority</mat-option>\n                            </mat-select>    \n                        </mat-form-field>                  \n        \n                        <mat-form-field>\n                            <mat-label>Purpose for collection <span class=\"required-field\">required</span></mat-label>\n                            <mat-select formControlName=\"PurposeForCollectingChildData\">\n                                <mat-option value=\"1\">Comply with the Law</mat-option>\n                                <mat-option value=\"2\">Research or Statistical Purposes</mat-option>\n                            </mat-select>    \n                        </mat-form-field>      \n                        \n                        <mat-form-field>\n                            <mat-label>Indicate the law being complied with <span class=\"required-field\">required</span></mat-label>\n                            <mat-select formControlName=\"ChildLawPurpose\">\n                                <mat-option value=\"1\">Child Law</mat-option>\n                            </mat-select>    \n                        </mat-form-field>                   \n                        \n                        <mat-form-field>\n                            <mat-label>Indicate the research beign carried out.<span class=\"required-field\">required</span></mat-label>\n                            <textarea #CaseTitleInput matInput maxlength=\"1000\" formControlName=\"ChildResearchPurpose\"></textarea>\n                            <mat-hint align=\"end\">{{ CaseTitleInput.value.length }} / 1000</mat-hint>\n                        </mat-form-field>                     \n        \n                    </form>\n        \n                    <div class=\"button-wrapper\">\n                        <button mat-button class=\"back-btn\" matStepperPrevious>Back</button>\n        \n                        <button \n                            mat-button \n                            [disabled]=\"formChildrenData.invalid || processing\" \n                            class=\"next-btn\" \n                            color=\"primary\" \n                            (click)=\"onSubmit()\"\n                            matStepperNext>\n                            Submit\n                        </button>\n                    </div>\n                </mat-step> -->\n        \n                <!-- <mat-step>\n                    <ng-template matStepLabel>\n                        <h3>Payment</h3>          \n                    </ng-template>\n        \n                    <form>\n                        <h1 class=\"full-width step-header\">Show payment options.</h1>  \n                    </form>\n        \n                    <div class=\"button-wrapper single-button-start\">\n                        <button mat-button class=\"back-btn\" matStepperPrevious>Back</button>\n        \n                        <button \n                            mat-raised-button \n                            color=\"primary\" \n                            [ngClass]=\"{'inline-processing-btn': processing }\" \n                            [disabled]=\"processing\"                      \n                            (click)=\"onSubmit()\">\n                                <div class=\"btn-label\">\n                                    <app-inline-mat-spinner *ngIf=\"processing\"></app-inline-mat-spinner>                        \n                                    <span>Submit</span>\n                                </div>\n                        </button>\n                    </div>              \n                </mat-step> -->\n            </mat-horizontal-stepper>   \n        </main>\n    </fury-page-layout-content>\n</fury-page-layout>\n\n\n\n","import {HttpClient} from '@angular/common/http';\nimport {AfterContentInit, ChangeDetectorRef, Component, EventEmitter, Input, OnDestroy, OnInit, ViewChild} from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {MatDialog} from '@angular/material/dialog';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {forkJoin, Observable, Subscription} from 'rxjs';\nimport {\n    ApiPayload,\n    Country,\n    CountryOfTransfer,\n    DataCategory,\n    DataProtectionOfficer,\n    DataPurposes,\n    DataSource,\n    DataSubCategory,\n    FileUpload,\n    MainActivity,\n    NatureOfBusinessCat,\n    NatureOfBusinessSubCat,\n    OrganisationCategory,\n    OrganisationType,\n    Sector,\n    SecurityMeasure,\n    ThirdParty,\n    ChildrenDataPurpose\n} from '../../../../services/api.model';\nimport {catchError, filter, map, startWith} from 'rxjs/operators';\nimport {MatCheckboxChange} from '@angular/material/checkbox';\nimport {ApiEndpointsService} from '../../../../services/api-endpoints.service';\nimport {ApiService} from '../../../../services/api.service';\nimport {OrgNoticeComponent} from '../../../../layout/dialogs/org-registration/org-notice/org-notice.component';\nimport {OrgMainActivityComponent} from '../../../../layout/dialogs/org-registration/org-main-activity/org-main-activity.component';\nimport {\n    OrgDataProtectionOfficerComponent\n} from '../../../../layout/dialogs/org-registration/org-data-protection-officer/org-data-protection-officer.component';\nimport {\n    OrgSecurityMeasuresComponent\n} from '../../../../layout/dialogs/org-registration/org-security-measures/org-security-measures.component';\nimport {OrgThirdPartyComponent} from '../../../../layout/dialogs/org-registration/org-third-party/org-third-party.component';\nimport {OrgCountryComponent} from '../../../../layout/dialogs/org-registration/org-country/org-country.component';\nimport {OrgUploadComponent} from '../../../../layout/dialogs/org-upload/org-upload.component';\nimport {OrgForm3DialogComponent} from '../../../../layout/dialogs/org-registration/org-form3-dialog/org-form3-dialog.component';\nimport {\n    OrgRegistrationPreviewDialogComponent\n} from '../../../../layout/dialogs/org-registration/org-registration-preview-dialog/org-registration-preview-dialog.component';\nimport {SuccessfulMessageDialogComponent} from '../../../../layout/dialogs/successful-message-dialog/successful-message-dialog.component';\nimport {\n    Action,\n    ActionPerformed,\n    ActionPerformedRequestMoreInfo,\n    WorkFlowConstants,\n    WorkFlowStep,\n    WorkFlowTimeline\n} from '../../../models/document-workflow.model';\nimport {CertificateDetails, CertificateDetailsResponse, CheckListed, CompanyRegistrationModel} from '../company-registration.model';\nimport {BaseFuryForm} from '../../../../../@fury/shared/base-fury-form';\nimport {KeycloakService} from 'keycloak-angular';\nimport {WorkflowServiceService} from '../../../../services/workflow-service.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {$RequestMoreInfoField, Checked, Checklist, RequestMoreInfoField} from '../../../models/reference.model';\nimport {fadeInRightAnimation} from '../../../../../@fury/animations/fade-in-right.animation';\nimport {fadeInUpAnimation} from '../../../../../@fury/animations/fade-in-up.animation';\nimport {SnackBarService} from '../../../../pages/services/snack-bar.service';\nimport {CompanyRegistrationService} from '../../company-registration.service';\nimport {ReviewCommentsComponent} from '../../../../layout/review-comments/review-comments.component';\nimport {CertPreviewComponent} from '../cert-preview/cert-preview.component';\nimport {ApplicationTimelineComponent} from '../../../../layout/application-timeline/application-timeline.component';\nimport {ReferenceTableService} from '../../../../services/reference-table.service';\nimport {AuthenticationService} from '../../../../authentication/authentication.service';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { ViewPdfDocumentBottomsheetComponent } from '../../../../layout/bottomsheets/view-pdf-document-bottomsheet/view-pdf-document-bottomsheet.component';\nimport { environment } from '../../../../../environments/environment';\nimport { ComplaintService } from '../../../complaints/complaints.service';\n\n\n@Component({\n    selector: 'fury-app-update-registration',\n    templateUrl: './update-registration.component.html',\n    styleUrls: ['./update-registration.component.scss'],\n    animations: [fadeInRightAnimation, fadeInUpAnimation]\n})\nexport class UpdateRegistrationComponent extends BaseFuryForm implements OnInit, OnDestroy, AfterContentInit {\n\n    dialogRef;\n    bottomsheetRef;\n    processing = false;\n    formGeneralInformation: FormGroup;\n    formOrganisationDetails: FormGroup;\n    formPersonalDataHeld: FormGroup;\n    formPurposeRetention: FormGroup;\n    formSecurityMeasures: FormGroup;\n    formThirdParties: FormGroup;\n    formChildrenData: FormGroup;\n    selectedIndex = 0;\n    // selectedIndex = 3;\n    // isLinear = true;\n    isLinear = false;\n    today = new Date();\n    contactInformation = true;\n    sectors: Sector[];\n    countries: Country[];\n    selected = false;\n    DPOSelected = false;\n    organisationCategories: OrganisationCategory[] = [];\n    selectedOrganisationCategories: OrganisationCategory[] = [];\n    organisationTypes: OrganisationType[];\n    dataSources: DataSource[];\n    selectedDataSources: DataSource[] = [];\n    httpSub: Subscription;\n    MainActivitiesDisplayedColumns: string[] = ['Count', 'MainActivity', 'Actions'];\n    dpoDisplayedColumns: string[] = ['Count', 'Name', 'Telephone', 'Email', 'PhysicalAddress', 'Actions'];\n    securityMeasuresDisplayedColumns: string[] = ['Count', 'SecurityMeasure', 'Actions'];\n    thirdPartyDisplayedColumns: string[] = ['Count', 'NameOfThirdParty', 'Purpose', 'Actions'];\n    countryDisplayedColumns: string[] = ['Count', 'Country', 'Purpose', 'Description', 'Actions'];\n    mainActivities: MainActivity[] = [];\n    mainActivitiesDataSource: MatTableDataSource<MainActivity>;\n    dataProtectionOfficers: DataProtectionOfficer[] = [];\n    dpoDataSource: MatTableDataSource<DataProtectionOfficer>;\n    securityMeasures: SecurityMeasure[] = [];\n    securityMeasureDataSource: MatTableDataSource<SecurityMeasure>;\n    thirdParties: ThirdParty[] = [];\n    thirdPartyDataSource: MatTableDataSource<ThirdParty>;\n    countriesOfTransfer: CountryOfTransfer[] = [];\n    countriesDataSource: MatTableDataSource<CountryOfTransfer>;\n    selectedDataCategory: DataCategory[] = [];\n    selectedDataSubCategory: DataSubCategory[] = [];\n    dataCategories: DataCategory[];\n    dataPurposes: DataPurposes[];\n    childDataPurposes: ChildrenDataPurpose[] = [];\n    selectedChildDataPurposes: ChildrenDataPurpose[] = [];\n    selectedDataPurposes: DataPurposes[] = [];\n    natureOfBusinessCat: NatureOfBusinessCat[] = [];\n    natureOfBusinessSubCat: NatureOfBusinessSubCat[] = [];\n    selectedNatureOfBusinessSubCat: NatureOfBusinessSubCat[] = [];\n    SpecifyTheLaw = false;\n    ServiceOrProductProvided = false;\n    showChildrenDataFields = false;\n    SpecifyLegalObligation = false;\n    document: FileUpload | null;\n    documentForm3: FileUpload | null;\n    proofOfPayment: FileUpload | null;\n    OrganizationType = null;\n    SectorName = null;\n    NatureOfBusinessCat = null;\n    CountryOfIncorporation = null;\n    \n    //\n    role: string;\n    workflowID = '1';\n    workflowTimeLine: WorkFlowTimeline;\n    currentStep: WorkFlowStep;\n    certificateResponse: CertificateDetailsResponse;\n    certificateDetails: CertificateDetails;\n    accesses: string[];\n    regTrackingNo: string;\n    timeLineAccess: string[] = ['data-protection-officer-director', 'data-protection-officer-nita', 'data-protection-officer-technical', 'data-protection-officer-legal'];\n    isOfficer: boolean;\n    isApplicant: boolean;\n    _hasRequestMoreInfo = false;\n    _StepRequestingForMoreInfo = 0;\n    requestMoreInfoFields: RequestMoreInfoField[] = [];\n    canDownloadCertificate = false;\n    $checklist: Checklist[];\n    // Main Object\n    application: CompanyRegistrationModel = new CompanyRegistrationModel();\n    permittedActions: Action[] = [];\n    // Subscriptions\n    subscriptions: Subscription[] = [];\n    $resultRefChecklistEvent: EventEmitter<any> = new EventEmitter();\n    formFieldSections: { SectionID: number; SectionName: string; Count: number }[] = []\n    personalDataCollectedCheckBoxEnabled = false;\n    dataCategory = new FormControl();\n\n    @ViewChild('MainActivityPaginator', {static: false}) MainActivityPaginator: MatPaginator;\n    @ViewChild('MainActivityMatSort', {static: false}) MainActivityMatSort: MatSort;\n    @ViewChild('dpoPaginator', {static: false}) dpoPaginator: MatPaginator;\n    @ViewChild('dpoMatSort', {static: false}) dpoMatSort: MatSort;\n    @ViewChild('securityMeasurePaginator', {static: false}) securityMeasurePaginator: MatPaginator;\n    @ViewChild('securityMeasureMatSort', {static: false}) securityMeasureMatSort: MatSort;\n    @ViewChild('thirdPartyPaginator', {static: false}) thirdPartyPaginator: MatPaginator;\n    @ViewChild('thirdPartyMatSort', {static: false}) thirdPartyMatSort: MatSort;\n    @ViewChild('countryOfTransferPaginator', {static: false}) countryOfTransferPaginator: MatPaginator;\n    @ViewChild('countryOfTransferMatSort', {static: false}) countryOfTransferMatSort: MatSort;\n    @Input() checked: Boolean;\n\n    OrganizationID: number;\n    cat: number[] = [];\n    organisationcategories: any;\n    natureOfbusinesses: any;\n    natureOfbusinesses_arr: any = [];\n    sourceofdata: any;\n    sourceofdata_arr: any = [];\n    childDataPurposeResults:any = [];\n    purpose: any;\n    purpose_arr: any = [];\n\n    _updateAttachment = false;\n    _updateForm3Attachment = false;\n    _updateProofOfPayment = false;\n    securityMeasuresEnabled = false;\n    thirdPartiesEnabled = false;\n    countriesOfTransferEnabled = false;\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private service: ApiService,\n        private endpoints: ApiEndpointsService,\n        private dialog: MatDialog,\n        private bottomsheet: MatBottomSheet,\n        private http: HttpClient,\n        private route: Router,\n        public snackBar: SnackBarService,\n        private activateRoute: ActivatedRoute,\n        private changeDetector: ChangeDetectorRef,\n        public authService: KeycloakService,\n        public _authService: AuthenticationService,\n        public _workflowService: WorkflowServiceService,\n        public registrationService: CompanyRegistrationService,\n        private referenceService: ReferenceTableService,\n        public complaintService: ComplaintService,\n    ) {\n        super(\n            authService,\n            _workflowService,\n            registrationService,\n            complaintService\n        );\n\n        this.accesses = authService.getKeycloakInstance().resourceAccess['dps-frontend'].roles;\n        this.operationType = activateRoute.routeConfig.data.action;\n        this.regTrackingNo = this.route.getCurrentNavigation().extras.state.regTrackingNo;\n        \n        if (this.operationType === 'EDIT') {\n            this.isEditMode = true;\n        } else if (this.operationType === 'CREATE') {\n            this.isEditMode = false;\n        } else if (this.operationType === 'VIEW') {\n            this.isEditMode = false;\n            this.isViewOnly = true;\n        } else if (this.operationType === 'MANAGE') {\n            this.isEditMode = false;\n            this.isViewOnly = true;\n        }\n\n        // console.log('isViewOnly:', this.isViewOnly);\n\n        this.pageTitle();\n\n        this.formFieldSections = [\n            {\n                SectionID: 1,\n                SectionName: 'Applicant',\n                Count: 0,\n            },\n            {\n                SectionID: 2,\n                SectionName: 'Data Protection Officer',\n                Count: 0,\n            },\n            {\n                SectionID: 3,\n                SectionName: 'Data Collected or Processed',\n                Count: 0,\n            },\n            {\n                SectionID: 4,\n                SectionName: 'Purpose & Retention',\n                Count: 0,\n            },\n            {\n                SectionID: 5,\n                SectionName: 'Disclosure & Transfer',\n                Count: 0,\n            },\n            {\n                SectionID: 6,\n                SectionName: 'Security Information',\n                Count: 0,\n            },\n        ]        \n    }\n\n    pageTitle() {\n        const pageTitle = this.isOfficer ? this.application.OrganisationName + 'Application' : ' My Application';\n        this.service.updatePageTitle(['Organisations', pageTitle]);\n    }\n\n    ngOnInit(): void {\n        this.formGeneralInformation = this.formBuilder.group({\n            OrganizationName: new FormControl('', [Validators.required]),\n            DPPActCategory: new FormControl('', [Validators.required]),\n            OrganizationTypeID: new FormControl('', [Validators.required]),\n            CountryOfIncorporation: new FormControl('', [Validators.required]),\n            URSBNumber: new FormControl(''),\n            SectorID: new FormControl('', [Validators.required]),\n            OtherSector: new FormControl('', [Validators.maxLength(50)]),\n            Location: new FormControl('', [Validators.required]),\n            PhoneNumberCode: new FormControl('', [Validators.required]),\n            PhoneNumber: new FormControl('', [\n                Validators.required,\n                Validators.pattern(/^[0-9 ]+$/),\n            ]),\n            EmailAddress: new FormControl('', [\n                Validators.required,\n                Validators.email\n            ]),\n            // NatureOfBusiness: new FormControl('', [Validators.required]),\n            NatureOfBusinessCat: new FormControl('', [Validators.required]),\n            NatureOfBusinessSubCat: new FormControl('', [Validators.required]),\n        });\n\n        this.formOrganisationDetails = this.formBuilder.group({\n            DPORequired: new FormControl(''),\n            DPOName: new FormControl(''),\n            DPOPhysicalAddress: new FormControl(''),\n            PhoneNumberCode: new FormControl(''),\n            DPOPhoneNumber: new FormControl(''),\n            DPOEmailAddress: new FormControl(''),\n            DPOPositionInOrganisation: new FormControl(''),\n        });\n\n        this.formPersonalDataHeld = this.formBuilder.group({\n            SourceOfDataID: new FormControl('', [Validators.required]),\n        });\n\n        this.formPurposeRetention = this.formBuilder.group({\n            Purpose: new FormControl('', [Validators.required]),\n            SpecifyTheLaw: new FormControl(''),\n            ServiceOrProductProvided: new FormControl(''),\n            SpecifyLegalObligation: new FormControl(''),\n            TotalRecordsAtRegistration: new FormControl('', [Validators.pattern(/^[0-9,]+$/)]),\n            RecordPercentageGrowth: new FormControl('', [\n                Validators.pattern(/^[0-9,]+$/),\n                Validators.max(100),\n            ]),\n            RetentionPeriod: new FormControl('', [\n                Validators.required,\n                Validators.pattern(/^[0-9,]+$/),\n                Validators.max(100),\n            ]),\n        });\n\n        this.formSecurityMeasures = this.formBuilder.group({\n            RegistrationConsent: new FormControl('', [Validators.required]),\n            RegistrationDoneBy: new FormControl('', [Validators.required, Validators.pattern(/^[a-zA-Z ]+$/)]),\n            TechnicalComments: new FormControl(),\n            LegalComments: new FormControl(),\n            DirectorComments: new FormControl(),\n        });\n\n        this.formChildrenData = this.formBuilder.group({\n            CollectChildrenData: new FormControl('', [Validators.required]),\n            PurposeForCollection: new FormControl(''),\n          });\n\n        this.formThirdParties = this.formBuilder.group({\n            PersonalDataIsForDisclosure: new FormControl('', [Validators.required]),\n            StoreDataOutsideCountry: new FormControl('', [Validators.required]),\n        });\n\n        // this.Listeners();\n        // console.log('operationType:', this.operationType);\n        if (this.operationType === 'CREATE' || this.operationType === 'MANAGE') {\n            this.Listeners();\n        }\n        \n        // Disable Form By ApplicationStatus\n        this.disableByStatus();\n        // WorkFlow Call\n        this.workflowSubscriptions();\n        // Set OfficerRole\n        this.isOfficer = this.timeLineAccess.includes(this.realmRole);\n        // Fetch Checklist\n        this.referenceService.getChecklist(this.$processingEvent, this.$resultRefChecklistEvent, this.$errorsEvent);\n\n        this.formGeneralInformation.valueChanges\n            .pipe(\n                filter(() => this.formGeneralInformation.valid)\n            ).subscribe(val => localStorage.setItem('STEP_1', JSON.stringify(val)));\n    }\n\n    ngAfterContentInit(): void {\n        this.OrganizationID = 156;\n        this.getDataFromMultipleRequests();\n    }\n\n    private getDataFromMultipleRequests(): void {\n        this.httpSub = this.fetchMultiple(this.regTrackingNo)\n        .pipe(catchError(this.service.handleError))\n        .subscribe((responseList) => {\n            this.countries = responseList[0];\n\n            this.organisationCategories = [\n                {\n                    OrganisationCategoryId: 1,\n                    OrganisationCategoryName: 'Data Controller'\n                },\n                {\n                    OrganisationCategoryId: 2,\n                    OrganisationCategoryName: 'Data Processor'\n                },\n                {\n                    OrganisationCategoryId: 3,\n                    OrganisationCategoryName: 'Data Collector'\n                },\n            ];\n\n            this.childDataPurposes = [\n                {\n                  ChildDataID: 1,\n                  ChildDataPurpose: 'Carried out with prior consent of the parent,guardian, or  any other person having authority to make decisions on behalf of the child '\n                },\n                {\n                  ChildDataID: 2,\n                  ChildDataPurpose: 'Necessary to comply with the law'\n                },\n                {\n                  ChildDataID: 3,\n                  ChildDataPurpose: 'For research or statistical purposes'\n                }\n              ]\n\n\n            this.formGeneralInformation.get('PhoneNumberCode').patchValue('256');\n            this.formOrganisationDetails.get('PhoneNumberCode').patchValue('256');\n\n            this.dataSources = responseList[1];\n\n            this.organisationTypes = responseList[2];\n\n            this.sectors = responseList[3];\n\n            this.dataCategories = responseList[4];\n\n            this.dataPurposes = responseList[5];\n\n            this.natureOfBusinessCat = responseList[6];\n\n            this.fetchSingleApplication(responseList[7], responseList[8]);\n\n            this.processing = false;\n        }, (error) => {\n            this.processing = false;\n            this.service.determineErrorResponse(error);\n        });        \n    }\n\n    private Listeners(): void {\n        // STEP ONE\n        this.formGeneralInformation.get('DPPActCategory').valueChanges.subscribe((value) => {\n            const values: number[] = value;\n            this.selectedOrganisationCategories.length = 0;\n\n            this.organisationCategories.filter((item) => {\n                if (values.includes(item.OrganisationCategoryId)) {\n                    this.selectedOrganisationCategories.push(item);\n                }\n            });\n        });\n\n        this.formGeneralInformation.get('OrganizationTypeID').valueChanges.subscribe((value) => {\n            if (value !== 4) {\n                this.formGeneralInformation.get('CountryOfIncorporation').setValidators([Validators.required]);\n                this.formGeneralInformation.get('URSBNumber').setValidators([Validators.required]);\n            } else {\n                this.formGeneralInformation.get('CountryOfIncorporation').clearValidators();\n                this.formGeneralInformation.get('CountryOfIncorporation').reset();\n                this.formGeneralInformation.get('URSBNumber').clearValidators();\n                this.formGeneralInformation.get('URSBNumber').reset();\n                this.CountryOfIncorporation = null;\n            }\n\n            this.formGeneralInformation.controls['CountryOfIncorporation'].updateValueAndValidity();\n            this.formGeneralInformation.controls['URSBNumber'].updateValueAndValidity();\n        });\n\n        this.formGeneralInformation.get('SectorID').valueChanges.subscribe((value) => {\n            if (value === 14) {\n                this.formGeneralInformation.get('OtherSector').setValidators([Validators.required]);\n            } else {\n                this.formGeneralInformation.get('OtherSector').clearValidators();\n                this.formGeneralInformation.get('OtherSector').reset();\n            }\n\n            this.formGeneralInformation.controls['OtherSector'].updateValueAndValidity();\n        });\n\n        this.formGeneralInformation.get('NatureOfBusinessCat').valueChanges.subscribe((value) => {\n            if (value) { \n                this.onNatureOfBusinessCatSelected(value);\n            }\n        });\n\n        this.formGeneralInformation.get('NatureOfBusinessSubCat').valueChanges.subscribe((value) => {\n            const values: number[] = value;\n            this.selectedNatureOfBusinessSubCat.length = 0;\n\n            this.natureOfBusinessSubCat.filter((item) => {\n                if (values.includes(item.NatureOfBusinessSubCatId)) {\n                    this.selectedNatureOfBusinessSubCat.push(item);\n                }\n            });\n        });\n\n        // STEP TWO\n        this.formOrganisationDetails.get('DPORequired').valueChanges.subscribe((value) => {\n\n            if (value === 'Yes') {\n                this.formOrganisationDetails.get('DPOName').setValidators([Validators.required, Validators.pattern(/^[a-zA-Z ]+$/), ]);\n                this.formOrganisationDetails.get('DPOPhysicalAddress').setValidators([Validators.required]);\n                this.formOrganisationDetails.get('DPOPhoneNumber').setValidators([Validators.required, Validators.pattern(/^[0-9 ]+$/)]);\n                this.formOrganisationDetails.get('DPOEmailAddress').setValidators([Validators.required, Validators.email]);\n                this.formOrganisationDetails.get('DPOPositionInOrganisation').setValidators([Validators.required]);\n            } else {\n                this.formOrganisationDetails.get('DPOName').clearValidators();\n                this.formOrganisationDetails.get('DPOName').reset();\n                this.formOrganisationDetails.get('DPOPhysicalAddress').clearValidators();\n                this.formOrganisationDetails.get('DPOPhysicalAddress').reset();\n                this.formOrganisationDetails.get('DPOPhoneNumber').clearValidators();\n                this.formOrganisationDetails.get('DPOPhoneNumber').reset();\n                this.formOrganisationDetails.get('DPOEmailAddress').clearValidators();\n                this.formOrganisationDetails.get('DPOEmailAddress').reset();\n                this.formOrganisationDetails.get('DPOPositionInOrganisation').clearValidators();\n                this.formOrganisationDetails.get('DPOPositionInOrganisation').reset();\n            }\n\n            this.formOrganisationDetails.controls['DPOName'].updateValueAndValidity();\n            this.formOrganisationDetails.controls['DPOPhysicalAddress'].updateValueAndValidity();\n            this.formOrganisationDetails.controls['DPOPhoneNumber'].updateValueAndValidity();\n            this.formOrganisationDetails.controls['DPOEmailAddress'].updateValueAndValidity();\n            this.formOrganisationDetails.controls['DPOPositionInOrganisation'].updateValueAndValidity();\n        });\n\n        // STEP THREE\n        this.formPersonalDataHeld.get('SourceOfDataID').valueChanges.subscribe((value) => {\n            const values: number[] = value;\n            this.selectedDataSources.length = 0;\n\n            this.dataSources?.filter((item) => {\n                if (values.includes(item.DataSourceID)) {\n                    this.selectedDataSources.push(item);\n                }\n            });\n        });\n\n        // STEP FOUR\n        this.formPurposeRetention.get('Purpose').valueChanges.subscribe((value) => {\n            const values: number[] = value;\n\n            this.selectedDataPurposes.length = 0;\n\n            // Reset all the fields first\n            this.SpecifyTheLaw = false;\n            this.ServiceOrProductProvided = false;\n            this.SpecifyLegalObligation = false;\n            this.formPurposeRetention.get('SpecifyTheLaw').clearValidators();\n            this.formPurposeRetention.get('SpecifyTheLaw').reset();\n            this.formPurposeRetention.get('ServiceOrProductProvided').clearValidators();\n            this.formPurposeRetention.get('ServiceOrProductProvided').reset();\n            this.formPurposeRetention.get('SpecifyLegalObligation').clearValidators();\n            this.formPurposeRetention.get('SpecifyLegalObligation').reset();\n\n            values?.filter((item) => {\n                if (item === 1) {\n                    this.SpecifyTheLaw = true;\n                    this.formPurposeRetention.get('SpecifyTheLaw').setValidators([Validators.required]);\n                }\n\n                if (item === 3) {\n                    this.ServiceOrProductProvided = true;\n                    this.formPurposeRetention.get('ServiceOrProductProvided').setValidators([Validators.required]);\n                }\n\n                if (item === 6) {\n                    this.SpecifyLegalObligation = true;\n                    this.formPurposeRetention.get('SpecifyLegalObligation').setValidators([Validators.required]);\n                }\n            });\n\n            this.formPurposeRetention.controls['SpecifyTheLaw'].updateValueAndValidity();\n            this.formPurposeRetention.controls['ServiceOrProductProvided'].updateValueAndValidity();\n            this.formPurposeRetention.controls['SpecifyLegalObligation'].updateValueAndValidity();\n\n            this.dataPurposes.filter((item) => {\n                if (values.includes(item.DataPurposeID)) {\n                    this.selectedDataPurposes.push(item);\n                }\n            });\n\n            this.changeDetector.detectChanges();\n        });\n\n        this.formPurposeRetention.get('RecordPercentageGrowth').valueChanges.subscribe((value) => {\n\n            if (value > 100) {\n                this.formPurposeRetention.get('RecordPercentageGrowth').patchValue(100);\n            }\n\n            this.changeDetector.detectChanges();\n        });\n\n        this.formPurposeRetention.get('RetentionPeriod').valueChanges.subscribe((value) => {\n\n            if (value > 100) {\n                this.formPurposeRetention.get('RetentionPeriod').patchValue(100);\n            }\n\n            this.changeDetector.detectChanges();\n        });\n\n        // STEP FIVE\n        this.formThirdParties.get('PersonalDataIsForDisclosure').valueChanges.subscribe((value) => {        \n            if (value === 'No') {\n                this.thirdParties.length = 0;\n    \n                this.thirdPartyDataSource = new MatTableDataSource(this.thirdParties);\n    \n                setTimeout(() => {\n                    this.thirdPartyDataSource.paginator = this.thirdPartyPaginator;\n                    this.thirdPartyDataSource.sort = this.thirdPartyMatSort;\n                });\n            }\n        });\n\n        this.formThirdParties.get('StoreDataOutsideCountry').valueChanges.subscribe((value) => {\n            if (value === 'No') {\n                this.countriesOfTransfer.length = 0;\n    \n                this.countriesDataSource = new MatTableDataSource(this.countriesOfTransfer);\n    \n                setTimeout(() => {\n                    this.countriesDataSource.paginator = this.countryOfTransferPaginator;\n                    this.countriesDataSource.sort = this.countryOfTransferMatSort;\n                });            \n            }\n        });\n    }\n\n    private onShowNotice(): void {\n        this.dialogRef = this.dialog.open(OrgNoticeComponent, {\n            panelClass: ['organisation-data-protection-officer-dialog', 'dialogs'],\n            disableClose: true,\n        });\n\n        this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: DataProtectionOfficer }) => {\n\n        });\n    }\n\n    getOrganizationNameErrorMessage(): string {\n        return this.formGeneralInformation.get('OrganizationName').hasError('required') ? 'Please enter a value' : '';\n    }\n\n    getURSBNumberErrorMessage(): string {\n        return this.formGeneralInformation.get('URSBNumber').hasError('required') ? 'Please enter a value' : '';\n    }\n\n    getSelectErrorMessage(): string {\n        return this.formGeneralInformation.get('DPPActCategory').hasError('required')\n        || this.formGeneralInformation.get('OrganizationTypeID').hasError('required')\n        || this.formGeneralInformation.get('CountryOfIncorporation').hasError('required')\n        || this.formGeneralInformation.get('SectorID').hasError('required')\n        || this.formGeneralInformation.get('NatureOfBusinessCat').hasError('required')\n        || this.formGeneralInformation.get('NatureOfBusinessSubCat').hasError('required')\n        || this.formPersonalDataHeld.get('SourceOfDataID').hasError('required')\n        || this.formPurposeRetention.get('Purpose').hasError('required')\n            ? 'Please choose a value' : '';\n    }\n\n    getTelephoneNumberErrorMessage(): string {\n        return this.formGeneralInformation.get('PhoneNumber').hasError('required') ? 'Please enter a value' :\n            this.formGeneralInformation.get('PhoneNumber').hasError('pattern') ? 'Wrong Phone number' : '';\n    }\n\n    getEmailAddressErrorMessage(): string {\n        return this.formGeneralInformation.get('EmailAddress').hasError('required') ? 'Please enter a value' :\n            this.formGeneralInformation.get('EmailAddress').hasError('email') ? 'Wrong Email Address.' : '';\n    }\n\n    getOtherSectorErrorMessage(): string {\n        return this.formGeneralInformation.get('OtherSector').hasError('required') ? 'Please enter a value' : '';\n    }\n\n    getLocationErrorMessage(): string {\n        return this.formGeneralInformation.get('Location').hasError('required') ? 'Please enter a location' : '';\n    }\n\n    getDPONameErrorMessage(): string {\n        return this.formOrganisationDetails.get('DPOName').hasError('required') ? 'Please enter a value' :\n            this.formOrganisationDetails.get('DPOName').hasError('pattern') ? 'Please enter a correct name' : '';\n    }\n\n    getDPOPhysicalAddressErrorMessage(): string {\n        return this.formOrganisationDetails.get('DPOPhysicalAddress').hasError('required') ? 'Please enter a location' : '';\n    }\n\n    getDPOPhoneNumberErrorMessage(): string {\n        return this.formOrganisationDetails.get('DPOPhoneNumber').hasError('required') ? 'Please enter a value' :\n            this.formOrganisationDetails.get('DPOPhoneNumber').hasError('pattern') ? 'Wrong Phone number' : '';\n    }\n\n    getDPOEmailAddressErrorMessage(): string {\n        return this.formOrganisationDetails.get('DPOEmailAddress').hasError('required') ? 'Please enter a value' :\n            this.formOrganisationDetails.get('DPOEmailAddress').hasError('email') ? 'Wrong Email Address.' : '';\n    }\n\n    getDPOPositionInOrganisationErrorMessage(): string {\n        return this.formOrganisationDetails.get('DPOPositionInOrganisation').hasError('required') ? 'Please enter a value' : '';\n    }\n\n    getRequiredErrorMessage(): string {\n        return this.formPurposeRetention.get('SpecifyTheLaw').hasError('required')\n        || this.formPurposeRetention.get('ServiceOrProductProvided').hasError('required')\n        || this.formPurposeRetention.get('SpecifyLegalObligation').hasError('required')\n            ? 'Please enter a value' : '';\n    }\n\n    getPatternErrorMessage(): string {\n        return this.formPurposeRetention.get('TotalRecordsAtRegistration').hasError('pattern')\n            ? 'Please enter correct information' : '';\n    }\n\n    getRetentionPeriodErrorMessage(): string {\n        return this.formPurposeRetention.get('RetentionPeriod').hasError('required') ? 'Please enter a value' :\n            this.formPurposeRetention.get('RetentionPeriod').hasError('max') ? 'Maximum of 100' :\n                this.formPurposeRetention.get('RetentionPeriod').hasError('pattern') ? 'Not valid' : '';\n    }\n\n    getRecordPercentageGrowthErrorMessage(): string {\n        return this.formPurposeRetention.get('RecordPercentageGrowth').hasError('max') ? 'Maximum of 100' :\n            this.formPurposeRetention.get('RecordPercentageGrowth').hasError('pattern') ? 'Not valid' : '';\n    }\n\n    getCheckboxErrorMessage(): string {\n        return this.formSecurityMeasures.get('RegistrationConsent').hasError('max') ? 'This field is required' : '';\n    }\n\n    getRegistrationDoneByErrorMessage(): string {\n        return this.formSecurityMeasures.get('RegistrationDoneBy').hasError('required') ? 'Please enter a value' :\n            this.formSecurityMeasures.get('RegistrationDoneBy').hasError('pattern') ? 'Please enter a correct name' : '';\n    }\n\n    updateCollecthildrenData(event){\n\n        console.log(event.value);\n    \n        if(event.value == 'Yes'){\n          this.showChildrenDataFields = true;\n          this.formChildrenData.get('PurposeForCollection').setValidators([Validators.required]);\n    \n          this.formChildrenData.controls['PurposeForCollection'].updateValueAndValidity();\n        }\n        else{\n          this.showChildrenDataFields = false;\n    \n          this.formChildrenData.get('PurposeForCollection').setValidators([]);\n    \n          this.formChildrenData.get('PurposeForCollection').reset();\n    \n          this.formChildrenData.controls['PurposeForCollection'].updateValueAndValidity();\n        }\n      }\n\n    onAddMainActivity(): void {\n        this.dialogRef = this.dialog.open(OrgMainActivityComponent, {\n            panelClass: ['organisation-main-activity-dialog', 'dialogs'],\n            disableClose: true,\n        });\n\n        this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: MainActivity }) => {\n            if (result.status) {\n                let found = false;\n                this.mainActivities.filter((activity) => {\n                    if (activity.Activity === result.row.Activity) {\n                        found = true;\n                    }\n                });\n\n                if (found) {\n                    this.service.openSnackBar('Sorry, this record already exists', 'error-lg');\n                } else {\n                    this.mainActivities.push(result.row);\n                }\n\n                this.mainActivitiesDataSource = new MatTableDataSource(this.mainActivities);\n\n                setTimeout(() => {\n                    this.mainActivitiesDataSource.paginator = this.MainActivityPaginator;\n                    this.mainActivitiesDataSource.sort = this.MainActivityMatSort;\n                });\n            }\n        });\n    }\n\n    onEditMainActivity(row: MainActivity): void {\n        this.dialogRef = this.dialog.open(OrgMainActivityComponent, {\n            panelClass: ['organisation-main-activity-dialog', 'dialogs'],\n            disableClose: true,\n            data: {row}\n        });\n\n        this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: MainActivity }) => {\n            if (result.status) {\n\n                this.mainActivities[this.mainActivities.indexOf(row)] = {\n                    Activity: result.row.Activity,\n                };\n\n                this.mainActivitiesDataSource = new MatTableDataSource(this.mainActivities);\n\n                setTimeout(() => {\n                    this.mainActivitiesDataSource.paginator = this.MainActivityPaginator;\n                    this.mainActivitiesDataSource.sort = this.MainActivityMatSort;\n                });\n            }\n        });\n    }\n\n    onRemoveMainActivity(row: MainActivity): void {\n        this.mainActivities.splice(this.mainActivities.indexOf(row), 1);\n\n        this.mainActivitiesDataSource = new MatTableDataSource(this.mainActivities);\n\n        setTimeout(() => {\n            this.mainActivitiesDataSource.paginator = this.MainActivityPaginator;\n            this.mainActivitiesDataSource.sort = this.MainActivityMatSort;\n        });\n    }\n\n    onAddADPO(): void {\n        this.dialogRef = this.dialog.open(OrgDataProtectionOfficerComponent, {\n            panelClass: ['organisation-data-protection-officer-dialog', 'dialogs'],\n            disableClose: true,\n        });\n\n        this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: DataProtectionOfficer }) => {\n            if (result.status) {\n                let found = false;\n                this.dataProtectionOfficers.filter((dpo) => {\n                    if (dpo.EmailAddress === result.row.EmailAddress || dpo.PhoneNumber === result.row.PhoneNumber) {\n                        found = true;\n                    }\n                });\n\n                if (found) {\n                    this.service.openSnackBar('Sorry, this record already exists', 'error-lg');\n                } else {\n                    this.dataProtectionOfficers.push(result.row);\n                }\n\n                this.dpoDataSource = new MatTableDataSource(this.dataProtectionOfficers);\n\n                setTimeout(() => {\n                    this.dpoDataSource.paginator = this.dpoPaginator;\n                    this.dpoDataSource.sort = this.dpoMatSort;\n                });\n            }\n        });\n    }\n\n    onEditDPO(row: DataProtectionOfficer): void {\n        this.dialogRef = this.dialog.open(OrgDataProtectionOfficerComponent, {\n            panelClass: ['organisation-data-protection-officer-dialog', 'dialogs'],\n            disableClose: true,\n            data: {row}\n        });\n\n        this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: DataProtectionOfficer }) => {\n            if (result.status) {\n\n                this.dataProtectionOfficers[this.dataProtectionOfficers.indexOf(row)] = {\n                    Name: result.row.Name,\n                    EmailAddress: result.row.EmailAddress,\n                    PhoneNumber: result.row.PhoneNumber,\n                    PhysicalAddress: result.row.PhysicalAddress,\n                    PositionInOrganisation: result.row.PositionInOrganisation,\n                };\n\n                this.dpoDataSource = new MatTableDataSource(this.dataProtectionOfficers);\n\n                setTimeout(() => {\n                    this.dpoDataSource.paginator = this.dpoPaginator;\n                    this.dpoDataSource.sort = this.dpoMatSort;\n                });\n            }\n        });\n    }\n\n    onRemoveDPO(row: DataProtectionOfficer): void {\n        this.dataProtectionOfficers.splice(this.dataProtectionOfficers.indexOf(row), 1);\n\n        this.dpoDataSource = new MatTableDataSource(this.dataProtectionOfficers);\n\n        setTimeout(() => {\n            this.dpoDataSource.paginator = this.dpoPaginator;\n            this.dpoDataSource.sort = this.dpoMatSort;\n        });\n    }\n\n    onAddSecurityMeasure(): void {\n        this.dialogRef = this.dialog.open(OrgSecurityMeasuresComponent, {\n            panelClass: ['organisation-security-measure-dialog', 'dialogs'],\n            disableClose: true,\n        });\n\n        this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: SecurityMeasure }) => {\n            if (result.status) {\n                let found = false;\n                this.securityMeasures.filter((item) => {\n                    if (item.SecurityMeasure === result.row.SecurityMeasure) {\n                        found = true;\n                    }\n                });\n\n                if (found) {\n                    this.service.openSnackBar('Sorry, this record already exists', 'error-lg');\n                } else {\n                    this.securityMeasures.push(result.row);\n                }\n\n                this.securityMeasureDataSource = new MatTableDataSource(this.securityMeasures);\n\n                setTimeout(() => {\n                    this.securityMeasureDataSource.paginator = this.securityMeasurePaginator;\n                    this.securityMeasureDataSource.sort = this.securityMeasureMatSort;\n                });\n            }\n        });\n    }\n\n    onEditSecurityMeasure(row: SecurityMeasure): void {\n        this.dialogRef = this.dialog.open(OrgSecurityMeasuresComponent, {\n            panelClass: ['organisation-security-measure-dialog', 'dialogs'],\n            disableClose: true,\n            data: {row}\n        });\n\n        this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: SecurityMeasure }) => {\n            if (result.status) {\n\n                this.securityMeasures[this.securityMeasures.indexOf(row)] = {\n                    SecurityMeasure: result.row.SecurityMeasure,\n                };\n\n                this.securityMeasureDataSource = new MatTableDataSource(this.securityMeasures);\n\n                setTimeout(() => {\n                    this.securityMeasureDataSource.paginator = this.securityMeasurePaginator;\n                    this.securityMeasureDataSource.sort = this.securityMeasureMatSort;\n                });\n            }\n        });\n    }\n\n    onRemoveSecurityMeasure(row: SecurityMeasure): void {\n        this.securityMeasures.splice(this.securityMeasures.indexOf(row), 1);\n\n        this.securityMeasureDataSource = new MatTableDataSource(this.securityMeasures);\n\n        setTimeout(() => {\n            this.securityMeasureDataSource.paginator = this.securityMeasurePaginator;\n            this.securityMeasureDataSource.sort = this.securityMeasureMatSort;\n        });\n    }\n\n    onAddAThirdParty(): void {\n        this.dialogRef = this.dialog.open(OrgThirdPartyComponent, {\n            panelClass: ['organisation-third-party-dialog', 'dialogs'],\n            disableClose: true,\n        });\n\n        this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: ThirdParty }) => {\n            if (result.status) {\n                let found = false;\n\n                this.thirdParties.filter((party) => {\n                    if (party.ThirdPartyName === result.row.ThirdPartyName) {\n                        found = true;\n                    }\n                });\n\n                if (found) {\n                    this.service.openSnackBar('Sorry, this record already exists', 'error-lg');\n                } else {\n                    this.thirdParties.push(result.row);\n                }\n\n                this.thirdPartyDataSource = new MatTableDataSource(this.thirdParties);\n\n                setTimeout(() => {\n                    this.thirdPartyDataSource.paginator = this.thirdPartyPaginator;\n                    this.thirdPartyDataSource.sort = this.thirdPartyMatSort;\n                });\n            }\n        });\n    }\n\n    onEditThirdParty(row: ThirdParty): void {\n        this.dialogRef = this.dialog.open(OrgThirdPartyComponent, {\n            panelClass: ['organisation-third-party-dialog', 'dialogs'],\n            disableClose: true,\n            data: {row}\n        });\n\n        this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: ThirdParty }) => {\n            if (result.status) {\n\n                this.thirdParties[this.thirdParties.indexOf(row)] = {\n                    ThirdPartyName: result.row.ThirdPartyName,\n                    Purpose: result.row.Purpose,\n                };\n\n                this.thirdPartyDataSource = new MatTableDataSource(this.thirdParties);\n\n                setTimeout(() => {\n                    this.thirdPartyDataSource.paginator = this.thirdPartyPaginator;\n                    this.thirdPartyDataSource.sort = this.thirdPartyMatSort;\n                });\n            }\n        });\n    }\n\n    onRemoveThirdParty(row: ThirdParty): void {\n        this.thirdParties.splice(this.thirdParties.indexOf(row), 1);\n\n        this.thirdPartyDataSource = new MatTableDataSource(this.thirdParties);\n\n        setTimeout(() => {\n            this.thirdPartyDataSource.paginator = this.thirdPartyPaginator;\n            this.thirdPartyDataSource.sort = this.thirdPartyMatSort;\n        });\n    }\n\n    onAddACountry(): void {\n        this.dialogRef = this.dialog.open(OrgCountryComponent, {\n            panelClass: ['organisation-country-dialog', 'dialogs'],\n            disableClose: true,\n        });\n\n        this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: CountryOfTransfer }) => {\n            if (result.status) {\n                let found = false;\n                this.countriesOfTransfer.filter((party) => {\n                    if (party.Country === result.row.Country) {\n                        found = true;\n                    }\n                });\n\n                if (found) {\n                    this.service.openSnackBar('Sorry, this record already exists', 'error-lg');\n                } else {\n                    this.countriesOfTransfer.push(result.row);\n                }\n\n                this.countriesDataSource = new MatTableDataSource(this.countriesOfTransfer);\n\n                setTimeout(() => {\n                    this.countriesDataSource.paginator = this.countryOfTransferPaginator;\n                    this.countriesDataSource.sort = this.countryOfTransferMatSort;\n                });\n            }\n        });\n    }\n\n    onEditCountry(row: CountryOfTransfer): void {\n        this.dialogRef = this.dialog.open(OrgCountryComponent, {\n            panelClass: ['organisation-country-dialog', 'dialogs'],\n            disableClose: true,\n            data: {row}\n        });\n\n        this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: CountryOfTransfer }) => {\n            if (result.status) {\n                this.countriesOfTransfer[this.countriesOfTransfer.indexOf(row)] = {\n                    CountryID: result.row.CountryID,\n                    Country: result.row.Country,\n                    Purpose: result.row.Purpose,\n                    Description: result.row.Description,\n                };\n\n                this.countriesDataSource = new MatTableDataSource(this.countriesOfTransfer);\n\n                setTimeout(() => {\n                    this.countriesDataSource.paginator = this.countryOfTransferPaginator;\n                    this.countriesDataSource.sort = this.countryOfTransferMatSort;\n                });\n            }\n        });\n    }\n\n    onRemoveCountry(row: CountryOfTransfer): void {\n        this.countriesOfTransfer.splice(this.countriesOfTransfer.indexOf(row), 1);\n\n        this.countriesDataSource = new MatTableDataSource(this.countriesOfTransfer);\n\n        setTimeout(() => {\n            this.countriesDataSource.paginator = this.countryOfTransferPaginator;\n            this.countriesDataSource.sort = this.countryOfTransferMatSort;\n        });\n    }\n\n    onUploadAttachments(): void {\n        this.dialogRef = this.dialog.open(OrgUploadComponent, {\n            panelClass: ['organisation-upload-dialog', 'dialogs'],\n            disableClose: true,\n            data: {\n                multiple: false\n            }\n        });\n\n        this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: FileUpload }) => {\n            // console.log('row:', result.row);\n\n            if (result.status) {\n                this.document = result.row;\n            }\n        });\n    }\n\n    onRemoveDocument(): void {\n        this.document = null;\n    }\n\n    onDownloadForm3(): void {\n        // this.formGeneralInformation.get('OrganizationName').patchValue('Applied Principles Consulting');\n        // this.formGeneralInformation.get('Location').patchValue('Bukoto street 764');\n\n        this.dialogRef = this.dialog.open(OrgForm3DialogComponent, {\n            panelClass: ['organisation-form-3-dialog', 'dialogs'],\n            disableClose: true,\n            data: {\n                OrganisationName: this.formGeneralInformation.get('OrganizationName').value,\n                PhysicalAddress: this.formGeneralInformation.get('Location').value,\n                Date: new Date()\n            }\n        });\n    }\n\n    onUploadProofOfPayment(): void {\n        this.dialogRef = this.dialog.open(OrgUploadComponent, {\n            panelClass: ['organisation-upload-dialog', 'dialogs'],\n            disableClose: true,\n            data: {\n                multiple: false\n            }\n        });\n\n        this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: FileUpload }) => {\n\n            if (result.status) {\n                this.proofOfPayment = result.row;\n            }\n        });\n    }\n\n    onRemoveProofOfPaymen(): void {\n        this.proofOfPayment = null;\n    }\n\n    onUploadForm3Attachments(): void {\n        this.dialogRef = this.dialog.open(OrgUploadComponent, {\n            panelClass: ['organisation-upload-dialog', 'dialogs'],\n            disableClose: true,\n            data: {\n                multiple: false\n            }\n        });\n\n        this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: FileUpload }) => {\n            if (result.status) {\n                this.documentForm3 = result.row;\n            }\n        });\n    }\n\n    onRemoveForm3Document(): void {\n        this.documentForm3 = null;\n    }\n\n    onChangeSubCategory(event: MatCheckboxChange, SubCategory: DataSubCategory): void {\n        if (event.checked) {\n            this.selectedDataSubCategory.push(SubCategory);\n        } else {\n            this.selectedDataSubCategory.splice(this.selectedDataSubCategory.indexOf(SubCategory), 1);\n        }\n    }\n\n    private fetchMultiple(OrgID: any): Observable<any[]> {\n        this.processing = true;\n        const reqCountries = this.http.get<ApiPayload>(this.endpoints.countries);\n        const reqDataSources = this.http.get<ApiPayload>(this.endpoints.dataSources);\n        const reqOrganisationType = this.http.get<ApiPayload>(this.endpoints.organisationType);\n        const reqSector = this.http.get<ApiPayload>(this.endpoints.sector);\n        const reqDataSubcategories = this.http.get<ApiPayload>(this.endpoints.dataSubcategories);\n        const reqDataPurpose = this.http.get<ApiPayload>(this.endpoints.dataPurpose);\n        const reqNatureOfBusiness = this.http.get<ApiPayload>(this.endpoints.natureOfBusiness);\n        const reqFetchOrganisatioDetails = this.http.get<ApiPayload>(this.endpoints.getOrgRegDetails, {params: {RegTrackingNo: OrgID}});\n        const reviewComments = this.http.get<ApiPayload>(this.endpoints.getReviewComments, {params: {RegTrackingNo: OrgID}});\n\n        // tslint:disable-next-line:max-line-length\n        return forkJoin([reqCountries, reqDataSources, reqOrganisationType, reqSector, reqDataSubcategories, reqDataPurpose, reqNatureOfBusiness, reqFetchOrganisatioDetails, reviewComments]);\n    }\n\n    private getFormData(): any {\n        const data = {\n            OrganisationID: this.application && this.application.OrganisationID ? String(this.application.OrganisationID) : '',\n            RegTrackingNo: this.application && this.application.RegTrackingNo ? this.application.RegTrackingNo : '',\n            OrganisationName: this.formGeneralInformation.get('OrganizationName').value,\n            OrganisationCategory: this.selectedOrganisationCategories,\n            OrganizationTypeID: this.formGeneralInformation.get('OrganizationTypeID').value,\n            CountryOfIncorporation: this.formGeneralInformation.get('CountryOfIncorporation').value ? this.formGeneralInformation.get('CountryOfIncorporation').value : 0,\n            URSBNumber: this.formGeneralInformation.get('URSBNumber').value ? this.formGeneralInformation.get('URSBNumber').value : '',\n            SectorID: this.formGeneralInformation.get('SectorID').value,\n            OtherSector: this.formGeneralInformation.get('OtherSector').value ? this.formGeneralInformation.get('OtherSector').value : '',\n            Location: this.formGeneralInformation.get('Location').value,\n            // tslint:disable-next-line:max-line-length\n            PhoneNumber: this.formGeneralInformation.get('PhoneNumberCode').value + (this.formGeneralInformation.get('PhoneNumber').value).replaceAll(' ', ''),\n            EmailAddress: this.formGeneralInformation.get('EmailAddress').value,\n            NatureOfBusinessCatID: this.formGeneralInformation.get('NatureOfBusinessCat').value ? this.formGeneralInformation.get('NatureOfBusinessCat').value : 0,\n            NatureOfBusiness: this.selectedNatureOfBusinessSubCat,\n            DPORequired: this.formOrganisationDetails.get('DPORequired').value,\n            DPOName: this.formOrganisationDetails.get('DPORequired').value === 'Yes' ? this.formOrganisationDetails.get('DPOName').value : '',\n            DPOPhysicalAddress: this.formOrganisationDetails.get('DPORequired').value === 'Yes' ? this.formOrganisationDetails.get('DPOPhysicalAddress').value : '',\n            // tslint:disable-next-line:max-line-length\n            DPOPhoneNumber: this.formOrganisationDetails.get('DPOPhoneNumber').value ? this.formOrganisationDetails.get('PhoneNumberCode').value + (this.formOrganisationDetails.get('DPOPhoneNumber').value).replaceAll(' ', '') : '',\n            DPOEmailAddress: this.formOrganisationDetails.get('DPORequired').value === 'Yes' ? this.formOrganisationDetails.get('DPOEmailAddress').value : '',\n            DPOPositionInOrganisation: this.formOrganisationDetails.get('DPORequired').value === 'Yes' ? this.formOrganisationDetails.get('DPOPositionInOrganisation').value : '',\n            SourceOfDataID: this.selectedDataSources,\n            PersonalDataCollected: this.selectedDataSubCategory,\n            Purpose: this.selectedDataPurposes,\n            SpecifyTheLaw: this.formPurposeRetention.get('SpecifyTheLaw').value ? this.formPurposeRetention.get('SpecifyTheLaw').value : '',\n            ServiceOrProductProvided: this.formPurposeRetention.get('ServiceOrProductProvided').value ? this.formPurposeRetention.get('ServiceOrProductProvided').value : '',\n            SpecifyLegalObligation: this.formPurposeRetention.get('SpecifyLegalObligation').value ? this.formPurposeRetention.get('SpecifyLegalObligation').value : '',\n            // tslint:disable-next-line:max-line-length\n            TotalRecordsAtRegistration: this.formPurposeRetention.get('TotalRecordsAtRegistration').value ? parseInt(this.formPurposeRetention.get('TotalRecordsAtRegistration').value, 10) : 0,\n            RecordPercentageGrowth: this.formPurposeRetention.get('RecordPercentageGrowth').value ? parseInt(this.formPurposeRetention.get('RecordPercentageGrowth').value, 10) : 0,\n            RetentionPeriod: this.formPurposeRetention.get('RetentionPeriod').value ? parseInt(this.formPurposeRetention.get('RetentionPeriod').value, 10) : 0,\n            PersonalDataIsForDisclosure: this.formThirdParties.get('PersonalDataIsForDisclosure').value,\n            ThirdParties: this.thirdParties,\n            StoreDataOutsideCountry: this.formThirdParties.get('StoreDataOutsideCountry').value,\n            Countries: this.countriesOfTransfer,\n            SecurityMeasures: this.securityMeasures,\n            Attachment: this.document && this.document.Base64 ? this.document.Base64 : '',\n            Form3Attachment: this.documentForm3 && this.documentForm3.Base64 ? this.documentForm3.Base64 : '',\n            RegistrationConsent: this.formSecurityMeasures.get('RegistrationConsent').value ? true : false,\n            RegistrationDoneBy: this.formSecurityMeasures.get('RegistrationDoneBy').value ? this.formSecurityMeasures.get('RegistrationDoneBy').value : '',\n            ProofOfPayment: this.proofOfPayment && this.proofOfPayment.Base64 ? this.proofOfPayment.Base64 : '',\n            ChildrenDataPurpose: this.selectedChildDataPurposes ? this.selectedChildDataPurposes : [],\n            CollectChildrenData: this.formChildrenData.get('CollectChildrenData').value ? this.formChildrenData.get('CollectChildrenData').value : '',\n        };\n\n        return data;\n    }\n\n    onNatureOfBusinessCatSelected(NatureOfBusinessCatId): void {\n        // console.log('here:', NatureOfBusinessCatId);\n        // tslint:disable-next-line:max-line-length\n        this.httpSub = this.http.get<NatureOfBusinessSubCat[]>(this.endpoints.natureOfBusiness + '?NatureOfBusinessSubCat=' + NatureOfBusinessCatId)\n        .pipe(catchError(this.service.handleError))\n        .subscribe((response) => {\n            \n            this.natureOfBusinessSubCat = response;\n            // console.log('natureOfBusinessSubCat:', this.natureOfBusinessSubCat);\n\n            }, (error) => {\n                this.processing = false;\n                this.service.determineErrorResponse(error);\n            });\n    }\n\n    onPreviewForm(download: boolean): void {\n        this.dialogRef = this.dialog.open(OrgRegistrationPreviewDialogComponent, {\n            panelClass: ['organisation-registration-preview-form-3-dialog', 'dialogs'],\n            disableClose: true,\n            data: {\n                download: download,\n                row: this.getFormData(),\n                Attachment: this.document ? this.document : '',\n                Form3: this.documentForm3 ? this.documentForm3 : '',\n                ProofOfPayment: this.proofOfPayment ? this.proofOfPayment : '',\n                OrganizationType: this.OrganizationType,\n                // tslint:disable-next-line:max-line-length\n                Sector: this.formGeneralInformation.get('OtherSector').value ? this.formGeneralInformation.get('OtherSector').value : this.SectorName,\n                NatureOfBusinessCat: this.NatureOfBusinessCat,\n                CountryOfIncorporation: this.CountryOfIncorporation\n            }\n        });\n    }\n\n    fetchSingleApplication(response, comments): void {\n        this.application = response;\n\n        console.log(comments.data.data.length);\n        console.log(comments.data.data);\n\n        if(comments.data.data.length < 1){\n\n        }\n        else if(comments.data.data.length == 1){\n\n        this.formSecurityMeasures.get('TechnicalComments').patchValue(comments.data.data[0][2]);\n        }\n        else if(comments.data.data.length == 2){\n            this.formSecurityMeasures.get('TechnicalComments').patchValue(comments.data.data[0][2]);\n            this.formSecurityMeasures.get('LegalComments').patchValue(comments.data.data[1][2]);\n        }\n        else if(comments.data.data.length == 3){\n            this.formSecurityMeasures.get('TechnicalComments').patchValue(comments.data.data[0][2]);\n            this.formSecurityMeasures.get('LegalComments').patchValue(comments.data.data[1][2]);\n            this.formSecurityMeasures.get('DirectorComments').patchValue(comments.data.data[2][2]);\n      \n        }\n        else{\n            \n        }\n\n        // console.log('application:', this.application);\n        // console.log('_StepRequestingForMoreInfo:', this._StepRequestingForMoreInfo);\n\n        this.hasRequestForMoreInfo(this.application.RegTrackingNo);\n        this.findDocumentActions(1, this.application.CurrentStepID);\n        this.getDocumentWorkflow(this.application.RegTrackingNo, this.workflowID);\n\n        // console.log('object:', this.application);\n\n        if (this.application.CurrentStepName === 'Certificate Issued') {\n            if (this.isOfficer) {\n                this.getIssuedCertDetails(+this.application.OrganisationID);\n            } else {\n                this.getIssuedCertDetails(parseInt(this.application.OrganisationID, 10));\n            }\n        }\n\n        this.formGeneralInformation.get('OrganizationName').patchValue(this.application.OrganisationName);\n        this.organisationcategories = this.application.OrganisationCategory;\n\n        this.organisationcategories.filter((item) => {\n            this.cat.push(item.OrganisationCategoryId);\n        });\n\n        this.formGeneralInformation.get('DPPActCategory').patchValue(this.cat);\n\n        this.formGeneralInformation.get('OrganizationTypeID').patchValue(this.application.OrganizationTypeID);\n        this.formGeneralInformation.get('URSBNumber').patchValue(this.application.URSBNumber);\n        this.formGeneralInformation.get('SectorID').patchValue(this.application.SectorID);\n        this.formGeneralInformation.get('CountryOfIncorporation').patchValue(response['CountryOfIncorporation']);\n        this.formGeneralInformation.get('OtherSector').patchValue(response['OtherSector']);\n        this.formGeneralInformation.get('Location').patchValue(this.application.Location);\n        this.formGeneralInformation.get('PhoneNumberCode').patchValue(this.application.PhoneNumber.substring(0, 3));\n        this.formGeneralInformation.get('PhoneNumber').patchValue(this.application.PhoneNumber.substring(3, 13));\n        this.formGeneralInformation.get('EmailAddress').patchValue(this.application.EmailAddress);\n\n        if (response['NatureOfBusiness'].length) {\n            this.formGeneralInformation.get('NatureOfBusinessCat').patchValue(response['NatureOfBusiness'][0]['NatureOfBusinessCatID']);\n            this.natureOfbusinesses = response['NatureOfBusiness'];\n\n            this.onNatureOfBusinessCatSelected(response['NatureOfBusiness'][0]['NatureOfBusinessCatID']);\n            \n            let _selectedNatureOfBusinessSubCat: NatureOfBusinessSubCat[] = [];\n            this.natureOfbusinesses.filter((item) => {\n                this.natureOfbusinesses_arr.push(item.NatureOfBusinessSubatID);\n\n                _selectedNatureOfBusinessSubCat.push({\n                    NatureOfBusinessSubCatId: item.NatureOfBusinessSubatID,\n                    NatureOfBusinessSubCategoryName: item.NatureOfBusinessSubCategoryName\n                });\n            });\n            \n            this.formGeneralInformation.get('NatureOfBusinessSubCat').patchValue(this.natureOfbusinesses_arr);\n            this.selectedNatureOfBusinessSubCat = _selectedNatureOfBusinessSubCat;\n        }\n\n\n        // STEP TWO\n        this.formOrganisationDetails.get('DPORequired').patchValue(response['DPORequired']);\n\n        this.formOrganisationDetails.get('DPOName').patchValue(response['DPOName']);\n        this.formOrganisationDetails.get('DPOPhysicalAddress').patchValue(response['DPOPhysicalAddress']);\n        this.formOrganisationDetails.get('PhoneNumberCode').patchValue(response['DPOPhoneNumber'].substring(0, 3));\n        this.formOrganisationDetails.get('DPOPhoneNumber').patchValue(response['DPOPhoneNumber'].substring(3, 13));\n        this.formOrganisationDetails.get('DPOEmailAddress').patchValue(response['DPOEmailAddress']);\n        this.formOrganisationDetails.get('DPOPositionInOrganisation').patchValue(response['DPOPositionInOrganisation']);\n\n        // STEP THREE\n        this.sourceofdata = response['SourceOfDataID'];\n        this.sourceofdata.filter((item) => {\n            this.sourceofdata_arr.push(item.DataSourceID);\n        });\n\n        /// CHILDREN DATA \n\n        this.formChildrenData.get('CollectChildrenData').patchValue(response['CollectChildrenData']);\n        if(response['CollectChildrenData'] == 'Yes'){\n            this.showChildrenDataFields = true;\n            this.childDataPurposes = response['ChildrenDataPurpose']\n            let _selectedChildrenDataPurposes: ChildrenDataPurpose[] = [];\n            this.childDataPurposes.filter((item) => {\n    \n                this.childDataPurposeResults.push(item.ChildDataID);\n            })\n    \n    \n            this.formChildrenData.get('PurposeForCollection').patchValue(this.childDataPurposeResults);\n        }\n\n       \n\n        const personalDataCollected: DataSubCategory[] = response['PersonalDataCollected'];\n\n        this.dataCategories.filter((category) => {\n            personalDataCollected.filter((selectedCat) => {\n                if (category.DataCategoryID === selectedCat.DataCategoryID) {\n                    category.SubCategories.filter((subCat) => {\n                        personalDataCollected.filter((selectedSubCat) => {\n                            if (subCat.DataSubCategoryID === selectedSubCat.DataSubCategoryID) {\n                                subCat.IsChecked = true;\n                                this.selectedDataSubCategory.push(subCat);\n                            }\n                        });\n                    });\n                }\n            });\n        });\n\n        // STEP FOUR\n        this.formPersonalDataHeld.get('SourceOfDataID').patchValue(this.sourceofdata_arr);\n\n        this.purpose = response['Purpose'];\n        let _selectedDataPurposes: DataPurposes[]  = []\n\n        this.purpose.filter((item) => {\n            if (item.DataPurposeID === 1) {\n                this.SpecifyTheLaw = true;\n                this.formPurposeRetention.get('SpecifyTheLaw').setValidators([Validators.required]);\n            }\n\n            if (item.DataPurposeID === 3) {\n                this.ServiceOrProductProvided = true;\n                this.formPurposeRetention.get('ServiceOrProductProvided').setValidators([Validators.required]);\n            }\n\n            if (item.DataPurposeID === 6) {\n                this.SpecifyLegalObligation = true;\n                this.formPurposeRetention.get('SpecifyLegalObligation').setValidators([Validators.required]);\n            }\n\n            this.purpose_arr.push(item.DataPurposeID);\n\n            _selectedDataPurposes.push(item);\n        });\n        \n        this.formPurposeRetention.get('Purpose').patchValue(this.purpose_arr);\n        this.selectedDataPurposes = _selectedDataPurposes;\n\n        this.formPurposeRetention.get('SpecifyTheLaw').patchValue(response['SpecifyTheLaw']);\n        this.formPurposeRetention.get('ServiceOrProductProvided').patchValue(response['ServiceOrProductProvided']);\n        this.formPurposeRetention.get('SpecifyLegalObligation').patchValue(response['SpecifyLegalObligation']);\n        this.formPurposeRetention.get('TotalRecordsAtRegistration').patchValue(response['TotalRecordsAtRegistration']);\n        this.formPurposeRetention.get('RecordPercentageGrowth').patchValue(response['RecordPercentageGrowth']);\n        this.formPurposeRetention.get('RetentionPeriod').patchValue(response['RetentionPeriod']);\n\n        // this.formPurposeRetention.get('RegistrationConsent').patchValue('');\n\n        // STEP FIVE\n        this.formThirdParties.get('PersonalDataIsForDisclosure').patchValue(response['PersonalDataIsForDisclosure'].replace(/\\s/g, ''));\n        this.thirdParties = response['ThirdParties'];\n        this.thirdPartyDataSource = new MatTableDataSource(this.thirdParties);\n\n        setTimeout(() => {\n            this.thirdPartyDataSource.paginator = this.thirdPartyPaginator;\n            this.thirdPartyDataSource.sort = this.thirdPartyMatSort;\n        });\n        this.thirdPartyDataSource = new MatTableDataSource(response['ThirdParties']);\n\n        this.formThirdParties.get('StoreDataOutsideCountry').patchValue(response['StoreDataOutsideCountry']);\n        this.countriesOfTransfer = response['Countries'];\n        this.countriesDataSource = new MatTableDataSource(this.countriesOfTransfer);\n\n        setTimeout(() => {\n            this.countriesDataSource.paginator = this.countryOfTransferPaginator;\n            this.countriesDataSource.sort = this.countryOfTransferMatSort;\n        });\n\n        // STEP SIX\n        this.securityMeasures = response['SecurityMeasures'];\n        this.securityMeasureDataSource = new MatTableDataSource(this.securityMeasures);\n        setTimeout(() => {\n            this.securityMeasureDataSource.paginator = this.securityMeasurePaginator;\n            this.securityMeasureDataSource.sort = this.securityMeasureMatSort;\n        });\n\n        // Supporting Documents.\n        this.document = { \n            Document: null, \n            Name: 'Supporting Documentation.pdf', \n            Size: null, \n            Base64: this.application.Attachment \n        };\n\n        this.documentForm3 = { \n            Document: null, \n            Name: 'Form 3.pdf', \n            Size: null, \n            Base64: this.application.Form3Attachment \n        };\n\n        this.proofOfPayment = {\n            Document: null, \n            Name: 'Proof of Payment.pdf', \n            Size: null, \n            Base64: this.application.ProofOfPayment \n        };\n\n        // console.log('document:', this.document);\n        // console.log('documentForm3:', this.documentForm3);\n        // console.log('proofOfPayment:', this.proofOfPayment);\n\n        this.formSecurityMeasures.get('RegistrationConsent').patchValue('true');\n        this.formSecurityMeasures.get('RegistrationDoneBy').patchValue(this.application.RegistrationDoneBy);\n    }\n\n    onSubmit(): void {\n        this.processing = true;\n        // console.log('save the registration information:', this.getFormData());\n\n        this.httpSub = this.http.post<ApiPayload>(this.endpoints.orgRegistration, this.getFormData())\n            .pipe(catchError(this.service.handleError))\n            .subscribe((response) => {\n\n                // console.log('response:', response);\n\n                // Clear all the form Data\n\n                // console.log('response:', response);\n                // Show the dialog window for processing payment.\n\n                this.dialogRef = this.dialog.open(SuccessfulMessageDialogComponent, {\n                    panelClass: ['successful-message-dialog', 'dialogs'],\n                    disableClose: true,\n                    data: {\n                        title: response.message['title'],\n                        message: response.message['body'],\n                        status: response.code === 200 ? true : false,\n                    }\n                });\n\n                this.dialogRef.afterClosed().subscribe(() => {\n                    window.location.reload();\n                });\n\n                this.processing = false;\n            }, (error) => {\n                this.processing = false;\n\n                if (error.error.message) {\n                    this.dialogRef = this.dialog.open(SuccessfulMessageDialogComponent, {\n                        panelClass: ['successful-message-dialog', 'dialogs'],\n                        disableClose: true,\n                        data: {\n                            title: error.error.message['title'],\n                            message: error.error.message['body'],\n                            status: false,\n                        }\n                    });\n                } else {\n                    this.service.determineErrorResponse(error);\n                }\n            });\n    }\n\n    onSubmitRequestedInfor(): void {\n        this.processing = true;\n        // console.log('save the registration information:', this.getFormData());\n\n        this.httpSub = this.http.put<ApiPayload>(this.endpoints.orgRegistration, this.getFormData())\n            .pipe(catchError(this.service.handleError))\n            .subscribe((response) => {\n\n                this.dialogRef = this.dialog.open(SuccessfulMessageDialogComponent, {\n                    panelClass: ['successful-message-dialog', 'dialogs'],\n                    disableClose: true,\n                    data: {\n                        title: response.message['title'],\n                        message: response.message['body'],\n                        status: response.code === 200 ? true : false,\n                    }\n                });\n\n                this.dialogRef.afterClosed().subscribe(() => {\n                    // window.location.reload();\n                    // this.getDataFromMultipleRequests();\n                    this.route.navigate(['/company-registration/find']);\n                });\n\n                this.processing = false;\n            }, (error) => {\n                this.processing = false;\n\n                if (error.error.message) {\n                    this.dialogRef = this.dialog.open(SuccessfulMessageDialogComponent, {\n                        panelClass: ['successful-message-dialog', 'dialogs'],\n                        disableClose: true,\n                        data: {\n                            title: error.error.message['title'] ? error.error.message['title'] : 'Operation Failed',\n                            message: error.error.message['body'] ? error.error.message['body'] : environment.technicalErrorResponse,\n                            status: false,\n                        }\n                    });\n                } else {\n                    this.service.determineErrorResponse(error);\n                }\n            });\n    }\n\n    ngOnDestroy(): void {\n        if (this.httpSub) { this.httpSub.unsubscribe(); }\n        if (this.bottomsheetRef) { this.bottomsheetRef.dismiss(); }\n    }\n\n    // DisableByStatus\n    disableByStatus() {\n        if ((this.isApplicant && this.application &&\n                this.application.CurrentStepName !== 'Application Review - Legal' &&\n                this.application.CurrentStepName !== 'Application Review - Legal' &&\n                this.application.CurrentStepName !== 'Final Approver' &&\n                this.application.CurrentStepName !== 'Application Review - Technical' &&\n                this.application.CurrentStepName !== 'Certificate Issued') ||\n            (!this.isApplicant)) {\n            this.disableAllControls();\n        }\n    }\n\n    disableAllControls() {\n        this.formSecurityMeasures.disable();\n        this.formGeneralInformation.disable();\n        this.formOrganisationDetails.disable();\n        this.formPersonalDataHeld.disable();\n        this.formPurposeRetention.disable();\n        this.formThirdParties.disable();\n        this.formChildrenData.disable();\n    }\n\n    workflowSubscriptions() {\n        // Document Actions\n        if (this.operationType === 'MANAGE') {\n            this.subscriptions['$resultWorkFlowActionsEvent'] = this.$resultWorkFlowActionsEvent.subscribe(result => {\n                this.errors = [];\n                if (result) {\n\n                    this.isOfficer = this.timeLineAccess.includes(this.realmRole);\n                    \n                    console.log(this.realmRole);\n\n                    this.workFlowActions = result;\n                    console.log('this.workFlowActions:', this.workFlowActions);\n\n                    this.hasStepAccess = this.workFlowActions.StepAccess;\n                    console.log('this.hasStepAccess:', this.hasStepAccess);\n\n                    if (this.isOfficer) {\n                        console.log('This is an Officer');\n\n                        if (this.hasStepAccess) {\n                            console.log('this.workFlowActions.Actions:', this.workFlowActions.Actions);\n                            this.permittedActions = this.workFlowActions.Actions.filter(access => this.accesses.includes(access.ActionRole));\n                            console.log('permittedActions:', this.permittedActions);\n    \n                            if (this.permittedActions.length === 0) {\n                                this.snackBar.snackBarAlert(\n                                    'ERROR', 'Unauthorized To Perform Action On This Document ', {\n                                        duration: 5000\n                                    }\n                                );\n                            }\n                        }\n                    } else  {\n                        // console.log('This is an Organisation... Allow the DPO to provide feedback');\n                    }                 \n\n                    this.isLoaded = true;\n                }\n            });\n        }\n\n        // HasRequest For More info check\n        this.subscriptions['$resultRequestMoreInfo'] = this.$resultRequestMoreInfo.subscribe(result => {\n            this.errors = [];\n            // console.log('result:', result);\n\n            if (result) {\n                // this.hasRequestMoreInfo = result.HasRequest !== 'No';\n                this._hasRequestMoreInfo = result.HasRequest === 'Yes' ? true : false;\n                this.requestMoreInfoFields = result.Fields;\n                this._StepRequestingForMoreInfo = Number(result.StepID);\n\n                // console.log('hasRequestMoreInfo Result  ' + JSON.stringify(result));\n                // console.log('requestMoreInfoFields  ' + this.requestMoreInfoFields);\n                // console.log('hasRequestMoreInfo  ' + this._hasRequestMoreInfo);\n                // console.log('hasRequestMoreInfo type of ' + typeof this._hasRequestMoreInfo);\n                // console.log('_StepRequestingForMoreInfo  ' + this._StepRequestingForMoreInfo);\n\n                // console.log('this.application.CurrentStepID:', this.application.CurrentStepID);\n                // console.log('this._hasRequestMoreInfo:', this._hasRequestMoreInfo);\n\n                this._hasRequestMoreInfo = this.application.CurrentStepID == this._StepRequestingForMoreInfo ? true : false;\n                // console.log('this._hasRequestMoreInfo:', this._hasRequestMoreInfo);\n\n                if(this._hasRequestMoreInfo === true) {\n                    // console.log('enable request for more infor ---- ');\n                    this.EnableRequestForMoreInformationFields();\n                }\n            }\n        });\n\n        // Action Performed\n        this.subscriptions['$resultPerformActionEvent'] = this.$resultPerformActionEvent.subscribe(result => {\n            this.errors = [];\n\n            if (result.message === 'Success') {\n                \n                // this.fetchMultiple(this.regTrackingNo);\n                this.getDataFromMultipleRequests();\n\n                // this.snackBar.snackBarAlert(\n                //     'SUCCESS', 'Action Was Successfully, Registration Moved To Next Step', {\n                //         duration: 10000\n                //     }\n                // );\n\n                this.snackBar.openSnackBar(\n                    'Action Was Successfully, Registration Moved To Next Step',\n                    'success'\n                );\n\n                // Check if the user can print the certificate\n                this.getIssuedCertDetails(+this.application.OrganisationID);\n\n                this.permittedActions = [];\n            }\n        });\n\n        // Action Performed\n        this.subscriptions['$resultDocumentWorkflowTimelineEvent'] = this.$resultDocWorkFlowTimelineEvent.subscribe(result => {\n            this.errors = [];\n            if (result) {\n                this.workflowTimeLine = result;\n\n                this.currentStep = this.workflowTimeLine.data.find(\n                    step => +step.StepID === this.application.CurrentStepID\n                );\n\n                this.application.Status = this.currentStep.StepName;\n                // this.applicantDetails.get('status').setValue(this.application.Status);\n            }\n        });\n\n        // GetCertificate\n        this.subscriptions['$resultDocumentCertificate'] = this.$resultDocumentCertificate.subscribe(result => {\n            if (result) {\n                this.certificateDetails = result;\n\n                this.isOfficer = this.timeLineAccess.includes(this.realmRole);\n                \n                if (this.isOfficer) {\n                    this.canDownloadCertificate = true;\n                } else {\n                    if (this.certificateDetails.DownloadCount < 1) {\n                        this.canDownloadCertificate = true;\n                    } else {\n                        this.canDownloadCertificate = false;\n                    }\n                }\n                // console.log('CanPrint' + this.canDownloadCertificate);\n                this.certificateDetails.OrganizationID = this.application.OrganisationName;\n            }\n        });\n\n        this.subscriptions['$resultRefChecklistEvent'] = this.$resultRefChecklistEvent.subscribe(result => {\n            if (result) {\n                this.$checklist = result.filter(\n                    e => {\n                        if (this.realmRole === 'data-protection-officer-technical') {\n                            return e.ChecklistSection === 'Technical';\n                        } else {\n                            return e.ChecklistSection === 'Legal';\n                        }\n                    }\n                );\n            }\n        });\n    }\n\n    // Perform Document Action\n    performAction(action: Action) {\n        this.dialog.open(ReviewCommentsComponent, {\n            width: '1391px',\n            height: '595px',\n            data: {\n                checklist: (action.ActionName === WorkFlowConstants.TECHNICAL_REVIEW_ACTION ||\n                    action.ActionName === WorkFlowConstants.LEGAL_REVIEW_ACTION) ? this.$checklist : [],\n                action: action,\n                directorChecklist: this.application.CheckList,\n                isRequestForMoreInfo: true\n            }\n        }).afterClosed().subscribe((dialogResult) => {\n            if (dialogResult !== null && dialogResult !== '') {\n                if (action.ActionName === WorkFlowConstants.REQUEST_MORE_INFO_ACTION) {\n                    this.performActionRMI(action, dialogResult.requestedMoreFields);\n                    this.getDataFromMultipleRequests();\n                } else {\n                    this.performActionFinal(action, dialogResult.checklist, dialogResult.comment);\n                }\n            }\n        });\n    }\n\n    // Performing Final Action i.e Technical / Legal Review\n    performActionFinal(action: Action, checklist: Checked[], comment: string) {\n        const performedAction = new ActionPerformed();\n        performedAction.WorkFlowID = this.workflowID;\n        performedAction.ActionID = action.ActionID.toString();\n        performedAction.RecordTrackingNo = this.application.RegTrackingNo;\n        performedAction.CurrentStepID = this.application.CurrentStepID.toString();\n        performedAction.Comment = comment;\n        performedAction.ActionIsFinal = action.ActionIsFinal;\n        performedAction.CheckList = checklist;\n\n        this.performingAction(performedAction);\n\n        if (action.ActionName === 'Approve / Issue Certificate') {\n            this.generateCert(+this.application.OrganisationID, 'New');\n        }\n    }\n\n    // Perform Action Request More Info\n    performActionRMI(action: Action, fields: $RequestMoreInfoField[]) {\n        const rqMoreInfo = new ActionPerformedRequestMoreInfo();\n        rqMoreInfo.Comment = 'REQUESTED MORE INFO';\n        rqMoreInfo.ActionID = action.ActionID.toString();\n        rqMoreInfo.CurrentStepID = this.application.CurrentStepID.toString();\n        rqMoreInfo.RecordTrackingNo = this.application.RegTrackingNo;\n        rqMoreInfo.Email = this.application.EmailAddress;\n        rqMoreInfo.NextStepID = '3';\n        rqMoreInfo.Fields = fields;\n        this.performActionRequestMoreInfo(rqMoreInfo);\n    }\n\n    // Certificate Preview\n    previewCert() {\n        this.dialog.open(CertPreviewComponent, {\n            panelClass: ['organisation-certificate-dialog', 'dialogs'],\n            data: this.certificateDetails\n        }).afterClosed().subscribe((_) => {\n            this.getIssuedCertDetails(+this.application.OrganisationID);\n        });\n    }\n\n    viewApplicationTimeLine() {\n        this.dialog.open(ApplicationTimelineComponent, {\n            width: '941px',\n            height: '595px',\n            data: this.workflowTimeLine\n        });\n    }\n\n    private EnableRequestForMoreInformationFields(): void {\n        this.isOfficer = this.timeLineAccess.includes(this.realmRole);\n\n        // console.log('this.isOfficer:', this.isOfficer);\n        // console.log('this.requestMoreInfoFields:', this.requestMoreInfoFields);\n\n        if (!this.isOfficer) {\n            this.requestMoreInfoFields.filter((field) => {\n                // console.log('item:', field);\n    \n                // Break them up into sections...\n                // Then for each... check if the field is the one being inspected.\n                this.formFieldSections.filter((section) => {\n                    if (section.SectionID === field.SectionID) {\n                        section.Count += 1; \n                    }\n                });\n    \n                // Step One\n                if (field.SectionID === 1) {\n                    \n                    this.formGeneralInformation.get(field.FieldName).enable();\n                    \n                    if (field.FieldName === 'NatureOfBusinessCat') {\n                        this.formGeneralInformation.get('NatureOfBusinessSubCat').enable();\n                        this.formFieldSections[0].Count = this.formFieldSections[0].Count + 1;\n                    } else if (field.FieldName === 'SectorID') {\n                        this.formGeneralInformation.get('OtherSector').enable();\n                        this.formFieldSections[0].Count = this.formFieldSections[0].Count + 1;\n                    }\n                    \n                // Step Two\n                } else if (field.SectionID === 2) {\n                    \n                    this.formOrganisationDetails.get(field.FieldName).enable();\n                \n                // Step Three\n                } else if (field.SectionID === 3) {\n                \n                    if (field.FieldName === 'PersonalDataCollected') {\n                        this.personalDataCollectedCheckBoxEnabled = true;\n                    } else {\n                        this.formPersonalDataHeld.get(field.FieldName).enable();\n                    }\n                    \n                // Step Four\n                } else if (field.SectionID === 4) {\n                    \n                    if (field.FieldName === 'Purpose') {\n                        \n                        this.formPurposeRetention.get('SpecifyTheLaw').enable();\n                        this.formPurposeRetention.get('ServiceOrProductProvided').enable();\n                        this.formPurposeRetention.get('SpecifyLegalObligation').enable();\n\n                        this.formFieldSections[3].Count = this.formFieldSections[0].Count + 4;\n                    }\n\n                    this.formPurposeRetention.get(field.FieldName).enable();\n    \n                // Step Five\n                } else if (field.SectionID === 5) {\n                    if (field.FieldName === 'PersonalDataIsForDisclosure') {\n                        this.thirdPartiesEnabled = true;\n                        this.formFieldSections[4].Count = this.formFieldSections[0].Count + 1;\n                    } else if (field.FieldName === 'StoreDataOutsideCountry') {\n                        this.formFieldSections[4].Count = this.formFieldSections[0].Count + 1;\n                        this.countriesOfTransferEnabled = true;\n                    } \n\n                    this.formThirdParties.get(field.FieldName).enable();\n    \n                // Step Six\n                } else if (field.SectionID === 6) {\n                    \n                    if (field.FieldName === 'SecurityMeasures') {\n                        this.securityMeasuresEnabled = true;\n                    } else if (field.FieldName === 'Attachment') {\n                        this._updateAttachment = true;\n                    } else if (field.FieldName === 'Form3Attachment') {\n                        this._updateForm3Attachment = true;\n                    } else if (field.FieldName === 'ProofOfPayment') {\n                        this._updateProofOfPayment = true;\n                    } else {\n                        this.formSecurityMeasures.get(field.FieldName).enable();\n                    }\n    \n                }\n            });\n\n            // Register Listeners\n            this.Listeners();            \n        }\n    }\n\n    onReadDocument(document: FileUpload): void {\n        // console.log('document:', document);\n        this.bottomsheetRef = this.bottomsheet.open(ViewPdfDocumentBottomsheetComponent, {\n            disableClose: true,\n            panelClass: ['view-pdf-document-bottomsheet', 'bottomsheets'],\n            data: {\n              url: document.Base64,\n              title: document.Name\n            }\n        });      \n    }\n\n    getSelectedPurpose(): string {\n        let _purpose = '';\n        this.selectedDataPurposes.filter((item, index: number) => {\n            _purpose += (index > 0 ? ', ' : '') +  item.DataPurpose \n        });\n\n        return _purpose;\n    }\n\n    getSelectedNatureOfBusinessSubCat(): string {\n        let _subcategories = '';\n        this.selectedNatureOfBusinessSubCat.filter((item, index: number) => {\n            _subcategories += (index > 0 ? ', ' : '') +  item.NatureOfBusinessSubCategoryName \n        });\n\n        return _subcategories;\n    }\n\n}\n","\n<fury-page-layout mode=\"card\">\n    <fury-page-layout-header>\n        <fury-breadcrumbs \n            [@fadeInRight] \n            [crumbs]=\"[application ? application.OrganisationName : 'New Application']\"\n            [current]=\" application ? application.RegTrackingNo : 'New Application' \">\n        </fury-breadcrumbs>\n    </fury-page-layout-header>\n\n    <fury-page-layout-content [@fadeInUp]>\n        \n        <div class=\"actions-button-padding\">\n            <mat-toolbar\n                    *ngIf=\"permittedActions.length > 0 || application.CurrentStepName === 'Certificate Issued' || isOfficer \">\n                <mat-toolbar-row>\n                    <ng-container *ngFor=\"let operation of permittedActions\">\n                        <button \n                            [disabled]=\"application.CurrentStepID == _StepRequestingForMoreInfo\"\n                            mat-raised-button [color]=\"operation.ActionColor\" class=\"actions-button-padding\"\n                                (click)=\"performAction(operation)\">\n                            <mat-icon>{{operation.ActionIcon}}</mat-icon>\n                            <span> {{operation.ActionName}}</span>\n                        </button>\n                    </ng-container>\n\n                    <span class=\"example-spacer\"></span>\n\n                    <button mat-raised-button matTooltip=\"Print Certificate\" [disabled]=\"!canDownloadCertificate\"\n                        *ngIf=\"application.CurrentStepName === 'Certificate Issued'\" color=\"primary\"\n                        (click)=\"previewCert()\">\n                        <mat-icon>print</mat-icon>\n                        <span> Print Certificate </span>\n                    </button>\n\n                    <button mat-raised-button matTooltip=\"View Timeline\" class=\"actions-button-padding\" \n                    color=\"primary\" (click)=\"viewApplicationTimeLine()\">\n                        <mat-icon>view_timeline</mat-icon>\n                        <span>Application Timeline</span>\n                    </button>\n\n                    <!-- <button mat-raised-button matTooltip=\"View Timeline\" class=\"actions-button-padding\"\n                            *ngIf=\"isOfficer\" color=\"primary\" (click)=\"viewApplicationTimeLine()\">\n                        <mat-icon>view_timeline</mat-icon>\n                        <span>Application Timeline</span>\n                    </button> -->\n                </mat-toolbar-row>\n            </mat-toolbar>\n        </div>\n\n        <main class=\"fadeInUp _delay4ms\">\n\n            <!-- <app-page-breadcrumb [title]=\"'Application for New Registration / Renewal'\"></app-page-breadcrumb> -->\n        \n            <mat-horizontal-stepper \n                [linear]=\"isLinear\"\n                [selectedIndex]=\"selectedIndex\"\n                labelPosition=\"bottom\" #stepper>\n        \n                <mat-step [stepControl]=\"formGeneralInformation\">\n                    <ng-template matStepLabel>\n                        <h3>Applicant</h3>\n\n                        <span class=\"request-for-more-info-count\" *ngIf=\"formFieldSections[0].Count\">{{ formFieldSections[0].Count }}</span>\n                    </ng-template>\n        \n                    <form [formGroup]=\"formGeneralInformation\">\n                        <h1 class=\"full-width step-header\">Details of the applicant which could be an organisation or Individual that collects or processes Personal Data </h1>\n        \n                        <mat-form-field>\n                            <mat-label>Name of Organisation <span class=\"required-field\">required</span></mat-label>\n                            <input appUppercase matInput formControlName=\"OrganizationName\">       \n                            <mat-error *ngIf=\"formGeneralInformation.get('OrganizationName').invalid\">{{ getOrganizationNameErrorMessage() }}</mat-error>\n                        </mat-form-field>  \n        \n                        <!-- <mat-form-field [hintLabel]=\"'Data Protection & Privacy Act Categories'\"> -->\n                        <!-- <mat-form-field [hintLabel]=\"'Are you a Data Collector/ Data Processor / Data Controller ?'\"> -->\n                        <mat-form-field [hintLabel]=\"'Choose all that apply'\">\n                            <mat-label>Category <span class=\"required-field\">required</span></mat-label>\n                            <mat-select multiple formControlName=\"DPPActCategory\">\n                                <mat-option *ngFor=\"let cat of organisationCategories\" [value]=\"cat.OrganisationCategoryId\">\n                                    {{ cat.OrganisationCategoryName }}\n                                </mat-option>\n                            </mat-select>   \n                            <mat-error *ngIf=\"formGeneralInformation.get('DPPActCategory').invalid\">{{ getSelectErrorMessage() }}</mat-error> \n                        </mat-form-field>                             \n        \n                        <mat-form-field>\n                            <mat-label>Type of Organisation <span class=\"required-field\">required</span></mat-label>\n                            <mat-select formControlName=\"OrganizationTypeID\" #typeOfOrganisation>\n                                <mat-option *ngFor=\"let type of organisationTypes\" (click)=\"OrganizationType = type.OrganisationType\" [value]=\"type.OrganisationTypeID\">\n                                    {{ type.OrganisationType }}\n                                </mat-option>\n                            </mat-select>\n                            <mat-error *ngIf=\"formGeneralInformation.get('OrganizationTypeID').invalid\">{{ getSelectErrorMessage() }}</mat-error> \n                        </mat-form-field>                   \n        \n                        <mat-form-field *ngIf=\"typeOfOrganisation.value && typeOfOrganisation.value !== 4\">\n                            <mat-label>Country of Incorporation <span class=\"required-field\">required</span></mat-label>\n                            <mat-select formControlName=\"CountryOfIncorporation\">\n                                <mat-option *ngFor=\"let country of countries\" (click)=\"CountryOfIncorporation = country.Name\" [value]=\"country.CountryID\">\n                                    {{ country.Name }}\n                                </mat-option>\n                            </mat-select>\n                            <mat-error *ngIf=\"formGeneralInformation.get('CountryOfIncorporation').invalid\">{{ getSelectErrorMessage() }}</mat-error> \n                        </mat-form-field>        \n        \n                        <mat-form-field *ngIf=\"typeOfOrganisation.value && typeOfOrganisation.value !== 4\">\n                            <mat-label>Registration Number <span class=\"required-field\">required</span></mat-label>\n                            <input appUppercase appRemoveSpaces matInput maxlength=\"25\" formControlName=\"URSBNumber\"> \n                            <mat-error *ngIf=\"formGeneralInformation.get('URSBNumber').invalid\">{{ getURSBNumberErrorMessage() }}</mat-error>\n                        </mat-form-field>     \n                        \n                        <mat-form-field>\n                            <mat-label>Sector <span class=\"required-field\">required</span></mat-label>\n                            <mat-select formControlName=\"SectorID\" #Sector>\n                                <mat-option *ngFor=\"let sector of sectors\" (click)=\"SectorName = sector.Sector\" [value]=\"sector.SectorID\">\n                                    {{ sector.Sector }}\n                                </mat-option>\n                            </mat-select>\n                            <mat-error *ngIf=\"formGeneralInformation.get('SectorID').invalid\">{{ getSelectErrorMessage() }}</mat-error>\n                        </mat-form-field>        \n                        \n                        <mat-form-field hintLabel=\"If Other, Please specify the Sector.\" *ngIf=\"Sector.value === 14\">\n                            <mat-label>Specify Sector <span class=\"required-field\">required</span></mat-label>\n                            <input appUppercase matInput maxlength=\"50\" formControlName=\"OtherSector\">    \n                            <mat-error *ngIf=\"formGeneralInformation.get('OtherSector').invalid\">{{ getOtherSectorErrorMessage() }}</mat-error>\n                        </mat-form-field>                 \n        \n                        <!-- <mat-form-field *ngIf=\"formGeneralInformation.get('PublicBodyTypeID').value === '6'\">\n                            <mat-label>Type of Local Government <span class=\"required-field\">required</span></mat-label>\n                            <mat-select formControlName=\"LocalGovernmentType\">\n                                <mat-option value=\"1\">Body Corporate or otherwise established by Act of Parliament</mat-option>\n                                <mat-option value=\"2\">Cabinet</mat-option>\n                                <mat-option value=\"3\">Court</mat-option>\n                                <mat-option value=\"4\">Commission established by Act of Parliament</mat-option>\n                                <mat-option value=\"5\">Government Department</mat-option>\n                                <mat-option value=\"6\">Local Government Adminstration</mat-option>\n                            </mat-select>\n                        </mat-form-field>                    -->\n                        \n                        <!-- <mat-form-field *ngIf=\"formGeneralInformation.get('PublicBodyTypeID').value === '6'\">\n                            <mat-label>Statute <span class=\"required-field\">required</span></mat-label>\n                            <input appUppercase appRemoveSpaces matInput maxlength=\"255\" formControlName=\"Statute\">                            \n                        </mat-form-field>    \n                         -->\n                        <mat-form-field>\n                            <mat-label>Physical Address <span class=\"required-field\">required</span></mat-label>\n                            <input appUppercase matInput maxlength=\"255\" formControlName=\"Location\">            \n                            <mat-error *ngIf=\"formGeneralInformation.get('Location').invalid\">{{ getLocationErrorMessage() }}</mat-error>                \n                        </mat-form-field>  \n        \n                        <!-- <mat-form-field>\n                            <mat-label>Name of Head of Organisation <span class=\"required-field\">required</span></mat-label>\n                            <input appUppercase appRemoveSpaces matInput maxlength=\"255\" formControlName=\"HeadOfOrganization\">                            \n                        </mat-form-field>    \n        \n                        <mat-form-field>\n                            <mat-label>Title of Head of Organisation <span class=\"required-field\">required</span></mat-label>\n                            <input appUppercase appRemoveSpaces matInput maxlength=\"255\" formControlName=\"TitleOfOrganizationHead\">                            \n                        </mat-form-field>     -->\n        \n                        <!-- <mat-form-field>\n                            <mat-label>Postal Address <span class=\"optional-field\">optional</span></mat-label>\n                            <input appUppercase appRemoveSpaces matInput maxlength=\"255\" formControlName=\"PostalAddress\">                            \n                        </mat-form-field>     -->\n        \n                        <!-- Improve the country code to be dynamic -->\n                        <!-- <mat-form-field>\n                            <span matPrefix>+256 &nbsp;</span>\n                            <mat-label>Organisation Telephone Number <span class=\"required-field\">required</span></mat-label>\n                            <input appTelephoneFormaterDirective maxlength=\"11\" matInput formControlName=\"PhoneNumber\">           \n                        </mat-form-field>    -->\n        \n                        <div class=\"telephone-code-number-wrapper\">\n                            <mat-form-field class=\"fadeInUp _delay2ms\">\n                                <mat-label>Pick one </mat-label>\n                                <mat-select formControlName=\"PhoneNumberCode\">\n                                    <mat-option selected *ngIf=\"!selected\" value=\"256\">+256</mat-option>\n                                    <!-- <mat-option selected *ngIf=\"!selected\" value=\"256\">+256 - Uganda</mat-option> -->\n                                    <mat-option *ngFor=\"let code of countries\" [value]=\"code.PhoneCode\" (click)=\"selected = true\">\n                                        +{{ code.PhoneCode }}\n                                    </mat-option>\n                                </mat-select>\n                            </mat-form-field>\n        \n                            <!-- <mat-form-field class=\"fadeInUp _delay2ms\" [hintLabel]=\"'Organisation Telephone Number.'\"> -->\n                            <mat-form-field class=\"fadeInUp _delay2ms\">\n                                <mat-label>Organisation Telephone Number <span class=\"required-field\">required</span></mat-label>\n                                <input type=\"text\" maxlength=\"11\" matInput appTelephoneFormaterDirective formControlName=\"PhoneNumber\" placeholder=\"Ex. 414 318 111\">\n                                <mat-error *ngIf=\"formGeneralInformation.get('PhoneNumber').invalid\">{{ getTelephoneNumberErrorMessage() }}</mat-error>\n                            </mat-form-field> \n                        </div>                \n        \n                        <!-- <mat-form-field>\n                            <span matPrefix>+256 &nbsp;</span>\n                            <mat-label>Land Line <span class=\"optional-field\">optional</span></mat-label>\n                            <input appTelephoneFormaterDirective maxlength=\"11\" matInput formControlName=\"Landline\">           \n                        </mat-form-field>    -->\n        \n                        <mat-form-field>\n                            <mat-label>Organisation Email Address <span class=\"required-field\">required</span></mat-label>\n                            <input appRemoveSpaces matInput formControlName=\"EmailAddress\">\n                            <mat-error *ngIf=\"formGeneralInformation.get('EmailAddress').invalid\">{{ getEmailAddressErrorMessage() }}</mat-error>\n                        </mat-form-field>   \n        \n                        <!-- <mat-form-field hintLabel=\"Select all the roles performed\">\n                            <mat-label>Nature of Business <span class=\"required-field\">required</span></mat-label>\n                            <mat-select multiple formControlName=\"RolesPerformedID\">\n                                <mat-option value=\"1\">Protection of National Security</mat-option>\n                                <mat-option value=\"2\">Public revenue collection</mat-option>\n                                <mat-option value=\"3\">Enforcement of law which imposes a pecuniary penalty</mat-option>\n                                <mat-option value=\"4\">Conduct proceedings before any court</mat-option>\n                            </mat-select>    \n                        </mat-form-field>     -->\n        \n                        <mat-form-field>\n                            <mat-label>Nature of Business Categories<span class=\"required-field\">required</span></mat-label>\n                            <mat-select formControlName=\"NatureOfBusinessCat\">\n                                <mat-option *ngFor=\"let cat of natureOfBusinessCat\" (click)=\"NatureOfBusinessCat = cat.NatureOfBusinessCategoryName\" [value]=\"cat.NatureOfBusinessCatId\">\n                                    {{ cat.NatureOfBusinessCategoryName }}\n                                </mat-option>\n                            </mat-select>    \n                            <mat-error *ngIf=\"formGeneralInformation.get('NatureOfBusinessCat').invalid\">{{ getSelectErrorMessage() }}</mat-error>\n                        </mat-form-field>                   \n        \n                        <mat-form-field [hintLabel]=\"'Choose all that apply'\" *ngIf=\"_hasRequestMoreInfo && !isOfficer && formGeneralInformation.get('NatureOfBusinessSubCat').enabled\">\n                            <mat-label>Nature of Business Sub-Categories <span class=\"required-field\">required</span></mat-label>\n                            <mat-select multiple formControlName=\"NatureOfBusinessSubCat\">\n                                <mat-option *ngFor=\"let sub of natureOfBusinessSubCat\" [value]=\"sub.NatureOfBusinessSubCatId\" [matTooltip]=\"sub.NatureOfBusinessSubCategoryName\">\n                                    {{ sub.NatureOfBusinessSubCategoryName }}\n                                </mat-option>\n                            </mat-select> \n                            <mat-error *ngIf=\"formGeneralInformation.get('NatureOfBusinessSubCat').invalid\">{{ getSelectErrorMessage() }}</mat-error>   \n                        </mat-form-field>      \n                        \n                        <!-- For viewing purposes only -->\n                        <mat-form-field class=\"span-2-columns\" [hintLabel]=\"'Choose all that apply'\" *ngIf=\"!_hasRequestMoreInfo || (_hasRequestMoreInfo && formGeneralInformation.get('NatureOfBusinessSubCat').disabled) || isOfficer\">\n                            <mat-label>Nature of Business Sub-Categories ?<span class=\"required-field\">required</span></mat-label>\n                            <textarea matInput [value]=\"getSelectedNatureOfBusinessSubCat()\" disabled class=\"textarea-small\"></textarea>\n                        </mat-form-field>                          \n        \n                        <!-- <mat-form-field class=\"full-width\" hintLabel=\"What are the main activities of the organisation ?\">\n                            <mat-label>Nature of Business<span class=\"required-field\">required</span></mat-label>\n                            <textarea #CaseTitleInput matInput maxlength=\"1000\" formControlName=\"NatureOfBusiness\" placeholder=\"\"></textarea>\n                            <mat-hint align=\"end\">{{ CaseTitleInput.value.length }} / 1000</mat-hint>\n                        </mat-form-field>                      -->\n                        \n                        <!-- <section class=\"expand-section reduced-properties table-wrapper\">\n                            <button \n                                mat-button\n                                color=\"primary\"\n                                [disabled]=\"processing\"\n                                class=\"add-item-button\"\n                                (click)=\"onAddMainActivity()\">\n                                <div class=\"button-label\">\n                                    <mat-icon>add</mat-icon>                            \n                                    <span>Add A Main Activity</span>\n                                </div>\n                            </button>\n        \n                            <p class=\"description\">What are the main activities of the organisation ?</p>\n                            \n                            <div class=\"table-wrapper\">\n                                <table \n                                    mat-table \n                                    #dpoMatSort=\"matSort\"\n                                    matSortDisableClear=\"true\"\n                                    [dataSource]=\"mainActivitiesDataSource\"\n                                    matSort>\n                    \n                                    <ng-container matColumnDef=\"Count\">\n                                        <th mat-header-cell *matHeaderCellDef> # </th>\n                                        <td mat-cell *matCellDef=\"let index = index\"> {{ index + 1 }} </td>\n                                    </ng-container>\n                    \n                                    <ng-container matColumnDef=\"MainActivity\">\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Main Activities </th>\n                                        <td mat-cell *matCellDef=\"let row\">{{ row.Activity }}</td>\n                                    </ng-container>                      \n                    \n                                    <ng-container matColumnDef=\"Actions\">\n                                        <th mat-header-cell *matHeaderCellDef> Actions </th>\n                                        <td mat-cell *matCellDef=\"let row; let index = index\">\n                                            <button \n                                                mat-button \n                                                class=\"action-btn\"\n                                                [matMenuTriggerFor]=\"menu\" \n                                                (click)=\"$event.stopPropagation()\"\n                                                matTooltip=\"See more options\">\n                                                <mat-icon>more_vert</mat-icon>\n                                            </button>\n                    \n                                            <mat-menu yPosition=\"below\" #menu=\"matMenu\" class=\"more-options-mat-menu\">\n                    \n                                                <button \n                                                    mat-menu-item \n                                                    (click)=\"$event.stopPropagation();onEditMainActivity(row)\">\n                                                    <mat-icon>edit</mat-icon>\n                                                    <span>Make Changes</span>\n                                                </button>\n                                                      \n                                                <hr />\n                    \n                                                <button \n                                                    mat-menu-item \n                                                    (click)=\"$event.stopPropagation();onRemoveMainActivity(row)\">\n                                                    <mat-icon color=\"warn\">delete</mat-icon>\n                                                    <span>Remove</span>\n                                                </button>\n                    \n                                            </mat-menu>                                                  \n                                        </td>\n                                    </ng-container>\n                    \n                                    <tr mat-header-row *matHeaderRowDef=\"MainActivitiesDisplayedColumns\"></tr>\n                                    <tr mat-row *matRowDef=\"let row; columns: MainActivitiesDisplayedColumns;\" class=\"mat-data-row\"></tr>\n                                </table>\n        \n                                <mat-paginator \n                                    #dpoPaginator\n                                    [pageSize]=\"10\"\n                                    [pageSizeOptions]=\"[5, 10]\">\n                                </mat-paginator>                    \n                            </div>                \n                        </section>                      -->\n                        \n                    </form>\n        \n                    <div class=\"button-wrapper single-button\">\n                        <button  *ngIf=\"!isViewOnly\"\n                            mat-button \n                            color=\"primary\" >\n                            Save as Draft\n                        </button>       \n        \n                        <button \n                            [disabled]=\"formGeneralInformation.invalid\"\n                            mat-button \n                            class=\"next-btn\" \n                            color=\"primary\" \n                            matStepperNext>\n                            Next\n                        </button>\n                    </div>             \n                </mat-step>\n        \n                <mat-step [stepControl]=\"formOrganisationDetails\">\n                    <ng-template matStepLabel>\n                        <h3>Data Protection <br />Officer</h3>\n\n                        <span class=\"request-for-more-info-count\" *ngIf=\"formFieldSections[1].Count\">{{ formFieldSections[1].Count }}</span>\n                    </ng-template>\n        \n                    <form [formGroup]=\"formOrganisationDetails\">     \n        \n                        <h1 class=\"full-width step-header\">Details of Data Protection Officer </h1>    \n                        \n                        <!-- If yes... all the fields should be required. -->\n        \n                        <div class=\"grouped-items\" [ngClass]=\"{'full-width': formOrganisationDetails.get('DPORequired').value !== 'Yes'}\">\n                            <h3>Do you have a designated data protection officer ? </h3>\n        \n                            <mat-radio-group \n                                color=\"primary\" \n                                formControlName=\"DPORequired\" \n                                aria-label=\"Pick one\">\n                                <mat-radio-button [ngClass]=\"{'selected-radio-btn': formOrganisationDetails.get('DPORequired').value === 'Yes' }\" value=\"Yes\">Yes</mat-radio-button>\n                                <mat-radio-button [ngClass]=\"{'selected-radio-btn': formOrganisationDetails.get('DPORequired').value === 'No' }\" value=\"No\">No</mat-radio-button>\n                            </mat-radio-group>        \n                        </div>                  \n                        \n                        <mat-form-field *ngIf=\"formOrganisationDetails.get('DPORequired').value === 'Yes'\">\n                            <mat-label>Name <span class=\"required-field\">required</span></mat-label>\n                            <input formControlName=\"DPOName\" matInput>\n                            <mat-error *ngIf=\"formOrganisationDetails.get('DPOName').invalid\">{{ getDPONameErrorMessage() }}</mat-error>\n                        </mat-form-field>\n                \n                        <mat-form-field *ngIf=\"formOrganisationDetails.get('DPORequired').value === 'Yes'\">\n                            <mat-label>Physical Address <span class=\"required-field\">required</span></mat-label>\n                            <input formControlName=\"DPOPhysicalAddress\" maxlength=\"255\" matInput>\n                            <mat-error *ngIf=\"formOrganisationDetails.get('DPOPhysicalAddress').invalid\">{{ getDPOPhysicalAddressErrorMessage() }}</mat-error>\n                        </mat-form-field>\n        \n                        <!-- <mat-form-field >\n                            <span matPrefix>+256 &nbsp;</span>\n                            <mat-label>Telephone Number <span class=\"required-field\">required</span></mat-label>\n                            <input appTelephoneFormaterDirective maxlength=\"11\" matInput formControlName=\"DPOPhoneNumber\">           \n                        </mat-form-field>  -->\n                        \n                        <div class=\"telephone-code-number-wrapper\" *ngIf=\"formOrganisationDetails.get('DPORequired').value === 'Yes'\">\n                            <mat-form-field class=\"fadeInUp _delay2ms\">\n                                <mat-label>Pick one </mat-label>\n                                <mat-select formControlName=\"PhoneNumberCode\">\n                                    <mat-option selected *ngIf=\"!DPOSelected\" value=\"256\">+256</mat-option>\n                                    <!-- <mat-option selected *ngIf=\"!selected\" value=\"256\">+256 - Uganda</mat-option> -->\n                                    <mat-option *ngFor=\"let code of countries\" [value]=\"code.PhoneCode\" (click)=\"DPOSelected = true\">\n                                        +{{ code.PhoneCode }}\n                                    </mat-option>\n                                </mat-select>\n                                <!-- <mat-error *ngIf=\"formGeneralInformation.get('PhoneNumberCode').invalid\">{{ getSelectInputErrorMessage() }}</mat-error>      -->\n                            </mat-form-field>\n        \n                            <!-- <mat-form-field class=\"fadeInUp _delay2ms\" [hintLabel]=\"'Organisation Telephone Number.'\"> -->\n                            <mat-form-field class=\"fadeInUp _delay2ms\">\n                                <mat-label>Telephone Number <span class=\"required-field\">required</span></mat-label>\n                                <input type=\"text\" maxlength=\"11\" matInput appTelephoneFormaterDirective formControlName=\"DPOPhoneNumber\" placeholder=\"Ex. 414 318 111\">\n                                <mat-error *ngIf=\"formOrganisationDetails.get('DPOPhoneNumber').invalid\">{{ getDPOPhoneNumberErrorMessage() }}</mat-error>\n                            </mat-form-field> \n                        </div>                  \n                \n                        <mat-form-field *ngIf=\"formOrganisationDetails.get('DPORequired').value === 'Yes'\">\n                            <mat-label>Email Address <span class=\"required-field\">required</span></mat-label>\n                            <input appRemoveSpaces formControlName=\"DPOEmailAddress\" matInput>\n                            <mat-error *ngIf=\"formOrganisationDetails.get('DPOEmailAddress').invalid\">{{ getDPOEmailAddressErrorMessage() }}</mat-error>\n                        </mat-form-field>       \n        \n                        <mat-form-field *ngIf=\"formOrganisationDetails.get('DPORequired').value === 'Yes'\" class=\"full-width\" hintLabel=\"Any other title held apart from DPO (Data Protection Officer).\">\n                            <mat-label>Title Held <span class=\"required-field\">required</span></mat-label>\n                            <textarea #PositionInput matInput formControlName=\"DPOPositionInOrganisation\" maxlength=\"1000\"></textarea>\n                            <mat-hint align=\"end\">{{ PositionInput.value.length }} / 1000</mat-hint>\n                            <mat-error *ngIf=\"formOrganisationDetails.get('DPOPositionInOrganisation').invalid\">{{ getDPOPositionInOrganisationErrorMessage() }}</mat-error>\n                        </mat-form-field>                  \n                    </form>\n        \n                    <div class=\"button-wrapper\">       \n                        <button mat-button class=\"back-btn\" matStepperPrevious>Back</button>   \n                        <button  *ngIf=\"!isViewOnly\"\n                            mat-button \n                            color=\"primary\" >\n                            Save as Draft\n                        </button>  \n                        <button \n                            [disabled]=\"formOrganisationDetails.invalid\"\n                            mat-button \n                            class=\"next-btn\" \n                            color=\"primary\" \n                            matStepperNext>\n                            Next\n                        </button>\n                    </div>             \n                </mat-step>\n        \n                <mat-step [stepControl]=\"formPersonalDataHeld\">\n                    <ng-template matStepLabel>\n                        <h3>Data Collected <br /> or Processed</h3>\n\n                        <span class=\"request-for-more-info-count\" *ngIf=\"formFieldSections[2].Count\">{{ formFieldSections[2].Count }}</span>\n                    </ng-template>\n        \n                    <form [formGroup]=\"formPersonalDataHeld\" class=\"personal-data-affected\">       \n                        \n                        <h1 class=\"full-width step-header\">Description of Data collected or processed </h1>\n        \n                        <mat-form-field hintLabel=\"Choose all that apply.\" class=\"full-width\">\n                            <mat-label>Source of Data <span class=\"required-field\">required</span></mat-label>\n                            <mat-select multiple formControlName=\"SourceOfDataID\">\n                                <mat-option *ngFor=\"let source of dataSources\" [value]=\"source.DataSourceID\">\n                                    {{ source.DataSource }}\n                                </mat-option>\n                            </mat-select>    \n                            <mat-error *ngIf=\"formPersonalDataHeld.get('SourceOfDataID').invalid\">{{ getSelectErrorMessage() }}</mat-error> \n                        </mat-form-field>        \n                        \n                        <!-- <div class=\"grouped-items\" class=\"span-2-columns\">\n                            <h3>Do you collect personal data relating to Children?</h3>\n            \n                            <mat-radio-group color=\"primary\" aria-label=\"Pick one\" formControlName=\"CollectChildrenData\">\n                                <mat-radio-button value=\"Yes\">Yes</mat-radio-button>\n                                <mat-radio-button value=\"No\">No</mat-radio-button>\n                            </mat-radio-group>        \n                        </div>   -->\n        \n                        <!-- <mat-form-field class=\"full-width personal-data-affected-field\" hintLabel=\"Choose all that apply\">\n                            <mat-label>Personal Data Collected Or Processed <span class=\"required-field\">required</span></mat-label>\n                            <mat-select [formControl]=\"dataCategory\" multiple>\n                                <mat-option \n                                    *ngFor=\"let category of dataCategories\" \n                                    [value]=\"category.Name\">\n                                    {{ category.Name }}\n                            </mat-option>\n                            </mat-select>\n                        </mat-form-field> -->\n        \n                        <h1 class=\"full-width heading\">Personal Data Collected Or Processed</h1>\n                        \n                        <section \n                            *ngFor=\"let category of dataCategories; let i = index\" \n                            class=\"expand-section categories\">        \n\n                            <div>\n                                <h3 [innerHTML]=\"category.DataCategory\"></h3>\n                                <mat-icon matTooltipPosition=\"right\"  [matTooltip]=\"category.DataDescription\">info</mat-icon>\n                            </div>\n\n                            <mat-checkbox [disabled]=\"isViewOnly && !personalDataCollectedCheckBoxEnabled\"\n                                *ngFor=\"let SubCategory of category.SubCategories\" \n                                [ngClass]=\"{'full-width': category.SubCategories.length === 1, 'selected-checkbox': SubCategory.IsChecked}\"\n                                color=\"primary\"\n                                [checked]=\"SubCategory.IsChecked\"\n                                (change)=\"onChangeSubCategory($event,SubCategory)\"\n                                [required]=\"'false'\">\n                                {{ SubCategory.DataSubCategory }}\n                            </mat-checkbox>\n                            \n                        </section>                            \n                    </form>\n        \n                    <div class=\"button-wrapper\">       \n                        <button mat-button class=\"back-btn\" matStepperPrevious>Back</button>\n        \n                        <button *ngIf=\"!isViewOnly\"\n                            mat-button \n                            color=\"primary\" >\n                            Save as Draft\n                        </button> \n\n                        <button \n                            [disabled]=\"formPersonalDataHeld.invalid || selectedDataSubCategory.length === 0\"\n                            mat-button \n                            class=\"next-btn\" \n                            color=\"primary\" \n                            matStepperNext>\n                            Next\n                        </button>\n                    </div>             \n                </mat-step>\n\n                <mat-step [stepControl]=\"formChildrenData\">\n                    <ng-template matStepLabel>\n                        <h3>Children's Data</h3>\n                    </ng-template>\n\n                    <form [formGroup]=\"formChildrenData\">\n                        \n                        <div class=\"grouped-items\">\n                            <h3>Do you collect personal data relating to Children?<span class=\"required-field\">required</span></h3>\n            \n                            <mat-radio-group color=\"primary\" aria-label=\"Pick one\" formControlName=\"CollectChildrenData\" (change)=\"updateCollecthildrenData($event)\">\n                                <mat-radio-button value=\"Yes\">Yes</mat-radio-button>\n                                <mat-radio-button value=\"No\">No</mat-radio-button>\n                            </mat-radio-group>        \n                        </div>  \n        \n                        <mat-form-field *ngIf=\"showChildrenDataFields == true\">\n                            <mat-label>Reason / Purpose for collecting children's data<span class=\"required-field\">required</span> </mat-label>\n                        \n                            <mat-select multiple formControlName=\"PurposeForCollection\">\n                                <mat-option *ngFor=\"let child of childDataPurposes\" [value]=\"child.ChildDataID\">\n                                    {{ child.ChildDataPurpose }}\n                                </mat-option>\n                            </mat-select>  \n                        </mat-form-field>                  \n                        \n                                    \n        \n                    </form>\n\n                    <div class=\"button-wrapper\">       \n                        <button mat-button class=\"back-btn\" matStepperPrevious>Back</button>\n        \n                        <button \n                            *ngIf=\"!isViewOnly\"\n                            mat-button \n                            class=\"save-draft-btn\"\n                            [disabled]=\"processing\"\n                            (click)=\"onSaveDraft()\"\n                            color=\"primary\">\n                            Save\n                        </button> \n\n                        <button \n                            [disabled]=\"formChildrenData.invalid\"\n                            mat-button \n                            class=\"next-btn\" \n                            color=\"primary\" \n                            matStepperNext>\n                            Next\n                        </button>\n                    </div>          \n\n                </mat-step>\n        \n        \n                <mat-step [stepControl]=\"formPurposeRetention\">\n                    <ng-template matStepLabel>\n                        <h3>Purpose & Retention</h3>\n\n                        <span class=\"request-for-more-info-count\" *ngIf=\"formFieldSections[3].Count\">{{ formFieldSections[3].Count }}</span>\n                    </ng-template>\n        \n                    <form [formGroup]=\"formPurposeRetention\">       \n                        \n                        <h1 class=\"full-width step-header\">Description of Purpose for which data is collected or processed </h1>\n        \n                        <!-- <mat-form-field hintLabel=\"Why do you collect personal Data?\">\n                            <mat-label>For What Purpose ?<span class=\"required-field\">required</span></mat-label>\n                            <mat-select formControlName=\"Purpose\" multiple>\n                                <mat-option *ngFor=\"let purpose of dataPurposes\" [value]=\"purpose.DataPurposeID\">\n                                    {{ purpose.DataPurpose }}\n                                </mat-option>\n                            </mat-select>  \n                            <mat-error *ngIf=\"formPurposeRetention.get('Purpose').invalid\">{{ getSelectErrorMessage() }}</mat-error>   \n                        </mat-form-field> -->\n        \n                        <!-- For editing purposes only -->\n                        <mat-form-field *ngIf=\"_hasRequestMoreInfo && !isOfficer && formPurposeRetention.get('Purpose').enabled\" hintLabel=\"Why do you collect personal Data?\">\n                            <mat-label>For What Purpose ?<span class=\"required-field\">required</span></mat-label>\n                            <mat-select formControlName=\"Purpose\" multiple>\n                                <mat-option *ngFor=\"let purpose of dataPurposes\" [value]=\"purpose.DataPurposeID\">\n                                    {{ purpose.DataPurpose }}\n                                </mat-option>\n                            </mat-select>  \n                            <mat-error *ngIf=\"formPurposeRetention.get('Purpose').invalid\">{{ getSelectErrorMessage() }}</mat-error>   \n                        </mat-form-field>\n\n                        <!-- For viewing purposes only -->\n                        <mat-form-field class=\"full-width\" *ngIf=\"!_hasRequestMoreInfo || (_hasRequestMoreInfo && formPurposeRetention.get('Purpose').disabled) || isOfficer\" hintLabel=\"Why do you collect personal Data?\">\n                            <mat-label>For What Purpose ?<span class=\"required-field\">required</span></mat-label>\n                            <textarea matInput [value]=\"getSelectedPurpose()\" disabled class=\"textarea-small\"></textarea>\n                        </mat-form-field>   \n\n        \n                        <!-- For Edits -->\n                        <mat-form-field hintLabel=\"If the purpose is Collection / Processing is required by Law.\" *ngIf=\"SpecifyTheLaw && _hasRequestMoreInfo && !isOfficer && formPurposeRetention.get('SpecifyTheLaw').enabled\">\n                            <mat-label>Specify the Law <span class=\"required-field\">required</span></mat-label>\n                            <input matInput #SpecifyTheLawInput maxlength=\"1000\" formControlName=\"SpecifyTheLaw\">        \n                            <mat-hint align=\"end\">{{ SpecifyTheLawInput.value.length }} / 1000</mat-hint>    \n                            <mat-error *ngIf=\"formPurposeRetention.get('SpecifyTheLaw').invalid\">{{ getRequiredErrorMessage() }}</mat-error>\n                        </mat-form-field>  \n        \n                        <!-- For viewing only -->\n                        <mat-form-field class=\"full-width\" *ngIf=\"SpecifyTheLaw && (!_hasRequestMoreInfo || (_hasRequestMoreInfo && formPurposeRetention.get('SpecifyTheLaw').disabled) || isOfficer)\" hintLabel=\"If the purpose is Collection / Processing is required by Law.\">\n                            <mat-label>Specify the Law<span class=\"required-field\">required</span></mat-label>\n                            <textarea matInput formControlName=\"SpecifyTheLaw\" disabled class=\"textarea-small\"></textarea>\n                        </mat-form-field>                             \n        \n\n                        <!-- For Edits -->\n                        <mat-form-field hintLabel=\"If the purpose is to provide services / products to Individuals.\" *ngIf=\"ServiceOrProductProvided && _hasRequestMoreInfo && !isOfficer && formPurposeRetention.get('ServiceOrProductProvided').enabled\">\n                            <mat-label>Specify the Service / Product Provided<span class=\"required-field\">required</span></mat-label>\n                            <input matInput #ServiceOrProductProvidedInput maxlength=\"1000\" formControlName=\"ServiceOrProductProvided\">     \n                            <mat-hint align=\"end\">{{ ServiceOrProductProvidedInput.value.length }} / 1000</mat-hint>    \n                            <mat-error *ngIf=\"formPurposeRetention.get('ServiceOrProductProvided').invalid\">{{ getRequiredErrorMessage() }}</mat-error>\n                        </mat-form-field>  \n                        \n                        <!-- For viewing only -->\n                        <mat-form-field class=\"full-width\" *ngIf=\"ServiceOrProductProvided && (!_hasRequestMoreInfo || (_hasRequestMoreInfo && formPurposeRetention.get('ServiceOrProductProvided').disabled) || isOfficer)\" hintLabel=\"If the purpose is to provide services / products to Individuals.\">\n                            <mat-label>Specify the Service / Product Provided<span class=\"required-field\">required</span></mat-label>\n                            <textarea matInput formControlName=\"ServiceOrProductProvided\" disabled class=\"textarea-small\"></textarea>\n                        </mat-form-field>                              \n\n                        <!-- For Edits -->\n                        <mat-form-field hintLabel=\"If the purpose is for Compliance with a Legal Obligation.\" *ngIf=\"SpecifyLegalObligation && _hasRequestMoreInfo && !isOfficer && formPurposeRetention.get('SpecifyLegalObligation').enabled\">\n                            <mat-label>Specify the Legal Obligation<span class=\"required-field\">required</span></mat-label>\n                            <input matInput #SpecifyLegalObligationInput maxlength=\"50\" formControlName=\"SpecifyLegalObligation\">  \n                            <mat-hint align=\"end\">{{ SpecifyLegalObligationInput.value.length }} / 50</mat-hint>    \n                            <mat-error *ngIf=\"formPurposeRetention.get('SpecifyLegalObligation').invalid\">{{ getRequiredErrorMessage() }}</mat-error>\n                        </mat-form-field>  \n\n                        <!-- For viewing only -->\n                        <mat-form-field class=\"full-width\" *ngIf=\"SpecifyLegalObligation && (!_hasRequestMoreInfo || (_hasRequestMoreInfo && formPurposeRetention.get('SpecifyLegalObligation').disabled) || isOfficer)\" hintLabel=\"If the purpose is Collection / Processing is required by Law.\">\n                            <mat-label>Specify the Legal Obligation<span class=\"required-field\">required</span></mat-label>\n                            <textarea matInput formControlName=\"SpecifyLegalObligation\" disabled class=\"textarea-small\"></textarea>\n                        </mat-form-field>                              \n                        \n                        <mat-form-field hintLabel=\"Approximate number of Personal Data Records held.\">\n                            <mat-label>Total Records <span class=\"optional-field\">optional</span></mat-label>\n                            <input appCurrencyDirective matInput maxlength=\"14\" formControlName=\"TotalRecordsAtRegistration\">                            \n                            <mat-error *ngIf=\"formPurposeRetention.get('TotalRecordsAtRegistration').invalid\">{{ getPatternErrorMessage() }}</mat-error>\n                        </mat-form-field>  \n                        \n                        <mat-form-field hintLabel=\"The % annual growth of Personal Records held\">\n                            <mat-label>Percentage Annual Growth <span class=\"optional-field\">optional</span></mat-label>\n                            <input appCurrencyDirective matInput max=\"100\" maxlength=\"3\" formControlName=\"RecordPercentageGrowth\">                            \n                            <mat-error *ngIf=\"formPurposeRetention.get('RecordPercentageGrowth').invalid\">{{ getRecordPercentageGrowthErrorMessage() }}</mat-error>\n                            <mat-hint align=\"end\">Max. 100%</mat-hint>      \n                            <span matSuffix>%</span>\n                        </mat-form-field>   \n        \n                        <mat-form-field hintLabel=\"Duration for which personal data shall be kept (Years).\">\n                            <mat-label>Retention period <span class=\"required-field\">required</span></mat-label>\n                            <input appCurrencyDirective max=\"100\" matInput maxlength=\"3\" formControlName=\"RetentionPeriod\">                          \n                            <mat-error *ngIf=\"formPurposeRetention.get('RetentionPeriod').invalid\">{{ getRetentionPeriodErrorMessage() }}</mat-error>\n                            <mat-hint align=\"end\">Max. 100 years</mat-hint>      \n                            <span matSuffix>Year(s)</span>\n                        </mat-form-field>                            \n        \n                        <!-- <div class=\"grouped-items\">\n                            <h3>Did you get consent from the Data Subject ?</h3>\n            \n                            <mat-radio-group color=\"primary\" aria-label=\"Pick one\" formControlName=\"GetConsent\">\n                                <mat-radio-button value=\"Yes\">Yes</mat-radio-button>\n                                <mat-radio-button value=\"No\">No</mat-radio-button>\n                            </mat-radio-group>        \n                        </div>                 -->\n        \n                        <!-- <mat-form-field hintLabel=\"The nature of processing carried out on the personal data.\">\n                            <mat-label>Nature of Processing <span class=\"optional-field\">optional</span></mat-label>\n                            <mat-select multiple formControlName=\"NatureOfProcessing\">\n                                <mat-option value=\"\">Organized, adapted or altered for use in fulfilling organizations mandate and role</mat-option>\n                                <mat-option value=\"\">Data is stored and retrieved and used for internal consultation or verification</mat-option>\n                                <mat-option value=\"\">Data is disseminated or disclosed</mat-option>\n                            </mat-select>    \n                        </mat-form-field>     -->\n        \n                        <!-- <div class=\"grouped-items\">\n                            <h3>Do you process or store personal data outside Uganda ?</h3>\n            \n                            <mat-radio-group color=\"primary\" aria-label=\"Pick one\" formControlName=\"StoreDataOutsideCountry\">\n                                <mat-radio-button value=\"Yes\">Yes</mat-radio-button>\n                                <mat-radio-button value=\"No\">No</mat-radio-button>\n                            </mat-radio-group>        \n                        </div>    \n        \n                        <mat-form-field hintLabel=\"Where the personal data was obtained from.\">\n                            <mat-label>Countries <span class=\"required-field\">required</span></mat-label>\n                            <mat-select multiple formControlName=\"CountriesStoringYourData\">\n                                <mat-option value=\"1\">Kenya</mat-option>\n                                <mat-option value=\"2\">Tanzania</mat-option>\n                                <mat-option value=\"3\">United States</mat-option>\n                            </mat-select>    \n                        </mat-form-field>                     -->\n        <!--                 \n                        <section class=\"expand-section reduced-properties table-wrapper\">\n                            <h1>Identifiers</h1>\n        \n                            <mat-checkbox\n                                color=\"primary\"\n                                [required]=\"'false'\">\n                                Name\n                            </mat-checkbox>    \n        \n                            <mat-checkbox\n                                color=\"primary\"\n                                [required]=\"'false'\">\n                                Nationality\n                            </mat-checkbox>    \n        \n                            <mat-checkbox\n                                color=\"primary\"\n                                [required]=\"'false'\">\n                                Age\n                            </mat-checkbox>      \n        \n                        </section>    \n                         -->\n                        <!-- <section class=\"expand-section reduced-properties table-wrapper\">\n                            <h1>Individual Commercial Information</h1>\n        \n                            <mat-checkbox\n                                color=\"primary\"\n                                [required]=\"'false'\">\n                                Name\n                            </mat-checkbox>    \n        \n                            <mat-checkbox\n                                color=\"primary\"\n                                [required]=\"'false'\">\n                                Nationality\n                            </mat-checkbox>    \n        \n                            <mat-checkbox\n                                color=\"primary\"\n                                [required]=\"'false'\">\n                                Age\n                            </mat-checkbox>      \n        \n                        </section>     -->\n        \n                    </form>\n        \n                    <div class=\"button-wrapper\">       \n                        <button mat-button class=\"back-btn\" matStepperPrevious>Back</button>\n        \n                        <!-- <button  *ngIf=\"!isViewOnly\"\n                            mat-button \n                            color=\"primary\" >\n                            Save as Draft\n                        </button>  -->\n\n                        <button \n                            [disabled]=\"formPurposeRetention.invalid\"\n                            mat-button \n                            class=\"next-btn\" \n                            color=\"primary\" \n                            matStepperNext>\n                            Next\n                        </button>\n                    </div>             \n                </mat-step>\n                <!-- <mat-step [stepControl]=\"form\">\n                    <ng-template matStepLabel>\n                        <h3>Profile <br /></h3>\n                    </ng-template>\n        \n                    <form [formGroup]=\"form\">\n                        \n                    </form>\n        \n                    <div class=\"button-wrapper\">\n                        <button mat-button class=\"back-btn\" matStepperPrevious>Back</button>\n        \n                        <button \n                            mat-button \n                            [disabled]=\"form.invalid || processing\" \n                            class=\"next-btn\" \n                            color=\"primary\" \n                            matStepperNext>\n                            Next\n                        </button>\n                    </div>\n                </mat-step> -->\n        \n                <mat-step [stepControl]=\"formThirdParties\">\n                    <ng-template matStepLabel>\n                        <h3>Disclosure & Transfer</h3>\n\n                        <span class=\"request-for-more-info-count\" *ngIf=\"formFieldSections[4].Count\">{{ formFieldSections[4].Count }}</span>\n                    </ng-template>\n        \n                    <form [formGroup]=\"formThirdParties\">\n        \n                        <h1 class=\"full-width step-header\">List of persons or Bodies to whom personal data may be disclosed</h1>\n                        \n                        <div class=\"grouped-items full-width\">\n                            <h3>Do you disclose Personal Data to other Persons or Bodies ?</h3>\n            \n                            <mat-radio-group \n                                color=\"primary\" \n                                aria-label=\"Pick one\" \n                                formControlName=\"PersonalDataIsForDisclosure\">\n                                <mat-radio-button [ngClass]=\"{'selected-radio-btn': formThirdParties.get('PersonalDataIsForDisclosure').value === 'Yes' }\" value=\"Yes\">Yes</mat-radio-button>\n                                <mat-radio-button [ngClass]=\"{'selected-radio-btn': formThirdParties.get('PersonalDataIsForDisclosure').value === 'No' }\" value=\"No\">No</mat-radio-button>\n                            </mat-radio-group>        \n                        </div>    \n        \n                        <section \n                            *ngIf=\"formThirdParties.get('PersonalDataIsForDisclosure').value === 'Yes'\"\n                            class=\"expand-section reduced-properties table-wrapper fadeInUp _delay3ms\">\n                            <button *ngIf=\"!isViewOnly || (!isOfficer && _hasRequestMoreInfo && thirdPartiesEnabled)\"\n                                mat-button\n                                color=\"primary\"\n                                [disabled]=\"processing\"\n                                class=\"add-item-button\"\n                                (click)=\"onAddAThirdParty()\">\n                                <div class=\"button-label\">\n                                    <mat-icon>add</mat-icon>                            \n                                    <span>Add Person / Body</span>\n                                </div>\n                            </button>\n                            \n                            <div class=\"table-wrapper\">\n                                <table \n                                    mat-table \n                                    #thirdPartyMatSort=\"matSort\"\n                                    matSortDisableClear=\"true\"\n                                    [dataSource]=\"thirdPartyDataSource\"\n                                    matSort>\n                    \n                                    <ng-container matColumnDef=\"Count\">\n                                        <th mat-header-cell *matHeaderCellDef> # </th>\n                                        <td mat-cell *matCellDef=\"let index = index\"> {{ index + 1 }} </td>\n                                    </ng-container>\n                    \n                                    <ng-container matColumnDef=\"NameOfThirdParty\">\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Person / Body </th>\n                                        <td mat-cell *matCellDef=\"let row\">{{ row.ThirdPartyName }}</td>\n                                    </ng-container>          \n                    \n                                    <ng-container matColumnDef=\"Purpose\">\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Purpose </th>\n                                        <td mat-cell *matCellDef=\"let row\">{{ row.Purpose }}</td>\n                                    </ng-container>                                 \n                    \n                                    <!-- Actions Column -->\n                                    <ng-container matColumnDef=\"Actions\">\n                                        <th mat-header-cell *matHeaderCellDef> Actions </th>\n                                        <td mat-cell *matCellDef=\"let row; let index = index\">\n                                            <button \n                                                mat-button \n                                                class=\"action-btn\"\n                                                [disabled]=\"!_hasRequestMoreInfo || isOfficer || (_hasRequestMoreInfo && !thirdPartiesEnabled)\"\n                                                [matMenuTriggerFor]=\"menu\" \n                                                (click)=\"$event.stopPropagation()\"\n                                                matTooltip=\"See more options\">\n                                                <mat-icon>more_vert</mat-icon>\n                                            </button>\n                    \n                                            <mat-menu yPosition=\"below\" #menu=\"matMenu\" class=\"more-options-mat-menu\">\n                    \n                                                <button \n                                                    mat-menu-item \n                                                    (click)=\"$event.stopPropagation();onEditThirdParty(row)\">\n                                                    <mat-icon>edit</mat-icon>\n                                                    <span>Make Changes</span>\n                                                </button>\n                                                      \n                                                <hr />\n                    \n                                                <button \n                                                    mat-menu-item \n                                                    (click)=\"$event.stopPropagation();onRemoveThirdParty(row)\">\n                                                    <mat-icon color=\"warn\">delete</mat-icon>\n                                                    <span>Remove</span>\n                                                </button>\n                    \n                                            </mat-menu>                                                  \n                                        </td>\n                                    </ng-container>\n                    \n                                    <tr mat-header-row *matHeaderRowDef=\"thirdPartyDisplayedColumns\"></tr>\n                                    <tr mat-row *matRowDef=\"let row; columns: thirdPartyDisplayedColumns;\" class=\"mat-data-row\"></tr>\n                                </table>\n        \n                                <mat-paginator \n                                    #thirdPartyPaginator\n                                    [pageSize]=\"10\"\n                                    [pageSizeOptions]=\"[5, 10]\">\n                                </mat-paginator>                    \n                            </div>                \n                        </section>    \n                        \n                        <hr class=\"full-width\" />\n        \n                        <div class=\"grouped-items full-width\">\n                            <h3>Do you Transfer personal data outside Uganda ?</h3>\n            \n                            <mat-radio-group color=\"primary\" aria-label=\"Pick one\" formControlName=\"StoreDataOutsideCountry\">\n                                <mat-radio-button [ngClass]=\"{'selected-radio-btn': formThirdParties.get('StoreDataOutsideCountry').value === 'Yes' }\" value=\"Yes\">Yes</mat-radio-button>\n                                <mat-radio-button [ngClass]=\"{'selected-radio-btn': formThirdParties.get('StoreDataOutsideCountry').value === 'No' }\" value=\"No\">No</mat-radio-button>\n                            </mat-radio-group>        \n                        </div> \n        \n                        <section \n                            *ngIf=\"formThirdParties.get('StoreDataOutsideCountry').value === 'Yes'\"\n                            class=\"expand-section reduced-properties table-wrapper\">\n                            <button *ngIf=\"!isViewOnly || (!isOfficer && _hasRequestMoreInfo && countriesOfTransferEnabled)\"\n                                mat-button\n                                color=\"primary\"\n                                [disabled]=\"processing\"\n                                class=\"add-item-button\"\n                                (click)=\"onAddACountry()\">\n                                <div class=\"button-label\">\n                                    <mat-icon>add</mat-icon>                            \n                                    <span>Add A Country</span>\n                                </div>\n                            </button>\n                            \n                            <div class=\"table-wrapper\">\n                                <table \n                                    mat-table \n                                    #countryOfTransferMatSort=\"matSort\"\n                                    matSortDisableClear=\"true\"\n                                    [dataSource]=\"countriesDataSource\"\n                                    matSort>\n                    \n                                    <ng-container matColumnDef=\"Count\">\n                                        <th mat-header-cell *matHeaderCellDef> # </th>\n                                        <td mat-cell *matCellDef=\"let index = index\"> {{ index + 1 }} </td>\n                                    </ng-container>\n                    \n                                    <ng-container matColumnDef=\"Country\">\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Country </th>\n                                        <td mat-cell *matCellDef=\"let row\">{{ row.Country }}</td>\n                                    </ng-container>          \n                    \n                                    <ng-container matColumnDef=\"Purpose\">\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Purpose </th>\n                                        <td mat-cell *matCellDef=\"let row\">{{ row.Purpose }}</td>\n                                    </ng-container>                                 \n                    \n                                    <ng-container matColumnDef=\"Description\">\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Description </th>\n                                        <td mat-cell *matCellDef=\"let row\">{{ row.Description }}</td>\n                                    </ng-container>                                 \n                    \n                                    <!-- Actions Column -->\n                                    <ng-container matColumnDef=\"Actions\">\n                                        <th mat-header-cell *matHeaderCellDef> Actions </th>\n                                        <td mat-cell *matCellDef=\"let row; let index = index\">\n                                            <button \n                                                mat-button \n                                                class=\"action-btn\"\n                                                [disabled]=\"!_hasRequestMoreInfo || isOfficer || (_hasRequestMoreInfo && !countriesOfTransferEnabled)\"\n                                                [matMenuTriggerFor]=\"menu\" \n                                                (click)=\"$event.stopPropagation()\"\n                                                matTooltip=\"See more options\">\n                                                <mat-icon>more_vert</mat-icon>\n                                            </button>\n                    \n                                            <mat-menu yPosition=\"below\" #menu=\"matMenu\" class=\"more-options-mat-menu\">\n                    \n                                                <button \n                                                    mat-menu-item \n                                                    (click)=\"$event.stopPropagation();onEditCountry(row)\">\n                                                    <mat-icon>edit</mat-icon>\n                                                    <span>Make Changes</span>\n                                                </button>\n                                                      \n                                                <hr />\n                    \n                                                <button \n                                                    mat-menu-item \n                                                    (click)=\"$event.stopPropagation();onRemoveCountry(row)\">\n                                                    <mat-icon color=\"warn\">delete</mat-icon>\n                                                    <span>Remove</span>\n                                                </button>\n                    \n                                            </mat-menu>                                                  \n                                        </td>\n                                    </ng-container>\n                    \n                                    <tr mat-header-row *matHeaderRowDef=\"countryDisplayedColumns\"></tr>\n                                    <tr mat-row *matRowDef=\"let row; columns: countryDisplayedColumns;\" class=\"mat-data-row\"></tr>\n                                </table>\n        \n                                <mat-paginator \n                                    #countryOfTransferPaginator\n                                    [pageSize]=\"10\"\n                                    [pageSizeOptions]=\"[5, 10]\">\n                                </mat-paginator>                    \n                            </div>                \n                        </section>                   \n        \n                    </form>\n        \n                    <div class=\"button-wrapper\">\n                        <button mat-button class=\"back-btn\" matStepperPrevious>Back</button>\n                        <button  *ngIf=\"!isViewOnly\"\n                            mat-button \n                            color=\"primary\" >\n                            Save as Draft\n                        </button> \n                        <button \n                            mat-button \n                            [disabled]=\"formThirdParties.invalid \n                            || processing \n                            || ((formThirdParties.get('PersonalDataIsForDisclosure').value === 'Yes') && (thirdParties.length === 0)) \n                            || ((formThirdParties.get('StoreDataOutsideCountry').value === 'Yes') && (countries.length === 0))\" \n                            class=\"next-btn\" \n                            color=\"primary\" \n                            matStepperNext>\n                            Next\n                        </button>\n                    </div>\n                </mat-step>\n        \n                <mat-step [stepControl]=\"formSecurityMeasures\">\n                    <ng-template matStepLabel>\n                        <h3>Security Information</h3>\n\n                        <span class=\"request-for-more-info-count\" *ngIf=\"formFieldSections[5].Count\">{{ formFieldSections[5].Count }}</span>\n                    </ng-template>\n        \n                    <form [formGroup]=\"formSecurityMeasures\">\n        \n                        <h1 class=\"full-width step-header\">State security measures in place to safeguard personal data collected or processed.</h1>\n        \n                        <section class=\"expand-section reduced-properties table-wrapper no-padding\">\n                            <button *ngIf=\"!isViewOnly || securityMeasuresEnabled\"\n                                mat-button\n                                color=\"primary\"\n                                [disabled]=\"processing\"\n                                class=\"add-item-button\"\n                                (click)=\"onAddSecurityMeasure()\">\n                                <div class=\"button-label\">\n                                    <mat-icon>add</mat-icon>                            \n                                    <span>Add A Security Measure</span>\n                                </div>\n                            </button>\n                            \n                            <div class=\"table-wrapper\">\n                                <table \n                                    mat-table \n                                    #securityMeasureMatSort=\"matSort\"\n                                    matSortDisableClear=\"true\"\n                                    [dataSource]=\"securityMeasureDataSource\"\n                                    matSort>\n                    \n                                    <ng-container matColumnDef=\"Count\">\n                                        <th mat-header-cell *matHeaderCellDef> # </th>\n                                        <td mat-cell *matCellDef=\"let index = index\"> {{ index + 1 }} </td>\n                                    </ng-container>\n                    \n                                    <ng-container matColumnDef=\"SecurityMeasure\">\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Security Measure </th>\n                                        <td mat-cell *matCellDef=\"let row\">{{ row.SecurityMeasure }}</td>\n                                    </ng-container>                                  \n                    \n                                    <!-- Actions Column -->\n                                    <ng-container matColumnDef=\"Actions\">\n                                        <th mat-header-cell *matHeaderCellDef> Actions </th>\n                                        <td mat-cell *matCellDef=\"let row; let index = index\">\n                                            <button \n                                                mat-button \n                                                class=\"action-btn\"\n                                                [disabled]=\"!_hasRequestMoreInfo || isOfficer || (_hasRequestMoreInfo && !securityMeasuresEnabled)\"\n                                                [matMenuTriggerFor]=\"menu\" \n                                                (click)=\"$event.stopPropagation()\"\n                                                matTooltip=\"See more options\">\n                                                <mat-icon>more_vert</mat-icon>\n                                            </button>\n                    \n                                            <mat-menu yPosition=\"below\" #menu=\"matMenu\" class=\"more-options-mat-menu\">\n                \n                                                <button \n                                                    mat-menu-item \n                                                    (click)=\"$event.stopPropagation();onEditSecurityMeasure(row)\">\n                                                    <mat-icon>edit</mat-icon>\n                                                    <span>Make Changes</span>\n                                                </button>\n                                                      \n                                                <hr />\n                    \n                                                <button \n                                                    mat-menu-item \n                                                    (click)=\"$event.stopPropagation();onRemoveSecurityMeasure(row)\">\n                                                    <mat-icon color=\"warn\">delete</mat-icon>\n                                                    <span>Remove</span>\n                                                </button>                                        \n                    \n                                            </mat-menu>                                                  \n                                        </td>\n                                    </ng-container>\n                    \n                                    <tr mat-header-row *matHeaderRowDef=\"securityMeasuresDisplayedColumns\"></tr>\n                                    <tr mat-row *matRowDef=\"let row; columns: securityMeasuresDisplayedColumns;\" [ngClass]=\"{'selected-mat-data-row': selectedSpouse === row}\" class=\"mat-data-row\"></tr>\n                                </table>\n        \n                                <mat-paginator \n                                    #securityMeasurePaginator\n                                    [pageSize]=\"10\"\n                                    [pageSizeOptions]=\"[5, 10]\">\n                                </mat-paginator>                    \n                            </div>                \n                        </section>    \n                        \n                        <section class=\"expand-section reduced-properties table-wrapper margin documents\">\n                            <h1 class=\"full-width step-header\">Attach supporting documentation eg approved information security policy.</h1>\n        \n                            <div class=\"buttons\" *ngIf=\"!isViewOnly || (_hasRequestMoreInfo && _updateAttachment)\">\n                                <button *ngIf=\"!isViewOnly || (_hasRequestMoreInfo && _updateAttachment)\"\n                                    mat-button\n                                    color=\"primary\"\n                                    [disabled]=\"processing\"\n                                    class=\"add-item-button\"\n                                    (click)=\"onUploadAttachments()\">\n                                    <div class=\"button-label\">\n                                        <mat-icon>add</mat-icon>                            \n                                        <span> {{ document ? 'Replace Document' : 'Upload Attachment' }} </span>\n                                    </div>\n                                </button>\n            \n                                <button \n                                    mat-button\n                                    *ngIf=\"document && (!isViewOnly || (_hasRequestMoreInfo && _updateAttachment))\"\n                                    color=\"primary\"\n                                    [disabled]=\"processing\"\n                                    class=\"remove-button\"\n                                    (click)=\"onRemoveDocument()\">\n                                    <div class=\"button-label\">\n                                        <mat-icon>clear</mat-icon>\n                                        <span> Remove Document </span>\n                                    </div>\n                                </button>\n                            </div>\n        \n                            <div *ngIf=\"document && document.Base64\" class=\"uploaded-document\" matTooltip=\"Open Document\" (click)=\"onReadDocument(document)\">\n                                <img src=\"./assets/img/pdf.png\" alt=\"\">\n        \n                                <span>Document: {{ document.Name }} <span *ngIf=\"document.Size\">  -  {{ document.Size }} Mbs</span></span>\n                            </div>\n\n                            <p class=\"no-document-found\" *ngIf=\"document && !document.Base64\">No document found. Please attach</p>\n        \n                        </section>\n        \n                        <hr class=\"full-width\" />\n        \n                        <section class=\"expand-section reduced-properties table-wrapper margin documents\">\n                            <h1 class=\"full-width step-header\">Attach Form 3</h1>\n        \n                            <div class=\"buttons\" *ngIf=\"!isViewOnly || (_hasRequestMoreInfo && _updateForm3Attachment)\">\n                                <!-- <a \n                                    mat-button\n                                    color=\"accent\"\n                                    [disabled]=\"processing\"\n                                    target=\"_blank\"\n                                    download=\"Form 3 -  Undertaking Not to Process or Store Personal Data\"\n                                    class=\"add-item-button\"\n                                    href=\"./assets/docs/Form 3 -  Undertaking Not to Process or Store Personal Data.pdf\">\n                                    <div class=\"button-label\">\n                                        <mat-icon>sim_card_download</mat-icon>                            \n                                        <span>Download Form 3</span>\n                                    </div>\n                                </a> -->\n        \n                                <button\n                                    mat-button\n                                    *ngIf=\"!isViewOnly || (_hasRequestMoreInfo && _updateForm3Attachment)\"\n                                    color=\"accent\"\n                                    class=\"download-form\"                           \n                                    (click)=\"onDownloadForm3()\">\n                                    <div class=\"button-label\">\n                                        <mat-icon>sim_card_download</mat-icon>                            \n                                        <span>Download Form 3</span>\n                                    </div>                        \n                                </button>\n        \n                                <button *ngIf=\"!isViewOnly || (_hasRequestMoreInfo && _updateForm3Attachment)\"\n                                    mat-button\n                                    color=\"primary\"\n                                    [disabled]=\"processing\"\n                                    class=\"add-item-button\"\n                                    (click)=\"onUploadForm3Attachments()\">\n                                    <div class=\"button-label\">\n                                        <mat-icon>add</mat-icon>                            \n                                        <span> {{ documentForm3 ? 'Replace Form 3' : 'Upload Form 3' }} </span>\n                                    </div>\n                                </button>\n            \n                                <button *ngIf=\"documentForm3 && (!isViewOnly || (_hasRequestMoreInfo && _updateForm3Attachment))\"\n                                    mat-button\n                                    color=\"primary\"\n                                    [disabled]=\"processing\"\n                                    class=\"remove-button\"\n                                    (click)=\"onRemoveForm3Document()\">\n                                    <div class=\"button-label\">\n                                        <mat-icon>clear</mat-icon>\n                                        <span> Remove Document </span>\n                                    </div>\n                                </button>\n                            </div>\n        \n                            <div  *ngIf=\"documentForm3 && documentForm3.Base64\" class=\"uploaded-document\" matTooltip=\"Open Document\" (click)=\"onReadDocument(documentForm3)\">\n                                <img src=\"./assets/img/pdf.png\" alt=\"\">\n        \n                                <span>Document: {{ documentForm3.Name }} <span *ngIf=\"documentForm3.Size\">  -  {{ documentForm3.Size }} Mbs</span> </span>\n                            </div>\n\n                            <p class=\"no-document-found\" *ngIf=\"documentForm3 && !documentForm3.Base64\">No document found. Please attach</p>\n        \n                        </section>\n        \n                        <hr class=\"full-width\" />\n        \n                        <section class=\"expand-section reduced-properties table-wrapper margin documents\">\n                            <h1 class=\"full-width step-header\">Attach Proof of Payment</h1>\n        \n                            <div class=\"buttons\" *ngIf=\"!isViewOnly || (_hasRequestMoreInfo && _updateProofOfPayment)\">\n                                <button *ngIf=\"!isViewOnly || (_hasRequestMoreInfo && _updateProofOfPayment)\"\n                                    mat-button\n                                    color=\"primary\"\n                                    [disabled]=\"processing\"\n                                    class=\"add-item-button\"\n                                    (click)=\"onUploadProofOfPayment()\">\n                                    <div class=\"button-label\">\n                                        <mat-icon>add</mat-icon>                            \n                                        <span> {{ proofOfPayment ? 'Replace Document' : 'Upload Proof of Payment' }} </span>\n                                    </div>\n                                </button>\n            \n                                <button \n                                    mat-button\n                                    *ngIf=\"proofOfPayment && (!isViewOnly || (_hasRequestMoreInfo && _updateProofOfPayment))\"\n                                    color=\"primary\"\n                                    [disabled]=\"processing\"\n                                    class=\"remove-button\"\n                                    (click)=\"onRemoveProofOfPaymen()\">\n                                    <div class=\"button-label\">\n                                        <mat-icon>clear</mat-icon>\n                                        <span> Remove Document </span>\n                                    </div>\n                                </button>\n                            </div>\n        \n                            <div *ngIf=\"proofOfPayment && proofOfPayment.Base64\" class=\"uploaded-document\" matTooltip=\"Open Document\" (click)=\"onReadDocument(proofOfPayment)\">\n                                <img src=\"./assets/img/pdf.png\" alt=\"\">\n        \n                                <span>Document: {{ proofOfPayment.Name }} <span *ngIf=\"proofOfPayment.Size\">  -  {{ proofOfPayment.Size }} Mbs</span> </span>\n                            </div>\n\n                            <p class=\"no-document-found\" *ngIf=\"proofOfPayment && !proofOfPayment.Base64\">No document found. Please attach</p>\n        \n                        </section>\n        \n                        <hr class=\"full-width\" />\n        \n                        <mat-checkbox\n                            class=\"full-width selected-checkbox\"\n                            color=\"primary\"\n                            [checked]=\"true\"                            \n                            formControlName=\"RegistrationConsent\"\n                            color=\"primary\">\n                            I certify that the above information is correct and complete and here by apply to be registered as \n                            data collector/ data processor / data controller (This shall be based on th category selected) \n                            under the data Protection and Privacy Act.\n                            <mat-error *ngIf=\"formSecurityMeasures.get('RegistrationConsent').invalid\">{{ getCheckboxErrorMessage() }}</mat-error>   \n                        </mat-checkbox>  \n                        \n                        \n                        \n                        <mat-form-field class=\"full-width\" hintLabel=\"The person authorized to complete and submit this application on the behalf of the applicant organization\">\n                            <mat-label>Name and title of person submitting the application<span class=\"required-field\">required</span></mat-label>\n                            <input appUppercase #RegistrationDoneByInput matInput maxlength=\"50\" formControlName=\"RegistrationDoneBy\">  \n                            <mat-error *ngIf=\"formSecurityMeasures.get('RegistrationDoneBy').invalid\">{{ getRegistrationDoneByErrorMessage() }}</mat-error>                             \n                            <mat-hint align=\"end\">{{ RegistrationDoneByInput.value.length }} / 50</mat-hint>    \n                        </mat-form-field>     \n\n                        <h1 class=\"full-width step-header\">Review Comments</h1>\n                        \n                        <mat-form-field *ngIf=\"isOfficer\" class=\"full-width\" hintLabel=\"Comments from the technical team\" >\n                            <mat-label>Technical Comments</mat-label>\n                            <textarea matInput formControlName=\"TechnicalComments\" disabled class=\"textarea-small\"></textarea>\n                        </mat-form-field>   \n                        \n                        <mat-form-field *ngIf=\"isOfficer\" class=\"full-width\" hintLabel=\"Comments from the legal team\">\n                            <mat-label>Legal Comments</mat-label>\n                            <textarea matInput formControlName=\"LegalComments\" disabled class=\"textarea-small\"></textarea>\n                        </mat-form-field>      \n\n                        <mat-form-field *ngIf=\"isOfficer\" class=\"full-width\" hintLabel=\"Comments from the director\">\n                            <mat-label>Director Comments</mat-label>\n                            <textarea matInput formControlName=\"DirectorComments\" disabled class=\"textarea-small\"></textarea>\n                        </mat-form-field>      \n                        \n        \n                    </form>\n        \n                    <div class=\"button-wrapper\">\n                        <button mat-button class=\"back-btn\" matStepperPrevious>Back</button>\n\n                        <!-- <button *ngIf=\"!isViewOnly\"\n                            mat-button \n                            color=\"primary\" >\n                            Save as Draft\n                        </button>  -->\n                      \n\n                        <div class=\"buttons\">\n                            <button  *ngIf=\"!isViewOnly\"\n                                mat-button\n                                color=\"primary\" \n                                [disabled]=\"formGeneralInformation.invalid || formOrganisationDetails.invalid || formPersonalDataHeld.invalid || formPurposeRetention.invalid || formThirdParties.invalid || formSecurityMeasures.invalid || processing || securityMeasures.length === 0 || !documentForm3 || !proofOfPayment\" \n                                class=\"download\" \n                                matTooltip=\"Keep a copy of the information you have filled in\"\n                                (click)=\"onPreviewForm(true)\">\n                                <div class=\"button-label\">\n                                    <mat-icon>sim_card_download</mat-icon>\n                                    <span>Download Form</span>\n                                </div>\n                            </button>\n        \n                            <button\n                                mat-button  *ngIf=\" !isViewOnly\"\n                                color=\"primary\" \n                                [disabled]=\"formGeneralInformation.invalid || formOrganisationDetails.invalid || formPersonalDataHeld.invalid || formPurposeRetention.invalid || formThirdParties.invalid || formSecurityMeasures.invalid || processing || securityMeasures.length === 0 || !documentForm3 || !proofOfPayment\" \n                                class=\"preview\" \n                                matTooltip=\"Have a look at all the information you have filled in before sending.\"\n                                (click)=\"onPreviewForm(false)\">\n                                <div class=\"button-label\">\n                                    <mat-icon>visibility</mat-icon>\n                                    <span>Preview Form</span>\n                                </div>\n                            </button>\n        \n                        \n                            <button  *ngIf=\"!isViewOnly\"\n                                mat-button \n                                class=\"next-btn submit-btn\" \n                                [disabled]=\"formGeneralInformation.invalid || formOrganisationDetails.invalid || formPersonalDataHeld.invalid || formPurposeRetention.invalid || formThirdParties.invalid || formSecurityMeasures.invalid || processing || securityMeasures.length === 0 || !documentForm3 || !proofOfPayment\" \n                                [ngClass]=\"{'inline-processing-btn': processing}\" \n                                color=\"primary\" \n                                (click)=\"onSubmit()\">\n                                <app-inline-mat-spinner *ngIf=\"processing\"></app-inline-mat-spinner>                  \n                                <span>Send Application</span>                    \n                            </button>                \n                        \n                            <!-- For submitting Request for more information -->\n                            <!-- <button *ngIf=\"_hasRequestMoreInfo\"\n                                mat-button \n                                class=\"next-btn submit-btn\" \n                                [disabled]=\"formGeneralInformation.invalid || formOrganisationDetails.invalid || formPersonalDataHeld.invalid || formPurposeRetention.invalid || formThirdParties.invalid || formSecurityMeasures.invalid || securityMeasures.length === 0\" \n                                color=\"primary\" \n                                (click)=\"onSubmitRequestedInfor()\">\n                                <span>Submit Changes Application</span>                    \n                            </button>                 -->\n\n                            <button *ngIf=\"_hasRequestMoreInfo && !isOfficer\"\n                                mat-button \n                                class=\"next-btn submit-btn\" \n                                color=\"primary\" \n                                (click)=\"onSubmitRequestedInfor()\">\n                                <span>Submit Changes Application</span>                    \n                            </button>                \n                        </div>\n                    </div>\n                </mat-step>\n        \n                <!-- <mat-step [stepControl]=\"form\">\n                    <ng-template matStepLabel>\n                        <h3>Legal <br /> Details</h3>\n                    </ng-template>\n        \n                    <form [formGroup]=\"form\">\n                        \n                    </form>\n        \n                    <div class=\"button-wrapper\">\n                        <button mat-button class=\"back-btn\" matStepperPrevious>Back</button>\n        \n                        <button \n                            mat-button \n                            [disabled]=\"form.invalid || processing\" \n                            class=\"next-btn\" \n                            color=\"primary\" \n                            matStepperNext>\n                            Next\n                        </button>\n                    </div>\n                </mat-step> -->\n        \n                <!-- <mat-step [stepControl]=\"formChildrenData\">\n                    <ng-template matStepLabel>\n                        <h3>Children <br /> Data</h3>\n                    </ng-template>\n        \n                    <form [formGroup]=\"formChildrenData\">\n                        \n                        <div class=\"grouped-items\">\n                            <h3>Do you collect personal data relating to Children?</h3>\n            \n                            <mat-radio-group color=\"primary\" aria-label=\"Pick one\" formControlName=\"CollectChildrenData\">\n                                <mat-radio-button value=\"Yes\">Yes</mat-radio-button>\n                                <mat-radio-button value=\"No\">No</mat-radio-button>\n                            </mat-radio-group>        \n                        </div>  \n        \n                        <mat-form-field>\n                            <mat-label>Please indicate who gave the consent <span class=\"required-field\">required</span></mat-label>\n                            <mat-select formControlName=\"ChildDataConsentor\">\n                                <mat-option value=\"1\">Parents / Guardian</mat-option>\n                                <mat-option value=\"2\">Relevant Authority</mat-option>\n                            </mat-select>    \n                        </mat-form-field>                  \n        \n                        <mat-form-field>\n                            <mat-label>Purpose for collection <span class=\"required-field\">required</span></mat-label>\n                            <mat-select formControlName=\"PurposeForCollectingChildData\">\n                                <mat-option value=\"1\">Comply with the Law</mat-option>\n                                <mat-option value=\"2\">Research or Statistical Purposes</mat-option>\n                            </mat-select>    \n                        </mat-form-field>      \n                        \n                        <mat-form-field>\n                            <mat-label>Indicate the law being complied with <span class=\"required-field\">required</span></mat-label>\n                            <mat-select formControlName=\"ChildLawPurpose\">\n                                <mat-option value=\"1\">Child Law</mat-option>\n                            </mat-select>    \n                        </mat-form-field>                   \n                        \n                        <mat-form-field>\n                            <mat-label>Indicate the research beign carried out.<span class=\"required-field\">required</span></mat-label>\n                            <textarea #CaseTitleInput matInput maxlength=\"1000\" formControlName=\"ChildResearchPurpose\"></textarea>\n                            <mat-hint align=\"end\">{{ CaseTitleInput.value.length }} / 1000</mat-hint>\n                        </mat-form-field>                     \n        \n                    </form>\n        \n                    <div class=\"button-wrapper\">\n                        <button mat-button class=\"back-btn\" matStepperPrevious>Back</button>\n        \n                        <button \n                            mat-button \n                            [disabled]=\"formChildrenData.invalid || processing\" \n                            class=\"next-btn\" \n                            color=\"primary\" \n                            (click)=\"onSubmit()\"\n                            matStepperNext>\n                            Submit\n                        </button>\n                    </div>\n                </mat-step> -->\n        \n                <!-- <mat-step>\n                    <ng-template matStepLabel>\n                        <h3>Payment</h3>          \n                    </ng-template>\n        \n                    <form>\n                        <h1 class=\"full-width step-header\">Show payment options.</h1>  \n                    </form>\n        \n                    <div class=\"button-wrapper single-button-start\">\n                        <button mat-button class=\"back-btn\" matStepperPrevious>Back</button>\n        \n                        <button \n                            mat-raised-button \n                            color=\"primary\" \n                            [ngClass]=\"{'inline-processing-btn': processing }\" \n                            [disabled]=\"processing\"                      \n                            (click)=\"onSubmit()\">\n                                <div class=\"btn-label\">\n                                    <app-inline-mat-spinner *ngIf=\"processing\"></app-inline-mat-spinner>                        \n                                    <span>Submit</span>\n                                </div>\n                        </button>\n                    </div>              \n                </mat-step> -->\n            </mat-horizontal-stepper>   \n        </main>\n    </fury-page-layout-content>\n</fury-page-layout>\n\n\n","var Utils = require('./utils')\n\nfunction getColorAttrib (color, attrib) {\n  var alpha = color.a / 255\n  var str = attrib + '=\"' + color.hex + '\"'\n\n  return alpha < 1\n    ? str + ' ' + attrib + '-opacity=\"' + alpha.toFixed(2).slice(1) + '\"'\n    : str\n}\n\nfunction svgCmd (cmd, x, y) {\n  var str = cmd + x\n  if (typeof y !== 'undefined') str += ' ' + y\n\n  return str\n}\n\nfunction qrToPath (data, size, margin) {\n  var path = ''\n  var moveBy = 0\n  var newRow = false\n  var lineLength = 0\n\n  for (var i = 0; i < data.length; i++) {\n    var col = Math.floor(i % size)\n    var row = Math.floor(i / size)\n\n    if (!col && !newRow) newRow = true\n\n    if (data[i]) {\n      lineLength++\n\n      if (!(i > 0 && col > 0 && data[i - 1])) {\n        path += newRow\n          ? svgCmd('M', col + margin, 0.5 + row + margin)\n          : svgCmd('m', moveBy, 0)\n\n        moveBy = 0\n        newRow = false\n      }\n\n      if (!(col + 1 < size && data[i + 1])) {\n        path += svgCmd('h', lineLength)\n        lineLength = 0\n      }\n    } else {\n      moveBy++\n    }\n  }\n\n  return path\n}\n\nexports.render = function render (qrData, options, cb) {\n  var opts = Utils.getOptions(options)\n  var size = qrData.modules.size\n  var data = qrData.modules.data\n  var qrcodesize = size + opts.margin * 2\n\n  var bg = !opts.color.light.a\n    ? ''\n    : '<path ' + getColorAttrib(opts.color.light, 'fill') +\n      ' d=\"M0 0h' + qrcodesize + 'v' + qrcodesize + 'H0z\"/>'\n\n  var path =\n    '<path ' + getColorAttrib(opts.color.dark, 'stroke') +\n    ' d=\"' + qrToPath(data, size, opts.margin) + '\"/>'\n\n  var viewBox = 'viewBox=\"' + '0 0 ' + qrcodesize + ' ' + qrcodesize + '\"'\n\n  var width = !opts.width ? '' : 'width=\"' + opts.width + '\" height=\"' + opts.width + '\" '\n\n  var svgTag = '<svg xmlns=\"http://www.w3.org/2000/svg\" ' + width + viewBox + ' shape-rendering=\"crispEdges\">' + bg + path + '</svg>\\n'\n\n  if (typeof cb === 'function') {\n    cb(null, svgTag)\n  }\n\n  return svgTag\n}\n","var Utils = require('./utils')\n\nfunction clearCanvas (ctx, canvas, size) {\n  ctx.clearRect(0, 0, canvas.width, canvas.height)\n\n  if (!canvas.style) canvas.style = {}\n  canvas.height = size\n  canvas.width = size\n  canvas.style.height = size + 'px'\n  canvas.style.width = size + 'px'\n}\n\nfunction getCanvasElement () {\n  try {\n    return document.createElement('canvas')\n  } catch (e) {\n    throw new Error('You need to specify a canvas element')\n  }\n}\n\nexports.render = function render (qrData, canvas, options) {\n  var opts = options\n  var canvasEl = canvas\n\n  if (typeof opts === 'undefined' && (!canvas || !canvas.getContext)) {\n    opts = canvas\n    canvas = undefined\n  }\n\n  if (!canvas) {\n    canvasEl = getCanvasElement()\n  }\n\n  opts = Utils.getOptions(opts)\n  var size = Utils.getImageWidth(qrData.modules.size, opts)\n\n  var ctx = canvasEl.getContext('2d')\n  var image = ctx.createImageData(size, size)\n  Utils.qrToImageData(image.data, qrData, opts)\n\n  clearCanvas(ctx, canvasEl, size)\n  ctx.putImageData(image, 0, 0)\n\n  return canvasEl\n}\n\nexports.renderToDataURL = function renderToDataURL (qrData, canvas, options) {\n  var opts = options\n\n  if (typeof opts === 'undefined' && (!canvas || !canvas.getContext)) {\n    opts = canvas\n    canvas = undefined\n  }\n\n  if (!opts) opts = {}\n\n  var canvasEl = exports.render(qrData, canvas, opts)\n\n  var type = opts.type || 'image/png'\n  var rendererOpts = opts.rendererOpts || {}\n\n  return canvasEl.toDataURL(type, rendererOpts.quality)\n}\n","import {HttpClient} from '@angular/common/http';\nimport {AfterContentInit, ChangeDetectorRef, Component, EventEmitter, Input, OnDestroy, OnInit, ViewChild} from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {MatDialog} from '@angular/material/dialog';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {forkJoin, Observable, Subscription} from 'rxjs';\nimport {\n    ApiPayload,\n    Country,\n    CountryOfTransfer,\n    DataCategory,\n    DataProtectionOfficer,\n    DataPurposes,\n    DataSource,\n    DataSubCategory,\n    FileUpload,\n    MainActivity,\n    NatureOfBusinessCat,\n    NatureOfBusinessSubCat,\n    OrganisationCategory,\n    OrganisationType,\n    Sector,\n    SecurityMeasure,\n    ThirdParty,\n    ChildrenDataPurpose\n} from '../../../../services/api.model';\nimport {catchError, filter, map, startWith} from 'rxjs/operators';\nimport {MatCheckboxChange} from '@angular/material/checkbox';\nimport {ApiEndpointsService} from '../../../../services/api-endpoints.service';\nimport {ApiService} from '../../../../services/api.service';\nimport {OrgNoticeComponent} from '../../../../layout/dialogs/org-registration/org-notice/org-notice.component';\nimport {OrgMainActivityComponent} from '../../../../layout/dialogs/org-registration/org-main-activity/org-main-activity.component';\nimport {\n    OrgDataProtectionOfficerComponent\n} from '../../../../layout/dialogs/org-registration/org-data-protection-officer/org-data-protection-officer.component';\nimport {\n    OrgSecurityMeasuresComponent\n} from '../../../../layout/dialogs/org-registration/org-security-measures/org-security-measures.component';\nimport {OrgThirdPartyComponent} from '../../../../layout/dialogs/org-registration/org-third-party/org-third-party.component';\nimport {OrgCountryComponent} from '../../../../layout/dialogs/org-registration/org-country/org-country.component';\nimport {OrgUploadComponent} from '../../../../layout/dialogs/org-upload/org-upload.component';\nimport {OrgForm3DialogComponent} from '../../../../layout/dialogs/org-registration/org-form3-dialog/org-form3-dialog.component';\nimport {\n    OrgRegistrationPreviewDialogComponent\n} from '../../../../layout/dialogs/org-registration/org-registration-preview-dialog/org-registration-preview-dialog.component';\nimport {SuccessfulMessageDialogComponent} from '../../../../layout/dialogs/successful-message-dialog/successful-message-dialog.component';\nimport {\n    Action,\n    ActionPerformed,\n    ActionPerformedRequestMoreInfo,\n    WorkFlowConstants,\n    WorkFlowStep,\n    WorkFlowTimeline\n} from '../../../models/document-workflow.model';\nimport {CertificateDetails, CertificateDetailsResponse, CheckListed, CompanyRegistrationModel} from '../company-registration.model';\nimport {BaseFuryForm} from '../../../../../@fury/shared/base-fury-form';\nimport {KeycloakService} from 'keycloak-angular';\nimport {WorkflowServiceService} from '../../../../services/workflow-service.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {$RequestMoreInfoField, Checked, Checklist, RequestMoreInfoField} from '../../../models/reference.model';\nimport {fadeInRightAnimation} from '../../../../../@fury/animations/fade-in-right.animation';\nimport {fadeInUpAnimation} from '../../../../../@fury/animations/fade-in-up.animation';\nimport {SnackBarService} from '../../../../pages/services/snack-bar.service';\nimport {CompanyRegistrationService} from '../../company-registration.service';\nimport {ReviewCommentsComponent} from '../../../../layout/review-comments/review-comments.component';\nimport {CertPreviewComponent} from '../cert-preview/cert-preview.component';\nimport {ApplicationTimelineComponent} from '../../../../layout/application-timeline/application-timeline.component';\nimport {ReferenceTableService} from '../../../../services/reference-table.service';\nimport {AuthenticationService} from '../../../../authentication/authentication.service';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { ViewPdfDocumentBottomsheetComponent } from '../../../../layout/bottomsheets/view-pdf-document-bottomsheet/view-pdf-document-bottomsheet.component';\nimport { environment } from '../../../../../environments/environment';\nimport { ComplaintService } from '../../../complaints/complaints.service';\n\n@Component({\n  selector: 'fury-company-registration-detail',\n  templateUrl: './company-registration-detail.component.html',\n  styleUrls: ['./company-registration-detail.component.scss'],\n  animations: [fadeInRightAnimation, fadeInUpAnimation]\n})\nexport class CompanyRegistrationDetailComponent extends BaseFuryForm implements OnInit, OnDestroy, AfterContentInit  {\n\n  dialogRef;\n    bottomsheetRef;\n    processing = false;\n    formGeneralInformation: FormGroup;\n    formOrganisationDetails: FormGroup;\n    formPersonalDataHeld: FormGroup;\n    formPurposeRetention: FormGroup;\n    formSecurityMeasures: FormGroup;\n    formThirdParties: FormGroup;\n    formChildrenData: FormGroup;\n    selectedIndex = 0;\n    OrganisationID: any;\n    // selectedIndex = 3;\n    // isLinear = true;\n    isLinear = false;\n    today = new Date();\n    contactInformation = true;\n    sectors: Sector[];\n    countries: Country[];\n    selected = false;\n    DPOSelected = false;\n    organisationCategories: OrganisationCategory[] = [];\n    selectedOrganisationCategories: OrganisationCategory[] = [];\n    organisationTypes: OrganisationType[];\n    dataSources: DataSource[];\n    selectedDataSources: DataSource[] = [];\n    httpSub: Subscription;\n    MainActivitiesDisplayedColumns: string[] = ['Count', 'MainActivity', 'Actions'];\n    dpoDisplayedColumns: string[] = ['Count', 'Name', 'Telephone', 'Email', 'PhysicalAddress', 'Actions'];\n    securityMeasuresDisplayedColumns: string[] = ['Count', 'SecurityMeasure', 'Actions'];\n    thirdPartyDisplayedColumns: string[] = ['Count', 'NameOfThirdParty', 'Purpose', 'Actions'];\n    countryDisplayedColumns: string[] = ['Count', 'Country', 'Purpose', 'Description', 'Actions'];\n    mainActivities: MainActivity[] = [];\n    mainActivitiesDataSource: MatTableDataSource<MainActivity>;\n    dataProtectionOfficers: DataProtectionOfficer[] = [];\n    dpoDataSource: MatTableDataSource<DataProtectionOfficer>;\n    securityMeasures: SecurityMeasure[] = [];\n    securityMeasureDataSource: MatTableDataSource<SecurityMeasure>;\n    thirdParties: ThirdParty[] = [];\n    thirdPartyDataSource: MatTableDataSource<ThirdParty>;\n    countriesOfTransfer: CountryOfTransfer[] = [];\n    countriesDataSource: MatTableDataSource<CountryOfTransfer>;\n    selectedDataCategory: DataCategory[] = [];\n    selectedDataSubCategory: DataSubCategory[] = [];\n    dataCategories: DataCategory[];\n    dataPurposes: DataPurposes[];\n    childDataPurposes: ChildrenDataPurpose[] = [];\n    selectedChildDataPurposes: ChildrenDataPurpose[] = [];\n    selectedDataPurposes: DataPurposes[] = [];\n    natureOfBusinessCat: NatureOfBusinessCat[] = [];\n    natureOfBusinessSubCat: NatureOfBusinessSubCat[] = [];\n    selectedNatureOfBusinessSubCat: NatureOfBusinessSubCat[] = [];\n    SpecifyTheLaw = false;\n    ServiceOrProductProvided = false;\n    showChildrenDataFields = false;\n    SpecifyLegalObligation = false;\n    document: FileUpload | null;\n    documentForm3: FileUpload | null;\n    proofOfPayment: FileUpload | null;\n    OrganizationType = null;\n    SectorName = null;\n    NatureOfBusinessCat = null;\n    CountryOfIncorporation = null;\n    RegTrackingNo: string;\n    \n    //\n    role: string;\n    workflowID = '1';\n    workflowTimeLine: WorkFlowTimeline;\n    currentStep: WorkFlowStep;\n    certificateResponse: CertificateDetailsResponse;\n    certificateDetails: CertificateDetails;\n    accesses: string[];\n    regTrackingNo: string;\n    timeLineAccess: string[] = ['data-protection-officer-director', 'data-protection-officer-nita', 'data-protection-officer-technical', 'data-protection-officer-legal'];\n    isOfficer: boolean;\n    isApplicant: boolean;\n    _hasRequestMoreInfo = false;\n    _StepRequestingForMoreInfo = 0;\n    requestMoreInfoFields: RequestMoreInfoField[] = [];\n    canDownloadCertificate = false;\n    $checklist: Checklist[];\n    // Main Object\n    application: CompanyRegistrationModel = new CompanyRegistrationModel();\n    permittedActions: Action[] = [];\n    // Subscriptions\n    subscriptions: Subscription[] = [];\n    $resultRefChecklistEvent: EventEmitter<any> = new EventEmitter();\n    formFieldSections: { SectionID: number; SectionName: string; Count: number }[] = []\n    personalDataCollectedCheckBoxEnabled = false;\n    dataCategory = new FormControl();\n\n    @ViewChild('MainActivityPaginator', {static: false}) MainActivityPaginator: MatPaginator;\n    @ViewChild('MainActivityMatSort', {static: false}) MainActivityMatSort: MatSort;\n    @ViewChild('dpoPaginator', {static: false}) dpoPaginator: MatPaginator;\n    @ViewChild('dpoMatSort', {static: false}) dpoMatSort: MatSort;\n    @ViewChild('securityMeasurePaginator', {static: false}) securityMeasurePaginator: MatPaginator;\n    @ViewChild('securityMeasureMatSort', {static: false}) securityMeasureMatSort: MatSort;\n    @ViewChild('thirdPartyPaginator', {static: false}) thirdPartyPaginator: MatPaginator;\n    @ViewChild('thirdPartyMatSort', {static: false}) thirdPartyMatSort: MatSort;\n    @ViewChild('countryOfTransferPaginator', {static: false}) countryOfTransferPaginator: MatPaginator;\n    @ViewChild('countryOfTransferMatSort', {static: false}) countryOfTransferMatSort: MatSort;\n    @Input() checked: Boolean;\n\n    OrganizationID: number;\n    cat: number[] = [];\n    organisationcategories: any;\n    natureOfbusinesses: any;\n    natureOfbusinesses_arr: any = [];\n    sourceofdata: any;\n    sourceofdata_arr: any = [];\n    childDataPurposeResults:any = [];\n    purpose: any;\n    purpose_arr: any = [];\n\n    _updateAttachment = false;\n    _updateForm3Attachment = false;\n    _updateProofOfPayment = false;\n    securityMeasuresEnabled = false;\n    thirdPartiesEnabled = false;\n    countriesOfTransferEnabled = false;\n\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private service: ApiService,\n    private endpoints: ApiEndpointsService,\n    private dialog: MatDialog,\n    private bottomsheet: MatBottomSheet,\n    private http: HttpClient,\n    private route: Router,\n    public snackBar: SnackBarService,\n    private activateRoute: ActivatedRoute,\n    private changeDetector: ChangeDetectorRef,\n    public authService: KeycloakService,\n    public _authService: AuthenticationService,\n    public _workflowService: WorkflowServiceService,\n    public registrationService: CompanyRegistrationService,\n    private referenceService: ReferenceTableService,\n    public complaintService: ComplaintService,\n  ) {\n\n\n    super(\n      authService,\n      _workflowService,\n      registrationService,\n      complaintService\n    );\n\n    this.accesses = authService.getKeycloakInstance().resourceAccess['dps-frontend'].roles;\n    this.operationType = activateRoute.routeConfig.data.action;\n    this.regTrackingNo = this.route.getCurrentNavigation().extras.state.regTrackingNo;\n\n    this.pageTitle();\n\n\n   }\n\n   pageTitle() {\n    const pageTitle = this.isOfficer ? this.application.OrganisationName + 'Application' : ' My Application';\n    this.service.updatePageTitle(['Organisations', pageTitle]);\n}\n\n   \n\nngOnInit(): void {\n  this.formGeneralInformation = this.formBuilder.group({\n      OrganizationName: new FormControl('', [Validators.required]),\n      DPPActCategory: new FormControl('', [Validators.required]),\n      OrganizationTypeID: new FormControl('', [Validators.required]),\n      CountryOfIncorporation: new FormControl('', [Validators.required]),\n      URSBNumber: new FormControl(''),\n      SectorID: new FormControl('', [Validators.required]),\n      OtherSector: new FormControl('', [Validators.maxLength(50)]),\n      Location: new FormControl('', [Validators.required]),\n      PhoneNumberCode: new FormControl('', [Validators.required]),\n      PhoneNumber: new FormControl('', [\n          Validators.required,\n          Validators.pattern(/^[0-9 ]+$/),\n      ]),\n      EmailAddress: new FormControl('', [\n          Validators.required,\n          Validators.email\n      ]),\n      // NatureOfBusiness: new FormControl('', [Validators.required]),\n      NatureOfBusinessCat: new FormControl('', [Validators.required]),\n      NatureOfBusinessSubCat: new FormControl('', [Validators.required]),\n  });\n\n  this.formOrganisationDetails = this.formBuilder.group({\n      DPORequired: new FormControl(''),\n      DPOName: new FormControl(''),\n      DPOPhysicalAddress: new FormControl(''),\n      PhoneNumberCode: new FormControl(''),\n      DPOPhoneNumber: new FormControl(''),\n      DPOEmailAddress: new FormControl(''),\n      DPOPositionInOrganisation: new FormControl(''),\n  });\n\n  this.formPersonalDataHeld = this.formBuilder.group({\n      SourceOfDataID: new FormControl('', [Validators.required]),\n  });\n\n  this.formPurposeRetention = this.formBuilder.group({\n      Purpose: new FormControl('', [Validators.required]),\n      SpecifyTheLaw: new FormControl(''),\n      ServiceOrProductProvided: new FormControl(''),\n      SpecifyLegalObligation: new FormControl(''),\n      TotalRecordsAtRegistration: new FormControl('', [Validators.pattern(/^[0-9,]+$/)]),\n      RecordPercentageGrowth: new FormControl('', [\n          Validators.pattern(/^[0-9,]+$/),\n          Validators.max(100),\n      ]),\n      RetentionPeriod: new FormControl('', [\n          Validators.required,\n          Validators.pattern(/^[0-9,]+$/),\n          Validators.max(100),\n      ]),\n  });\n\n  this.formSecurityMeasures = this.formBuilder.group({\n      RegistrationConsent: new FormControl('', [Validators.required]),\n      RegistrationDoneBy: new FormControl('', [Validators.required, Validators.pattern(/^[a-zA-Z ]+$/)]),\n      TechnicalComments: new FormControl(),\n      LegalComments: new FormControl(),\n      DirectorComments: new FormControl(),\n  });\n\n  this.formChildrenData = this.formBuilder.group({\n      CollectChildrenData: new FormControl('', [Validators.required]),\n      PurposeForCollection: new FormControl(''),\n    });\n\n  this.formThirdParties = this.formBuilder.group({\n      PersonalDataIsForDisclosure: new FormControl('', [Validators.required]),\n      StoreDataOutsideCountry: new FormControl('', [Validators.required]),\n  });\n\n  // this.Listeners();\n  // console.log('operationType:', this.operationType);\n  if (this.operationType === 'CREATE' || this.operationType === 'MANAGE') {\n      this.Listeners();\n  }\n  \n  // Set OfficerRole\n  this.isOfficer = this.timeLineAccess.includes(this.realmRole);\n  // Fetch Checklist\n  this.referenceService.getChecklist(this.$processingEvent, this.$resultRefChecklistEvent, this.$errorsEvent);\n\n  this.formGeneralInformation.valueChanges\n      .pipe(\n          filter(() => this.formGeneralInformation.valid)\n      ).subscribe(val => localStorage.setItem('STEP_1', JSON.stringify(val)));\n}\n\nngAfterContentInit(): void {\n  this.OrganizationID = 156;\n  this.getDataFromMultipleRequests();\n}\n\nprivate getDataFromMultipleRequests(): void {\n  this.httpSub = this.fetchMultiple(this.regTrackingNo)\n  .pipe(catchError(this.service.handleError))\n  .subscribe((responseList) => {\n\n    \n      this.countries = responseList[0];\n\n      this.organisationCategories = [\n          {\n              OrganisationCategoryId: 1,\n              OrganisationCategoryName: 'Data Controller'\n          },\n          {\n              OrganisationCategoryId: 2,\n              OrganisationCategoryName: 'Data Processor'\n          },\n          {\n              OrganisationCategoryId: 3,\n              OrganisationCategoryName: 'Data Collector'\n          },\n      ];\n\n      this.childDataPurposes = [\n          {\n            ChildDataID: 1,\n            ChildDataPurpose: 'Carried out with prior consent of the parent,guardian, or  any other person having authority to make decisions on behalf of the child '\n          },\n          {\n            ChildDataID: 2,\n            ChildDataPurpose: 'Necessary to comply with the law'\n          },\n          {\n            ChildDataID: 3,\n            ChildDataPurpose: 'For research or statistical purposes'\n          }\n        ]\n\n\n      this.formGeneralInformation.get('PhoneNumberCode').patchValue('256');\n      this.formOrganisationDetails.get('PhoneNumberCode').patchValue('256');\n\n      this.dataSources = responseList[1];\n\n      this.organisationTypes = responseList[2];\n\n      this.sectors = responseList[3];\n\n      this.dataCategories = responseList[4];\n\n      this.dataPurposes = responseList[5];\n\n      this.natureOfBusinessCat = responseList[6];\n\n\n\n      this.fetchSingleApplication(responseList[7], responseList[8]);\n\n\n\n      this.processing = false;\n  }, (error) => {\n      this.processing = false;\n      this.service.determineErrorResponse(error);\n  });        \n}\n\n\nprivate fetchMultiple(OrgID: any): Observable<any[]> {\n  this.processing = true;\n  const reqCountries = this.http.get<ApiPayload>(this.endpoints.countries);\n  const reqDataSources = this.http.get<ApiPayload>(this.endpoints.dataSources);\n  const reqOrganisationType = this.http.get<ApiPayload>(this.endpoints.organisationType);\n  const reqSector = this.http.get<ApiPayload>(this.endpoints.sector);\n  const reqDataSubcategories = this.http.get<ApiPayload>(this.endpoints.dataSubcategories);\n  const reqDataPurpose = this.http.get<ApiPayload>(this.endpoints.dataPurpose);\n  const reqNatureOfBusiness = this.http.get<ApiPayload>(this.endpoints.natureOfBusiness);\n  const reqFetchOrganisatioDetails = this.http.get<ApiPayload>(this.endpoints.getOrgRegDetails, {params: {RegTrackingNo: OrgID}});\n  const reviewComments = this.http.get<ApiPayload>(this.endpoints.getReviewComments, {params: {RegTrackingNo: OrgID}});\n\n  // tslint:disable-next-line:max-line-length\n  return forkJoin([reqCountries, reqDataSources, reqOrganisationType, reqSector, reqDataSubcategories, reqDataPurpose, reqNatureOfBusiness, reqFetchOrganisatioDetails, reviewComments]);\n}\n\n\nprivate Listeners(): void {\n  // STEP ONE\n  this.formGeneralInformation.get('DPPActCategory').valueChanges.subscribe((value) => {\n      const values: number[] = value;\n      this.selectedOrganisationCategories.length = 0;\n\n      this.organisationCategories.filter((item) => {\n          if (values.includes(item.OrganisationCategoryId)) {\n              this.selectedOrganisationCategories.push(item);\n          }\n      });\n  });\n\n  this.formGeneralInformation.get('OrganizationTypeID').valueChanges.subscribe((value) => {\n      if (value !== 4) {\n          this.formGeneralInformation.get('CountryOfIncorporation').setValidators([Validators.required]);\n          this.formGeneralInformation.get('URSBNumber').setValidators([Validators.required]);\n      } else {\n          this.formGeneralInformation.get('CountryOfIncorporation').clearValidators();\n          this.formGeneralInformation.get('CountryOfIncorporation').reset();\n          this.formGeneralInformation.get('URSBNumber').clearValidators();\n          this.formGeneralInformation.get('URSBNumber').reset();\n          this.CountryOfIncorporation = null;\n      }\n\n      this.formGeneralInformation.controls['CountryOfIncorporation'].updateValueAndValidity();\n      this.formGeneralInformation.controls['URSBNumber'].updateValueAndValidity();\n  });\n\n  this.formGeneralInformation.get('SectorID').valueChanges.subscribe((value) => {\n      if (value === 14) {\n          this.formGeneralInformation.get('OtherSector').setValidators([Validators.required]);\n      } else {\n          this.formGeneralInformation.get('OtherSector').clearValidators();\n          this.formGeneralInformation.get('OtherSector').reset();\n      }\n\n      this.formGeneralInformation.controls['OtherSector'].updateValueAndValidity();\n  });\n\n  this.formGeneralInformation.get('NatureOfBusinessCat').valueChanges.subscribe((value) => {\n      if (value) { \n          this.onNatureOfBusinessCatSelected(value);\n      }\n  });\n\n  this.formGeneralInformation.get('NatureOfBusinessSubCat').valueChanges.subscribe((value) => {\n      const values: number[] = value;\n      this.selectedNatureOfBusinessSubCat.length = 0;\n\n      this.natureOfBusinessSubCat.filter((item) => {\n          if (values.includes(item.NatureOfBusinessSubCatId)) {\n              this.selectedNatureOfBusinessSubCat.push(item);\n          }\n      });\n  });\n\n  // STEP TWO\n  this.formOrganisationDetails.get('DPORequired').valueChanges.subscribe((value) => {\n\n      if (value === 'Yes') {\n          this.formOrganisationDetails.get('DPOName').setValidators([Validators.required, Validators.pattern(/^[a-zA-Z ]+$/), ]);\n          this.formOrganisationDetails.get('DPOPhysicalAddress').setValidators([Validators.required]);\n          this.formOrganisationDetails.get('DPOPhoneNumber').setValidators([Validators.required, Validators.pattern(/^[0-9 ]+$/)]);\n          this.formOrganisationDetails.get('DPOEmailAddress').setValidators([Validators.required, Validators.email]);\n          this.formOrganisationDetails.get('DPOPositionInOrganisation').setValidators([Validators.required]);\n      } else {\n          this.formOrganisationDetails.get('DPOName').clearValidators();\n          this.formOrganisationDetails.get('DPOName').reset();\n          this.formOrganisationDetails.get('DPOPhysicalAddress').clearValidators();\n          this.formOrganisationDetails.get('DPOPhysicalAddress').reset();\n          this.formOrganisationDetails.get('DPOPhoneNumber').clearValidators();\n          this.formOrganisationDetails.get('DPOPhoneNumber').reset();\n          this.formOrganisationDetails.get('DPOEmailAddress').clearValidators();\n          this.formOrganisationDetails.get('DPOEmailAddress').reset();\n          this.formOrganisationDetails.get('DPOPositionInOrganisation').clearValidators();\n          this.formOrganisationDetails.get('DPOPositionInOrganisation').reset();\n      }\n\n      this.formOrganisationDetails.controls['DPOName'].updateValueAndValidity();\n      this.formOrganisationDetails.controls['DPOPhysicalAddress'].updateValueAndValidity();\n      this.formOrganisationDetails.controls['DPOPhoneNumber'].updateValueAndValidity();\n      this.formOrganisationDetails.controls['DPOEmailAddress'].updateValueAndValidity();\n      this.formOrganisationDetails.controls['DPOPositionInOrganisation'].updateValueAndValidity();\n  });\n\n  // STEP THREE\n  this.formPersonalDataHeld.get('SourceOfDataID').valueChanges.subscribe((value) => {\n      const values: number[] = value;\n      this.selectedDataSources.length = 0;\n\n      this.dataSources?.filter((item) => {\n          if (values.includes(item.DataSourceID)) {\n              this.selectedDataSources.push(item);\n          }\n      });\n  });\n\n  \n    ///CHILDREN DATA PURPOSES\n\n    this.formChildrenData.get('PurposeForCollection').valueChanges.subscribe((value) => {\n        const values: number[] = value;\n        this.selectedChildDataPurposes.length = 0;\n  \n        this.childDataPurposes.filter((item) => {\n          if (values.includes(item.ChildDataID)) {\n            this.selectedChildDataPurposes.push(item);\n          }\n        });\n  \n        console.log(this.selectedChildDataPurposes);\n      });\n\n  // STEP FOUR\n  this.formPurposeRetention.get('Purpose').valueChanges.subscribe((value) => {\n      const values: number[] = value;\n\n      this.selectedDataPurposes.length = 0;\n\n      // Reset all the fields first\n      this.SpecifyTheLaw = false;\n      this.ServiceOrProductProvided = false;\n      this.SpecifyLegalObligation = false;\n      this.formPurposeRetention.get('SpecifyTheLaw').clearValidators();\n      this.formPurposeRetention.get('SpecifyTheLaw').reset();\n      this.formPurposeRetention.get('ServiceOrProductProvided').clearValidators();\n      this.formPurposeRetention.get('ServiceOrProductProvided').reset();\n      this.formPurposeRetention.get('SpecifyLegalObligation').clearValidators();\n      this.formPurposeRetention.get('SpecifyLegalObligation').reset();\n\n      values?.filter((item) => {\n          if (item === 1) {\n              this.SpecifyTheLaw = true;\n              this.formPurposeRetention.get('SpecifyTheLaw').setValidators([Validators.required]);\n          }\n\n          if (item === 3) {\n              this.ServiceOrProductProvided = true;\n              this.formPurposeRetention.get('ServiceOrProductProvided').setValidators([Validators.required]);\n          }\n\n          if (item === 6) {\n              this.SpecifyLegalObligation = true;\n              this.formPurposeRetention.get('SpecifyLegalObligation').setValidators([Validators.required]);\n          }\n      });\n\n      this.formPurposeRetention.controls['SpecifyTheLaw'].updateValueAndValidity();\n      this.formPurposeRetention.controls['ServiceOrProductProvided'].updateValueAndValidity();\n      this.formPurposeRetention.controls['SpecifyLegalObligation'].updateValueAndValidity();\n\n      this.dataPurposes.filter((item) => {\n          if (values.includes(item.DataPurposeID)) {\n              this.selectedDataPurposes.push(item);\n          }\n      });\n\n      this.changeDetector.detectChanges();\n  });\n\n  this.formPurposeRetention.get('RecordPercentageGrowth').valueChanges.subscribe((value) => {\n\n      if (value > 100) {\n          this.formPurposeRetention.get('RecordPercentageGrowth').patchValue(100);\n      }\n\n      this.changeDetector.detectChanges();\n  });\n\n  this.formPurposeRetention.get('RetentionPeriod').valueChanges.subscribe((value) => {\n\n      if (value > 100) {\n          this.formPurposeRetention.get('RetentionPeriod').patchValue(100);\n      }\n\n      this.changeDetector.detectChanges();\n  });\n\n  // STEP FIVE\n  this.formThirdParties.get('PersonalDataIsForDisclosure').valueChanges.subscribe((value) => {        \n      if (value === 'No') {\n          this.thirdParties.length = 0;\n\n          this.thirdPartyDataSource = new MatTableDataSource(this.thirdParties);\n\n          setTimeout(() => {\n              this.thirdPartyDataSource.paginator = this.thirdPartyPaginator;\n              this.thirdPartyDataSource.sort = this.thirdPartyMatSort;\n          });\n      }\n  });\n\n  this.formThirdParties.get('StoreDataOutsideCountry').valueChanges.subscribe((value) => {\n      if (value === 'No') {\n          this.countriesOfTransfer.length = 0;\n\n          this.countriesDataSource = new MatTableDataSource(this.countriesOfTransfer);\n\n          setTimeout(() => {\n              this.countriesDataSource.paginator = this.countryOfTransferPaginator;\n              this.countriesDataSource.sort = this.countryOfTransferMatSort;\n          });            \n      }\n  });\n}\n\nprivate onShowNotice(): void {\n  this.dialogRef = this.dialog.open(OrgNoticeComponent, {\n      panelClass: ['organisation-data-protection-officer-dialog', 'dialogs'],\n      disableClose: true,\n  });\n\n  this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: DataProtectionOfficer }) => {\n\n  });\n}\n\ngetOrganizationNameErrorMessage(): string {\n  return this.formGeneralInformation.get('OrganizationName').hasError('required') ? 'Please enter a value' : '';\n}\n\ngetURSBNumberErrorMessage(): string {\n  return this.formGeneralInformation.get('URSBNumber').hasError('required') ? 'Please enter a value' : '';\n}\n\ngetSelectErrorMessage(): string {\n  return this.formGeneralInformation.get('DPPActCategory').hasError('required')\n  || this.formGeneralInformation.get('OrganizationTypeID').hasError('required')\n  || this.formGeneralInformation.get('CountryOfIncorporation').hasError('required')\n  || this.formGeneralInformation.get('SectorID').hasError('required')\n  || this.formGeneralInformation.get('NatureOfBusinessCat').hasError('required')\n  || this.formGeneralInformation.get('NatureOfBusinessSubCat').hasError('required')\n  || this.formPersonalDataHeld.get('SourceOfDataID').hasError('required')\n  || this.formPurposeRetention.get('Purpose').hasError('required')\n      ? 'Please choose a value' : '';\n}\n\ngetTelephoneNumberErrorMessage(): string {\n  return this.formGeneralInformation.get('PhoneNumber').hasError('required') ? 'Please enter a value' :\n      this.formGeneralInformation.get('PhoneNumber').hasError('pattern') ? 'Wrong Phone number' : '';\n}\n\ngetEmailAddressErrorMessage(): string {\n  return this.formGeneralInformation.get('EmailAddress').hasError('required') ? 'Please enter a value' :\n      this.formGeneralInformation.get('EmailAddress').hasError('email') ? 'Wrong Email Address.' : '';\n}\n\ngetOtherSectorErrorMessage(): string {\n  return this.formGeneralInformation.get('OtherSector').hasError('required') ? 'Please enter a value' : '';\n}\n\ngetLocationErrorMessage(): string {\n  return this.formGeneralInformation.get('Location').hasError('required') ? 'Please enter a location' : '';\n}\n\ngetDPONameErrorMessage(): string {\n  return this.formOrganisationDetails.get('DPOName').hasError('required') ? 'Please enter a value' :\n      this.formOrganisationDetails.get('DPOName').hasError('pattern') ? 'Please enter a correct name' : '';\n}\n\ngetDPOPhysicalAddressErrorMessage(): string {\n  return this.formOrganisationDetails.get('DPOPhysicalAddress').hasError('required') ? 'Please enter a location' : '';\n}\n\ngetDPOPhoneNumberErrorMessage(): string {\n  return this.formOrganisationDetails.get('DPOPhoneNumber').hasError('required') ? 'Please enter a value' :\n      this.formOrganisationDetails.get('DPOPhoneNumber').hasError('pattern') ? 'Wrong Phone number' : '';\n}\n\ngetDPOEmailAddressErrorMessage(): string {\n  return this.formOrganisationDetails.get('DPOEmailAddress').hasError('required') ? 'Please enter a value' :\n      this.formOrganisationDetails.get('DPOEmailAddress').hasError('email') ? 'Wrong Email Address.' : '';\n}\n\ngetDPOPositionInOrganisationErrorMessage(): string {\n  return this.formOrganisationDetails.get('DPOPositionInOrganisation').hasError('required') ? 'Please enter a value' : '';\n}\n\ngetRequiredErrorMessage(): string {\n  return this.formPurposeRetention.get('SpecifyTheLaw').hasError('required')\n  || this.formPurposeRetention.get('ServiceOrProductProvided').hasError('required')\n  || this.formPurposeRetention.get('SpecifyLegalObligation').hasError('required')\n      ? 'Please enter a value' : '';\n}\n\ngetPatternErrorMessage(): string {\n  return this.formPurposeRetention.get('TotalRecordsAtRegistration').hasError('pattern')\n      ? 'Please enter correct information' : '';\n}\n\ngetRetentionPeriodErrorMessage(): string {\n  return this.formPurposeRetention.get('RetentionPeriod').hasError('required') ? 'Please enter a value' :\n      this.formPurposeRetention.get('RetentionPeriod').hasError('max') ? 'Maximum of 100' :\n          this.formPurposeRetention.get('RetentionPeriod').hasError('pattern') ? 'Not valid' : '';\n}\n\ngetRecordPercentageGrowthErrorMessage(): string {\n  return this.formPurposeRetention.get('RecordPercentageGrowth').hasError('max') ? 'Maximum of 100' :\n      this.formPurposeRetention.get('RecordPercentageGrowth').hasError('pattern') ? 'Not valid' : '';\n}\n\ngetCheckboxErrorMessage(): string {\n  return this.formSecurityMeasures.get('RegistrationConsent').hasError('max') ? 'This field is required' : '';\n}\n\ngetRegistrationDoneByErrorMessage(): string {\n  return this.formSecurityMeasures.get('RegistrationDoneBy').hasError('required') ? 'Please enter a value' :\n      this.formSecurityMeasures.get('RegistrationDoneBy').hasError('pattern') ? 'Please enter a correct name' : '';\n}\n\nupdateCollecthildrenData(event){\n\n  console.log(event.value);\n\n  if(event.value == 'Yes'){\n    this.showChildrenDataFields = true;\n    this.formChildrenData.get('PurposeForCollection').setValidators([Validators.required]);\n\n    this.formChildrenData.controls['PurposeForCollection'].updateValueAndValidity();\n  }\n  else{\n    this.showChildrenDataFields = false;\n\n    this.formChildrenData.get('PurposeForCollection').setValidators([]);\n\n    this.formChildrenData.get('PurposeForCollection').reset();\n\n    this.formChildrenData.controls['PurposeForCollection'].updateValueAndValidity();\n  }\n}\n\nonAddMainActivity(): void {\n  this.dialogRef = this.dialog.open(OrgMainActivityComponent, {\n      panelClass: ['organisation-main-activity-dialog', 'dialogs'],\n      disableClose: true,\n  });\n\n  this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: MainActivity }) => {\n      if (result.status) {\n          let found = false;\n          this.mainActivities.filter((activity) => {\n              if (activity.Activity === result.row.Activity) {\n                  found = true;\n              }\n          });\n\n          if (found) {\n              this.service.openSnackBar('Sorry, this record already exists', 'error-lg');\n          } else {\n              this.mainActivities.push(result.row);\n          }\n\n          this.mainActivitiesDataSource = new MatTableDataSource(this.mainActivities);\n\n          setTimeout(() => {\n              this.mainActivitiesDataSource.paginator = this.MainActivityPaginator;\n              this.mainActivitiesDataSource.sort = this.MainActivityMatSort;\n          });\n      }\n  });\n}\n\nonEditMainActivity(row: MainActivity): void {\n  this.dialogRef = this.dialog.open(OrgMainActivityComponent, {\n      panelClass: ['organisation-main-activity-dialog', 'dialogs'],\n      disableClose: true,\n      data: {row}\n  });\n\n  this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: MainActivity }) => {\n      if (result.status) {\n\n          this.mainActivities[this.mainActivities.indexOf(row)] = {\n              Activity: result.row.Activity,\n          };\n\n          this.mainActivitiesDataSource = new MatTableDataSource(this.mainActivities);\n\n          setTimeout(() => {\n              this.mainActivitiesDataSource.paginator = this.MainActivityPaginator;\n              this.mainActivitiesDataSource.sort = this.MainActivityMatSort;\n          });\n      }\n  });\n}\n\nonRemoveMainActivity(row: MainActivity): void {\n  this.mainActivities.splice(this.mainActivities.indexOf(row), 1);\n\n  this.mainActivitiesDataSource = new MatTableDataSource(this.mainActivities);\n\n  setTimeout(() => {\n      this.mainActivitiesDataSource.paginator = this.MainActivityPaginator;\n      this.mainActivitiesDataSource.sort = this.MainActivityMatSort;\n  });\n}\n\nonAddADPO(): void {\n  this.dialogRef = this.dialog.open(OrgDataProtectionOfficerComponent, {\n      panelClass: ['organisation-data-protection-officer-dialog', 'dialogs'],\n      disableClose: true,\n  });\n\n  this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: DataProtectionOfficer }) => {\n      if (result.status) {\n          let found = false;\n          this.dataProtectionOfficers.filter((dpo) => {\n              if (dpo.EmailAddress === result.row.EmailAddress || dpo.PhoneNumber === result.row.PhoneNumber) {\n                  found = true;\n              }\n          });\n\n          if (found) {\n              this.service.openSnackBar('Sorry, this record already exists', 'error-lg');\n          } else {\n              this.dataProtectionOfficers.push(result.row);\n          }\n\n          this.dpoDataSource = new MatTableDataSource(this.dataProtectionOfficers);\n\n          setTimeout(() => {\n              this.dpoDataSource.paginator = this.dpoPaginator;\n              this.dpoDataSource.sort = this.dpoMatSort;\n          });\n      }\n  });\n}\n\nonEditDPO(row: DataProtectionOfficer): void {\n  this.dialogRef = this.dialog.open(OrgDataProtectionOfficerComponent, {\n      panelClass: ['organisation-data-protection-officer-dialog', 'dialogs'],\n      disableClose: true,\n      data: {row}\n  });\n\n  this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: DataProtectionOfficer }) => {\n      if (result.status) {\n\n          this.dataProtectionOfficers[this.dataProtectionOfficers.indexOf(row)] = {\n              Name: result.row.Name,\n              EmailAddress: result.row.EmailAddress,\n              PhoneNumber: result.row.PhoneNumber,\n              PhysicalAddress: result.row.PhysicalAddress,\n              PositionInOrganisation: result.row.PositionInOrganisation,\n          };\n\n          this.dpoDataSource = new MatTableDataSource(this.dataProtectionOfficers);\n\n          setTimeout(() => {\n              this.dpoDataSource.paginator = this.dpoPaginator;\n              this.dpoDataSource.sort = this.dpoMatSort;\n          });\n      }\n  });\n}\n\nonRemoveDPO(row: DataProtectionOfficer): void {\n  this.dataProtectionOfficers.splice(this.dataProtectionOfficers.indexOf(row), 1);\n\n  this.dpoDataSource = new MatTableDataSource(this.dataProtectionOfficers);\n\n  setTimeout(() => {\n      this.dpoDataSource.paginator = this.dpoPaginator;\n      this.dpoDataSource.sort = this.dpoMatSort;\n  });\n}\n\nonAddSecurityMeasure(): void {\n  this.dialogRef = this.dialog.open(OrgSecurityMeasuresComponent, {\n      panelClass: ['organisation-security-measure-dialog', 'dialogs'],\n      disableClose: true,\n  });\n\n  this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: SecurityMeasure }) => {\n      if (result.status) {\n          let found = false;\n          this.securityMeasures.filter((item) => {\n              if (item.SecurityMeasure === result.row.SecurityMeasure) {\n                  found = true;\n              }\n          });\n\n          if (found) {\n              this.service.openSnackBar('Sorry, this record already exists', 'error-lg');\n          } else {\n              this.securityMeasures.push(result.row);\n          }\n\n          this.securityMeasureDataSource = new MatTableDataSource(this.securityMeasures);\n\n          setTimeout(() => {\n              this.securityMeasureDataSource.paginator = this.securityMeasurePaginator;\n              this.securityMeasureDataSource.sort = this.securityMeasureMatSort;\n          });\n      }\n  });\n}\n\nonEditSecurityMeasure(row: SecurityMeasure): void {\n  this.dialogRef = this.dialog.open(OrgSecurityMeasuresComponent, {\n      panelClass: ['organisation-security-measure-dialog', 'dialogs'],\n      disableClose: true,\n      data: {row}\n  });\n\n  this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: SecurityMeasure }) => {\n      if (result.status) {\n\n          this.securityMeasures[this.securityMeasures.indexOf(row)] = {\n              SecurityMeasure: result.row.SecurityMeasure,\n          };\n\n          this.securityMeasureDataSource = new MatTableDataSource(this.securityMeasures);\n\n          setTimeout(() => {\n              this.securityMeasureDataSource.paginator = this.securityMeasurePaginator;\n              this.securityMeasureDataSource.sort = this.securityMeasureMatSort;\n          });\n      }\n  });\n}\n\nonRemoveSecurityMeasure(row: SecurityMeasure): void {\n  this.securityMeasures.splice(this.securityMeasures.indexOf(row), 1);\n\n  this.securityMeasureDataSource = new MatTableDataSource(this.securityMeasures);\n\n  setTimeout(() => {\n      this.securityMeasureDataSource.paginator = this.securityMeasurePaginator;\n      this.securityMeasureDataSource.sort = this.securityMeasureMatSort;\n  });\n}\n\nonAddAThirdParty(): void {\n  this.dialogRef = this.dialog.open(OrgThirdPartyComponent, {\n      panelClass: ['organisation-third-party-dialog', 'dialogs'],\n      disableClose: true,\n  });\n\n  this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: ThirdParty }) => {\n      if (result.status) {\n          let found = false;\n\n          this.thirdParties.filter((party) => {\n              if (party.ThirdPartyName === result.row.ThirdPartyName) {\n                  found = true;\n              }\n          });\n\n          if (found) {\n              this.service.openSnackBar('Sorry, this record already exists', 'error-lg');\n          } else {\n              this.thirdParties.push(result.row);\n          }\n\n          this.thirdPartyDataSource = new MatTableDataSource(this.thirdParties);\n\n          setTimeout(() => {\n              this.thirdPartyDataSource.paginator = this.thirdPartyPaginator;\n              this.thirdPartyDataSource.sort = this.thirdPartyMatSort;\n          });\n      }\n  });\n}\n\nonEditThirdParty(row: ThirdParty): void {\n  this.dialogRef = this.dialog.open(OrgThirdPartyComponent, {\n      panelClass: ['organisation-third-party-dialog', 'dialogs'],\n      disableClose: true,\n      data: {row}\n  });\n\n  this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: ThirdParty }) => {\n      if (result.status) {\n\n          this.thirdParties[this.thirdParties.indexOf(row)] = {\n              ThirdPartyName: result.row.ThirdPartyName,\n              Purpose: result.row.Purpose,\n          };\n\n          this.thirdPartyDataSource = new MatTableDataSource(this.thirdParties);\n\n          setTimeout(() => {\n              this.thirdPartyDataSource.paginator = this.thirdPartyPaginator;\n              this.thirdPartyDataSource.sort = this.thirdPartyMatSort;\n          });\n      }\n  });\n}\n\nonRemoveThirdParty(row: ThirdParty): void {\n  this.thirdParties.splice(this.thirdParties.indexOf(row), 1);\n\n  this.thirdPartyDataSource = new MatTableDataSource(this.thirdParties);\n\n  setTimeout(() => {\n      this.thirdPartyDataSource.paginator = this.thirdPartyPaginator;\n      this.thirdPartyDataSource.sort = this.thirdPartyMatSort;\n  });\n}\n\nonAddACountry(): void {\n  this.dialogRef = this.dialog.open(OrgCountryComponent, {\n      panelClass: ['organisation-country-dialog', 'dialogs'],\n      disableClose: true,\n  });\n\n  this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: CountryOfTransfer }) => {\n      if (result.status) {\n          let found = false;\n          this.countriesOfTransfer.filter((party) => {\n              if (party.Country === result.row.Country) {\n                  found = true;\n              }\n          });\n\n          if (found) {\n              this.service.openSnackBar('Sorry, this record already exists', 'error-lg');\n          } else {\n              this.countriesOfTransfer.push(result.row);\n          }\n\n          this.countriesDataSource = new MatTableDataSource(this.countriesOfTransfer);\n\n          setTimeout(() => {\n              this.countriesDataSource.paginator = this.countryOfTransferPaginator;\n              this.countriesDataSource.sort = this.countryOfTransferMatSort;\n          });\n      }\n  });\n}\n\nonEditCountry(row: CountryOfTransfer): void {\n  this.dialogRef = this.dialog.open(OrgCountryComponent, {\n      panelClass: ['organisation-country-dialog', 'dialogs'],\n      disableClose: true,\n      data: {row}\n  });\n\n  this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: CountryOfTransfer }) => {\n      if (result.status) {\n          this.countriesOfTransfer[this.countriesOfTransfer.indexOf(row)] = {\n              CountryID: result.row.CountryID,\n              Country: result.row.Country,\n              Purpose: result.row.Purpose,\n              Description: result.row.Description,\n          };\n\n          this.countriesDataSource = new MatTableDataSource(this.countriesOfTransfer);\n\n          setTimeout(() => {\n              this.countriesDataSource.paginator = this.countryOfTransferPaginator;\n              this.countriesDataSource.sort = this.countryOfTransferMatSort;\n          });\n      }\n  });\n}\n\nonRemoveCountry(row: CountryOfTransfer): void {\n  this.countriesOfTransfer.splice(this.countriesOfTransfer.indexOf(row), 1);\n\n  this.countriesDataSource = new MatTableDataSource(this.countriesOfTransfer);\n\n  setTimeout(() => {\n      this.countriesDataSource.paginator = this.countryOfTransferPaginator;\n      this.countriesDataSource.sort = this.countryOfTransferMatSort;\n  });\n}\n\nonUploadAttachments(): void {\n  this.dialogRef = this.dialog.open(OrgUploadComponent, {\n      panelClass: ['organisation-upload-dialog', 'dialogs'],\n      disableClose: true,\n      data: {\n          multiple: false\n      }\n  });\n\n  this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: FileUpload }) => {\n      // console.log('row:', result.row);\n\n      if (result.status) {\n          this.document = result.row;\n      }\n  });\n}\n\nonRemoveDocument(): void {\n  this.document = null;\n}\n\nonDownloadForm3(): void {\n  // this.formGeneralInformation.get('OrganizationName').patchValue('Applied Principles Consulting');\n  // this.formGeneralInformation.get('Location').patchValue('Bukoto street 764');\n\n  this.dialogRef = this.dialog.open(OrgForm3DialogComponent, {\n      panelClass: ['organisation-form-3-dialog', 'dialogs'],\n      disableClose: true,\n      data: {\n          OrganisationName: this.formGeneralInformation.get('OrganizationName').value,\n          PhysicalAddress: this.formGeneralInformation.get('Location').value,\n          Date: new Date()\n      }\n  });\n}\n\nonUploadProofOfPayment(): void {\n  this.dialogRef = this.dialog.open(OrgUploadComponent, {\n      panelClass: ['organisation-upload-dialog', 'dialogs'],\n      disableClose: true,\n      data: {\n          multiple: false\n      }\n  });\n\n  this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: FileUpload }) => {\n\n      if (result.status) {\n          this.proofOfPayment = result.row;\n      }\n  });\n}\n\nonRemoveProofOfPaymen(): void {\n  this.proofOfPayment = null;\n}\n\nonUploadForm3Attachments(): void {\n  this.dialogRef = this.dialog.open(OrgUploadComponent, {\n      panelClass: ['organisation-upload-dialog', 'dialogs'],\n      disableClose: true,\n      data: {\n          multiple: false\n      }\n  });\n\n  this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: FileUpload }) => {\n      if (result.status) {\n          this.documentForm3 = result.row;\n      }\n  });\n}\n\nonRemoveForm3Document(): void {\n  this.documentForm3 = null;\n}\n\nonChangeSubCategory(event: MatCheckboxChange, SubCategory: DataSubCategory): void {\n  if (event.checked) {\n      this.selectedDataSubCategory.push(SubCategory);\n  } else {\n      this.selectedDataSubCategory.splice(this.selectedDataSubCategory.indexOf(SubCategory), 1);\n  }\n}\n\nprivate getFormData(): any {\n\n  return {\n    \n    OrganisationID: this.OrganisationID.toString(),\n    RegTrackingNo: this.regTrackingNo,\n    OrganisationName: this.formGeneralInformation.get('OrganizationName').value,\n    OrganisationCategory: this.selectedOrganisationCategories ? this.selectedOrganisationCategories : [],\n    OrganizationTypeID: this.formGeneralInformation.get('OrganizationTypeID').value ? this.formGeneralInformation.get('OrganizationTypeID').value : 0,\n    CountryOfIncorporation: this.formGeneralInformation.get('CountryOfIncorporation').value ? this.formGeneralInformation.get('CountryOfIncorporation').value : 0,\n    URSBNumber: this.formGeneralInformation.get('URSBNumber').value ? this.formGeneralInformation.get('URSBNumber').value : '',\n    SectorID: this.formGeneralInformation.get('SectorID').value ? this.formGeneralInformation.get('SectorID').value : 0,\n    OtherSector: this.formGeneralInformation.get('OtherSector').value ? this.formGeneralInformation.get('OtherSector').value : '',\n    Location: this.formGeneralInformation.get('Location').value ? this.formGeneralInformation.get('Location').value : '',\n    // tslint:disable-next-line:max-line-length\n    // PhoneNumber: this.formGeneralInformation.get('PhoneNumberCode').value + (this.formGeneralInformation.get('PhoneNumber').value).replaceAll(' ', ''),\n    // EmailAddress: this.formGeneralInformation.get('EmailAddress').value,\n    PhoneNumber: this.formGeneralInformation.get('PhoneNumberCode').value + (this.formGeneralInformation.get('PhoneNumber').value).replaceAll(' ', ''),\n    EmailAddress: this.formGeneralInformation.get('EmailAddress').value,\n    NatureOfBusinessCatID: this.formGeneralInformation.get('NatureOfBusinessCat').value ? this.formGeneralInformation.get('NatureOfBusinessCat').value : 0,\n    NatureOfBusiness: this.selectedNatureOfBusinessSubCat ? this.selectedNatureOfBusinessSubCat : [],\n    \n    DPORequired: this.formOrganisationDetails.get('DPORequired').value,\n    DPOName: this.formOrganisationDetails.get('DPORequired').value === 'Yes' ? this.formOrganisationDetails.get('DPOName').value : '',\n    DPOPhysicalAddress: this.formOrganisationDetails.get('DPORequired').value === 'Yes' ? this.formOrganisationDetails.get('DPOPhysicalAddress').value : '',\n    // tslint:disable-next-line:max-line-length\n    DPOPhoneNumber: this.formOrganisationDetails.get('DPOPhoneNumber').value ? this.formOrganisationDetails.get('PhoneNumberCode').value + (this.formOrganisationDetails.get('DPOPhoneNumber').value).replaceAll(' ', '') : '',\n    // tslint:disable-next-line:max-line-length\n    DPOEmailAddress: this.formOrganisationDetails.get('DPORequired').value === 'Yes' ? this.formOrganisationDetails.get('DPOEmailAddress').value : '',\n    DPOPositionInOrganisation: this.formOrganisationDetails.get('DPORequired').value === 'Yes' ? this.formOrganisationDetails.get('DPOPositionInOrganisation').value : '',\n    SourceOfDataID: this.selectedDataSources ? this.selectedDataSources : [],\n    PersonalDataCollected: this.selectedDataSubCategory ? this.selectedDataSubCategory : [],\n    Purpose: this.selectedDataPurposes ? this.selectedDataPurposes : [],\n    SpecifyTheLaw: this.formPurposeRetention.get('SpecifyTheLaw').value ? this.formPurposeRetention.get('SpecifyTheLaw').value : '',\n    ServiceOrProductProvided: this.formPurposeRetention.get('ServiceOrProductProvided').value ? this.formPurposeRetention.get('ServiceOrProductProvided').value : '',\n    SpecifyLegalObligation: this.formPurposeRetention.get('SpecifyLegalObligation').value ? this.formPurposeRetention.get('SpecifyLegalObligation').value : '',\n    // tslint:disable-next-line:max-line-length\n    TotalRecordsAtRegistration: this.formPurposeRetention.get('TotalRecordsAtRegistration').value ? parseInt(this.formPurposeRetention.get('TotalRecordsAtRegistration').value, 10) : 0,\n    RecordPercentageGrowth: this.formPurposeRetention.get('RecordPercentageGrowth').value ? parseInt(this.formPurposeRetention.get('RecordPercentageGrowth').value, 10) : 0,\n    // RetentionPeriod: this.formPurposeRetention.get('RetentionPeriod').value,\n    RetentionPeriod: this.formPurposeRetention.get('RetentionPeriod').value ? parseInt(this.formPurposeRetention.get('RetentionPeriod').value, 10) : 0,\n    PersonalDataIsForDisclosure: this.formThirdParties.get('PersonalDataIsForDisclosure').value ? this.formThirdParties.get('PersonalDataIsForDisclosure').value : '',\n    ThirdParties: this.thirdParties ? this.thirdParties : [],\n    StoreDataOutsideCountry: this.formThirdParties.get('StoreDataOutsideCountry').value ? this.formThirdParties.get('StoreDataOutsideCountry').value : '',\n    Countries: this.countriesOfTransfer ? this.countriesOfTransfer : [],\n    SecurityMeasures: this.securityMeasures ? this.securityMeasures : [],\n    Attachment: this.document ? this.document.Base64 : '',\n    Form3Attachment: this.documentForm3 ? this.documentForm3.Base64 : '',\n    RegistrationConsent: this.formSecurityMeasures.get('RegistrationConsent').value ? true : false,\n    RegistrationDoneBy: this.formSecurityMeasures.get('RegistrationDoneBy').value ? this.formSecurityMeasures.get('RegistrationDoneBy').value : '',\n    //PRN : this.formGeneralInformation.get('PRN').value ? this.formGeneralInformation.get('PRN').value : '',\n    ChildrenDataPurpose: this.selectedChildDataPurposes ? this.selectedChildDataPurposes : [],\n    CollectChildrenData: this.formChildrenData.get('CollectChildrenData').value ? this.formChildrenData.get('CollectChildrenData').value : '',\n    ProofOfPayment: this.proofOfPayment ? this.proofOfPayment.Base64 : '',\n  \n  };\n}\n\n\n// Jordan New code here\n   \n//End of Jordan Code here\n\nonNatureOfBusinessCatSelected(NatureOfBusinessCatId): void {\n  // tslint:disable-next-line:max-line-length\n  this.httpSub = this.http.get<NatureOfBusinessSubCat[]>(this.endpoints.natureOfBusiness + '?NatureOfBusinessSubCat=' + NatureOfBusinessCatId)\n  .pipe(catchError(this.service.handleError))\n  .subscribe((response) => {\n\n    this.natureOfBusinessSubCat = response;\n\n  }, (error) => {\n    this.processing = false;\n    this.service.determineErrorResponse(error);\n  });\n}\nfetchSingleApplication(response, comments): void {\n  this.application = response;\n\n  console.log(comments.data.data.length);\n  console.log(comments.data.data);\n\n\n  // console.log('application:', this.application);\n  // console.log('_StepRequestingForMoreInfo:', this._StepRequestingForMoreInfo);\n\n  this.hasRequestForMoreInfo(this.application.RegTrackingNo);\n  this.findDocumentActions(1, this.application.CurrentStepID);\n  this.getDocumentWorkflow(this.application.RegTrackingNo, this.workflowID);\n\n  // console.log('object:', this.application);\n\n  if (this.application.CurrentStepName === 'Certificate Issued') {\n      if (this.isOfficer) {\n          this.getIssuedCertDetails(+this.application.OrganisationID);\n      } else {\n          this.getIssuedCertDetails(parseInt(this.application.OrganisationID, 10));\n      }\n  }\n\n  this.formGeneralInformation.get('OrganizationName').patchValue(this.application.OrganisationName);\n  this.organisationcategories = this.application.OrganisationCategory;\n\n  this.organisationcategories.filter((item) => {\n      this.cat.push(item.OrganisationCategoryId);\n  });\n\n  this.OrganisationID = this.application.OrganisationID;\n  this.formGeneralInformation.get('DPPActCategory').patchValue(this.cat);\n\n  this.formGeneralInformation.get('OrganizationTypeID').patchValue(this.application.OrganizationTypeID);\n  this.formGeneralInformation.get('URSBNumber').patchValue(this.application.URSBNumber);\n  this.formGeneralInformation.get('SectorID').patchValue(this.application.SectorID);\n  this.formGeneralInformation.get('CountryOfIncorporation').patchValue(response['CountryOfIncorporation']);\n  this.formGeneralInformation.get('OtherSector').patchValue(response['OtherSector']);\n  this.formGeneralInformation.get('Location').patchValue(this.application.Location);\n  this.formGeneralInformation.get('PhoneNumberCode').patchValue(this.application.PhoneNumber.substring(0, 3));\n  this.formGeneralInformation.get('PhoneNumber').patchValue(this.application.PhoneNumber.substring(3, 13));\n  this.formGeneralInformation.get('EmailAddress').patchValue(this.application.EmailAddress);\n\n  if (response['NatureOfBusiness'].length) {\n      this.formGeneralInformation.get('NatureOfBusinessCat').patchValue(response['NatureOfBusiness'][0]['NatureOfBusinessCatID']);\n      this.natureOfbusinesses = response['NatureOfBusiness'];\n\n      this.onNatureOfBusinessCatSelected(response['NatureOfBusiness'][0]['NatureOfBusinessCatID']);\n      \n      let _selectedNatureOfBusinessSubCat: NatureOfBusinessSubCat[] = [];\n      this.natureOfbusinesses.filter((item) => {\n          this.natureOfbusinesses_arr.push(item.NatureOfBusinessSubatID);\n\n          _selectedNatureOfBusinessSubCat.push({\n              NatureOfBusinessSubCatId: item.NatureOfBusinessSubatID,\n              NatureOfBusinessSubCategoryName: item.NatureOfBusinessSubCategoryName\n          });\n      });\n      \n      this.formGeneralInformation.get('NatureOfBusinessSubCat').patchValue(this.natureOfbusinesses_arr);\n      this.selectedNatureOfBusinessSubCat = _selectedNatureOfBusinessSubCat;\n  }\n\n\n  // STEP TWO\n  this.formOrganisationDetails.get('DPORequired').patchValue(response['DPORequired']);\n\n  this.formOrganisationDetails.get('DPOName').patchValue(response['DPOName']);\n  this.formOrganisationDetails.get('DPOPhysicalAddress').patchValue(response['DPOPhysicalAddress']);\n  this.formOrganisationDetails.get('PhoneNumberCode').patchValue(response['DPOPhoneNumber'].substring(0, 3));\n  this.formOrganisationDetails.get('DPOPhoneNumber').patchValue(response['DPOPhoneNumber'].substring(3, 13));\n  this.formOrganisationDetails.get('DPOEmailAddress').patchValue(response['DPOEmailAddress']);\n  this.formOrganisationDetails.get('DPOPositionInOrganisation').patchValue(response['DPOPositionInOrganisation']);\n\n  // STEP THREE\n  this.sourceofdata = response['SourceOfDataID'];\n  this.sourceofdata.filter((item) => {\n      this.sourceofdata_arr.push(item.DataSourceID);\n  });\n\n  /// CHILDREN DATA \n\n  this.formChildrenData.get('CollectChildrenData').patchValue(response['CollectChildrenData']);\n  if(response['CollectChildrenData'] == 'Yes'){\n      this.showChildrenDataFields = true;\n      this.childDataPurposes = response['ChildrenDataPurpose']\n      let _selectedChildrenDataPurposes: ChildrenDataPurpose[] = [];\n      this.childDataPurposes.filter((item) => {\n\n          this.childDataPurposeResults.push(item.ChildDataID);\n      })\n\n\n      this.formChildrenData.get('PurposeForCollection').patchValue(this.childDataPurposeResults);\n  }\n\n \n\n  const personalDataCollected: DataSubCategory[] = response['PersonalDataCollected'];\n\n  this.dataCategories.filter((category) => {\n      personalDataCollected.filter((selectedCat) => {\n          if (category.DataCategoryID === selectedCat.DataCategoryID) {\n              category.SubCategories.filter((subCat) => {\n                  personalDataCollected.filter((selectedSubCat) => {\n                      if (subCat.DataSubCategoryID === selectedSubCat.DataSubCategoryID) {\n                          subCat.IsChecked = true;\n                          this.selectedDataSubCategory.push(subCat);\n                      }\n                  });\n              });\n          }\n      });\n  });\n\n  // STEP FOUR\n  this.formPersonalDataHeld.get('SourceOfDataID').patchValue(this.sourceofdata_arr);\n\n  this.purpose = response['Purpose'];\n  let _selectedDataPurposes: DataPurposes[]  = []\n\n  this.purpose.filter((item) => {\n      if (item.DataPurposeID === 1) {\n          this.SpecifyTheLaw = true;\n          this.formPurposeRetention.get('SpecifyTheLaw').setValidators([Validators.required]);\n      }\n\n      if (item.DataPurposeID === 3) {\n          this.ServiceOrProductProvided = true;\n          this.formPurposeRetention.get('ServiceOrProductProvided').setValidators([Validators.required]);\n      }\n\n      if (item.DataPurposeID === 6) {\n          this.SpecifyLegalObligation = true;\n          this.formPurposeRetention.get('SpecifyLegalObligation').setValidators([Validators.required]);\n      }\n\n      this.purpose_arr.push(item.DataPurposeID);\n\n      _selectedDataPurposes.push(item);\n  });\n  \n  this.formPurposeRetention.get('Purpose').patchValue(this.purpose_arr);\n  this.selectedDataPurposes = _selectedDataPurposes;\n\n  this.formPurposeRetention.get('SpecifyTheLaw').patchValue(response['SpecifyTheLaw']);\n  this.formPurposeRetention.get('ServiceOrProductProvided').patchValue(response['ServiceOrProductProvided']);\n  this.formPurposeRetention.get('SpecifyLegalObligation').patchValue(response['SpecifyLegalObligation']);\n  this.formPurposeRetention.get('TotalRecordsAtRegistration').patchValue(response['TotalRecordsAtRegistration']);\n  this.formPurposeRetention.get('RecordPercentageGrowth').patchValue(response['RecordPercentageGrowth']);\n  this.formPurposeRetention.get('RetentionPeriod').patchValue(response['RetentionPeriod']);\n\n  // this.formPurposeRetention.get('RegistrationConsent').patchValue('');\n\n  // STEP FIVE\n  this.formThirdParties.get('PersonalDataIsForDisclosure').patchValue(response['PersonalDataIsForDisclosure'].replace(/\\s/g, ''));\n  this.thirdParties = response['ThirdParties'];\n  this.thirdPartyDataSource = new MatTableDataSource(this.thirdParties);\n\n  setTimeout(() => {\n      this.thirdPartyDataSource.paginator = this.thirdPartyPaginator;\n      this.thirdPartyDataSource.sort = this.thirdPartyMatSort;\n  });\n  this.thirdPartyDataSource = new MatTableDataSource(response['ThirdParties']);\n\n  this.formThirdParties.get('StoreDataOutsideCountry').patchValue(response['StoreDataOutsideCountry']);\n  this.countriesOfTransfer = response['Countries'];\n  this.countriesDataSource = new MatTableDataSource(this.countriesOfTransfer);\n\n  setTimeout(() => {\n      this.countriesDataSource.paginator = this.countryOfTransferPaginator;\n      this.countriesDataSource.sort = this.countryOfTransferMatSort;\n  });\n\n  // STEP SIX\n  this.securityMeasures = response['SecurityMeasures'];\n  this.securityMeasureDataSource = new MatTableDataSource(this.securityMeasures);\n  setTimeout(() => {\n      this.securityMeasureDataSource.paginator = this.securityMeasurePaginator;\n      this.securityMeasureDataSource.sort = this.securityMeasureMatSort;\n  });\n\n  // Supporting Documents.\n  this.document = { \n      Document: null, \n      Name: 'Supporting Documentation.pdf', \n      Size: null, \n      Base64: this.application.Attachment \n  };\n\n  this.documentForm3 = { \n      Document: null, \n      Name: 'Form 3.pdf', \n      Size: null, \n      Base64: this.application.Form3Attachment \n  };\n\n  this.proofOfPayment = {\n      Document: null, \n      Name: 'Proof of Payment.pdf', \n      Size: null, \n      Base64: this.application.ProofOfPayment \n  };\n\n  // console.log('document:', this.document);\n  // console.log('documentForm3:', this.documentForm3);\n  // console.log('proofOfPayment:', this.proofOfPayment);\n\n  this.formSecurityMeasures.get('RegistrationConsent').patchValue('true');\n  this.formSecurityMeasures.get('RegistrationDoneBy').patchValue(this.application.RegistrationDoneBy);\n}\n\nonSubmit(): void {\n  this.processing = true;\n  // console.log('save the registration information:', this.getFormData());\n\n  this.httpSub = this.http.post<ApiPayload>(this.endpoints.orgRegistration, this.getFormData())\n      .pipe(catchError(this.service.handleError))\n      .subscribe((response) => {\n\n          // console.log('response:', response);\n\n          // Clear all the form Data\n\n          // console.log('response:', response);\n          // Show the dialog window for processing payment.\n\n          this.dialogRef = this.dialog.open(SuccessfulMessageDialogComponent, {\n              panelClass: ['successful-message-dialog', 'dialogs'],\n              disableClose: true,\n              data: {\n                  title: response.message['title'],\n                  message: response.message['body'],\n                  status: response.code === 200 ? true : false,\n              }\n          });\n\n          this.dialogRef.afterClosed().subscribe(() => {\n              window.location.reload();\n          });\n\n          this.processing = false;\n      }, (error) => {\n          this.processing = false;\n\n          if (error.error.message) {\n              this.dialogRef = this.dialog.open(SuccessfulMessageDialogComponent, {\n                  panelClass: ['successful-message-dialog', 'dialogs'],\n                  disableClose: true,\n                  data: {\n                      title: error.error.message['title'],\n                      message: error.error.message['body'],\n                      status: false,\n                  }\n              });\n          } else {\n              this.service.determineErrorResponse(error);\n          }\n      });\n}\n\nngOnDestroy(): void {\n  if (this.httpSub) { this.httpSub.unsubscribe(); }\n  if (this.bottomsheetRef) { this.bottomsheetRef.dismiss(); }\n}\n\nonReadDocument(document: FileUpload): void {\n  // console.log('document:', document);\n  this.bottomsheetRef = this.bottomsheet.open(ViewPdfDocumentBottomsheetComponent, {\n      disableClose: true,\n      panelClass: ['view-pdf-document-bottomsheet', 'bottomsheets'],\n      data: {\n        url: document.Base64,\n        title: document.Name\n      }\n  });      \n}\n\ngetSelectedPurpose(): string {\n  let _purpose = '';\n  this.selectedDataPurposes.filter((item, index: number) => {\n      _purpose += (index > 0 ? ', ' : '') +  item.DataPurpose \n  });\n\n  return _purpose;\n}\n\ngetSelectedNatureOfBusinessSubCat(): string {\n  let _subcategories = '';\n  this.selectedNatureOfBusinessSubCat.filter((item, index: number) => {\n      _subcategories += (index > 0 ? ', ' : '') +  item.NatureOfBusinessSubCategoryName \n  });\n\n  return _subcategories;\n}\n\n\nonSubmitChanges(): void {\n\n  this.processing = true;\n  // console.log('save the registration information:', this.getFormData());\n\n  this.httpSub = this.http.post<ApiPayload>(this.endpoints.updateOrganisationRegistrationDetails, this.getFormData())\n      .pipe(catchError(this.service.handleError))\n      .subscribe((response) => {\n\n          this.dialogRef = this.dialog.open(SuccessfulMessageDialogComponent, {\n              panelClass: ['successful-message-dialog', 'dialogs'],\n              disableClose: true,\n              data: {\n                  title: response.message['title'],\n                  message: response.message['body'],\n                  status: response.code === 200 ? true : false,\n              }\n          });\n\n          this.dialogRef.afterClosed().subscribe(() => {\n              window.location.reload();\n          });\n\n          this.processing = false;\n      }, (error) => {\n          this.processing = false;\n\n          if (error.error.message) {\n              this.dialogRef = this.dialog.open(SuccessfulMessageDialogComponent, {\n                  panelClass: ['successful-message-dialog', 'dialogs'],\n                  disableClose: true,\n                  data: {\n                      title: error.error.message['title'],\n                      message: error.error.message['body'],\n                      status: false,\n                  }\n              });\n          } else {\n              this.service.determineErrorResponse(error);\n          }\n      });\n}\n\n\n\n}\n","\n<fury-page-layout mode=\"card\">\n    <fury-page-layout-header>\n        <fury-breadcrumbs \n            [@fadeInRight] \n            [crumbs]=\"[application ? application.OrganisationName : 'New Application']\"\n            [current]=\" application ? application.RegTrackingNo : 'New Application' \">\n        </fury-breadcrumbs>\n    </fury-page-layout-header>\n\n    <fury-page-layout-content [@fadeInUp]>\n        \n       \n\n        <main class=\"fadeInUp _delay4ms\">\n\n            <!-- <app-page-breadcrumb [title]=\"'Application for New Registration / Renewal'\"></app-page-breadcrumb> -->\n        \n            <mat-horizontal-stepper \n                [linear]=\"isLinear\"\n                [selectedIndex]=\"selectedIndex\"\n                labelPosition=\"bottom\" #stepper>\n        \n                <mat-step [stepControl]=\"formGeneralInformation\">\n                    <ng-template matStepLabel>\n                        <h3>Applicant</h3>\n\n                        \n                    </ng-template>\n        \n                    <form [formGroup]=\"formGeneralInformation\">\n                        <h1 class=\"full-width step-header\">Details of the applicant which could be an organisation or Individual that collects or processes Personal Data </h1>\n        \n                        <mat-form-field>\n                            <mat-label>Name of Organisation <span class=\"required-field\">required</span></mat-label>\n                            <input appUppercase matInput formControlName=\"OrganizationName\">       \n                            <mat-error *ngIf=\"formGeneralInformation.get('OrganizationName').invalid\">{{ getOrganizationNameErrorMessage() }}</mat-error>\n                        </mat-form-field>  \n        \n                        <!-- <mat-form-field [hintLabel]=\"'Data Protection & Privacy Act Categories'\"> -->\n                        <!-- <mat-form-field [hintLabel]=\"'Are you a Data Collector/ Data Processor / Data Controller ?'\"> -->\n                        <mat-form-field [hintLabel]=\"'Choose all that apply'\">\n                            <mat-label>Category <span class=\"required-field\">required</span></mat-label>\n                            <mat-select multiple formControlName=\"DPPActCategory\">\n                                <mat-option *ngFor=\"let cat of organisationCategories\" [value]=\"cat.OrganisationCategoryId\">\n                                    {{ cat.OrganisationCategoryName }}\n                                </mat-option>\n                            </mat-select>   \n                            <mat-error *ngIf=\"formGeneralInformation.get('DPPActCategory').invalid\">{{ getSelectErrorMessage() }}</mat-error> \n                        </mat-form-field>                             \n        \n                        <mat-form-field>\n                            <mat-label>Type of Organisation <span class=\"required-field\">required</span></mat-label>\n                            <mat-select formControlName=\"OrganizationTypeID\" #typeOfOrganisation>\n                                <mat-option *ngFor=\"let type of organisationTypes\" (click)=\"OrganizationType = type.OrganisationType\" [value]=\"type.OrganisationTypeID\">\n                                    {{ type.OrganisationType }}\n                                </mat-option>\n                            </mat-select>\n                            <mat-error *ngIf=\"formGeneralInformation.get('OrganizationTypeID').invalid\">{{ getSelectErrorMessage() }}</mat-error> \n                        </mat-form-field>                   \n        \n                        <mat-form-field *ngIf=\"typeOfOrganisation.value && typeOfOrganisation.value !== 4\">\n                            <mat-label>Country of Incorporation <span class=\"required-field\">required</span></mat-label>\n                            <mat-select formControlName=\"CountryOfIncorporation\">\n                                <mat-option *ngFor=\"let country of countries\" (click)=\"CountryOfIncorporation = country.Name\" [value]=\"country.CountryID\">\n                                    {{ country.Name }}\n                                </mat-option>\n                            </mat-select>\n                            <mat-error *ngIf=\"formGeneralInformation.get('CountryOfIncorporation').invalid\">{{ getSelectErrorMessage() }}</mat-error> \n                        </mat-form-field>        \n        \n                        <mat-form-field *ngIf=\"typeOfOrganisation.value && typeOfOrganisation.value !== 4\">\n                            <mat-label>Registration Number <span class=\"required-field\">required</span></mat-label>\n                            <input appUppercase appRemoveSpaces matInput maxlength=\"25\" formControlName=\"URSBNumber\"> \n                            <mat-error *ngIf=\"formGeneralInformation.get('URSBNumber').invalid\">{{ getURSBNumberErrorMessage() }}</mat-error>\n                        </mat-form-field>     \n                        \n                        <mat-form-field>\n                            <mat-label>Sector <span class=\"required-field\">required</span></mat-label>\n                            <mat-select formControlName=\"SectorID\" #Sector>\n                                <mat-option *ngFor=\"let sector of sectors\" (click)=\"SectorName = sector.Sector\" [value]=\"sector.SectorID\">\n                                    {{ sector.Sector }}\n                                </mat-option>\n                            </mat-select>\n                            <mat-error *ngIf=\"formGeneralInformation.get('SectorID').invalid\">{{ getSelectErrorMessage() }}</mat-error>\n                        </mat-form-field>        \n                        \n                        <mat-form-field hintLabel=\"If Other, Please specify the Sector.\" *ngIf=\"Sector.value === 14\">\n                            <mat-label>Specify Sector <span class=\"required-field\">required</span></mat-label>\n                            <input appUppercase matInput maxlength=\"50\" formControlName=\"OtherSector\">    \n                            <mat-error *ngIf=\"formGeneralInformation.get('OtherSector').invalid\">{{ getOtherSectorErrorMessage() }}</mat-error>\n                        </mat-form-field>                 \n        \n                        <!-- <mat-form-field *ngIf=\"formGeneralInformation.get('PublicBodyTypeID').value === '6'\">\n                            <mat-label>Type of Local Government <span class=\"required-field\">required</span></mat-label>\n                            <mat-select formControlName=\"LocalGovernmentType\">\n                                <mat-option value=\"1\">Body Corporate or otherwise established by Act of Parliament</mat-option>\n                                <mat-option value=\"2\">Cabinet</mat-option>\n                                <mat-option value=\"3\">Court</mat-option>\n                                <mat-option value=\"4\">Commission established by Act of Parliament</mat-option>\n                                <mat-option value=\"5\">Government Department</mat-option>\n                                <mat-option value=\"6\">Local Government Adminstration</mat-option>\n                            </mat-select>\n                        </mat-form-field>                    -->\n                        \n                        <!-- <mat-form-field *ngIf=\"formGeneralInformation.get('PublicBodyTypeID').value === '6'\">\n                            <mat-label>Statute <span class=\"required-field\">required</span></mat-label>\n                            <input appUppercase appRemoveSpaces matInput maxlength=\"255\" formControlName=\"Statute\">                            \n                        </mat-form-field>    \n                         -->\n                        <mat-form-field>\n                            <mat-label>Physical Address <span class=\"required-field\">required</span></mat-label>\n                            <input appUppercase matInput maxlength=\"255\" formControlName=\"Location\">            \n                            <mat-error *ngIf=\"formGeneralInformation.get('Location').invalid\">{{ getLocationErrorMessage() }}</mat-error>                \n                        </mat-form-field>  \n        \n                        <!-- <mat-form-field>\n                            <mat-label>Name of Head of Organisation <span class=\"required-field\">required</span></mat-label>\n                            <input appUppercase appRemoveSpaces matInput maxlength=\"255\" formControlName=\"HeadOfOrganization\">                            \n                        </mat-form-field>    \n        \n                        <mat-form-field>\n                            <mat-label>Title of Head of Organisation <span class=\"required-field\">required</span></mat-label>\n                            <input appUppercase appRemoveSpaces matInput maxlength=\"255\" formControlName=\"TitleOfOrganizationHead\">                            \n                        </mat-form-field>     -->\n        \n                        <!-- <mat-form-field>\n                            <mat-label>Postal Address <span class=\"optional-field\">optional</span></mat-label>\n                            <input appUppercase appRemoveSpaces matInput maxlength=\"255\" formControlName=\"PostalAddress\">                            \n                        </mat-form-field>     -->\n        \n                        <!-- Improve the country code to be dynamic -->\n                        <!-- <mat-form-field>\n                            <span matPrefix>+256 &nbsp;</span>\n                            <mat-label>Organisation Telephone Number <span class=\"required-field\">required</span></mat-label>\n                            <input appTelephoneFormaterDirective maxlength=\"11\" matInput formControlName=\"PhoneNumber\">           \n                        </mat-form-field>    -->\n        \n                        <div class=\"telephone-code-number-wrapper\">\n                            <mat-form-field class=\"fadeInUp _delay2ms\">\n                                <mat-label>Pick one </mat-label>\n                                <mat-select formControlName=\"PhoneNumberCode\">\n                                    <mat-option selected *ngIf=\"!selected\" value=\"256\">+256</mat-option>\n                                    <!-- <mat-option selected *ngIf=\"!selected\" value=\"256\">+256 - Uganda</mat-option> -->\n                                    <mat-option *ngFor=\"let code of countries\" [value]=\"code.PhoneCode\" (click)=\"selected = true\">\n                                        +{{ code.PhoneCode }}\n                                    </mat-option>\n                                </mat-select>\n                            </mat-form-field>\n        \n                            <!-- <mat-form-field class=\"fadeInUp _delay2ms\" [hintLabel]=\"'Organisation Telephone Number.'\"> -->\n                            <mat-form-field class=\"fadeInUp _delay2ms\">\n                                <mat-label>Organisation Telephone Number <span class=\"required-field\">required</span></mat-label>\n                                <input type=\"text\" maxlength=\"11\" matInput appTelephoneFormaterDirective formControlName=\"PhoneNumber\" placeholder=\"Ex. 414 318 111\">\n                                <mat-error *ngIf=\"formGeneralInformation.get('PhoneNumber').invalid\">{{ getTelephoneNumberErrorMessage() }}</mat-error>\n                            </mat-form-field> \n                        </div>                \n        \n                        <!-- <mat-form-field>\n                            <span matPrefix>+256 &nbsp;</span>\n                            <mat-label>Land Line <span class=\"optional-field\">optional</span></mat-label>\n                            <input appTelephoneFormaterDirective maxlength=\"11\" matInput formControlName=\"Landline\">           \n                        </mat-form-field>    -->\n        \n                        <mat-form-field>\n                            <mat-label>Organisation Email Address <span class=\"required-field\">required</span></mat-label>\n                            <input appRemoveSpaces matInput formControlName=\"EmailAddress\">\n                            <mat-error *ngIf=\"formGeneralInformation.get('EmailAddress').invalid\">{{ getEmailAddressErrorMessage() }}</mat-error>\n                        </mat-form-field>   \n        \n                        <!-- <mat-form-field hintLabel=\"Select all the roles performed\">\n                            <mat-label>Nature of Business <span class=\"required-field\">required</span></mat-label>\n                            <mat-select multiple formControlName=\"RolesPerformedID\">\n                                <mat-option value=\"1\">Protection of National Security</mat-option>\n                                <mat-option value=\"2\">Public revenue collection</mat-option>\n                                <mat-option value=\"3\">Enforcement of law which imposes a pecuniary penalty</mat-option>\n                                <mat-option value=\"4\">Conduct proceedings before any court</mat-option>\n                            </mat-select>    \n                        </mat-form-field>     -->\n        \n                        <mat-form-field>\n                            <mat-label>Nature of Business Categories<span class=\"required-field\">required</span></mat-label>\n                            <mat-select formControlName=\"NatureOfBusinessCat\">\n                                <mat-option *ngFor=\"let cat of natureOfBusinessCat\" (click)=\"NatureOfBusinessCat = cat.NatureOfBusinessCategoryName\" [value]=\"cat.NatureOfBusinessCatId\">\n                                    {{ cat.NatureOfBusinessCategoryName }}\n                                </mat-option>\n                            </mat-select>    \n                            <mat-error *ngIf=\"formGeneralInformation.get('NatureOfBusinessCat').invalid\">{{ getSelectErrorMessage() }}</mat-error>\n                        </mat-form-field>                   \n        \n                        <mat-form-field [hintLabel]=\"'Choose all that apply'\" *ngIf=\"_hasRequestMoreInfo && !isOfficer && formGeneralInformation.get('NatureOfBusinessSubCat').enabled\">\n                            <mat-label>Nature of Business Sub-Categories <span class=\"required-field\">required</span></mat-label>\n                            <mat-select multiple formControlName=\"NatureOfBusinessSubCat\">\n                                <mat-option *ngFor=\"let sub of natureOfBusinessSubCat\" [value]=\"sub.NatureOfBusinessSubCatId\" [matTooltip]=\"sub.NatureOfBusinessSubCategoryName\">\n                                    {{ sub.NatureOfBusinessSubCategoryName }}\n                                </mat-option>\n                            </mat-select> \n                            <mat-error *ngIf=\"formGeneralInformation.get('NatureOfBusinessSubCat').invalid\">{{ getSelectErrorMessage() }}</mat-error>   \n                        </mat-form-field>      \n                        \n                        <!-- For viewing purposes only -->\n                        <mat-form-field class=\"span-2-columns\" [hintLabel]=\"'Choose all that apply'\" *ngIf=\"!_hasRequestMoreInfo || (_hasRequestMoreInfo && formGeneralInformation.get('NatureOfBusinessSubCat').disabled) || isOfficer\">\n                            <mat-label>Nature of Business Sub-Categories ?<span class=\"required-field\">required</span></mat-label>\n                            <textarea matInput [value]=\"getSelectedNatureOfBusinessSubCat()\" disabled class=\"textarea-small\"></textarea>\n                        </mat-form-field>                          \n        \n                        <!-- <mat-form-field class=\"full-width\" hintLabel=\"What are the main activities of the organisation ?\">\n                            <mat-label>Nature of Business<span class=\"required-field\">required</span></mat-label>\n                            <textarea #CaseTitleInput matInput maxlength=\"1000\" formControlName=\"NatureOfBusiness\" placeholder=\"\"></textarea>\n                            <mat-hint align=\"end\">{{ CaseTitleInput.value.length }} / 1000</mat-hint>\n                        </mat-form-field>                      -->\n                        \n                        <!-- <section class=\"expand-section reduced-properties table-wrapper\">\n                            <button \n                                mat-button\n                                color=\"primary\"\n                                [disabled]=\"processing\"\n                                class=\"add-item-button\"\n                                (click)=\"onAddMainActivity()\">\n                                <div class=\"button-label\">\n                                    <mat-icon>add</mat-icon>                            \n                                    <span>Add A Main Activity</span>\n                                </div>\n                            </button>\n        \n                            <p class=\"description\">What are the main activities of the organisation ?</p>\n                            \n                            <div class=\"table-wrapper\">\n                                <table \n                                    mat-table \n                                    #dpoMatSort=\"matSort\"\n                                    matSortDisableClear=\"true\"\n                                    [dataSource]=\"mainActivitiesDataSource\"\n                                    matSort>\n                    \n                                    <ng-container matColumnDef=\"Count\">\n                                        <th mat-header-cell *matHeaderCellDef> # </th>\n                                        <td mat-cell *matCellDef=\"let index = index\"> {{ index + 1 }} </td>\n                                    </ng-container>\n                    \n                                    <ng-container matColumnDef=\"MainActivity\">\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Main Activities </th>\n                                        <td mat-cell *matCellDef=\"let row\">{{ row.Activity }}</td>\n                                    </ng-container>                      \n                    \n                                    <ng-container matColumnDef=\"Actions\">\n                                        <th mat-header-cell *matHeaderCellDef> Actions </th>\n                                        <td mat-cell *matCellDef=\"let row; let index = index\">\n                                            <button \n                                                mat-button \n                                                class=\"action-btn\"\n                                                [matMenuTriggerFor]=\"menu\" \n                                                (click)=\"$event.stopPropagation()\"\n                                                matTooltip=\"See more options\">\n                                                <mat-icon>more_vert</mat-icon>\n                                            </button>\n                    \n                                            <mat-menu yPosition=\"below\" #menu=\"matMenu\" class=\"more-options-mat-menu\">\n                    \n                                                <button \n                                                    mat-menu-item \n                                                    (click)=\"$event.stopPropagation();onEditMainActivity(row)\">\n                                                    <mat-icon>edit</mat-icon>\n                                                    <span>Make Changes</span>\n                                                </button>\n                                                      \n                                                <hr />\n                    \n                                                <button \n                                                    mat-menu-item \n                                                    (click)=\"$event.stopPropagation();onRemoveMainActivity(row)\">\n                                                    <mat-icon color=\"warn\">delete</mat-icon>\n                                                    <span>Remove</span>\n                                                </button>\n                    \n                                            </mat-menu>                                                  \n                                        </td>\n                                    </ng-container>\n                    \n                                    <tr mat-header-row *matHeaderRowDef=\"MainActivitiesDisplayedColumns\"></tr>\n                                    <tr mat-row *matRowDef=\"let row; columns: MainActivitiesDisplayedColumns;\" class=\"mat-data-row\"></tr>\n                                </table>\n        \n                                <mat-paginator \n                                    #dpoPaginator\n                                    [pageSize]=\"10\"\n                                    [pageSizeOptions]=\"[5, 10]\">\n                                </mat-paginator>                    \n                            </div>                \n                        </section>                      -->\n                        \n                    </form>\n        \n                    <div class=\"button-wrapper single-button\">\n                        <button \n                            [disabled]=\"formGeneralInformation.invalid\"\n                            mat-button \n                            class=\"next-btn\" \n                            color=\"primary\" \n                            matStepperNext>\n                            Next\n                        </button>\n                    </div>             \n                </mat-step>\n        \n                <mat-step [stepControl]=\"formOrganisationDetails\">\n                    <ng-template matStepLabel>\n                        <h3>Data Protection <br />Officer</h3>\n\n                      \n                    </ng-template>\n        \n                    <form [formGroup]=\"formOrganisationDetails\">     \n        \n                        <h1 class=\"full-width step-header\">Details of Data Protection Officer </h1>    \n                        \n                        <!-- If yes... all the fields should be required. -->\n        \n                        <div class=\"grouped-items\" [ngClass]=\"{'full-width': formOrganisationDetails.get('DPORequired').value !== 'Yes'}\">\n                            <h3>Do you have a designated data protection officer ? </h3>\n        \n                            <mat-radio-group \n                                color=\"primary\" \n                                formControlName=\"DPORequired\" \n                                aria-label=\"Pick one\">\n                                <mat-radio-button [ngClass]=\"{'selected-radio-btn': formOrganisationDetails.get('DPORequired').value === 'Yes' }\" value=\"Yes\">Yes</mat-radio-button>\n                                <mat-radio-button [ngClass]=\"{'selected-radio-btn': formOrganisationDetails.get('DPORequired').value === 'No' }\" value=\"No\">No</mat-radio-button>\n                            </mat-radio-group>        \n                        </div>                  \n                        \n                        <mat-form-field *ngIf=\"formOrganisationDetails.get('DPORequired').value === 'Yes'\">\n                            <mat-label>Name <span class=\"required-field\">required</span></mat-label>\n                            <input formControlName=\"DPOName\" matInput>\n                            <mat-error *ngIf=\"formOrganisationDetails.get('DPOName').invalid\">{{ getDPONameErrorMessage() }}</mat-error>\n                        </mat-form-field>\n                \n                        <mat-form-field *ngIf=\"formOrganisationDetails.get('DPORequired').value === 'Yes'\">\n                            <mat-label>Physical Address <span class=\"required-field\">required</span></mat-label>\n                            <input formControlName=\"DPOPhysicalAddress\" maxlength=\"255\" matInput>\n                            <mat-error *ngIf=\"formOrganisationDetails.get('DPOPhysicalAddress').invalid\">{{ getDPOPhysicalAddressErrorMessage() }}</mat-error>\n                        </mat-form-field>\n        \n                        <!-- <mat-form-field >\n                            <span matPrefix>+256 &nbsp;</span>\n                            <mat-label>Telephone Number <span class=\"required-field\">required</span></mat-label>\n                            <input appTelephoneFormaterDirective maxlength=\"11\" matInput formControlName=\"DPOPhoneNumber\">           \n                        </mat-form-field>  -->\n                        \n                        <div class=\"telephone-code-number-wrapper\" *ngIf=\"formOrganisationDetails.get('DPORequired').value === 'Yes'\">\n                            <mat-form-field class=\"fadeInUp _delay2ms\">\n                                <mat-label>Pick one </mat-label>\n                                <mat-select formControlName=\"PhoneNumberCode\">\n                                    <mat-option selected *ngIf=\"!DPOSelected\" value=\"256\">+256</mat-option>\n                                    <!-- <mat-option selected *ngIf=\"!selected\" value=\"256\">+256 - Uganda</mat-option> -->\n                                    <mat-option *ngFor=\"let code of countries\" [value]=\"code.PhoneCode\" (click)=\"DPOSelected = true\">\n                                        +{{ code.PhoneCode }}\n                                    </mat-option>\n                                </mat-select>\n                                <!-- <mat-error *ngIf=\"formGeneralInformation.get('PhoneNumberCode').invalid\">{{ getSelectInputErrorMessage() }}</mat-error>      -->\n                            </mat-form-field>\n        \n                            <!-- <mat-form-field class=\"fadeInUp _delay2ms\" [hintLabel]=\"'Organisation Telephone Number.'\"> -->\n                            <mat-form-field class=\"fadeInUp _delay2ms\">\n                                <mat-label>Telephone Number <span class=\"required-field\">required</span></mat-label>\n                                <input type=\"text\" maxlength=\"11\" matInput appTelephoneFormaterDirective formControlName=\"DPOPhoneNumber\" placeholder=\"Ex. 414 318 111\">\n                                <mat-error *ngIf=\"formOrganisationDetails.get('DPOPhoneNumber').invalid\">{{ getDPOPhoneNumberErrorMessage() }}</mat-error>\n                            </mat-form-field> \n                        </div>                  \n                \n                        <mat-form-field *ngIf=\"formOrganisationDetails.get('DPORequired').value === 'Yes'\">\n                            <mat-label>Email Address <span class=\"required-field\">required</span></mat-label>\n                            <input appRemoveSpaces formControlName=\"DPOEmailAddress\" matInput>\n                            <mat-error *ngIf=\"formOrganisationDetails.get('DPOEmailAddress').invalid\">{{ getDPOEmailAddressErrorMessage() }}</mat-error>\n                        </mat-form-field>       \n        \n                        <mat-form-field *ngIf=\"formOrganisationDetails.get('DPORequired').value === 'Yes'\" class=\"full-width\" hintLabel=\"Any other title held apart from DPO (Data Protection Officer).\">\n                            <mat-label>Title Held <span class=\"required-field\">required</span></mat-label>\n                            <textarea #PositionInput matInput formControlName=\"DPOPositionInOrganisation\" maxlength=\"1000\"></textarea>\n                            <mat-hint align=\"end\">{{ PositionInput.value.length }} / 1000</mat-hint>\n                            <mat-error *ngIf=\"formOrganisationDetails.get('DPOPositionInOrganisation').invalid\">{{ getDPOPositionInOrganisationErrorMessage() }}</mat-error>\n                        </mat-form-field>                  \n                    </form>\n        \n                    <div class=\"button-wrapper\">       \n                        <button mat-button class=\"back-btn\" matStepperPrevious>Back</button>   \n                      \n                        <button \n                            [disabled]=\"formOrganisationDetails.invalid\"\n                            mat-button \n                            class=\"next-btn\" \n                            color=\"primary\" \n                            matStepperNext>\n                            Next\n                        </button>\n                    </div>             \n                </mat-step>\n        \n                <mat-step [stepControl]=\"formPersonalDataHeld\">\n                    <ng-template matStepLabel>\n                        <h3>Data Collected <br /> or Processed</h3>\n\n                      \n                    </ng-template>\n        \n                    <form [formGroup]=\"formPersonalDataHeld\" class=\"personal-data-affected\">       \n                        \n                        <h1 class=\"full-width step-header\">Description of Data collected or processed </h1>\n        \n                        <mat-form-field hintLabel=\"Choose all that apply.\" class=\"full-width\">\n                            <mat-label>Source of Data <span class=\"required-field\">required</span></mat-label>\n                            <mat-select multiple formControlName=\"SourceOfDataID\">\n                                <mat-option *ngFor=\"let source of dataSources\" [value]=\"source.DataSourceID\">\n                                    {{ source.DataSource }}\n                                </mat-option>\n                            </mat-select>    \n                            <mat-error *ngIf=\"formPersonalDataHeld.get('SourceOfDataID').invalid\">{{ getSelectErrorMessage() }}</mat-error> \n                        </mat-form-field>        \n                        \n                        <!-- <div class=\"grouped-items\" class=\"span-2-columns\">\n                            <h3>Do you collect personal data relating to Children?</h3>\n            \n                            <mat-radio-group color=\"primary\" aria-label=\"Pick one\" formControlName=\"CollectChildrenData\">\n                                <mat-radio-button value=\"Yes\">Yes</mat-radio-button>\n                                <mat-radio-button value=\"No\">No</mat-radio-button>\n                            </mat-radio-group>        \n                        </div>   -->\n        \n                        <!-- <mat-form-field class=\"full-width personal-data-affected-field\" hintLabel=\"Choose all that apply\">\n                            <mat-label>Personal Data Collected Or Processed <span class=\"required-field\">required</span></mat-label>\n                            <mat-select [formControl]=\"dataCategory\" multiple>\n                                <mat-option \n                                    *ngFor=\"let category of dataCategories\" \n                                    [value]=\"category.Name\">\n                                    {{ category.Name }}\n                            </mat-option>\n                            </mat-select>\n                        </mat-form-field> -->\n        \n                        <h1 class=\"full-width heading\">Personal Data Collected Or Processed</h1>\n                        \n                        <section \n                            *ngFor=\"let category of dataCategories; let i = index\" \n                            class=\"expand-section categories\">        \n\n                            <div>\n                                <h3 [innerHTML]=\"category.DataCategory\"></h3>\n                                <mat-icon matTooltipPosition=\"right\"  [matTooltip]=\"category.DataDescription\">info</mat-icon>\n                            </div>\n\n                            <mat-checkbox [disabled]=\"isViewOnly && !personalDataCollectedCheckBoxEnabled\"\n                                *ngFor=\"let SubCategory of category.SubCategories\" \n                                [ngClass]=\"{'full-width': category.SubCategories.length === 1, 'selected-checkbox': SubCategory.IsChecked}\"\n                                color=\"primary\"\n                                [checked]=\"SubCategory.IsChecked\"\n                                (change)=\"onChangeSubCategory($event,SubCategory)\"\n                                [required]=\"'false'\">\n                                {{ SubCategory.DataSubCategory }}\n                            </mat-checkbox>\n                            \n                        </section>                            \n                    </form>\n        \n                    <div class=\"button-wrapper\">       \n                        <button mat-button class=\"back-btn\" matStepperPrevious>Back</button>\n        \n\n                        <button \n                            [disabled]=\"formPersonalDataHeld.invalid || selectedDataSubCategory.length === 0\"\n                            mat-button \n                            class=\"next-btn\" \n                            color=\"primary\" \n                            matStepperNext>\n                            Next\n                        </button>\n                    </div>             \n                </mat-step>\n\n                <mat-step [stepControl]=\"formChildrenData\">\n                    <ng-template matStepLabel>\n                        <h3>Children's Data</h3>\n                    </ng-template>\n\n                    <form [formGroup]=\"formChildrenData\">\n                        \n                        <div class=\"grouped-items\">\n                            <h3>Do you collect personal data relating to Children?<span class=\"required-field\">required</span></h3>\n            \n                            <mat-radio-group color=\"primary\" aria-label=\"Pick one\" formControlName=\"CollectChildrenData\" (change)=\"updateCollecthildrenData($event)\">\n                                <mat-radio-button value=\"Yes\">Yes</mat-radio-button>\n                                <mat-radio-button value=\"No\">No</mat-radio-button>\n                            </mat-radio-group>        \n                        </div>  \n        \n                        <mat-form-field *ngIf=\"showChildrenDataFields == true\">\n                            <mat-label>Reason / Purpose for collecting children's data<span class=\"required-field\">required</span> </mat-label>\n                        \n                            <mat-select multiple formControlName=\"PurposeForCollection\">\n                                <mat-option *ngFor=\"let child of childDataPurposes\" [value]=\"child.ChildDataID\">\n                                    {{ child.ChildDataPurpose }}\n                                </mat-option>\n                            </mat-select>  \n                        </mat-form-field>                  \n                        \n                                    \n        \n                    </form>\n\n                    <div class=\"button-wrapper\">       \n                        <button mat-button class=\"back-btn\" matStepperPrevious>Back</button>\n        \n                       \n\n                        <button \n                            [disabled]=\"formChildrenData.invalid\"\n                            mat-button \n                            class=\"next-btn\" \n                            color=\"primary\" \n                            matStepperNext>\n                            Next\n                        </button>\n                    </div>          \n\n                </mat-step>\n        \n        \n                <mat-step [stepControl]=\"formPurposeRetention\">\n                    <ng-template matStepLabel>\n                        <h3>Purpose & Retention</h3>\n\n                       \n                    </ng-template>\n        \n                    <form [formGroup]=\"formPurposeRetention\">       \n                        \n                        <h1 class=\"full-width step-header\">Description of Purpose for which data is collected or processed </h1>\n        \n                       \n                        <!-- For editing purposes only -->\n                        <mat-form-field hintLabel=\"Why do you collect personal Data?\">\n                            <mat-label>For What Purpose ?<span class=\"required-field\">required</span></mat-label>\n                            <mat-select formControlName=\"Purpose\" multiple>\n                                <mat-option *ngFor=\"let purpose of dataPurposes\" [value]=\"purpose.DataPurposeID\">\n                                    {{ purpose.DataPurpose }}\n                                </mat-option>\n                            </mat-select>  \n                            <mat-error *ngIf=\"formPurposeRetention.get('Purpose').invalid\">{{ getSelectErrorMessage() }}</mat-error>   \n                        </mat-form-field>\n\n                        <!-- For viewing purposes only -->\n                        <mat-form-field class=\"full-width\"  hintLabel=\"Why do you collect personal Data?\">\n                            <mat-label>For What Purpose ?<span class=\"required-field\">required</span></mat-label>\n                            <textarea matInput [value]=\"getSelectedPurpose()\" disabled class=\"textarea-small\"></textarea>\n                        </mat-form-field>   \n\n        \n                        <!-- For Edits -->\n                        <mat-form-field hintLabel=\"If the purpose is Collection / Processing is required by Law.\" *ngIf=\"SpecifyTheLaw\">\n                            <mat-label>Specify the Law <span class=\"required-field\">required</span></mat-label>\n                            <input matInput #SpecifyTheLawInput maxlength=\"1000\" formControlName=\"SpecifyTheLaw\">        \n                            <mat-hint align=\"end\">{{ SpecifyTheLawInput.value.length }} / 1000</mat-hint>    \n                            <mat-error *ngIf=\"formPurposeRetention.get('SpecifyTheLaw').invalid\">{{ getRequiredErrorMessage() }}</mat-error>\n                        </mat-form-field>  \n        \n                        <!-- For viewing only -->\n                        <mat-form-field class=\"full-width\" *ngIf=\"SpecifyTheLaw\" hintLabel=\"If the purpose is Collection / Processing is required by Law.\">\n                            <mat-label>Specify the Law<span class=\"required-field\">required</span></mat-label>\n                            <textarea matInput formControlName=\"SpecifyTheLaw\" disabled class=\"textarea-small\"></textarea>\n                        </mat-form-field>                             \n        \n\n                        <!-- For Edits -->\n                        <mat-form-field hintLabel=\"If the purpose is to provide services / products to Individuals.\" *ngIf=\"ServiceOrProductProvided\">\n                            <mat-label>Specify the Service / Product Provided<span class=\"required-field\">required</span></mat-label>\n                            <input matInput #ServiceOrProductProvidedInput maxlength=\"1000\" formControlName=\"ServiceOrProductProvided\">     \n                            <mat-hint align=\"end\">{{ ServiceOrProductProvidedInput.value.length }} / 1000</mat-hint>    \n                            <mat-error *ngIf=\"formPurposeRetention.get('ServiceOrProductProvided').invalid\">{{ getRequiredErrorMessage() }}</mat-error>\n                        </mat-form-field>  \n                        \n                        <!-- For viewing only -->\n                        <mat-form-field class=\"full-width\" *ngIf=\"ServiceOrProductProvided\" hintLabel=\"If the purpose is to provide services / products to Individuals.\">\n                            <mat-label>Specify the Service / Product Provided<span class=\"required-field\">required</span></mat-label>\n                            <textarea matInput formControlName=\"ServiceOrProductProvided\" disabled class=\"textarea-small\"></textarea>\n                        </mat-form-field>                              \n\n                        <!-- For Edits -->\n                        <mat-form-field hintLabel=\"If the purpose is for Compliance with a Legal Obligation.\" *ngIf=\"SpecifyLegalObligation\">\n                            <mat-label>Specify the Legal Obligation<span class=\"required-field\">required</span></mat-label>\n                            <input matInput #SpecifyLegalObligationInput maxlength=\"50\" formControlName=\"SpecifyLegalObligation\">  \n                            <mat-hint align=\"end\">{{ SpecifyLegalObligationInput.value.length }} / 50</mat-hint>    \n                            <mat-error *ngIf=\"formPurposeRetention.get('SpecifyLegalObligation').invalid\">{{ getRequiredErrorMessage() }}</mat-error>\n                        </mat-form-field>  \n\n                        <!-- For viewing only -->\n                        <mat-form-field class=\"full-width\" *ngIf=\"SpecifyLegalObligation\">\n                            <mat-label>Specify the Legal Obligation<span class=\"required-field\">required</span></mat-label>\n                            <textarea matInput formControlName=\"SpecifyLegalObligation\" disabled class=\"textarea-small\"></textarea>\n                        </mat-form-field>                              \n                        \n                        <mat-form-field hintLabel=\"Approximate number of Personal Data Records held.\">\n                            <mat-label>Total Records <span class=\"optional-field\">optional</span></mat-label>\n                            <input appCurrencyDirective matInput maxlength=\"14\" formControlName=\"TotalRecordsAtRegistration\">                            \n                            <mat-error *ngIf=\"formPurposeRetention.get('TotalRecordsAtRegistration').invalid\">{{ getPatternErrorMessage() }}</mat-error>\n                        </mat-form-field>  \n                        \n                        <mat-form-field hintLabel=\"The % annual growth of Personal Records held\">\n                            <mat-label>Percentage Annual Growth <span class=\"optional-field\">optional</span></mat-label>\n                            <input appCurrencyDirective matInput max=\"100\" maxlength=\"3\" formControlName=\"RecordPercentageGrowth\">                            \n                            <mat-error *ngIf=\"formPurposeRetention.get('RecordPercentageGrowth').invalid\">{{ getRecordPercentageGrowthErrorMessage() }}</mat-error>\n                            <mat-hint align=\"end\">Max. 100%</mat-hint>      \n                            <span matSuffix>%</span>\n                        </mat-form-field>   \n        \n                        <mat-form-field hintLabel=\"Duration for which personal data shall be kept (Years).\">\n                            <mat-label>Retention period <span class=\"required-field\">required</span></mat-label>\n                            <input appCurrencyDirective max=\"100\" matInput maxlength=\"3\" formControlName=\"RetentionPeriod\">                          \n                            <mat-error *ngIf=\"formPurposeRetention.get('RetentionPeriod').invalid\">{{ getRetentionPeriodErrorMessage() }}</mat-error>\n                            <mat-hint align=\"end\">Max. 100 years</mat-hint>      \n                            <span matSuffix>Year(s)</span>\n                        </mat-form-field>                            \n        \n                        \n        \n                    </form>\n        \n                    <div class=\"button-wrapper\">       \n                        <button mat-button class=\"back-btn\" matStepperPrevious>Back</button>\n        \n                    \n\n                        <button \n                            [disabled]=\"formPurposeRetention.invalid\"\n                            mat-button \n                            class=\"next-btn\" \n                            color=\"primary\" \n                            matStepperNext>\n                            Next\n                        </button>\n                    </div>             \n                </mat-step>\n              \n        \n                <mat-step [stepControl]=\"formThirdParties\">\n                    <ng-template matStepLabel>\n                        <h3>Disclosure & Transfer</h3>\n\n                    \n                    </ng-template>\n        \n                    <form [formGroup]=\"formThirdParties\">\n        \n                        <h1 class=\"full-width step-header\">List of persons or Bodies to whom personal data may be disclosed</h1>\n                        \n                        <div class=\"grouped-items full-width\">\n                            <h3>Do you disclose Personal Data to other Persons or Bodies ?</h3>\n            \n                            <mat-radio-group \n                                color=\"primary\" \n                                aria-label=\"Pick one\" \n                                formControlName=\"PersonalDataIsForDisclosure\">\n                                <mat-radio-button [ngClass]=\"{'selected-radio-btn': formThirdParties.get('PersonalDataIsForDisclosure').value === 'Yes' }\" value=\"Yes\">Yes</mat-radio-button>\n                                <mat-radio-button [ngClass]=\"{'selected-radio-btn': formThirdParties.get('PersonalDataIsForDisclosure').value === 'No' }\" value=\"No\">No</mat-radio-button>\n                            </mat-radio-group>        \n                        </div>    \n        \n                        <section \n                            *ngIf=\"formThirdParties.get('PersonalDataIsForDisclosure').value === 'Yes'\"\n                            class=\"expand-section reduced-properties table-wrapper fadeInUp _delay3ms\">\n                            <button *ngIf=\"!isViewOnly || (!isOfficer && _hasRequestMoreInfo && thirdPartiesEnabled)\"\n                                mat-button\n                                color=\"primary\"\n                                [disabled]=\"processing\"\n                                class=\"add-item-button\"\n                                (click)=\"onAddAThirdParty()\">\n                                <div class=\"button-label\">\n                                    <mat-icon>add</mat-icon>                            \n                                    <span>Add Person / Body</span>\n                                </div>\n                            </button>\n                            \n                            <div class=\"table-wrapper\">\n                                <table \n                                    mat-table \n                                    #thirdPartyMatSort=\"matSort\"\n                                    matSortDisableClear=\"true\"\n                                    [dataSource]=\"thirdPartyDataSource\"\n                                    matSort>\n                    \n                                    <ng-container matColumnDef=\"Count\">\n                                        <th mat-header-cell *matHeaderCellDef> # </th>\n                                        <td mat-cell *matCellDef=\"let index = index\"> {{ index + 1 }} </td>\n                                    </ng-container>\n                    \n                                    <ng-container matColumnDef=\"NameOfThirdParty\">\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Person / Body </th>\n                                        <td mat-cell *matCellDef=\"let row\">{{ row.ThirdPartyName }}</td>\n                                    </ng-container>          \n                    \n                                    <ng-container matColumnDef=\"Purpose\">\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Purpose </th>\n                                        <td mat-cell *matCellDef=\"let row\">{{ row.Purpose }}</td>\n                                    </ng-container>                                 \n                    \n                                    <!-- Actions Column -->\n                                    <ng-container matColumnDef=\"Actions\">\n                                        <th mat-header-cell *matHeaderCellDef> Actions </th>\n                                        <td mat-cell *matCellDef=\"let row; let index = index\">\n                                            <button \n                                                mat-button \n                                                class=\"action-btn\"\n                                                [disabled]=\"!_hasRequestMoreInfo || isOfficer || (_hasRequestMoreInfo && !thirdPartiesEnabled)\"\n                                                [matMenuTriggerFor]=\"menu\" \n                                                (click)=\"$event.stopPropagation()\"\n                                                matTooltip=\"See more options\">\n                                                <mat-icon>more_vert</mat-icon>\n                                            </button>\n                    \n                                            <mat-menu yPosition=\"below\" #menu=\"matMenu\" class=\"more-options-mat-menu\">\n                    \n                                                <button \n                                                    mat-menu-item \n                                                    (click)=\"$event.stopPropagation();onEditThirdParty(row)\">\n                                                    <mat-icon>edit</mat-icon>\n                                                    <span>Make Changes</span>\n                                                </button>\n                                                      \n                                                <hr />\n                    \n                                                <button \n                                                    mat-menu-item \n                                                    (click)=\"$event.stopPropagation();onRemoveThirdParty(row)\">\n                                                    <mat-icon color=\"warn\">delete</mat-icon>\n                                                    <span>Remove</span>\n                                                </button>\n                    \n                                            </mat-menu>                                                  \n                                        </td>\n                                    </ng-container>\n                    \n                                    <tr mat-header-row *matHeaderRowDef=\"thirdPartyDisplayedColumns\"></tr>\n                                    <tr mat-row *matRowDef=\"let row; columns: thirdPartyDisplayedColumns;\" class=\"mat-data-row\"></tr>\n                                </table>\n        \n                                <mat-paginator \n                                    #thirdPartyPaginator\n                                    [pageSize]=\"10\"\n                                    [pageSizeOptions]=\"[5, 10]\">\n                                </mat-paginator>                    \n                            </div>                \n                        </section>    \n                        \n                        <hr class=\"full-width\" />\n        \n                        <div class=\"grouped-items full-width\">\n                            <h3>Do you Transfer personal data outside Uganda ?</h3>\n            \n                            <mat-radio-group color=\"primary\" aria-label=\"Pick one\" formControlName=\"StoreDataOutsideCountry\">\n                                <mat-radio-button [ngClass]=\"{'selected-radio-btn': formThirdParties.get('StoreDataOutsideCountry').value === 'Yes' }\" value=\"Yes\">Yes</mat-radio-button>\n                                <mat-radio-button [ngClass]=\"{'selected-radio-btn': formThirdParties.get('StoreDataOutsideCountry').value === 'No' }\" value=\"No\">No</mat-radio-button>\n                            </mat-radio-group>        \n                        </div> \n        \n                        <section \n                            *ngIf=\"formThirdParties.get('StoreDataOutsideCountry').value === 'Yes'\"\n                            class=\"expand-section reduced-properties table-wrapper\">\n                            <button *ngIf=\"!isViewOnly || (!isOfficer && _hasRequestMoreInfo && countriesOfTransferEnabled)\"\n                                mat-button\n                                color=\"primary\"\n                                [disabled]=\"processing\"\n                                class=\"add-item-button\"\n                                (click)=\"onAddACountry()\">\n                                <div class=\"button-label\">\n                                    <mat-icon>add</mat-icon>                            \n                                    <span>Add A Country</span>\n                                </div>\n                            </button>\n                            \n                            <div class=\"table-wrapper\">\n                                <table \n                                    mat-table \n                                    #countryOfTransferMatSort=\"matSort\"\n                                    matSortDisableClear=\"true\"\n                                    [dataSource]=\"countriesDataSource\"\n                                    matSort>\n                    \n                                    <ng-container matColumnDef=\"Count\">\n                                        <th mat-header-cell *matHeaderCellDef> # </th>\n                                        <td mat-cell *matCellDef=\"let index = index\"> {{ index + 1 }} </td>\n                                    </ng-container>\n                    \n                                    <ng-container matColumnDef=\"Country\">\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Country </th>\n                                        <td mat-cell *matCellDef=\"let row\">{{ row.Country }}</td>\n                                    </ng-container>          \n                    \n                                    <ng-container matColumnDef=\"Purpose\">\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Purpose </th>\n                                        <td mat-cell *matCellDef=\"let row\">{{ row.Purpose }}</td>\n                                    </ng-container>                                 \n                    \n                                    <ng-container matColumnDef=\"Description\">\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Description </th>\n                                        <td mat-cell *matCellDef=\"let row\">{{ row.Description }}</td>\n                                    </ng-container>                                 \n                    \n                                    <!-- Actions Column -->\n                                    <ng-container matColumnDef=\"Actions\">\n                                        <th mat-header-cell *matHeaderCellDef> Actions </th>\n                                        <td mat-cell *matCellDef=\"let row; let index = index\">\n                                            <button \n                                                mat-button \n                                                class=\"action-btn\"\n                                                [disabled]=\"!_hasRequestMoreInfo || isOfficer || (_hasRequestMoreInfo && !countriesOfTransferEnabled)\"\n                                                [matMenuTriggerFor]=\"menu\" \n                                                (click)=\"$event.stopPropagation()\"\n                                                matTooltip=\"See more options\">\n                                                <mat-icon>more_vert</mat-icon>\n                                            </button>\n                    \n                                            <mat-menu yPosition=\"below\" #menu=\"matMenu\" class=\"more-options-mat-menu\">\n                    \n                                                <button \n                                                    mat-menu-item \n                                                    (click)=\"$event.stopPropagation();onEditCountry(row)\">\n                                                    <mat-icon>edit</mat-icon>\n                                                    <span>Make Changes</span>\n                                                </button>\n                                                      \n                                                <hr />\n                    \n                                                <button \n                                                    mat-menu-item \n                                                    (click)=\"$event.stopPropagation();onRemoveCountry(row)\">\n                                                    <mat-icon color=\"warn\">delete</mat-icon>\n                                                    <span>Remove</span>\n                                                </button>\n                    \n                                            </mat-menu>                                                  \n                                        </td>\n                                    </ng-container>\n                    \n                                    <tr mat-header-row *matHeaderRowDef=\"countryDisplayedColumns\"></tr>\n                                    <tr mat-row *matRowDef=\"let row; columns: countryDisplayedColumns;\" class=\"mat-data-row\"></tr>\n                                </table>\n        \n                                <mat-paginator \n                                    #countryOfTransferPaginator\n                                    [pageSize]=\"10\"\n                                    [pageSizeOptions]=\"[5, 10]\">\n                                </mat-paginator>                    \n                            </div>                \n                        </section>                   \n        \n                    </form>\n        \n                    <div class=\"button-wrapper\">\n                        <button mat-button class=\"back-btn\" matStepperPrevious>Back</button>\n                       \n                        <button \n                            mat-button \n                            [disabled]=\"formThirdParties.invalid \n                            || processing \n                            || ((formThirdParties.get('PersonalDataIsForDisclosure').value === 'Yes') && (thirdParties.length === 0)) \n                            || ((formThirdParties.get('StoreDataOutsideCountry').value === 'Yes') && (countries.length === 0))\" \n                            class=\"next-btn\" \n                            color=\"primary\" \n                            matStepperNext>\n                            Next\n                        </button>\n                    </div>\n                </mat-step>\n        \n                <mat-step [stepControl]=\"formSecurityMeasures\">\n                    <ng-template matStepLabel>\n                        <h3>Security Information</h3>\n\n                    </ng-template>\n        \n                    <form [formGroup]=\"formSecurityMeasures\">\n        \n                        <h1 class=\"full-width step-header\">State security measures in place to safeguard personal data collected or processed.</h1>\n        \n                        <section class=\"expand-section reduced-properties table-wrapper no-padding\">\n                            <button *ngIf=\"!isViewOnly || securityMeasuresEnabled\"\n                                mat-button\n                                color=\"primary\"\n                                [disabled]=\"processing\"\n                                class=\"add-item-button\"\n                                (click)=\"onAddSecurityMeasure()\">\n                                <div class=\"button-label\">\n                                    <mat-icon>add</mat-icon>                            \n                                    <span>Add A Security Measure</span>\n                                </div>\n                            </button>\n                            \n                            <div class=\"table-wrapper\">\n                                <table \n                                    mat-table \n                                    #securityMeasureMatSort=\"matSort\"\n                                    matSortDisableClear=\"true\"\n                                    [dataSource]=\"securityMeasureDataSource\"\n                                    matSort>\n                    \n                                    <ng-container matColumnDef=\"Count\">\n                                        <th mat-header-cell *matHeaderCellDef> # </th>\n                                        <td mat-cell *matCellDef=\"let index = index\"> {{ index + 1 }} </td>\n                                    </ng-container>\n                    \n                                    <ng-container matColumnDef=\"SecurityMeasure\">\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Security Measure </th>\n                                        <td mat-cell *matCellDef=\"let row\">{{ row.SecurityMeasure }}</td>\n                                    </ng-container>                                  \n                    \n                                    <!-- Actions Column -->\n                                    <ng-container matColumnDef=\"Actions\">\n                                        <th mat-header-cell *matHeaderCellDef> Actions </th>\n                                        <td mat-cell *matCellDef=\"let row; let index = index\">\n                                            <button \n                                                mat-button \n                                                class=\"action-btn\"\n                                                [disabled]=\"!_hasRequestMoreInfo || isOfficer || (_hasRequestMoreInfo && !securityMeasuresEnabled)\"\n                                                [matMenuTriggerFor]=\"menu\" \n                                                (click)=\"$event.stopPropagation()\"\n                                                matTooltip=\"See more options\">\n                                                <mat-icon>more_vert</mat-icon>\n                                            </button>\n                    \n                                            <mat-menu yPosition=\"below\" #menu=\"matMenu\" class=\"more-options-mat-menu\">\n                \n                                                <button \n                                                    mat-menu-item \n                                                    (click)=\"$event.stopPropagation();onEditSecurityMeasure(row)\">\n                                                    <mat-icon>edit</mat-icon>\n                                                    <span>Make Changes</span>\n                                                </button>\n                                                      \n                                                <hr />\n                    \n                                                <button \n                                                    mat-menu-item \n                                                    (click)=\"$event.stopPropagation();onRemoveSecurityMeasure(row)\">\n                                                    <mat-icon color=\"warn\">delete</mat-icon>\n                                                    <span>Remove</span>\n                                                </button>                                        \n                    \n                                            </mat-menu>                                                  \n                                        </td>\n                                    </ng-container>\n                    \n                                    <tr mat-header-row *matHeaderRowDef=\"securityMeasuresDisplayedColumns\"></tr>\n                                    <tr mat-row *matRowDef=\"let row; columns: securityMeasuresDisplayedColumns;\" [ngClass]=\"{'selected-mat-data-row': selectedSpouse === row}\" class=\"mat-data-row\"></tr>\n                                </table>\n        \n                                <mat-paginator \n                                    #securityMeasurePaginator\n                                    [pageSize]=\"10\"\n                                    [pageSizeOptions]=\"[5, 10]\">\n                                </mat-paginator>                    \n                            </div>                \n                        </section>    \n                        \n                        <section class=\"expand-section reduced-properties table-wrapper margin documents\">\n                            <h1 class=\"full-width step-header\">Attach supporting documentation eg approved information security policy.</h1>\n        \n                            <div class=\"buttons\" *ngIf=\"!isViewOnly || (_hasRequestMoreInfo && _updateAttachment)\">\n                                <button *ngIf=\"!isViewOnly || (_hasRequestMoreInfo && _updateAttachment)\"\n                                    mat-button\n                                    color=\"primary\"\n                                    [disabled]=\"processing\"\n                                    class=\"add-item-button\"\n                                    (click)=\"onUploadAttachments()\">\n                                    <div class=\"button-label\">\n                                        <mat-icon>add</mat-icon>                            \n                                        <span> {{ document ? 'Replace Document' : 'Upload Attachment' }} </span>\n                                    </div>\n                                </button>\n            \n                                <button \n                                    mat-button\n                                    *ngIf=\"document && (!isViewOnly || (_hasRequestMoreInfo && _updateAttachment))\"\n                                    color=\"primary\"\n                                    [disabled]=\"processing\"\n                                    class=\"remove-button\"\n                                    (click)=\"onRemoveDocument()\">\n                                    <div class=\"button-label\">\n                                        <mat-icon>clear</mat-icon>\n                                        <span> Remove Document </span>\n                                    </div>\n                                </button>\n                            </div>\n        \n                            <div *ngIf=\"document && document.Base64\" class=\"uploaded-document\" matTooltip=\"Open Document\" (click)=\"onReadDocument(document)\">\n                                <img src=\"./assets/img/pdf.png\" alt=\"\">\n        \n                                <span>Document: {{ document.Name }} <span *ngIf=\"document.Size\">  -  {{ document.Size }} Mbs</span></span>\n                            </div>\n\n                            <p class=\"no-document-found\" *ngIf=\"document && !document.Base64\">No document found. Please attach</p>\n        \n                        </section>\n        \n                        <hr class=\"full-width\" />\n        \n                        <section class=\"expand-section reduced-properties table-wrapper margin documents\">\n                            <h1 class=\"full-width step-header\">Attach Form 3</h1>\n        \n                            <div class=\"buttons\" *ngIf=\"!isViewOnly || (_hasRequestMoreInfo && _updateForm3Attachment)\">\n                                <!-- <a \n                                    mat-button\n                                    color=\"accent\"\n                                    [disabled]=\"processing\"\n                                    target=\"_blank\"\n                                    download=\"Form 3 -  Undertaking Not to Process or Store Personal Data\"\n                                    class=\"add-item-button\"\n                                    href=\"./assets/docs/Form 3 -  Undertaking Not to Process or Store Personal Data.pdf\">\n                                    <div class=\"button-label\">\n                                        <mat-icon>sim_card_download</mat-icon>                            \n                                        <span>Download Form 3</span>\n                                    </div>\n                                </a> -->\n        \n                                <button\n                                    mat-button\n                                    *ngIf=\"!isViewOnly || (_hasRequestMoreInfo && _updateForm3Attachment)\"\n                                    color=\"accent\"\n                                    class=\"download-form\"                           \n                                    (click)=\"onDownloadForm3()\">\n                                    <div class=\"button-label\">\n                                        <mat-icon>sim_card_download</mat-icon>                            \n                                        <span>Download Form 3</span>\n                                    </div>                        \n                                </button>\n        \n                                <button *ngIf=\"!isViewOnly || (_hasRequestMoreInfo && _updateForm3Attachment)\"\n                                    mat-button\n                                    color=\"primary\"\n                                    [disabled]=\"processing\"\n                                    class=\"add-item-button\"\n                                    (click)=\"onUploadForm3Attachments()\">\n                                    <div class=\"button-label\">\n                                        <mat-icon>add</mat-icon>                            \n                                        <span> {{ documentForm3 ? 'Replace Form 3' : 'Upload Form 3' }} </span>\n                                    </div>\n                                </button>\n            \n                                <button *ngIf=\"documentForm3 && (!isViewOnly || (_hasRequestMoreInfo && _updateForm3Attachment))\"\n                                    mat-button\n                                    color=\"primary\"\n                                    [disabled]=\"processing\"\n                                    class=\"remove-button\"\n                                    (click)=\"onRemoveForm3Document()\">\n                                    <div class=\"button-label\">\n                                        <mat-icon>clear</mat-icon>\n                                        <span> Remove Document </span>\n                                    </div>\n                                </button>\n                            </div>\n        \n                            <div  *ngIf=\"documentForm3 && documentForm3.Base64\" class=\"uploaded-document\" matTooltip=\"Open Document\" (click)=\"onReadDocument(documentForm3)\">\n                                <img src=\"./assets/img/pdf.png\" alt=\"\">\n        \n                                <span>Document: {{ documentForm3.Name }} <span *ngIf=\"documentForm3.Size\">  -  {{ documentForm3.Size }} Mbs</span> </span>\n                            </div>\n\n                            <p class=\"no-document-found\" *ngIf=\"documentForm3 && !documentForm3.Base64\">No document found. Please attach</p>\n        \n                        </section>\n        \n                        <hr class=\"full-width\" />\n        \n                        <section class=\"expand-section reduced-properties table-wrapper margin documents\">\n                            <h1 class=\"full-width step-header\">Attach Proof of Payment</h1>\n        \n                            <div class=\"buttons\" *ngIf=\"!isViewOnly || (_hasRequestMoreInfo && _updateProofOfPayment)\">\n                                <button *ngIf=\"!isViewOnly || (_hasRequestMoreInfo && _updateProofOfPayment)\"\n                                    mat-button\n                                    color=\"primary\"\n                                    [disabled]=\"processing\"\n                                    class=\"add-item-button\"\n                                    (click)=\"onUploadProofOfPayment()\">\n                                    <div class=\"button-label\">\n                                        <mat-icon>add</mat-icon>                            \n                                        <span> {{ proofOfPayment ? 'Replace Document' : 'Upload Proof of Payment' }} </span>\n                                    </div>\n                                </button>\n            \n                                <button \n                                    mat-button\n                                    *ngIf=\"proofOfPayment && (!isViewOnly || (_hasRequestMoreInfo && _updateProofOfPayment))\"\n                                    color=\"primary\"\n                                    [disabled]=\"processing\"\n                                    class=\"remove-button\"\n                                    (click)=\"onRemoveProofOfPaymen()\">\n                                    <div class=\"button-label\">\n                                        <mat-icon>clear</mat-icon>\n                                        <span> Remove Document </span>\n                                    </div>\n                                </button>\n                            </div>\n        \n                            <div *ngIf=\"proofOfPayment && proofOfPayment.Base64\" class=\"uploaded-document\" matTooltip=\"Open Document\" (click)=\"onReadDocument(proofOfPayment)\">\n                                <img src=\"./assets/img/pdf.png\" alt=\"\">\n        \n                                <span>Document: {{ proofOfPayment.Name }} <span *ngIf=\"proofOfPayment.Size\">  -  {{ proofOfPayment.Size }} Mbs</span> </span>\n                            </div>\n\n                            <p class=\"no-document-found\" *ngIf=\"proofOfPayment && !proofOfPayment.Base64\">No document found. Please attach</p>\n        \n                        </section>\n        \n                        <hr class=\"full-width\" />\n                        \n                        \n                        \n                        <mat-form-field class=\"full-width\" hintLabel=\"The person authorized to complete and submit this application on the behalf of the applicant organization\">\n                            <mat-label>Name and title of person submitting the application<span class=\"required-field\">required</span></mat-label>\n                            <input appUppercase #RegistrationDoneByInput matInput maxlength=\"50\" formControlName=\"RegistrationDoneBy\">  \n                            <mat-error *ngIf=\"formSecurityMeasures.get('RegistrationDoneBy').invalid\">{{ getRegistrationDoneByErrorMessage() }}</mat-error>                             \n                            <mat-hint align=\"end\">{{ RegistrationDoneByInput.value.length }} / 50</mat-hint>    \n                        </mat-form-field>      \n                        \n        \n                    </form>\n        \n                    <div class=\"button-wrapper\">\n                        <button mat-button class=\"back-btn\" matStepperPrevious>Back</button>\n\n                      \n\n                        <div class=\"buttons\">\n                            \n                            <button *ngIf=\"isOfficer\"\n                                mat-button \n                                class=\"next-btn submit-btn\" \n                                color=\"primary\" \n                                (click)=\"onSubmitChanges()\">\n                                <span>Submit Changes Application</span>                    \n                            </button>                \n                        </div>\n                    </div>\n                </mat-step>\n        \n            \n            </mat-horizontal-stepper>   \n        </main>\n    </fury-page-layout-content>\n</fury-page-layout>\n\n\n","function hex2rgba (hex) {\n  if (typeof hex === 'number') {\n    hex = hex.toString()\n  }\n\n  if (typeof hex !== 'string') {\n    throw new Error('Color should be defined as hex string')\n  }\n\n  var hexCode = hex.slice().replace('#', '').split('')\n  if (hexCode.length < 3 || hexCode.length === 5 || hexCode.length > 8) {\n    throw new Error('Invalid hex color: ' + hex)\n  }\n\n  // Convert from short to long form (fff -> ffffff)\n  if (hexCode.length === 3 || hexCode.length === 4) {\n    hexCode = Array.prototype.concat.apply([], hexCode.map(function (c) {\n      return [c, c]\n    }))\n  }\n\n  // Add default alpha value\n  if (hexCode.length === 6) hexCode.push('F', 'F')\n\n  var hexValue = parseInt(hexCode.join(''), 16)\n\n  return {\n    r: (hexValue >> 24) & 255,\n    g: (hexValue >> 16) & 255,\n    b: (hexValue >> 8) & 255,\n    a: hexValue & 255,\n    hex: '#' + hexCode.slice(0, 6).join('')\n  }\n}\n\nexports.getOptions = function getOptions (options) {\n  if (!options) options = {}\n  if (!options.color) options.color = {}\n\n  var margin = typeof options.margin === 'undefined' ||\n    options.margin === null ||\n    options.margin < 0 ? 4 : options.margin\n\n  var width = options.width && options.width >= 21 ? options.width : undefined\n  var scale = options.scale || 4\n\n  return {\n    width: width,\n    scale: width ? 4 : scale,\n    margin: margin,\n    color: {\n      dark: hex2rgba(options.color.dark || '#000000ff'),\n      light: hex2rgba(options.color.light || '#ffffffff')\n    },\n    type: options.type,\n    rendererOpts: options.rendererOpts || {}\n  }\n}\n\nexports.getScale = function getScale (qrSize, opts) {\n  return opts.width && opts.width >= qrSize + opts.margin * 2\n    ? opts.width / (qrSize + opts.margin * 2)\n    : opts.scale\n}\n\nexports.getImageWidth = function getImageWidth (qrSize, opts) {\n  var scale = exports.getScale(qrSize, opts)\n  return Math.floor((qrSize + opts.margin * 2) * scale)\n}\n\nexports.qrToImageData = function qrToImageData (imgData, qr, opts) {\n  var size = qr.modules.size\n  var data = qr.modules.data\n  var scale = exports.getScale(size, opts)\n  var symbolSize = Math.floor((size + opts.margin * 2) * scale)\n  var scaledMargin = opts.margin * scale\n  var palette = [opts.color.light, opts.color.dark]\n\n  for (var i = 0; i < symbolSize; i++) {\n    for (var j = 0; j < symbolSize; j++) {\n      var posDst = (i * symbolSize + j) * 4\n      var pxColor = opts.color.light\n\n      if (i >= scaledMargin && j >= scaledMargin &&\n        i < symbolSize - scaledMargin && j < symbolSize - scaledMargin) {\n        var iSrc = Math.floor((i - scaledMargin) / scale)\n        var jSrc = Math.floor((j - scaledMargin) / scale)\n        pxColor = palette[data[iSrc * size + jSrc] ? 1 : 0]\n      }\n\n      imgData[posDst++] = pxColor.r\n      imgData[posDst++] = pxColor.g\n      imgData[posDst++] = pxColor.b\n      imgData[posDst] = pxColor.a\n    }\n  }\n}\n","import {Component, ElementRef, EventEmitter, Input, Output, OnInit, ViewChild, Inject, OnChanges} from '@angular/core';\nimport * as html2pdf from 'html2pdf.js';\nimport {CertificateDetails} from '../company-registration.model';\nimport {SnackBarService} from '../../../../pages/services/snack-bar.service';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {Data} from '@angular/router';\nimport {ApiService} from '../../../../services/api.service';\nimport {DatePipe} from '@angular/common';\nimport {BaseFuryForm} from '../../../../../@fury/shared/base-fury-form';\nimport {KeycloakService} from 'keycloak-angular';\nimport {WorkflowServiceService} from '../../../../services/workflow-service.service';\nimport {CompanyRegistrationService} from '../../company-registration.service';\nimport { ComplaintService } from '../../../complaints/complaints.service';\nimport {ApiEndpointsService} from '../../../../services/api-endpoints.service';\nimport { environment } from '../../../../../environments/environment';\n\n\n@Component({\n    selector: 'fury-company-cert',\n    templateUrl: './company-cert.component.html',\n    styleUrls: ['./company-cert.component.scss']\n})\nexport class CompanyCertComponent extends BaseFuryForm implements OnInit, OnChanges {\n\n    @Input() certificateData: CertificateDetails;\n    @Output() closeWindow = new EventEmitter();\n    downloading = false;\n    QRCode;\n    @ViewChild('pdfContainer') pdfContainer: ElementRef;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) public data: Data,\n        private service: ApiService,\n        private datePipe: DatePipe,\n        public authService: KeycloakService,\n        public _workerService: WorkflowServiceService,\n        public registrationService: CompanyRegistrationService,\n        public complaintService: ComplaintService,\n        private endpoints: ApiEndpointsService,\n    ) {\n       super(\n           authService,\n           _workerService,\n           registrationService,\n           complaintService,\n       );\n    }\n\n    isApplicant: boolean;\n\n    ngOnInit(): void {\n        this.isApplicant = this.authService.getKeycloakInstance().hasRealmRole('organisation');\n        this.QRCode = environment.baseClientURL+'verify-certificate/'+this.certificateData.OrgRegNumber;\n    }\n\n    ngOnChanges(): void {\n\n    }\n\n//     getDateSuperscript(): string {        \n\n//        return this.service.getDateSuperscript(parseInt(this.datePipe.transform(this.certificateData.IssueDate, 'd')));\n          \n//    }\n\n\n    getDateSuperscript(): string {\n         this.data = {\n            IssueDate: null // Assuming initial IssueDate is null\n        };\n\n             \n       \n        const issueDate = new Date(this.data.IssueDate);\n            const currentDate = new Date(); // Assuming approval date is current date\n\n            // Check if it's the first registration (issue date is null or undefined)\n            if (!issueDate || isNaN(issueDate.getTime())) {\n                // Set issue date to current date for first registration\n                this.data.IssueDate = currentDate;\n                return this.service.getDateSuperscript(parseInt(this.datePipe.transform(currentDate, 'd')));\n            } else {\n                // Renewal: Change the year while keeping the date constant\n                const newDate = new Date(issueDate);\n                newDate.setFullYear(currentDate.getFullYear());\n                return this.service.getDateSuperscript(parseInt(this.datePipe.transform(newDate, 'd')));\n            }\n        \n    }\n        \n\n   \n\n    openPdf(): void {\n        this.downloading = true;\n\n        if (this.isApplicant) {\n            this.updateCertificateDownloadCount(this.certificateData.OrgRegNumber);\n        }\n\n        setTimeout(() => {\n            const element = document.getElementById('letterBodyContainer');\n\n            const opt = {\n                margin: 0,\n                filename: this.certificateData.OrgRegNumber + ' Certificate.pdf',\n                image: {\n                    type: 'jpeg',\n                    quality: 0.98\n                },\n                html2canvas: {\n                    scale: 2,\n                },\n                jsPDF: {\n                    unit: 'in',\n                    format: 'letter',\n                    orientation: 'landscape'\n                }\n            };\n\n            // New Promise-based usage:\n            html2pdf()\n            .from(element)\n            .set(opt)\n            .save()\n            .then((onFulfilled) => {\n\n                setTimeout(() => {\n                    this.downloading = false;\n\n                    this.service.openSnackBar('Downloaded. Please check in your downloads.', 'success');\n                }, 1000);\n\n            });\n\n        }, 1000);\n\n    }\n\n\n}\n","<main>\n        <div class=\"mat-progress-bar-container\">\n                <mat-progress-bar *ngIf=\"downloading\" mode=\"indeterminate\"></mat-progress-bar>\n        </div>\n\n        <button [disabled]=\"downloading\" mat-raised-button class=\"download-button\" (click)=\"openPdf()\" color=\"primary\">Generate Certificate</button>\n\n        <article #pdfContainer id=\"letterBodyContainer\"\n                style=\"overflow-y: auto; width: 100%; margin: 0px 0px 0px; position: relative; padding: 0px;  background-image: url('/assets/img/background2.fw.png'); background-size: 1122px; background-repeat: no-repeat; background-position: -7px 20px;height: fit-content;\">\n\n                <section style=\"float: right; margin-top: 50px;\">\n                        <qrcode [qrdata]=\"QRCode\" [width]=\"256\" [errorCorrectionLevel]=\"'M'\"></qrcode>\n                </section>\n\n                <section style=\" margin: 320px 0px 0px 0px;\">\n\n                        <section>\n\n                                <h1 style=\"text-align: center; font-size: 22px; text-transform: uppercase; font-weight: 500; color: #000; width: 100%;font-family: serif; letter-spacing: 1px;\">\n                                        Certificate of Registration\n                                </h1>\n\n                                <h2 style=\"font-size: 19px; text-transform: uppercase; font-weight: 300; color: #474747;text-align: center;width: 100%\">\n                                        I certify that\n                                </h2>\n\n                                <div\n                                        style=\"border-bottom: 2px dotted; font-size: 15px; text-align: center; width: calc(100% - 35%); margin: 20px auto 0px; font-weight: 700; font-style: italic;padding-bottom: 4px;color: #000;\"\n                                        [innerHTML]=\"certificateData.OrganizationID\">\n                                </div>\n\n                                <p style=\"color: #000; width: 100%; text-align: center; font-size: 17px; line-height: 22px; margin: 28px 0px 25px; font-weight: 300;\">\n                                        has this day been registered as <br />\n\n                                        <b style=\"font-weight: 700;\">a data collector/data processor/data controller</b> under <br />\n\n                                        the Data Protection and Privacy Act, 2019 under the following\n                                </p>\n\n                                <div style=\"color: #000; width: 100%; font-size: 16px; line-height: 22px; margin: 30px 0px 25px; display: flex; flex-direction: row; align-content: center; justify-content: center; align-items: flex-start;\">\n                                        registration number\n                                        <div\n                                                style=\"text-align: center; font-size: 16px;  border-bottom: 2px dotted; padding: 0px 8px 0px; color: #000; margin: -8px 7px 0px; height: 25px; font-style: italic; font-weight: 700; min-width: 243px;\"\n                                                [innerHTML]=\"certificateData.OrgRegNumber\">\n                                        </div>\n                                </div>\n\n                                <p style=\"color: #000; width: 100%;text-align: center;font-size: 17px;line-height: 25px;margin: -25px 0px 25px;font-weight: 300;\">\n                                        This certificate is valid for twelve months from the date of issue.\n                                </p>\n\n                                <!-- <div style=\"color: #000; width: 100%; font-size: 16px; line-height: 27px; margin: 33px 0px 25px; display: flex; flex-direction: row; align-content: center; justify-content: center; align-items: flex-start;\">\n                                        Dated this <div style=\"font-size: 16px; border-bottom: 2px dotted; padding: 0px 20px 0px; color: #000;   font-style: italic; font-weight: bold;margin: -11px 7px 0px;height: 28px;\">{{ certificateData.IssueDate | date : 'dd' }} <sup style=\"font-size: 16px;font-family: none;\">{{ getDateSuperscript() }}</sup></div>\n                                        day of <i style=\"font-size: 16px; border-bottom: 2px dotted; padding: 0px 20px 0px; color: #000; font-style: italic; font-weight: bold; margin: -8px 7px 0px;height: 25px;\">{{ certificateData.IssueDate | date : 'MMMM' }} </i>\n                                        the year <i style=\"font-size: 16px; border-bottom: 2px dotted; padding: 0px 20px 0px; color: #000;   font-style: italic; font-weight: bold;margin: -8px 7px 0px;height: 25px;\">{{ certificateData.IssueDate | date : 'YYYY' }} </i>\n                                </div> -->\n                                <div style=\"color: #000; width: 100%; font-size: 16px; line-height: 27px; margin: 33px 0px 25px; display: flex; flex-direction: row; align-content: center; justify-content: center; align-items: flex-start;\">\n                                        Dated this <div style=\"font-size: 16px; border-bottom: 2px dotted; padding: 0px 20px 0px; color: #000;   font-style: italic; font-weight: bold;margin: -11px 7px 0px;height: 28px;\">{{ certificateData.IssueDate | date : 'dd' }} <sup style=\"font-size: 16px;font-family: none;\">Superscript Date: {{ getDateSuperscript() }}</sup></div>\n                                        day of <i style=\"font-size: 16px; border-bottom: 2px dotted; padding: 0px 20px 0px; color: #000; font-style: italic; font-weight: bold; margin: -8px 7px 0px;height: 25px;\">{{ certificateData.IssueDate | date : 'MMMM' }} <sup style=\"font-size: 16px;font-family: none;\">Superscript Date: {{ getDateSuperscript() }}</sup></i>\n                                        the year <i style=\"font-size: 16px; border-bottom: 2px dotted; padding: 0px 20px 0px; color: #000;   font-style: italic; font-weight: bold;margin: -8px 7px 0px;height: 25px;\">{{ certificateData.IssueDate | date : 'YYYY' }} <sup style=\"font-size: 16px;font-family: none;\">Superscript Date: {{ getDateSuperscript() }}</sup></i>\n                                </div>\n\n\n                                <div style=\"color: #000; width: 100%; font-size: 16px; display: flex; flex-direction: column; align-items: center; margin: 40px 0px 0px; text-align: center;\">\n                                        <div style=\"min-width: 240px; text-align: center;border-bottom: 2px dotted;margin: 0px auto 0px;font-weight: 700;font-style: italic;padding-bottom: 4px;color: #000;\">\n                                                <img src=\"/assets/img/Stella Alibateese.png\" style=\"height: 30px;\" alt=\"\">\n                                        </div>\n                                        <p style=\"font-size: 16px;  color: #000; margin: 8px 0px 1px 0px;font-weight: 600;\">National Personal Data Protection Director</p>\n                                </div>\n\n                                <p style=\"font-size: 14px; width: calc(100% - 68px); text-align: center; color: #000; font-weight: 400; margin: 40px 0px 25px;\">\n                                        This certificate shall remain in force unless revoked by the Personal Data Protection Office\n\n                                </p>\n\n                        </section>\n\n                </section>\n\n        </article>\n</main>\n\n\n","import {HttpClient} from '@angular/common/http';\nimport {AfterContentInit, ChangeDetectorRef, Component, OnDestroy, OnInit, ViewChild} from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {MatDialog} from '@angular/material/dialog';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {forkJoin, Observable, Subscription} from 'rxjs';\n// tslint:disable-next-line:max-line-length\nimport {\n  ApiPayload,\n  Country,\n  CountryOfTransfer,\n  DataCategory,\n  DataProtectionOfficer,\n  DataPurposes,\n  DataSource,\n  DataSubCategory,\n  FileUpload,\n  MainActivity,\n  NatureOfBusinessCat,\n  NatureOfBusinessSubCat,\n  OrganisationCategory,\n  OrganisationType,\n  Sector,\n  SecurityMeasure,\n  ThirdParty,\n  ChildrenDataPurpose\n} from '../../../../services/api.model';\nimport {catchError} from 'rxjs/operators';\nimport {MatCheckboxChange} from '@angular/material/checkbox';\nimport {ApiEndpointsService} from '../../../../services/api-endpoints.service';\nimport {ApiService} from '../../../../services/api.service';\nimport {OrgNoticeComponent} from '../../../../layout/dialogs/org-registration/org-notice/org-notice.component';\nimport {OrgMainActivityComponent} from '../../../../layout/dialogs/org-registration/org-main-activity/org-main-activity.component';\nimport {\n  OrgDataProtectionOfficerComponent\n} from '../../../../layout/dialogs/org-registration/org-data-protection-officer/org-data-protection-officer.component';\nimport {\n  OrgSecurityMeasuresComponent\n} from '../../../../layout/dialogs/org-registration/org-security-measures/org-security-measures.component';\nimport {OrgThirdPartyComponent} from '../../../../layout/dialogs/org-registration/org-third-party/org-third-party.component';\nimport {OrgCountryComponent} from '../../../../layout/dialogs/org-registration/org-country/org-country.component';\nimport {OrgUploadComponent} from '../../../../layout/dialogs/org-upload/org-upload.component';\nimport {OrgForm3DialogComponent} from '../../../../layout/dialogs/org-registration/org-form3-dialog/org-form3-dialog.component';\nimport {\n  OrgRegistrationPreviewDialogComponent\n} from '../../../../layout/dialogs/org-registration/org-registration-preview-dialog/org-registration-preview-dialog.component';\nimport {SuccessfulMessageDialogComponent} from '../../../../layout/dialogs/successful-message-dialog/successful-message-dialog.component';\nimport {BaseFuryForm} from '../../../../../@fury/shared/base-fury-form';\nimport {KeycloakService} from 'keycloak-angular';\nimport {WorkflowServiceService} from '../../../../services/workflow-service.service';\nimport {CompanyRegistrationService} from '../../company-registration.service';\nimport {AuthenticationService} from '../../../../authentication/authentication.service';\nimport {fadeInRightAnimation} from '../../../../../@fury/animations/fade-in-right.animation';\nimport {fadeInUpAnimation} from '../../../../../@fury/animations/fade-in-up.animation';\nimport { ViewPdfDocumentBottomsheetComponent } from '../../../../layout/bottomsheets/view-pdf-document-bottomsheet/view-pdf-document-bottomsheet.component';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { NatureOfBusiness, NewCompanyRegistrationModel } from '../company-registration.model';\nimport { Router } from '@angular/router';\nimport { KeycloakProfile } from 'keycloak-js';\nimport { environment } from '../../../../../environments/environment';\nimport { ComplaintService } from '../../../complaints/complaints.service';\nimport { DownloadPRNReceiptComponent } from '../../../../layout/dialogs/download-prnreceipt/download-prnreceipt.component';\n\n@Component({\n  selector: 'fury-app-register-organisation',\n  templateUrl: './register-organisation.component.html',\n  styleUrls: ['./register-organisation.component.scss'],\n  animations: [fadeInRightAnimation, fadeInUpAnimation]\n})\nexport class RegisterOrganisationComponent extends BaseFuryForm implements  OnInit, OnDestroy, AfterContentInit {\n\n  dialogRef;\n  bottomsheetRef;\n  processing = false;\n  formGeneralInformation: FormGroup;\n  formOrganisationDetails: FormGroup;\n  formPersonalDataHeld: FormGroup;\n  formPurposeRetention: FormGroup;\n  formSecurityMeasures: FormGroup;\n  formThirdParties: FormGroup;\n  formChildrenData: FormGroup;\n  // selectedIndex = 5;\n  showChildrenDataFields = false;\n  selectedIndex = 0;\n  isLinear = true;\n  // isLinear = false;\n  today = new Date();\n  sectors: Sector[];\n  countries: Country[];\n  selected = false;\n  DPOSelected = false;\n  organisationCategories: OrganisationCategory[] = [];\n  selectedOrganisationCategories: OrganisationCategory[] = [];\n  organisationTypes: OrganisationType[];\n  dataSources: DataSource[];\n  selectedDataSources: DataSource[] = [];\n  httpSub: Subscription;\n  MainActivitiesDisplayedColumns: string[] = ['Count', 'MainActivity', 'Actions'];\n  dpoDisplayedColumns: string[] = ['Count', 'Name', 'Telephone', 'Email', 'PhysicalAddress', 'Actions'];\n  securityMeasuresDisplayedColumns: string[] = ['Count', 'SecurityMeasure', 'Actions'];\n  thirdPartyDisplayedColumns: string[] = ['Count', 'NameOfThirdParty', 'Purpose', 'Actions'];\n  countryDisplayedColumns: string[] = ['Count', 'Country', 'Purpose', 'Description', 'Actions'];\n  mainActivities: MainActivity[] = [];\n  mainActivitiesDataSource: MatTableDataSource<MainActivity>;\n  dataProtectionOfficers: DataProtectionOfficer[] = [];\n  dpoDataSource: MatTableDataSource<DataProtectionOfficer>;\n  securityMeasures: SecurityMeasure[] = [];\n  securityMeasureDataSource: MatTableDataSource<SecurityMeasure>;\n  thirdParties: ThirdParty[] = [];\n  childDataPurposes: ChildrenDataPurpose[] = [];\n  selectedChildDataPurposes: ChildrenDataPurpose[] = [];\n  thirdPartyDataSource: MatTableDataSource<ThirdParty>;\n  countriesOfTransfer: CountryOfTransfer[] = [];\n  countriesDataSource: MatTableDataSource<CountryOfTransfer>;\n  selectedDataCategory: DataCategory[] = [];\n  selectedDataSubCategory: DataSubCategory[] = [];\n  dataCategories: DataCategory[];\n  dataPurposes: DataPurposes[];\n  selectedDataPurposes: DataPurposes[] = [];\n  natureOfBusinessCat: NatureOfBusinessCat[] = [];\n  natureOfBusinessSubCat: NatureOfBusinessSubCat[] = [];\n  selectedNatureOfBusinessSubCat: NatureOfBusinessSubCat[] = [];\n  SpecifyTheLaw = false;\n  ServiceOrProductProvided = false;\n  SpecifyLegalObligation = false;\n  document: FileUpload | null;\n  documentForm3: FileUpload | null;\n  proofOfPayment: FileUpload | null;\n  OrganizationType = null;\n  SectorName = null;\n  NatureOfBusinessCat = null;\n  CountryOfIncorporation = null;\n  application: NewCompanyRegistrationModel = new NewCompanyRegistrationModel();\n  public userProfile: KeycloakProfile | null = null;\n  regTrackingNo: any;\n  Organisation_User_ID\n  showPRNDownload = false;\n\n  dataCategory = new FormControl();\n\n  @ViewChild('MainActivityPaginator', { static: false }) MainActivityPaginator: MatPaginator;\n  @ViewChild('MainActivityMatSort', { static: false }) MainActivityMatSort: MatSort;\n  @ViewChild('dpoPaginator', { static: false }) dpoPaginator: MatPaginator;\n  @ViewChild('dpoMatSort', { static: false }) dpoMatSort: MatSort;\n  @ViewChild('securityMeasurePaginator', { static: false }) securityMeasurePaginator: MatPaginator;\n  @ViewChild('securityMeasureMatSort', { static: false }) securityMeasureMatSort: MatSort;\n  @ViewChild('thirdPartyPaginator', { static: false }) thirdPartyPaginator: MatPaginator;\n  @ViewChild('thirdPartyMatSort', { static: false }) thirdPartyMatSort: MatSort;\n  @ViewChild('countryOfTransferPaginator', { static: false }) countryOfTransferPaginator: MatPaginator;\n  @ViewChild('countryOfTransferMatSort', { static: false }) countryOfTransferMatSort: MatSort;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private service: ApiService,\n    private endpoints: ApiEndpointsService,\n    private dialog: MatDialog,\n    private bottomsheet: MatBottomSheet,\n    public authService: KeycloakService,\n    public _auth: AuthenticationService,\n    public _workflowService: WorkflowServiceService,\n    private http: HttpClient,\n    private changeDetector: ChangeDetectorRef,\n    public registrationService: CompanyRegistrationService,\n    public complaintService:ComplaintService,\n    private route: Router,\n  ) {\n    super(\n      authService,\n      _workflowService,\n      registrationService,\n      complaintService\n    );\n\n    // this.regTrackingNo = this.route.getCurrentNavigation().extras.state.regTrackingNo;\n\n    this.service.updatePageTitle(['Organisations', 'New Registration']);\n  }\n\n  ngOnInit(): void {\n    this.formGeneralInformation = this.formBuilder.group({\n      OrganizationName: [{value: this._auth.getOrganisationName(), disabled: true}],\n      DPPActCategory: new FormControl('', [Validators.required]),\n      OrganizationTypeID: new FormControl('', [Validators.required]),\n      CountryOfIncorporation: new FormControl('', [Validators.required]),\n      URSBNumber: new FormControl(''),\n      SectorID: new FormControl('', [Validators.required]),\n      OtherSector: new FormControl('', [Validators.maxLength(50)]),\n      Location: new FormControl('', [Validators.required]),\n      PhoneNumberCode: new FormControl({ value: '', disabled: true }, [Validators.required]),\n      PhoneNumber: new FormControl({ value: '', disabled: true }, [\n        Validators.required,\n        Validators.pattern(/^[0-9 ]+$/),\n      ]),\n      /*PRN:new FormControl({ value: '', disabled: false }, [\n        Validators.required,\n        Validators.pattern(/^[0-9 ]+$/),\n      ]), */\n\n      EmailAddress: new FormControl({ value: '', disabled: true }, [\n        Validators.required,\n        Validators.email\n      ]),\n      // NatureOfBusiness: new FormControl('', [Validators.required]),\n      NatureOfBusinessCat: new FormControl('', [Validators.required]),\n      NatureOfBusinessSubCat: new FormControl('', [Validators.required]),\n    });\n\n    this.formOrganisationDetails = this.formBuilder.group({\n      DPORequired: new FormControl(''),\n      DPOName: new FormControl(''),\n      DPOPhysicalAddress: new FormControl(''),\n      PhoneNumberCode: new FormControl(''),\n      DPOPhoneNumber: new FormControl(''),\n      DPOEmailAddress: new FormControl(''),\n      DPOPositionInOrganisation: new FormControl(''),\n    });\n\n    this.formPersonalDataHeld = this.formBuilder.group({\n      SourceOfDataID: new FormControl('', [Validators.required]),\n    });\n\n    this.formPurposeRetention = this.formBuilder.group({\n      Purpose: new FormControl('', [Validators.required]),\n      SpecifyTheLaw: new FormControl(''),\n      ServiceOrProductProvided: new FormControl(''),\n      SpecifyLegalObligation: new FormControl(''),\n      TotalRecordsAtRegistration: new FormControl('', [Validators.pattern(/^[0-9,]+$/)]),\n      RecordPercentageGrowth: new FormControl('' , [\n        Validators.pattern(/^[0-9,]+$/),\n        Validators.max(100),\n      ]),\n      RetentionPeriod: new FormControl('', [\n        Validators.required,\n        Validators.pattern(/^[0-9,]+$/),\n        Validators.max(100),\n      ]),\n    });\n\n    this.formSecurityMeasures = this.formBuilder.group({\n      RegistrationConsent: new FormControl('', [Validators.required]),\n      RegistrationDoneBy: new FormControl('', [Validators.required, Validators.pattern(/^[a-zA-Z ]+$/)]),\n    });\n\n    this.formChildrenData = this.formBuilder.group({\n      CollectChildrenData: new FormControl('', [Validators.required]),\n      PurposeForCollection: new FormControl(''),\n    });\n\n    this.formThirdParties = this.formBuilder.group({\n      PersonalDataIsForDisclosure: new FormControl('', [Validators.required]),\n      StoreDataOutsideCountry: new FormControl('', [Validators.required]),\n    });\n    this.Listeners();\n  }\n\n  ngAfterContentInit(): void {\n    this.httpSub = this.fetchMultiple()\n    .pipe(catchError(this.service.handleError))\n    .subscribe((responseList) => {\n      this.countries = responseList[0];\n\n      this.organisationCategories = [\n        {\n          OrganisationCategoryId: 1,\n          OrganisationCategoryName: 'Data Controller'\n        },\n        {\n          OrganisationCategoryId: 2,\n          OrganisationCategoryName: 'Data Processor'\n        },\n        {\n          OrganisationCategoryId: 3,\n          OrganisationCategoryName: 'Data Collector'\n        },\n      ];\n\n      this.childDataPurposes = [\n        {\n          ChildDataID: 1,\n          ChildDataPurpose: 'Carried out with prior consent of the parent,guardian, or  any other person having authority to make decisions on behalf of the child '\n        },\n        {\n          ChildDataID: 2,\n          ChildDataPurpose: 'Necessary to comply with the law'\n        },\n        {\n          ChildDataID: 3,\n          ChildDataPurpose: 'For research or statistical purposes'\n        }\n      ]\n\n      this.formGeneralInformation.get('PhoneNumberCode').patchValue('256');\n      this.formOrganisationDetails.get('PhoneNumberCode').patchValue('256');\n\n      this.dataSources = responseList[1];\n\n      this.organisationTypes = responseList[2];\n\n      this.sectors = responseList[3];\n\n      this.dataCategories = responseList[4];\n\n      this.dataPurposes = responseList[5];\n\n      this.natureOfBusinessCat = responseList[6];\n\n      this._loadApplicationDraft(responseList[7]);\n\n      this.processing = false;\n    }, (error) => {\n      this.processing = false;\n      this.service.determineErrorResponse(error);\n    });\n  }\n\n  private Listeners(): void {\n    // STEP ONE\n    this.formGeneralInformation.get('DPPActCategory').valueChanges.subscribe((value) => {\n      const values: number[] = value;\n      this.selectedOrganisationCategories.length = 0;\n\n      this.organisationCategories.filter((item) => {\n        if (values.includes(item.OrganisationCategoryId)) {\n          this.selectedOrganisationCategories.push(item);\n        }\n      });\n    });\n\n    this.formGeneralInformation.get('OrganizationTypeID').valueChanges.subscribe((value) => {\n      if (value !== 4) {\n        this.formGeneralInformation.get('CountryOfIncorporation').setValidators([Validators.required]);\n        this.formGeneralInformation.get('URSBNumber').setValidators([Validators.required]);\n      } else {\n        this.formGeneralInformation.get('CountryOfIncorporation').clearValidators();\n        this.formGeneralInformation.get('CountryOfIncorporation').reset();\n        this.formGeneralInformation.get('URSBNumber').clearValidators();\n        this.formGeneralInformation.get('URSBNumber').reset();\n        this.CountryOfIncorporation = null;\n      }\n\n      this.formGeneralInformation.controls['CountryOfIncorporation'].updateValueAndValidity();\n      this.formGeneralInformation.controls['URSBNumber'].updateValueAndValidity();\n    });\n\n    this.formGeneralInformation.get('SectorID').valueChanges.subscribe((value) => {\n      if (value === 14) {\n        this.formGeneralInformation.get('OtherSector').setValidators([Validators.required]);\n      } else {\n        this.formGeneralInformation.get('OtherSector').clearValidators();\n        this.formGeneralInformation.get('OtherSector').reset();\n      }\n\n      this.formGeneralInformation.controls['OtherSector'].updateValueAndValidity();\n    });\n\n    this.formGeneralInformation.get('NatureOfBusinessCat').valueChanges.subscribe((value) => {\n      this.onNatureOfBusinessCatSelected(value);\n    });\n\n    this.formGeneralInformation.get('NatureOfBusinessSubCat').valueChanges.subscribe((value) => {\n      const values: number[] = value;\n      this.selectedNatureOfBusinessSubCat.length = 0;\n\n      this.natureOfBusinessSubCat.filter((item) => {\n        if (values.includes(item.NatureOfBusinessSubCatId)) {\n          this.selectedNatureOfBusinessSubCat.push(item);\n        }\n      });\n    });\n\n    // STEP TWO\n    this.formOrganisationDetails.get('DPORequired').valueChanges.subscribe((value) => {\n\n      if (value === 'Yes') {\n        this.formOrganisationDetails.get('DPOName').setValidators([Validators.required, Validators.pattern(/^[a-zA-Z ]+$/), ]);\n        this.formOrganisationDetails.get('DPOPhysicalAddress').setValidators([Validators.required]);\n        this.formOrganisationDetails.get('DPOPhoneNumber').setValidators([Validators.required, Validators.pattern(/^[0-9 ]+$/)]);\n        this.formOrganisationDetails.get('DPOEmailAddress').setValidators([Validators.required, Validators.email]);\n        this.formOrganisationDetails.get('DPOPositionInOrganisation').setValidators([Validators.required]);\n      } else {\n        this.formOrganisationDetails.get('DPOName').clearValidators();\n        this.formOrganisationDetails.get('DPOName').reset();\n        this.formOrganisationDetails.get('DPOPhysicalAddress').clearValidators();\n        this.formOrganisationDetails.get('DPOPhysicalAddress').reset();\n        this.formOrganisationDetails.get('DPOPhoneNumber').clearValidators();\n        this.formOrganisationDetails.get('DPOPhoneNumber').reset();\n        this.formOrganisationDetails.get('DPOEmailAddress').clearValidators();\n        this.formOrganisationDetails.get('DPOEmailAddress').reset();\n        this.formOrganisationDetails.get('DPOPositionInOrganisation').clearValidators();\n        this.formOrganisationDetails.get('DPOPositionInOrganisation').reset();\n      }\n\n      this.formOrganisationDetails.controls['DPOName'].updateValueAndValidity();\n      this.formOrganisationDetails.controls['DPOPhysicalAddress'].updateValueAndValidity();\n      this.formOrganisationDetails.controls['DPOPhoneNumber'].updateValueAndValidity();\n      this.formOrganisationDetails.controls['DPOEmailAddress'].updateValueAndValidity();\n      this.formOrganisationDetails.controls['DPOPositionInOrganisation'].updateValueAndValidity();\n    });\n\n    // STEP THREE\n    this.formPersonalDataHeld.get('SourceOfDataID').valueChanges.subscribe((value) => {\n      const values: number[] = value;\n      this.selectedDataSources.length = 0;\n\n      this.dataSources.filter((item) => {\n        if (values.includes(item.DataSourceID)) {\n          this.selectedDataSources.push(item);\n        }\n      });\n    });\n\n    ///CHILDREN DATA PURPOSES\n\n    this.formChildrenData.get('PurposeForCollection').valueChanges.subscribe((value) => {\n      const values: number[] = value;\n      this.selectedChildDataPurposes.length = 0;\n\n      this.childDataPurposes.filter((item) => {\n        if (values.includes(item.ChildDataID)) {\n          this.selectedChildDataPurposes.push(item);\n        }\n      });\n\n      console.log(this.selectedChildDataPurposes);\n    });\n\n    // STEP FOUR\n    this.formPurposeRetention.get('Purpose').valueChanges.subscribe((value) => {\n      const values: number[] = value;\n\n      this.selectedDataPurposes.length = 0;\n\n      // Reset all the fields first\n      this.SpecifyTheLaw = false;\n      this.ServiceOrProductProvided = false;\n      this.SpecifyLegalObligation = false;\n      this.formPurposeRetention.get('SpecifyTheLaw').clearValidators();\n      this.formPurposeRetention.get('SpecifyTheLaw').reset();\n      this.formPurposeRetention.get('ServiceOrProductProvided').clearValidators();\n      this.formPurposeRetention.get('ServiceOrProductProvided').reset();\n      this.formPurposeRetention.get('SpecifyLegalObligation').clearValidators();\n      this.formPurposeRetention.get('SpecifyLegalObligation').reset();\n\n      values.filter((item) => {\n        if (item === 1) {\n          this.SpecifyTheLaw = true;\n          this.formPurposeRetention.get('SpecifyTheLaw').setValidators([Validators.required]);\n        }\n\n        if (item === 3) {\n          this.ServiceOrProductProvided = true;\n          this.formPurposeRetention.get('ServiceOrProductProvided').setValidators([Validators.required]);\n        }\n\n        if (item === 6) {\n          this.SpecifyLegalObligation = true;\n          this.formPurposeRetention.get('SpecifyLegalObligation').setValidators([Validators.required]);\n        }\n      });\n\n      this.formPurposeRetention.controls['SpecifyTheLaw'].updateValueAndValidity();\n      this.formPurposeRetention.controls['ServiceOrProductProvided'].updateValueAndValidity();\n      this.formPurposeRetention.controls['SpecifyLegalObligation'].updateValueAndValidity();\n\n      this.dataPurposes.filter((item) => {\n        if (values.includes(item.DataPurposeID)) {\n          this.selectedDataPurposes.push(item);\n        }\n      });\n\n      this.changeDetector.detectChanges();\n    });\n\n    this.formPurposeRetention.get('RecordPercentageGrowth').valueChanges.subscribe((value) => {\n\n      if (value > 100) {\n        this.formPurposeRetention.get('RecordPercentageGrowth').patchValue(100);\n      }\n\n      this.changeDetector.detectChanges();\n    });\n\n    this.formPurposeRetention.get('RetentionPeriod').valueChanges.subscribe((value) => {\n\n      if (value > 100) {\n        this.formPurposeRetention.get('RetentionPeriod').patchValue(100);\n      }\n\n      this.changeDetector.detectChanges();\n    });\n\n    // STEP FIVE\n    this.formThirdParties.get('PersonalDataIsForDisclosure').valueChanges.subscribe((value) => {\n      this.thirdParties.length = 0;\n    });\n\n    this.formThirdParties.get('StoreDataOutsideCountry').valueChanges.subscribe((value) => {\n      this.countriesOfTransfer.length = 0;\n    });\n  }\n\n  private onShowNotice(): void {\n    this.dialogRef = this.dialog.open(OrgNoticeComponent, {\n      panelClass: ['organisation-data-protection-officer-dialog', 'dialogs'],\n      disableClose: true,\n    });\n\n    this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: DataProtectionOfficer }) => {\n\n    });\n  }\n\n  getOrganizationNameErrorMessage(): string {\n    return this.formGeneralInformation.get('OrganizationName').hasError('required') ? 'Please enter a value' : '';\n  }\n\n  getURSBNumberErrorMessage(): string {\n    return this.formGeneralInformation.get('URSBNumber').hasError('required') ? 'Please enter a value' : '';\n  }\n\n  getSelectErrorMessage(): string {\n    return this.formGeneralInformation.get('DPPActCategory').hasError('required')\n    || this.formGeneralInformation.get('OrganizationTypeID').hasError('required')\n    || this.formGeneralInformation.get('CountryOfIncorporation').hasError('required')\n    || this.formGeneralInformation.get('SectorID').hasError('required')\n    || this.formGeneralInformation.get('NatureOfBusinessCat').hasError('required')\n    || this.formGeneralInformation.get('NatureOfBusinessSubCat').hasError('required')\n    || this.formPersonalDataHeld.get('SourceOfDataID').hasError('required')\n    || this.formPurposeRetention.get('Purpose').hasError('required')\n    ? 'Please choose a value' : '';\n  }\n\n  getTelephoneNumberErrorMessage(): string {\n    return this.formGeneralInformation.get('PhoneNumber').hasError('required') ? 'Please enter a value' :\n    this.formGeneralInformation.get('PhoneNumber').hasError('pattern') ? 'Wrong Phone number' : '';\n  }\n\n  getEmailAddressErrorMessage(): string {\n    return this.formGeneralInformation.get('EmailAddress').hasError('required') ? 'Please enter a value' :\n    this.formGeneralInformation.get('EmailAddress').hasError('email') ? 'Wrong Email Address.' : '';\n  }\n\n  getOtherSectorErrorMessage(): string {\n    return this.formGeneralInformation.get('OtherSector').hasError('required') ? 'Please enter a value' : '';\n  }\n\n  getLocationErrorMessage(): string {\n    return this.formGeneralInformation.get('Location').hasError('required') ? 'Please enter a location' : '';\n  }\n\n  getDPONameErrorMessage(): string {\n    return this.formOrganisationDetails.get('DPOName').hasError('required') ? 'Please enter a value' :\n    this.formOrganisationDetails.get('DPOName').hasError('pattern') ? 'Please enter a correct name' : '';\n  }\n\n  getDPOPhysicalAddressErrorMessage(): string {\n    return this.formOrganisationDetails.get('DPOPhysicalAddress').hasError('required') ? 'Please enter a location' : '';\n  }\n\n  getDPOPhoneNumberErrorMessage(): string {\n    return this.formOrganisationDetails.get('DPOPhoneNumber').hasError('required') ? 'Please enter a value' :\n    this.formOrganisationDetails.get('DPOPhoneNumber').hasError('pattern') ? 'Wrong Phone number' : '';\n  }\n\n  getDPOEmailAddressErrorMessage(): string {\n    return this.formOrganisationDetails.get('DPOEmailAddress').hasError('required') ? 'Please enter a value' :\n    this.formOrganisationDetails.get('DPOEmailAddress').hasError('email') ? 'Wrong Email Address.' : '';\n  }\n\n  getDPOPositionInOrganisationErrorMessage(): string {\n    return this.formOrganisationDetails.get('DPOPositionInOrganisation').hasError('required') ? 'Please enter a value' : '';\n  }\n\n  getRequiredErrorMessage(): string {\n    return this.formPurposeRetention.get('SpecifyTheLaw').hasError('required')\n    || this.formPurposeRetention.get('ServiceOrProductProvided').hasError('required')\n    || this.formPurposeRetention.get('SpecifyLegalObligation').hasError('required')\n    ? 'Please enter a value' : '';\n  }\n\n  getPatternErrorMessage(): string {\n    return this.formPurposeRetention.get('TotalRecordsAtRegistration').hasError('pattern')\n    ? 'Please enter correct information' : '';\n  }\n\n  getRetentionPeriodErrorMessage(): string {\n    return this.formPurposeRetention.get('RetentionPeriod').hasError('required') ? 'Please enter a value' :\n    this.formPurposeRetention.get('RetentionPeriod').hasError('max') ? 'Maximum of 100' :\n    this.formPurposeRetention.get('RetentionPeriod').hasError('pattern') ? 'Not valid' : '';\n  }\n\n  getRecordPercentageGrowthErrorMessage(): string {\n    return this.formPurposeRetention.get('RecordPercentageGrowth').hasError('max') ? 'Maximum of 100' :\n    this.formPurposeRetention.get('RecordPercentageGrowth').hasError('pattern') ? 'Not valid' : '';\n  }\n\n  getCheckboxErrorMessage(): string {\n    return this.formSecurityMeasures.get('RegistrationConsent').hasError('max') ? 'This field is required' : '';\n  }\n\n  getRegistrationDoneByErrorMessage(): string {\n    return this.formSecurityMeasures.get('RegistrationDoneBy').hasError('required') ? 'Please enter a value' :\n    this.formSecurityMeasures.get('RegistrationDoneBy').hasError('pattern') ? 'Please enter a correct name' : '';\n  }\n\n  onAddMainActivity(): void {\n    this.dialogRef = this.dialog.open(OrgMainActivityComponent, {\n      panelClass: ['organisation-main-activity-dialog', 'dialogs'],\n      disableClose: true,\n    });\n\n    this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: MainActivity }) => {\n      if (result.status) {\n          let found = false;\n          this.mainActivities.filter((activity) => {\n            if (activity.Activity === result.row.Activity) {\n              found = true;\n            }\n          });\n\n          if (found) {\n            this.service.openSnackBar('Sorry, this record already exists', 'error-lg');\n          } else {\n            this.mainActivities.push(result.row);\n          }\n\n        this.mainActivitiesDataSource = new MatTableDataSource(this.mainActivities);\n\n        setTimeout(() => {\n          this.mainActivitiesDataSource.paginator = this.MainActivityPaginator;\n          this.mainActivitiesDataSource.sort = this.MainActivityMatSort;\n        });\n      }\n    });\n  }\n\n  onEditMainActivity(row: MainActivity): void {\n    this.dialogRef = this.dialog.open(OrgMainActivityComponent, {\n      panelClass: ['organisation-main-activity-dialog', 'dialogs'],\n      disableClose: true,\n      data: { row }\n    });\n\n    this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: MainActivity }) => {\n      if (result.status) {\n\n        this.mainActivities[this.mainActivities.indexOf(row)] = {\n          Activity: result.row.Activity,\n        };\n\n        this.mainActivitiesDataSource = new MatTableDataSource(this.mainActivities);\n\n        setTimeout(() => {\n          this.mainActivitiesDataSource.paginator = this.MainActivityPaginator;\n          this.mainActivitiesDataSource.sort = this.MainActivityMatSort;\n        });\n      }\n    });\n  }\n\n  onRemoveMainActivity(row: MainActivity): void {\n    this.mainActivities.splice(this.mainActivities.indexOf(row), 1);\n\n    this.mainActivitiesDataSource = new MatTableDataSource(this.mainActivities);\n\n    setTimeout(() => {\n      this.mainActivitiesDataSource.paginator = this.MainActivityPaginator;\n      this.mainActivitiesDataSource.sort = this.MainActivityMatSort;\n    });\n  }\n\n  onAddADPO(): void {\n    this.dialogRef = this.dialog.open(OrgDataProtectionOfficerComponent, {\n      panelClass: ['organisation-data-protection-officer-dialog', 'dialogs'],\n      disableClose: true,\n    });\n\n    this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: DataProtectionOfficer }) => {\n      if (result.status) {\n        let found = false;\n        this.dataProtectionOfficers.filter((dpo) => {\n          if (dpo.EmailAddress === result.row.EmailAddress || dpo.PhoneNumber === result.row.PhoneNumber) {\n            found = true;\n          }\n        });\n\n        if (found) {\n          this.service.openSnackBar('Sorry, this record already exists', 'error-lg');\n        } else {\n          this.dataProtectionOfficers.push(result.row);\n        }\n\n        this.dpoDataSource = new MatTableDataSource(this.dataProtectionOfficers);\n\n        setTimeout(() => {\n          this.dpoDataSource.paginator = this.dpoPaginator;\n          this.dpoDataSource.sort = this.dpoMatSort;\n        });\n      }\n    });\n  }\n\n  onEditDPO(row: DataProtectionOfficer): void {\n    this.dialogRef = this.dialog.open(OrgDataProtectionOfficerComponent, {\n      panelClass: ['organisation-data-protection-officer-dialog', 'dialogs'],\n      disableClose: true,\n      data: { row }\n    });\n\n    this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: DataProtectionOfficer }) => {\n      if (result.status) {\n\n        this.dataProtectionOfficers[this.dataProtectionOfficers.indexOf(row)] = {\n          Name: result.row.Name,\n          EmailAddress: result.row.EmailAddress,\n          PhoneNumber: result.row.PhoneNumber,\n          PhysicalAddress: result.row.PhysicalAddress,\n          PositionInOrganisation: result.row.PositionInOrganisation,\n        };\n\n        this.dpoDataSource = new MatTableDataSource(this.dataProtectionOfficers);\n\n        setTimeout(() => {\n          this.dpoDataSource.paginator = this.dpoPaginator;\n          this.dpoDataSource.sort = this.dpoMatSort;\n        });\n      }\n    });\n  }\n\n  onRemoveDPO(row: DataProtectionOfficer): void {\n    this.dataProtectionOfficers.splice(this.dataProtectionOfficers.indexOf(row), 1);\n\n    this.dpoDataSource = new MatTableDataSource(this.dataProtectionOfficers);\n\n    setTimeout(() => {\n      this.dpoDataSource.paginator = this.dpoPaginator;\n      this.dpoDataSource.sort = this.dpoMatSort;\n    });\n  }\n\n  onAddSecurityMeasure(): void {\n    this.dialogRef = this.dialog.open(OrgSecurityMeasuresComponent, {\n      panelClass: ['organisation-security-measure-dialog', 'dialogs'],\n      disableClose: true,\n    });\n\n    this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: SecurityMeasure }) => {\n      if (result.status) {\n        let found = false;\n        this.securityMeasures.filter((item) => {\n          if (item.SecurityMeasure === result.row.SecurityMeasure) {\n            found = true;\n          }\n        });\n\n        if (found) {\n          this.service.openSnackBar('Sorry, this record already exists', 'error-lg');\n        } else {\n          this.securityMeasures.push(result.row);\n        }\n\n        this.securityMeasureDataSource = new MatTableDataSource(this.securityMeasures);\n\n        setTimeout(() => {\n          this.securityMeasureDataSource.paginator = this.securityMeasurePaginator;\n          this.securityMeasureDataSource.sort = this.securityMeasureMatSort;\n        });\n      }\n    });\n  }\n\n  onEditSecurityMeasure(row: SecurityMeasure): void {\n    this.dialogRef = this.dialog.open(OrgSecurityMeasuresComponent, {\n      panelClass: ['organisation-security-measure-dialog', 'dialogs'],\n      disableClose: true,\n      data: { row }\n    });\n\n    this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: SecurityMeasure }) => {\n      if (result.status) {\n\n        this.securityMeasures[this.securityMeasures.indexOf(row)] = {\n          SecurityMeasure: result.row.SecurityMeasure,\n        };\n\n        this.securityMeasureDataSource = new MatTableDataSource(this.securityMeasures);\n\n        setTimeout(() => {\n          this.securityMeasureDataSource.paginator = this.securityMeasurePaginator;\n          this.securityMeasureDataSource.sort = this.securityMeasureMatSort;\n        });\n      }\n    });\n  }\n\n  onRemoveSecurityMeasure(row: SecurityMeasure): void {\n    this.securityMeasures.splice(this.securityMeasures.indexOf(row), 1);\n\n    this.securityMeasureDataSource = new MatTableDataSource(this.securityMeasures);\n\n    setTimeout(() => {\n      this.securityMeasureDataSource.paginator = this.securityMeasurePaginator;\n      this.securityMeasureDataSource.sort = this.securityMeasureMatSort;\n    });\n  }\n\n  onAddAThirdParty(): void {\n    this.dialogRef = this.dialog.open(OrgThirdPartyComponent, {\n      panelClass: ['organisation-third-party-dialog', 'dialogs'],\n      disableClose: true,\n    });\n\n    this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: ThirdParty }) => {\n      if (result.status) {\n          let found = false;\n\n          this.thirdParties.filter((party) => {\n            if (party.ThirdPartyName === result.row.ThirdPartyName) {\n              found = true;\n            }\n          });\n\n          if (found) {\n            this.service.openSnackBar('Sorry, this record already exists', 'error-lg');\n          } else {\n            this.thirdParties.push(result.row);\n          }\n\n        this.thirdPartyDataSource = new MatTableDataSource(this.thirdParties);\n\n        setTimeout(() => {\n          this.thirdPartyDataSource.paginator = this.thirdPartyPaginator;\n          this.thirdPartyDataSource.sort = this.thirdPartyMatSort;\n        });\n      }\n    });\n  }\n\n  onEditThirdParty(row: ThirdParty): void {\n    this.dialogRef = this.dialog.open(OrgThirdPartyComponent, {\n      panelClass: ['organisation-third-party-dialog', 'dialogs'],\n      disableClose: true,\n      data: { row }\n    });\n\n    this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: ThirdParty }) => {\n      if (result.status) {\n\n        this.thirdParties[this.thirdParties.indexOf(row)] = {\n          ThirdPartyName: result.row.ThirdPartyName,\n          Purpose: result.row.Purpose,\n        };\n\n        this.thirdPartyDataSource = new MatTableDataSource(this.thirdParties);\n\n        setTimeout(() => {\n          this.thirdPartyDataSource.paginator = this.thirdPartyPaginator;\n          this.thirdPartyDataSource.sort = this.thirdPartyMatSort;\n        });\n      }\n    });\n  }\n\n  onRemoveThirdParty(row: ThirdParty): void {\n    this.thirdParties.splice(this.thirdParties.indexOf(row), 1);\n\n    this.thirdPartyDataSource = new MatTableDataSource(this.thirdParties);\n\n    setTimeout(() => {\n      this.thirdPartyDataSource.paginator = this.thirdPartyPaginator;\n      this.thirdPartyDataSource.sort = this.thirdPartyMatSort;\n    });\n  }\n\n  onAddACountry(): void {\n    this.dialogRef = this.dialog.open(OrgCountryComponent, {\n      panelClass: ['organisation-country-dialog', 'dialogs'],\n      disableClose: true,\n    });\n\n    this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: CountryOfTransfer }) => {\n      if (result.status) {\n          let found = false;\n          this.countriesOfTransfer.filter((party) => {\n            if (party.Country === result.row.Country) {\n              found = true;\n            }\n          });\n\n          if (found) {\n            this.service.openSnackBar('Sorry, this record already exists', 'error-lg');\n          } else {\n            this.countriesOfTransfer.push(result.row);\n          }\n\n        this.countriesDataSource = new MatTableDataSource(this.countriesOfTransfer);\n\n        setTimeout(() => {\n          this.countriesDataSource.paginator = this.countryOfTransferPaginator;\n          this.countriesDataSource.sort = this.countryOfTransferMatSort;\n        });\n      }\n    });\n  }\n\n  onEditCountry(row: CountryOfTransfer): void {\n    this.dialogRef = this.dialog.open(OrgCountryComponent, {\n      panelClass: ['organisation-country-dialog', 'dialogs'],\n      disableClose: true,\n      data: { row }\n    });\n\n    this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: CountryOfTransfer }) => {\n      if (result.status) {\n        this.countriesOfTransfer[this.countriesOfTransfer.indexOf(row)] = {\n          CountryID: result.row.CountryID,\n          Country: result.row.Country,\n          Purpose: result.row.Purpose,\n          Description: result.row.Description,\n        };\n\n        this.countriesDataSource = new MatTableDataSource(this.countriesOfTransfer);\n\n        setTimeout(() => {\n          this.countriesDataSource.paginator = this.countryOfTransferPaginator;\n          this.countriesDataSource.sort = this.countryOfTransferMatSort;\n        });\n      }\n    });\n  }\n\n  onRemoveCountry(row: CountryOfTransfer): void {\n    this.countriesOfTransfer.splice(this.countriesOfTransfer.indexOf(row), 1);\n\n    this.countriesDataSource = new MatTableDataSource(this.countriesOfTransfer);\n\n    setTimeout(() => {\n      this.countriesDataSource.paginator = this.countryOfTransferPaginator;\n      this.countriesDataSource.sort = this.countryOfTransferMatSort;\n    });\n  }\n\n  onUploadAttachments(): void {\n    this.dialogRef = this.dialog.open(OrgUploadComponent, {\n      panelClass: ['organisation-upload-dialog', 'dialogs'],\n      disableClose: true,\n      data: {\n        multiple: false\n      }\n    });\n\n    this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: FileUpload }) => {\n      console.log('row:', result.row);\n\n      if (result.status) {\n        this.document = result.row;\n      }\n    });\n  }\n\n  onRemoveDocument(): void {\n    this.document = null;\n  }\n\n  onDownloadForm3(): void {\n    this.dialogRef = this.dialog.open(OrgForm3DialogComponent, {\n      panelClass: ['organisation-form-3-dialog', 'dialogs'],\n      disableClose: true,\n      data: {\n        OrganisationName: this.formGeneralInformation.get('OrganizationName').value,\n        PhysicalAddress: this.formGeneralInformation.get('Location').value,\n        Date: new Date()\n      }\n    });\n  }\n\n  onUploadProofOfPayment(): void {\n    this.dialogRef = this.dialog.open(OrgUploadComponent, {\n      panelClass: ['organisation-upload-dialog', 'dialogs'],\n      disableClose: true,\n      data: {\n        multiple: false\n      }\n    });\n\n    this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: FileUpload }) => {\n\n      if (result.status) {\n        this.proofOfPayment = result.row;\n      }\n    });\n  }\n\n  onRemoveProofOfPaymen(): void {\n    this.proofOfPayment = null;\n  }\n\n  onUploadForm3Attachments(): void {\n    this.dialogRef = this.dialog.open(OrgUploadComponent, {\n      panelClass: ['organisation-upload-dialog', 'dialogs'],\n      disableClose: true,\n      data: {\n        multiple: false\n      }\n    });\n\n    this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: FileUpload }) => {\n      if (result.status) {\n        this.documentForm3 = result.row;\n      }\n    });\n  }\n\n  onRemoveForm3Document(): void {\n    this.documentForm3 = null;\n  }\n\n  onChangeSubCategory(event: MatCheckboxChange, SubCategory: DataSubCategory): void {\n    if (event.checked) {\n      this.selectedDataSubCategory.push(SubCategory);\n    } else {\n      this.selectedDataSubCategory.splice(this.selectedDataSubCategory.indexOf(SubCategory), 1);\n    }\n  }\n\n  private fetchMultiple(): Observable<any[]> {\n    this.processing = true;\n    const reqCountries = this.http.get<ApiPayload>(this.endpoints.countries);\n    const reqDataSources = this.http.get<ApiPayload>(this.endpoints.dataSources);\n    const reqOrganisationType = this.http.get<ApiPayload>(this.endpoints.organisationType);\n    const reqSector = this.http.get<ApiPayload>(this.endpoints.sector);\n    const reqDataSubcategories = this.http.get<ApiPayload>(this.endpoints.dataSubcategories);\n    const reqDataPurpose = this.http.get<ApiPayload>(this.endpoints.dataPurpose);\n    const reqNatureOfBusiness = this.http.get<ApiPayload>(this.endpoints.natureOfBusiness);\n    const reqOrgRegSaveDraft = this.http.get<ApiPayload>(this.endpoints.orgRegSaveDraft, { params: { OrganizationAccountUserID: this._auth.getOrganisationID() } });\n\n    // tslint:disable-next-line:max-line-length\n    return forkJoin([\n      reqCountries, \n      reqDataSources, \n      reqOrganisationType, \n      reqSector, \n      reqDataSubcategories, \n      reqDataPurpose, \n      reqNatureOfBusiness,\n      reqOrgRegSaveDraft\n    ]);\n  }\n\n  private getFormData(): any {\n\n    return {\n      OrganisationUserID: +this._auth.getOrganisationID(),\n      OrganisationName: this.formGeneralInformation.get('OrganizationName').value,\n      OrganisationCategory: this.selectedOrganisationCategories ? this.selectedOrganisationCategories : [],\n      OrganizationTypeID: this.formGeneralInformation.get('OrganizationTypeID').value ? this.formGeneralInformation.get('OrganizationTypeID').value : 0,\n      CountryOfIncorporation: this.formGeneralInformation.get('CountryOfIncorporation').value ? this.formGeneralInformation.get('CountryOfIncorporation').value : 0,\n      URSBNumber: this.formGeneralInformation.get('URSBNumber').value ? this.formGeneralInformation.get('URSBNumber').value : '',\n      SectorID: this.formGeneralInformation.get('SectorID').value ? this.formGeneralInformation.get('SectorID').value : 0,\n      OtherSector: this.formGeneralInformation.get('OtherSector').value ? this.formGeneralInformation.get('OtherSector').value : '',\n      Location: this.formGeneralInformation.get('Location').value ? this.formGeneralInformation.get('Location').value : '',\n      // tslint:disable-next-line:max-line-length\n      // PhoneNumber: this.formGeneralInformation.get('PhoneNumberCode').value + (this.formGeneralInformation.get('PhoneNumber').value).replaceAll(' ', ''),\n      // EmailAddress: this.formGeneralInformation.get('EmailAddress').value,\n      PhoneNumber: this.application.PhoneNumber,\n      EmailAddress: this.application.EmailAddress,\n      NatureOfBusinessCatID: this.formGeneralInformation.get('NatureOfBusinessCat').value ? this.formGeneralInformation.get('NatureOfBusinessCat').value : 0,\n      NatureOfBusiness: this.selectedNatureOfBusinessSubCat ? this.selectedNatureOfBusinessSubCat : [],\n      \n      DPORequired: this.formOrganisationDetails.get('DPORequired').value,\n      DPOName: this.formOrganisationDetails.get('DPORequired').value === 'Yes' ? this.formOrganisationDetails.get('DPOName').value : '',\n      DPOPhysicalAddress: this.formOrganisationDetails.get('DPORequired').value === 'Yes' ? this.formOrganisationDetails.get('DPOPhysicalAddress').value : '',\n      // tslint:disable-next-line:max-line-length\n      DPOPhoneNumber: this.formOrganisationDetails.get('DPOPhoneNumber').value ? this.formOrganisationDetails.get('PhoneNumberCode').value + (this.formOrganisationDetails.get('DPOPhoneNumber').value).replaceAll(' ', '') : '',\n      // tslint:disable-next-line:max-line-length\n      DPOEmailAddress: this.formOrganisationDetails.get('DPORequired').value === 'Yes' ? this.formOrganisationDetails.get('DPOEmailAddress').value : '',\n      DPOPositionInOrganisation: this.formOrganisationDetails.get('DPORequired').value === 'Yes' ? this.formOrganisationDetails.get('DPOPositionInOrganisation').value : '',\n      SourceOfDataID: this.selectedDataSources ? this.selectedDataSources : [],\n      PersonalDataCollected: this.selectedDataSubCategory ? this.selectedDataSubCategory : [],\n      Purpose: this.selectedDataPurposes ? this.selectedDataPurposes : [],\n      SpecifyTheLaw: this.formPurposeRetention.get('SpecifyTheLaw').value ? this.formPurposeRetention.get('SpecifyTheLaw').value : '',\n      ServiceOrProductProvided: this.formPurposeRetention.get('ServiceOrProductProvided').value ? this.formPurposeRetention.get('ServiceOrProductProvided').value : '',\n      SpecifyLegalObligation: this.formPurposeRetention.get('SpecifyLegalObligation').value ? this.formPurposeRetention.get('SpecifyLegalObligation').value : '',\n      // tslint:disable-next-line:max-line-length\n      TotalRecordsAtRegistration: this.formPurposeRetention.get('TotalRecordsAtRegistration').value ? parseInt(this.formPurposeRetention.get('TotalRecordsAtRegistration').value, 10) : 0,\n      RecordPercentageGrowth: this.formPurposeRetention.get('RecordPercentageGrowth').value ? parseInt(this.formPurposeRetention.get('RecordPercentageGrowth').value, 10) : 0,\n      // RetentionPeriod: this.formPurposeRetention.get('RetentionPeriod').value,\n      RetentionPeriod: this.formPurposeRetention.get('RetentionPeriod').value ? parseInt(this.formPurposeRetention.get('RetentionPeriod').value, 10) : 0,\n      PersonalDataIsForDisclosure: this.formThirdParties.get('PersonalDataIsForDisclosure').value ? this.formThirdParties.get('PersonalDataIsForDisclosure').value : '',\n      ThirdParties: this.thirdParties ? this.thirdParties : [],\n      StoreDataOutsideCountry: this.formThirdParties.get('StoreDataOutsideCountry').value ? this.formThirdParties.get('StoreDataOutsideCountry').value : '',\n      Countries: this.countriesOfTransfer ? this.countriesOfTransfer : [],\n      SecurityMeasures: this.securityMeasures ? this.securityMeasures : [],\n      Attachment: this.document ? this.document.Base64 : '',\n      Form3Attachment: this.documentForm3 ? this.documentForm3.Base64 : '',\n      RegistrationConsent: this.formSecurityMeasures.get('RegistrationConsent').value ? true : false,\n      RegistrationDoneBy: this.formSecurityMeasures.get('RegistrationDoneBy').value ? this.formSecurityMeasures.get('RegistrationDoneBy').value : '',\n      //PRN : this.formGeneralInformation.get('PRN').value ? this.formGeneralInformation.get('PRN').value : '',\n      ChildrenDataPurpose: this.selectedChildDataPurposes ? this.selectedChildDataPurposes : [],\n      CollectChildrenData: this.formChildrenData.get('CollectChildrenData').value ? this.formChildrenData.get('CollectChildrenData').value : '',\n      ProofOfPayment: this.proofOfPayment ? this.proofOfPayment.Base64 : '',\n    \n    };\n  }\n\n  onNatureOfBusinessCatSelected(NatureOfBusinessCatId): void {\n    // tslint:disable-next-line:max-line-length\n    this.httpSub = this.http.get<NatureOfBusinessSubCat[]>(this.endpoints.natureOfBusiness + '?NatureOfBusinessSubCat=' + NatureOfBusinessCatId)\n    .pipe(catchError(this.service.handleError))\n    .subscribe((response) => {\n\n      this.natureOfBusinessSubCat = response;\n\n    }, (error) => {\n      this.processing = false;\n      this.service.determineErrorResponse(error);\n    });\n  }\n\n  onPreviewForm(download: boolean): void {\n    this.dialogRef = this.dialog.open(OrgRegistrationPreviewDialogComponent, {\n      panelClass: ['organisation-registration-preview-form-3-dialog', 'dialogs'],\n      disableClose: true,\n      data: {\n        download: download,\n        row: this.getFormData(),\n        Attachment: this.document ? this.document : '',\n        Form3: this.documentForm3 ? this.documentForm3 : '',\n        ProofOfPayment: this.proofOfPayment ? this.proofOfPayment : '',\n        OrganizationType: this.OrganizationType,\n        // tslint:disable-next-line:max-line-length\n        Sector: this.formGeneralInformation.get('OtherSector').value ? this.formGeneralInformation.get('OtherSector').value : this.SectorName,\n        NatureOfBusinessCat: this.NatureOfBusinessCat,\n        CountryOfIncorporation: this.CountryOfIncorporation\n      }\n    });\n  }\n\n  onSubmit(): void {\n    this.processing = true;\n    console.log('save the registration information:', this.getFormData());\n\n    this.httpSub = this.http.post<ApiPayload>(this.endpoints.orgRegistration, this.getFormData())\n    .pipe(catchError(this.service.handleError))\n    .subscribe((response) => {\n      this.dialogRef = this.dialog.open(SuccessfulMessageDialogComponent, {\n        panelClass: ['successful-message-dialog', 'dialogs'],\n        disableClose: true,\n        data: {\n          title: response.message['title'],\n          message: response.message['body'],\n          status: response.code === 200 ? true : false,\n        }\n      });\n\n      this.dialogRef.afterClosed().subscribe(() => {\n        this.route.navigate(['/company-registration/find']);\n      });\n\n      this.processing = false;\n    }, (error) => {\n      this.processing = false;\n\n      if (error.error.message) {\n        this.dialogRef = this.dialog.open(SuccessfulMessageDialogComponent, {\n          panelClass: ['successful-message-dialog', 'dialogs'],\n          disableClose: true,\n          data: {\n            title: error.error.message['title'] ? error.error.message['title'] : 'Operation Failed',\n            message: error.error.message['body'] ? error.error.message['body'] : environment.technicalErrorResponse,\n            status: false,\n          }\n        });\n      } else {\n        this.service.determineErrorResponse(error);\n      }\n    });\n  }\n\n  onReadDocument(document: FileUpload): void {\n    this.bottomsheetRef = this.bottomsheet.open(ViewPdfDocumentBottomsheetComponent, {\n      disableClose: true,\n      panelClass: ['view-pdf-document-bottomsheet', 'bottomsheets'],\n      data: {\n        url: document.Base64,\n        title: document.Name\n      }\n    });      \n  }\n\n  private _loadApplicationDraft(response: ApiPayload): void {\n    this.application = response.data;\n    console.log(this.application);\n    this.processing = false;\n\n    this.regTrackingNo = response['RegTrackingNo'];\n\n    if (!this.application) {      \n      this.dialogRef = this.dialog.open(SuccessfulMessageDialogComponent, {\n        panelClass: ['successful-message-dialog', 'dialogs'],\n        disableClose: true,\n        data: {\n          title: 'Application Already Submitted',\n          message: 'Your application has already been submitted. Please close the window to view application',\n          status: false,\n        }\n      });\n\n      this.dialogRef.afterClosed().subscribe(() => {\n        // console.log('regTrackingNo:', this.regTrackingNo);\n        this.route.navigate(\n          ['/company-registration/view'],\n          { state: { regTrackingNo: this.regTrackingNo }}\n        ).then();\n      });      \n\n    } else {\n\n      if (this.application.OrganisationCategory) {\n        let organisationCategories: any = this.application.OrganisationCategory;\n        let cat: number[] = [];\n    \n        organisationCategories.filter((item) => {\n          cat.push(item.OrganisationCategoryId);\n        });\n    \n        this.formGeneralInformation.get('DPPActCategory').patchValue(cat);\n      }\n  \n      this.formGeneralInformation.get('OrganizationTypeID').patchValue(this.application.OrganizationTypeID);\n      this.formGeneralInformation.get('OrganizationName').patchValue(this.application.OrganisationName);\n      this.formGeneralInformation.get('URSBNumber').patchValue(this.application.URSBNumber);\n      this.formGeneralInformation.get('SectorID').patchValue(this.application.SectorID);\n      this.formGeneralInformation.get('CountryOfIncorporation').patchValue(this.application['CountryOfIncorporation']);\n      this.formGeneralInformation.get('OtherSector').patchValue(this.application['OtherSector']);\n      this.formGeneralInformation.get('Location').patchValue(this.application.Location);\n      this.formGeneralInformation.get('PhoneNumberCode').patchValue(this.application.PhoneNumber.substring(0, 3));\n      this.formGeneralInformation.get('PhoneNumber').patchValue(this.application.PhoneNumber.substring(3, 13));\n      this.formGeneralInformation.get('EmailAddress').patchValue(this.application.EmailAddress);\n      //this.formGeneralInformation.get('PRN').patchValue(this.application.PRN);\n      /*if(this.application.PRN){\n        this.showPRNDownload = true;\n      }*/\n      if (this.application['NatureOfBusiness'].length) {\n        this.formGeneralInformation.get('NatureOfBusinessCat').patchValue(this.application['NatureOfBusinessCatID']);\n        \n        let natureOfbusinesses: NatureOfBusiness[] = this.application['NatureOfBusiness'];\n        let natureOfbusinesses_arr: any[] = [];\n  \n        let _selectedNatureOfBusinessSubCat: NatureOfBusinessSubCat[] = [];\n        natureOfbusinesses.filter((item) => {\n          natureOfbusinesses_arr.push(item['NatureOfBusinessSubCatId']);\n  \n          _selectedNatureOfBusinessSubCat.push({\n            NatureOfBusinessSubCatId: item['NatureOfBusinessSubCatId'],\n            NatureOfBusinessSubCategoryName: item.NatureOfBusinessSubCategoryName\n          });\n        });\n        \n        this.formGeneralInformation.get('NatureOfBusinessSubCat').patchValue(natureOfbusinesses_arr);\n        this.selectedNatureOfBusinessSubCat = _selectedNatureOfBusinessSubCat;\n      }\n  \n      // STEP TWO\n      this.formOrganisationDetails.get('DPORequired').patchValue(this.application['DPORequired']);\n  \n      this.formOrganisationDetails.get('DPOName').patchValue(this.application['DPOName']);\n      this.formOrganisationDetails.get('DPOPhysicalAddress').patchValue(this.application['DPOPhysicalAddress']);\n      this.formOrganisationDetails.get('PhoneNumberCode').patchValue(this.application['DPOPhoneNumber'].substring(0, 3));\n      this.formOrganisationDetails.get('DPOPhoneNumber').patchValue(this.application['DPOPhoneNumber'].substring(3, 13));\n      this.formOrganisationDetails.get('DPOEmailAddress').patchValue(this.application['DPOEmailAddress']);\n      this.formOrganisationDetails.get('DPOPositionInOrganisation').patchValue(this.application['DPOPositionInOrganisation']);\n      \n\n      // CHILDREN'S DATA \n\n      if(this.application.CollectChildrenData == 'Yes'){\n        this.showChildrenDataFields = true;\n      }\n\n      if(this.application['CollectChildrenData']){\n\n        this.formChildrenData.get('CollectChildrenData').patchValue(this.application['CollectChildrenData']);\n      }\n      \n      // STEP THREE\n      let sourceofdata = this.application['SourceOfDataID'];\n      let sourceofdata_arr: number [] = [];\n      \n      sourceofdata.filter((item) => {\n        sourceofdata_arr.push(item.DataSourceID);\n      });\n  \n      this.formPersonalDataHeld.get('SourceOfDataID').patchValue(sourceofdata_arr);\n  \n      if (this.application['PersonalDataCollected']) {\n        const personalDataCollected: any[] = this.application['PersonalDataCollected'];\n    \n        this.dataCategories.filter((category) => {\n          category.SubCategories.filter((subCat) => {\n            personalDataCollected.filter((selectedSubCat) => {            \n              if (subCat.DataSubCategoryID === selectedSubCat.DataSubCategoryID) {\n                subCat.IsChecked = true;\n                this.selectedDataSubCategory.push(subCat);\n              }\n            });\n          });\n        });\n      }\n  \n      // STEP FOUR\n      const purpose: any = this.application['Purpose'];\n      let purpose_arr: any[] = [];\n      let _selectedDataPurposes: DataPurposes[]  = [];\n  \n      purpose.filter((item) => {\n        if (item.DataPurposeID === 1) {\n          this.SpecifyTheLaw = true;\n          this.formPurposeRetention.get('SpecifyTheLaw').setValidators([Validators.required]);\n        }\n  \n        if (item.DataPurposeID === 3) {\n          this.ServiceOrProductProvided = true;\n          this.formPurposeRetention.get('ServiceOrProductProvided').setValidators([Validators.required]);\n        }\n  \n        if (item.DataPurposeID === 6) {\n          this.SpecifyLegalObligation = true;\n          this.formPurposeRetention.get('SpecifyLegalObligation').setValidators([Validators.required]);\n        }\n  \n        purpose_arr.push(item.DataPurposeID);\n  \n        _selectedDataPurposes.push(item);\n      });\n      \n      this.formPurposeRetention.get('Purpose').patchValue(purpose_arr);\n      this.selectedDataPurposes = _selectedDataPurposes;\n  \n      this.formPurposeRetention.get('SpecifyTheLaw').patchValue(this.application['SpecifyTheLaw']);\n      this.formPurposeRetention.get('ServiceOrProductProvided').patchValue(this.application['ServiceOrProductProvided']);\n      this.formPurposeRetention.get('SpecifyLegalObligation').patchValue(this.application['SpecifyLegalObligation']);\n      this.formPurposeRetention.get('TotalRecordsAtRegistration').patchValue(this.application['TotalRecordsAtRegistration']);\n      this.formPurposeRetention.get('RecordPercentageGrowth').patchValue(this.application['RecordPercentageGrowth']);\n      this.formPurposeRetention.get('RetentionPeriod').patchValue(this.application['RetentionPeriod']);\n  \n      // STEP FIVE\n      this.formThirdParties.get('PersonalDataIsForDisclosure').patchValue(this.application['PersonalDataIsForDisclosure'].replace(/\\s/g, ''));\n      this.thirdParties = this.application['ThirdParties'];\n      this.thirdPartyDataSource = new MatTableDataSource(this.thirdParties);\n  \n      setTimeout(() => {\n        this.thirdPartyDataSource.paginator = this.thirdPartyPaginator;\n        this.thirdPartyDataSource.sort = this.thirdPartyMatSort;\n      });\n  \n      this.formThirdParties.get('StoreDataOutsideCountry').patchValue(this.application['StoreDataOutsideCountry']);\n      this.countriesOfTransfer = this.application['Countries'];\n      this.countriesDataSource = new MatTableDataSource(this.countriesOfTransfer);\n  \n      setTimeout(() => {\n        this.countriesDataSource.paginator = this.countryOfTransferPaginator;\n        this.countriesDataSource.sort = this.countryOfTransferMatSort;\n      });\n  \n      // STEP SIX\n      this.securityMeasures = this.application['SecurityMeasures'];\n      this.securityMeasureDataSource = new MatTableDataSource(this.securityMeasures);\n      setTimeout(() => {\n          this.securityMeasureDataSource.paginator = this.securityMeasurePaginator;\n          this.securityMeasureDataSource.sort = this.securityMeasureMatSort;\n      });\n  \n      if (this.application.Attachment) {\n        this.document = { \n          Document: null, \n          Name: 'Supporting Documentation.pdf', \n          Size: null, \n          Base64: this.application.Attachment \n        };\n      }\n  \n      if (this.application.Form3Attachment) {\n        this.documentForm3 = { \n          Document: null, \n          Name: 'Form 3.pdf', \n          Size: null, \n          Base64: this.application.Form3Attachment \n        };\n      }\n  \n      if (this.application.ProofOfPayment) {\n        this.proofOfPayment = {\n            Document: null, \n            Name: 'Proof of Payment.pdf', \n            Size: null, \n            Base64: this.application.ProofOfPayment \n        };\n      }\n  \n      this.formSecurityMeasures.get('RegistrationConsent').patchValue(this.application['RegistrationConsent'] == true ? true : null);\n      this.formSecurityMeasures.get('RegistrationDoneBy').patchValue(this.application['RegistrationDoneBy']);    \n    }\n  }\n\n  onSaveDraft(): void {\n    this.processing = true;\n\n    this.httpSub = this.http.put<ApiPayload>(this.endpoints.orgRegSaveDraft, this.getFormData())\n    .pipe(catchError(this.service.handleError))\n    .subscribe((response) => {\n\n      this.dialogRef = this.dialog.open(SuccessfulMessageDialogComponent, {\n        panelClass: ['successful-message-dialog', 'dialogs'],\n        disableClose: true,\n        data: {\n          title: response.message['title'],\n          message: response.message['body'],\n          status: response.code === 200 ? true : false,\n        }\n      });\n\n      this.processing = false;\n    }, (error) => {\n      this.processing = false;\n\n      if (error.error.message) {\n        this.dialogRef = this.dialog.open(SuccessfulMessageDialogComponent, {\n          panelClass: ['successful-message-dialog', 'dialogs'],\n          disableClose: true,\n          data: {\n            title: error.error.message['title'] ? error.error.message['title'] : 'Operation Failed',\n            message: error.error.message['body'] ? error.error.message['body'] : environment.technicalErrorResponse,\n            status: false,\n          }\n        });\n      } else {\n        this.service.determineErrorResponse(error);\n      }\n    });    \n  }\n\n  ngOnDestroy(): void {\n    if (this.httpSub) { this.httpSub.unsubscribe(); }\n  }\n\n\n  updateCollecthildrenData(event){\n\n    console.log(event.value);\n\n    if(event.value == 'Yes'){\n      this.showChildrenDataFields = true;\n      this.formChildrenData.get('PurposeForCollection').setValidators([Validators.required]);\n\n      this.formChildrenData.controls['PurposeForCollection'].updateValueAndValidity();\n    }\n    else{\n      this.showChildrenDataFields = false;\n\n      this.formChildrenData.get('PurposeForCollection').setValidators([]);\n\n      this.formChildrenData.get('PurposeForCollection').reset();\n\n      this.formChildrenData.controls['PurposeForCollection'].updateValueAndValidity();\n    }\n  }\n\n\n  generatePRN(){\n\n    this.Organisation_User_ID = this._auth.getOrganisationID();\n\n    console.log(this.getPRNRequestData()); \n    this.httpSub = this.http.post<ApiPayload>(this.endpoints.generatePRN, this.getPRNRequestData())\n    .pipe(catchError(this.service.handleError))\n    .subscribe((response) => {\n      console.log(response.data);\n      this.showPRNDownload = true;\n      \n      this.dialogRef = this.dialog.open(SuccessfulMessageDialogComponent, {\n        disableClose: true,\n        data: {\n          title: 'URA PRN',\n          message: 'PRN Generated successfully.Check the email and telephone number provided for more details.',\n          status: true,\n        }\n      });\n\n      this.formGeneralInformation.get('PRN').patchValue(response.data.PRN);\n\n      this.processing = false;\n    }, (error) => {\n      this.processing = false;\n\n      if (error.error.message) {\n        this.dialogRef = this.dialog.open( SuccessfulMessageDialogComponent, {\n          panelClass: ['forward-message-dialog', 'dialogs'],\n          disableClose: true,\n          data: {\n            title: error.error.message['title'] ? error.error.message['title'] : 'Operation Failed',\n            message: error.error.message['body'] ? error.error.message['body'] : environment.technicalErrorResponse,\n            status: false,\n          }\n        });\n      } else {\n        this.service.determineErrorResponse(error);\n      }\n    });\n\n  }\n\n  getPRNRequestData(){\n\n    const data =  {\n\n      phone_number: this.formGeneralInformation.get('PhoneNumberCode').value + '' + this.formGeneralInformation.get('PhoneNumber').value,\n      email: this.formGeneralInformation.get('EmailAddress').value,\n      organisation_name: this.formGeneralInformation.get('OrganizationName').value,\n      organisation_user_id : this._auth.getOrganisationID()\n\n    }\n\n    return data;\n  }\n\n\n  checkPRNStatus(){\n\n    this.Organisation_User_ID = this._auth.getOrganisationID();\n\n    console.log(this.getPRNRequestData()); \n    this.httpSub = this.http.post<ApiPayload>(this.endpoints.checkPRN, this.getPRN())\n    .pipe(catchError(this.service.handleError))\n    .subscribe((response) => {\n      console.log(response.data);\n\n      let message;\n      let status;\n\n      if(response.data.ErrorCode == 'A'){\n        message = 'The PRN is valid, however payment has not been made';\n        status = false;\n      }\n      else if(response.data.ErrorCode == 'R'){\n         message =  'The PRN is valid, however the cheque has not yet matured';\n         status = false;\n      }\n      else if(response.data.ErrorCode == 'T'){\n         message = 'Received and credited. The payment has been reconciled with the  bank';\n         status = true;\n      }\n      else if(response.data.ErrorCode == 'D'){\n         message = 'The PRN is valid, however the cheque was dishonoured';\n         status = false;\n      }\n      else if(response.data.ErrorCode == 'C'){\n         message = 'The PRN was cancelled';\n         status = false;\n      }\n      else if(response.data.ErrorCode == 'X'){\n         message = 'THe PRN has expired';\n         status = false;\n      }\n      else if(response.data.ErrorCode == 'APPOO1'){\n        message = response.data.ErrorDesc;\n        status =  false;\n      }\n      else{\n        message = 'An error occured';\n        status = false;\n      }\n      this.showPRNDownload = true;\n\n\n      \n      this.dialogRef = this.dialog.open(SuccessfulMessageDialogComponent, {\n        disableClose: true,\n        data: {\n          title: 'URA PRN',\n          message: message,\n          status: false,\n        }\n      });\n\n\n      this.processing = false;\n    }, (error) => {\n      this.processing = false;\n\n      if (error.error.message) {\n        this.dialogRef = this.dialog.open( SuccessfulMessageDialogComponent, {\n          panelClass: ['forward-message-dialog', 'dialogs'],\n          disableClose: true,\n          data: {\n            title: error.error.message['title'] ? error.error.message['title'] : 'Operation Failed',\n            message: error.error.message['body'] ? error.error.message['body'] : environment.technicalErrorResponse,\n            status: false,\n          }\n        });\n      } else {\n        this.service.determineErrorResponse(error);\n      }\n    });\n  }\n\n  getPRN(){\n\n    const data =  {\n\n      prn : this.formGeneralInformation.get('PRN').value\n\n    }\n\n    return data;\n  }\n\n\n  downloadPRNDownload(){\n\n\n    this.httpSub = this.http.post<ApiPayload>(this.endpoints.checkPRN, this.getPRN())\n    .pipe(catchError(this.service.handleError))\n    .subscribe((response) => {\n\n      console.log(response.data);\n      this.dialogRef = this.dialog.open(DownloadPRNReceiptComponent, {\n        disableClose: true,\n        data: {\n          download: true,\n          prn_data:response.data\n        }\n      \n      });\n\n      \n    }, (error) => {\n      this.processing = false;\n\n      if (error.error.message) {\n        this.dialogRef = this.dialog.open( SuccessfulMessageDialogComponent, {\n          panelClass: ['forward-message-dialog', 'dialogs'],\n          disableClose: true,\n          data: {\n            title: error.error.message['title'] ? error.error.message['title'] : 'Operation Failed',\n            message: error.error.message['body'] ? error.error.message['body'] : environment.technicalErrorResponse,\n            status: false,\n          }\n        });\n      } else {\n        this.service.determineErrorResponse(error);\n      }\n    });\n\n    \n  }\n}\n","\n<fury-page-layout mode=\"card\">\n    <fury-page-layout-header>\n        <fury-breadcrumbs [@fadeInRight] [crumbs]=\"['New Registration']\"\n                          current=\"New Application\"></fury-breadcrumbs>\n    </fury-page-layout-header>\n\n    <fury-page-layout-content [@fadeInUp]>\n        <main class=\"fadeInUp _delay4ms\">\n\n            <!-- <app-page-breadcrumb [title]=\"'Application for New Registration / Renewal'\"></app-page-breadcrumb> -->\n        \n            <mat-horizontal-stepper \n                [linear]=\"isLinear\"\n                [selectedIndex]=\"selectedIndex\"\n                labelPosition=\"bottom\" #stepper>\n        \n                <mat-step [stepControl]=\"formGeneralInformation\">\n                    <ng-template matStepLabel>\n                        <h3>Applicant</h3>\n                    </ng-template>\n        \n                    <form [formGroup]=\"formGeneralInformation\">\n                        <h1 class=\"full-width step-header\">Details of the applicant which could be an organisation or Individual that collects or processes Personal Data </h1>\n        \n                        <mat-form-field>\n                            <mat-label>Name of Organisation <span class=\"required-field\">required</span></mat-label>\n                            <input appUppercase matInput formControlName=\"OrganizationName\">       \n                            <mat-error *ngIf=\"formGeneralInformation.get('OrganizationName').invalid\">{{ getOrganizationNameErrorMessage() }}</mat-error>\n                        </mat-form-field>  \n        \n                        <div class=\"telephone-code-number-wrapper\">\n                            <mat-form-field class=\"fadeInUp _delay2ms\">\n                                <mat-label>Pick one </mat-label>\n                                <mat-select formControlName=\"PhoneNumberCode\">\n                                    <mat-option selected *ngIf=\"!selected\" value=\"256\">+256</mat-option>\n                                    <!-- <mat-option selected *ngIf=\"!selected\" value=\"256\">+256 - Uganda</mat-option> -->\n                                    <mat-option *ngFor=\"let code of countries\" [value]=\"code.PhoneCode\" (click)=\"selected = true\">\n                                        +{{ code.PhoneCode }}\n                                    </mat-option>\n                                </mat-select>\n                            </mat-form-field>\n        \n                            <!-- <mat-form-field class=\"fadeInUp _delay2ms\" [hintLabel]=\"'Organisation Telephone Number.'\"> -->\n                            <mat-form-field class=\"fadeInUp _delay2ms\">\n                                <mat-label>Organisation Telephone Number <span class=\"required-field\">required</span></mat-label>\n                                <input type=\"text\" maxlength=\"11\" matInput appTelephoneFormaterDirective formControlName=\"PhoneNumber\" placeholder=\"Ex. 414 318 111\">\n                                <mat-error *ngIf=\"formGeneralInformation.get('PhoneNumber').invalid\">{{ getTelephoneNumberErrorMessage() }}</mat-error>\n                            </mat-form-field> \n                        </div>                \n        \n                        <mat-form-field>\n                            <mat-label>Organisation Email Address <span class=\"required-field\">required</span></mat-label>\n                            <input appRemoveSpaces matInput formControlName=\"EmailAddress\">\n                            <mat-error *ngIf=\"formGeneralInformation.get('EmailAddress').invalid\">{{ getEmailAddressErrorMessage() }}</mat-error>\n                        </mat-form-field>   \n                                \n                        <mat-form-field [hintLabel]=\"'Choose all that apply'\">\n                            <mat-label>Category <span class=\"required-field\">required</span></mat-label>\n                            <mat-select multiple formControlName=\"DPPActCategory\">\n                                <mat-option *ngFor=\"let cat of organisationCategories\" [value]=\"cat.OrganisationCategoryId\">\n                                    {{ cat.OrganisationCategoryName }}\n                                </mat-option>\n                            </mat-select>   \n                            <mat-error *ngIf=\"formGeneralInformation.get('DPPActCategory').invalid\">{{ getSelectErrorMessage() }}</mat-error> \n                        </mat-form-field>                             \n        \n                        <mat-form-field>\n                            <mat-label>Type of Organisation <span class=\"required-field\">required</span></mat-label>\n                            <mat-select formControlName=\"OrganizationTypeID\" #typeOfOrganisation>\n                                <mat-option *ngFor=\"let type of organisationTypes\" (click)=\"OrganizationType = type.OrganisationType\" [value]=\"type.OrganisationTypeID\">\n                                    {{ type.OrganisationType }}\n                                </mat-option>\n                            </mat-select>\n                            <mat-error *ngIf=\"formGeneralInformation.get('OrganizationTypeID').invalid\">{{ getSelectErrorMessage() }}</mat-error> \n                        </mat-form-field>                   \n        \n                        <mat-form-field *ngIf=\"typeOfOrganisation.value && typeOfOrganisation.value !== 4\">\n                            <mat-label>Country of Incorporation <span class=\"required-field\">required</span></mat-label>\n                            <mat-select formControlName=\"CountryOfIncorporation\">\n                                <mat-option *ngFor=\"let country of countries\" (click)=\"CountryOfIncorporation = country.Name\" [value]=\"country.CountryID\">\n                                    {{ country.Name }}\n                                </mat-option>\n                            </mat-select>\n                            <mat-error *ngIf=\"formGeneralInformation.get('CountryOfIncorporation').invalid\">{{ getSelectErrorMessage() }}</mat-error> \n                        </mat-form-field>        \n        \n                        <mat-form-field *ngIf=\"typeOfOrganisation.value && typeOfOrganisation.value !== 4\">\n                            <mat-label>Registration Number <span class=\"required-field\">required</span></mat-label>\n                            <input appUppercase appRemoveSpaces matInput maxlength=\"25\" formControlName=\"URSBNumber\"> \n                            <mat-error *ngIf=\"formGeneralInformation.get('URSBNumber').invalid\">{{ getURSBNumberErrorMessage() }}</mat-error>\n                        </mat-form-field>     \n                        \n                        <mat-form-field>\n                            <mat-label>Sector <span class=\"required-field\">required</span></mat-label>\n                            <mat-select formControlName=\"SectorID\" #Sector>\n                                <mat-option *ngFor=\"let sector of sectors\" (click)=\"SectorName = sector.Sector\" [value]=\"sector.SectorID\">\n                                    {{ sector.Sector }}\n                                </mat-option>\n                            </mat-select>\n                            <mat-error *ngIf=\"formGeneralInformation.get('SectorID').invalid\">{{ getSelectErrorMessage() }}</mat-error>\n                        </mat-form-field>        \n                        \n                        <mat-form-field hintLabel=\"If Other, Please specify the Sector.\" *ngIf=\"Sector.value === 14\">\n                            <mat-label>Specify Sector <span class=\"required-field\">required</span></mat-label>\n                            <input appUppercase matInput maxlength=\"50\" formControlName=\"OtherSector\">    \n                            <mat-error *ngIf=\"formGeneralInformation.get('OtherSector').invalid\">{{ getOtherSectorErrorMessage() }}</mat-error>\n                        </mat-form-field>                 \n        \n                        <mat-form-field>\n                            <mat-label>Physical Address <span class=\"required-field\">required</span></mat-label>\n                            <input appUppercase matInput maxlength=\"255\" formControlName=\"Location\">            \n                            <mat-error *ngIf=\"formGeneralInformation.get('Location').invalid\">{{ getLocationErrorMessage() }}</mat-error>                \n                        </mat-form-field>  \n        \n                        <mat-form-field>\n                            <mat-label>Nature of Business Categories<span class=\"required-field\">required</span></mat-label>\n                            <mat-select formControlName=\"NatureOfBusinessCat\">\n                                <mat-option *ngFor=\"let cat of natureOfBusinessCat\" (click)=\"NatureOfBusinessCat = cat.NatureOfBusinessCategoryName\" [value]=\"cat.NatureOfBusinessCatId\">\n                                    {{ cat.NatureOfBusinessCategoryName }}\n                                </mat-option>\n                            </mat-select>    \n                            <mat-error *ngIf=\"formGeneralInformation.get('NatureOfBusinessCat').invalid\">{{ getSelectErrorMessage() }}</mat-error>\n                        </mat-form-field>                   \n        \n                        <mat-form-field [hintLabel]=\"'Choose all that apply'\">\n                            <mat-label>Nature of Business Sub-Categories <span class=\"required-field\">required</span></mat-label>\n                            <mat-select multiple formControlName=\"NatureOfBusinessSubCat\">\n                                <mat-option *ngFor=\"let sub of natureOfBusinessSubCat\" [value]=\"sub.NatureOfBusinessSubCatId\" [matTooltip]=\"sub.NatureOfBusinessSubCategoryName\">\n                                    {{ sub.NatureOfBusinessSubCategoryName }}\n                                </mat-option>\n                            </mat-select> \n                            <mat-error *ngIf=\"formGeneralInformation.get('NatureOfBusinessSubCat').invalid\">{{ getSelectErrorMessage() }}</mat-error>   \n                        </mat-form-field>\n                        <br/>             \n\n                        \n                        <!--<mat-form-field>\n                            <mat-label>PRN <span class=\"required-field\">required</span></mat-label>\n                            <input matInput maxlength=\"255\" formControlName=\"PRN\">            \n                        </mat-form-field>  -->\n                       \n                        <!--<div>\n                            <button \n                                mat-button \n                                class=\"save-draft-btn\"\n                                [disabled]=\"processing\"\n                                (click)=\"generatePRN()\"\n                                style=\"background-color: #1976d2; color: #fff; margin-right: 40px;\">\n                                Generate PRN\n                            </button>       \n            \n                            <button \n                                mat-button \n                                class=\"save-draft-btn\"\n                                [disabled]=\"processing\"\n                                (click)=\"checkPRNStatus()   \"\n                                style=\"background-color: #1976d2; color: #fff; margin-right: 40px;\">\n                                Check PRN Status\n                            </button>  \n\n                            <button\n                                mat-button\n                                *ngIf=\"showPRNDownload == true\"\n                                style=\"background-color: #1976d2; color: #fff;\"\n                                class=\"download\" \n                                matTooltip=\"Download copy of PRN slip\"\n                                (click)=\"downloadPRNDownload()\">\n                                <div class=\"button-label\">\n                                    <mat-icon>sim_card_download</mat-icon>\n                                    <span>Download</span>\n                                </div>\n                            </button>\n                        </div>   -->\n                    </form>\n        \n                    <div class=\"button-wrapper\">\n                        <button \n                            mat-button \n                            class=\"save-draft-btn\"\n                            [disabled]=\"processing\"\n                            (click)=\"onSaveDraft()\"\n                            color=\"primary\">\n                            Save\n                        </button>       \n        \n                        <button \n                            [disabled]=\"formGeneralInformation.invalid\"\n                            mat-button \n                            class=\"next-btn\" \n                            color=\"primary\" \n                            matStepperNext>\n                            Next\n                        </button>\n                    </div>             \n                </mat-step>\n        \n                <mat-step [stepControl]=\"formOrganisationDetails\">\n                    <ng-template matStepLabel>\n                        <h3>Data Protection <br />Officer</h3>\n                    </ng-template>\n        \n                    <form [formGroup]=\"formOrganisationDetails\">     \n        \n                        <h1 class=\"full-width step-header\">Details of Data Protection Officer </h1>    \n        \n                        <div class=\"grouped-items\" [ngClass]=\"{'full-width': formOrganisationDetails.get('DPORequired').value !== 'Yes'}\">\n                            <h3>Do you have a designated data protection officer ? </h3>\n            \n                            <mat-radio-group \n                                color=\"primary\" \n                                formControlName=\"DPORequired\" \n                                aria-label=\"Pick one\">\n                                <mat-radio-button value=\"Yes\">Yes</mat-radio-button>\n                                <mat-radio-button value=\"No\">No</mat-radio-button>\n                            </mat-radio-group>        \n                        </div>                  \n                        \n                        <mat-form-field *ngIf=\"formOrganisationDetails.get('DPORequired').value === 'Yes'\">\n                            <mat-label>Name <span class=\"required-field\">required</span></mat-label>\n                            <input formControlName=\"DPOName\" matInput>\n                            <mat-error *ngIf=\"formOrganisationDetails.get('DPOName').invalid\">{{ getDPONameErrorMessage() }}</mat-error>\n                        </mat-form-field>\n                \n                        <mat-form-field *ngIf=\"formOrganisationDetails.get('DPORequired').value === 'Yes'\">\n                            <mat-label>Physical Address <span class=\"required-field\">required</span></mat-label>\n                            <input formControlName=\"DPOPhysicalAddress\" maxlength=\"255\" matInput>\n                            <mat-error *ngIf=\"formOrganisationDetails.get('DPOPhysicalAddress').invalid\">{{ getDPOPhysicalAddressErrorMessage() }}</mat-error>\n                        </mat-form-field>\n                        \n                        <div class=\"telephone-code-number-wrapper\" *ngIf=\"formOrganisationDetails.get('DPORequired').value === 'Yes'\">\n                            <mat-form-field class=\"fadeInUp _delay2ms\">\n                                <mat-label>Pick one </mat-label>\n                                <mat-select formControlName=\"PhoneNumberCode\">\n                                    <mat-option selected *ngIf=\"!DPOSelected\" value=\"256\">+256</mat-option>\n                                    <!-- <mat-option selected *ngIf=\"!selected\" value=\"256\">+256 - Uganda</mat-option> -->\n                                    <mat-option *ngFor=\"let code of countries\" [value]=\"code.PhoneCode\" (click)=\"DPOSelected = true\">\n                                        +{{ code.PhoneCode }}\n                                    </mat-option>\n                                </mat-select>\n                                <!-- <mat-error *ngIf=\"formGeneralInformation.get('PhoneNumberCode').invalid\">{{ getSelectInputErrorMessage() }}</mat-error>      -->\n                            </mat-form-field>\n        \n                            <!-- <mat-form-field class=\"fadeInUp _delay2ms\" [hintLabel]=\"'Organisation Telephone Number.'\"> -->\n                            <mat-form-field class=\"fadeInUp _delay2ms\">\n                                <mat-label>Telephone Number <span class=\"required-field\">required</span></mat-label>\n                                <input type=\"text\" maxlength=\"11\" matInput appTelephoneFormaterDirective formControlName=\"DPOPhoneNumber\" placeholder=\"Ex. 414 318 111\">\n                                <mat-error *ngIf=\"formOrganisationDetails.get('DPOPhoneNumber').invalid\">{{ getDPOPhoneNumberErrorMessage() }}</mat-error>\n                            </mat-form-field> \n                        </div>                  \n                \n                        <mat-form-field *ngIf=\"formOrganisationDetails.get('DPORequired').value === 'Yes'\">\n                            <mat-label>Email Address <span class=\"required-field\">required</span></mat-label>\n                            <input appRemoveSpaces formControlName=\"DPOEmailAddress\" matInput>\n                            <mat-error *ngIf=\"formOrganisationDetails.get('DPOEmailAddress').invalid\">{{ getDPOEmailAddressErrorMessage() }}</mat-error>\n                        </mat-form-field>       \n        \n                        <mat-form-field *ngIf=\"formOrganisationDetails.get('DPORequired').value === 'Yes'\" class=\"full-width\" hintLabel=\"Any other title held apart from DPO (Data Protection Officer).\">\n                            <mat-label>Title Held <span class=\"required-field\">required</span></mat-label>\n                            <textarea #PositionInput matInput formControlName=\"DPOPositionInOrganisation\" maxlength=\"1000\"></textarea>\n                            <mat-hint align=\"end\">{{ PositionInput.value.length }} / 1000</mat-hint>\n                            <mat-error *ngIf=\"formOrganisationDetails.get('DPOPositionInOrganisation').invalid\">{{ getDPOPositionInOrganisationErrorMessage() }}</mat-error>\n                        </mat-form-field>                  \n                    </form>\n        \n                    <div class=\"button-wrapper\">       \n                        <button mat-button class=\"back-btn\" matStepperPrevious>Back</button>   \n                        \n                        <button \n                            mat-button \n                            class=\"save-draft-btn\"\n                            [disabled]=\"processing\"\n                            (click)=\"onSaveDraft()\"\n                            color=\"primary\">\n                            Save\n                        </button> \n\n                        <button \n                            [disabled]=\"formOrganisationDetails.invalid\"\n                            mat-button \n                            class=\"next-btn\" \n                            color=\"primary\" \n                            matStepperNext>\n                            Next\n                        </button>\n                    </div>             \n                </mat-step>\n        \n                <mat-step [stepControl]=\"formPersonalDataHeld\">\n                    <ng-template matStepLabel>\n                        <h3>Data Collected <br /> or Processed</h3>\n                    </ng-template>\n        \n                    <form [formGroup]=\"formPersonalDataHeld\" class=\"personal-data-affected\">       \n                        \n                        <h1 class=\"full-width step-header\">Description of Data collected or processed </h1>\n        \n                        <mat-form-field hintLabel=\"Choose all that apply.\" class=\"full-width\">\n                            <mat-label>Source of Data <span class=\"required-field\">required</span></mat-label>\n                            <mat-select multiple formControlName=\"SourceOfDataID\">\n                                <mat-option *ngFor=\"let source of dataSources\" [value]=\"source.DataSourceID\">\n                                    {{ source.DataSource }}\n                                </mat-option>\n                            </mat-select>    \n                            <mat-error *ngIf=\"formPersonalDataHeld.get('SourceOfDataID').invalid\">{{ getSelectErrorMessage() }}</mat-error> \n                        </mat-form-field>        \n        \n                        <h1 class=\"full-width heading\">Personal Data Collected Or Processed</h1>\n                        \n                        <section *ngFor=\"let category of dataCategories; let i = index\" class=\"expand-section categories\">        \n                            <div>\n                                <h3 [innerHTML]=\"category.DataCategory\"></h3>\n                                <mat-icon matTooltipPosition=\"right\"  [matTooltip]=\"category.DataDescription\">info</mat-icon>\n                            </div>\n\n                            <mat-checkbox\n                                *ngFor=\"let SubCategory of category.SubCategories\" \n                                [ngClass]=\"{'full-width': category.SubCategories.length === 1}\"\n                                color=\"primary\"\n                                [checked]=\"SubCategory.IsChecked\"\n                                (change)=\"onChangeSubCategory($event,SubCategory)\"\n                                [required]=\"'false'\">\n                                {{ SubCategory.DataSubCategory }}\n                            </mat-checkbox>    \n                        </section>\n                    </form>\n        \n                    <div class=\"button-wrapper\">       \n                        <button mat-button class=\"back-btn\" matStepperPrevious>Back</button>\n        \n                        <button \n                            mat-button \n                            class=\"save-draft-btn\"\n                            [disabled]=\"processing\"\n                            (click)=\"onSaveDraft()\"\n                            color=\"primary\">\n                            Save\n                        </button> \n\n                        <button \n                            [disabled]=\"formPersonalDataHeld.invalid || selectedDataSubCategory.length === 0\"\n                            mat-button \n                            class=\"next-btn\" \n                            color=\"primary\" \n                            matStepperNext>\n                            Next\n                        </button>\n                    </div>             \n                </mat-step>\n\n                <mat-step [stepControl]=\"formChildrenData\">\n                    <ng-template matStepLabel>\n                        <h3>Children's Data</h3>\n                    </ng-template>\n\n                    <form [formGroup]=\"formChildrenData\">\n                        \n                        <div class=\"grouped-items\">\n                            <h3>Do you collect personal data relating to Children?<span class=\"required-field\">required</span></h3>\n            \n                            <mat-radio-group color=\"primary\" aria-label=\"Pick one\" formControlName=\"CollectChildrenData\" (change)=\"updateCollecthildrenData($event)\">\n                                <mat-radio-button value=\"Yes\">Yes</mat-radio-button>\n                                <mat-radio-button value=\"No\">No</mat-radio-button>\n                            </mat-radio-group>        \n                        </div>  \n        \n                        <mat-form-field *ngIf=\"showChildrenDataFields == true\">\n                            <mat-label>Reason / Purpose for collecting children's data<span class=\"required-field\">required</span> </mat-label>\n                        \n                            <mat-select multiple formControlName=\"PurposeForCollection\">\n                                <mat-option *ngFor=\"let child of childDataPurposes\" [value]=\"child.ChildDataID\">\n                                    {{ child.ChildDataPurpose }}\n                                </mat-option>\n                            </mat-select>  \n                        </mat-form-field>                  \n                        \n                                    \n        \n                    </form>\n\n                    <div class=\"button-wrapper\">       \n                        <button mat-button class=\"back-btn\" matStepperPrevious>Back</button>\n        \n                        <button \n                            mat-button \n                            class=\"save-draft-btn\"\n                            [disabled]=\"processing\"\n                            (click)=\"onSaveDraft()\"\n                            color=\"primary\">\n                            Save\n                        </button> \n\n                        <button \n                            [disabled]=\"formChildrenData.invalid\"\n                            mat-button \n                            class=\"next-btn\" \n                            color=\"primary\" \n                            matStepperNext>\n                            Next\n                        </button>\n                    </div>          \n\n                </mat-step>\n        \n                <mat-step [stepControl]=\"formPurposeRetention\">\n                    <ng-template matStepLabel>\n                        <h3>Purpose & Retention</h3>\n                    </ng-template>\n        \n                    <form [formGroup]=\"formPurposeRetention\">       \n                        \n                        <h1 class=\"full-width step-header\">Description of Purpose for which data is collected or processed </h1>\n        \n                        <mat-form-field hintLabel=\"Why do you collect personal Data?\">\n                            <mat-label>For What Purpose ?<span class=\"required-field\">required</span></mat-label>\n                            <mat-select formControlName=\"Purpose\" multiple>\n                                <mat-option *ngFor=\"let purpose of dataPurposes\" [value]=\"purpose.DataPurposeID\">\n                                    {{ purpose.DataPurpose }}\n                                </mat-option>\n                            </mat-select>  \n                            <mat-error *ngIf=\"formPurposeRetention.get('Purpose').invalid\">{{ getSelectErrorMessage() }}</mat-error>   \n                        </mat-form-field>\n        \n                        <mat-form-field hintLabel=\"If the purpose is Collection / Processing is required by Law.\" *ngIf=\"SpecifyTheLaw\">\n                            <mat-label>Specify the Law <span class=\"required-field\">required</span></mat-label>\n                            <input matInput #SpecifyTheLawInput maxlength=\"1000\" formControlName=\"SpecifyTheLaw\">        \n                            <mat-hint align=\"end\">{{ SpecifyTheLawInput.value.length }} / 1000</mat-hint>    \n                            <mat-error *ngIf=\"formPurposeRetention.get('SpecifyTheLaw').invalid\">{{ getRequiredErrorMessage() }}</mat-error>\n                        </mat-form-field>  \n        \n                        <mat-form-field hintLabel=\"If the purpose is to provide services / products to Individuals.\" *ngIf=\"ServiceOrProductProvided\">\n                            <mat-label>Specify the Service / Product Provided<span class=\"required-field\">required</span></mat-label>\n                            <input matInput #ServiceOrProductProvidedInput maxlength=\"1000\" formControlName=\"ServiceOrProductProvided\">     \n                            <mat-hint align=\"end\">{{ ServiceOrProductProvidedInput.value.length }} / 1000</mat-hint>    \n                            <mat-error *ngIf=\"formPurposeRetention.get('ServiceOrProductProvided').invalid\">{{ getRequiredErrorMessage() }}</mat-error>\n                        </mat-form-field>  \n        \n                        <mat-form-field hintLabel=\"If the purpose is for Compliance with a Legal Obligation.\" *ngIf=\"SpecifyLegalObligation\">\n                            <mat-label>Specify the Legal Obligation<span class=\"required-field\">required</span></mat-label>\n                            <input matInput #SpecifyLegalObligationInput maxlength=\"1000\" formControlName=\"SpecifyLegalObligation\">  \n                            <mat-hint align=\"end\">{{ SpecifyLegalObligationInput.value.length }} / 1000</mat-hint>    \n                            <mat-error *ngIf=\"formPurposeRetention.get('SpecifyLegalObligation').invalid\">{{ getRequiredErrorMessage() }}</mat-error>\n                        </mat-form-field>  \n                        \n                        <mat-form-field hintLabel=\"Approximate number of Personal Data Records held.\">\n                            <mat-label>Total Records <span class=\"optional-field\">optional</span></mat-label>\n                            <input appCurrencyDirective matInput maxlength=\"14\" formControlName=\"TotalRecordsAtRegistration\">                            \n                            <mat-error *ngIf=\"formPurposeRetention.get('TotalRecordsAtRegistration').invalid\">{{ getPatternErrorMessage() }}</mat-error>\n                        </mat-form-field>  \n                        \n                        <mat-form-field hintLabel=\"The % annual growth of Personal Records held\">\n                            <mat-label>Percentage Annual Growth <span class=\"optional-field\">optional</span></mat-label>\n                            <input appCurrencyDirective matInput max=\"100\" maxlength=\"3\" formControlName=\"RecordPercentageGrowth\">                            \n                            <mat-error *ngIf=\"formPurposeRetention.get('RecordPercentageGrowth').invalid\">{{ getRecordPercentageGrowthErrorMessage() }}</mat-error>\n                            <mat-hint align=\"end\">Max. 100%</mat-hint>      \n                            <span matSuffix>%</span>\n                        </mat-form-field>   \n        \n                        <mat-form-field hintLabel=\"Duration for which personal data shall be kept (Years).\">\n                            <mat-label>Retention period <span class=\"required-field\">required</span></mat-label>\n                            <input appCurrencyDirective max=\"100\" matInput maxlength=\"3\" formControlName=\"RetentionPeriod\">                          \n                            <mat-error *ngIf=\"formPurposeRetention.get('RetentionPeriod').invalid\">{{ getRetentionPeriodErrorMessage() }}</mat-error>\n                            <mat-hint align=\"end\">Max. 100 years</mat-hint>      \n                            <span matSuffix>Year(s)</span>\n                        </mat-form-field>\n                    </form>\n        \n                    <div class=\"button-wrapper\">       \n                        <button mat-button class=\"back-btn\" matStepperPrevious>Back</button>\n        \n                        <button \n                            mat-button \n                            class=\"save-draft-btn\"\n                            [disabled]=\"processing\"\n                            (click)=\"onSaveDraft()\"\n                            color=\"primary\">\n                            Save\n                        </button> \n\n                        <button \n                            [disabled]=\"formPurposeRetention.invalid\"\n                            mat-button \n                            class=\"next-btn\" \n                            color=\"primary\" \n                            matStepperNext>\n                            Next\n                        </button>\n                    </div>             \n                </mat-step>\n        \n                <mat-step [stepControl]=\"formThirdParties\">\n                    <ng-template matStepLabel>\n                        <h3>Disclosure & Transfer</h3>\n                    </ng-template>\n        \n                    <form [formGroup]=\"formThirdParties\">\n        \n                        <h1 class=\"full-width step-header\">List of persons or Bodies to whom personal data may be disclosed</h1>\n                        \n                        <div class=\"grouped-items full-width\">\n                            <h3>Do you disclose Personal Data to other Persons or Bodies ?</h3>\n            \n                            <mat-radio-group color=\"primary\" aria-label=\"Pick one\" formControlName=\"PersonalDataIsForDisclosure\">\n                                <mat-radio-button value=\"Yes\">Yes</mat-radio-button>\n                                <mat-radio-button value=\"No\">No</mat-radio-button>\n                            </mat-radio-group>        \n                        </div>    \n\n                        <section \n                            *ngIf=\"formThirdParties.get('PersonalDataIsForDisclosure').value === 'Yes'\"\n                            class=\"expand-section reduced-properties table-wrapper fadeInUp _delay3ms\">\n                            <button \n                                mat-button\n                                color=\"primary\"\n                                [disabled]=\"processing\"\n                                class=\"add-item-button\"\n                                (click)=\"onAddAThirdParty()\">\n                                <div class=\"button-label\">\n                                    <mat-icon>add</mat-icon>                            \n                                    <span>Add Person / Body</span>\n                                </div>\n                            </button>\n                            \n                            <div class=\"table-wrapper\">\n                                <table \n                                    mat-table \n                                    #thirdPartyMatSort=\"matSort\"\n                                    matSortDisableClear=\"true\"\n                                    [dataSource]=\"thirdPartyDataSource\"\n                                    matSort>\n                    \n                                    <ng-container matColumnDef=\"Count\">\n                                        <th mat-header-cell *matHeaderCellDef> # </th>\n                                        <td mat-cell *matCellDef=\"let index = index\"> {{ index + 1 }} </td>\n                                    </ng-container>\n                    \n                                    <ng-container matColumnDef=\"NameOfThirdParty\">\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Person / Body </th>\n                                        <td mat-cell *matCellDef=\"let row\">{{ row.ThirdPartyName }}</td>\n                                    </ng-container>          \n                    \n                                    <ng-container matColumnDef=\"Purpose\">\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Purpose </th>\n                                        <td mat-cell *matCellDef=\"let row\">{{ row.Purpose }}</td>\n                                    </ng-container>                                 \n                    \n                                    <!-- Actions Column -->\n                                    <ng-container matColumnDef=\"Actions\">\n                                        <th mat-header-cell *matHeaderCellDef> Actions </th>\n                                        <td mat-cell *matCellDef=\"let row; let index = index\">\n                                            <button \n                                                mat-button \n                                                class=\"action-btn\"\n                                                [matMenuTriggerFor]=\"menu\" \n                                                (click)=\"$event.stopPropagation()\"\n                                                matTooltip=\"See more options\">\n                                                <mat-icon>more_vert</mat-icon>\n                                            </button>\n                    \n                                            <mat-menu yPosition=\"below\" #menu=\"matMenu\" class=\"more-options-mat-menu\">\n                    \n                                                <button \n                                                    mat-menu-item \n                                                    (click)=\"$event.stopPropagation();onEditThirdParty(row)\">\n                                                    <mat-icon>edit</mat-icon>\n                                                    <span>Make Changes</span>\n                                                </button>\n                                                      \n                                                <hr />\n                    \n                                                <button \n                                                    mat-menu-item \n                                                    (click)=\"$event.stopPropagation();onRemoveThirdParty(row)\">\n                                                    <mat-icon color=\"warn\">delete</mat-icon>\n                                                    <span>Remove</span>\n                                                </button>\n                    \n                                            </mat-menu>                                                  \n                                        </td>\n                                    </ng-container>\n                    \n                                    <tr mat-header-row *matHeaderRowDef=\"thirdPartyDisplayedColumns\"></tr>\n                                    <tr mat-row *matRowDef=\"let row; columns: thirdPartyDisplayedColumns;\" class=\"mat-data-row\"></tr>\n                                </table>\n        \n                                <mat-paginator \n                                    #thirdPartyPaginator\n                                    [pageSize]=\"10\"\n                                    [pageSizeOptions]=\"[5, 10]\">\n                                </mat-paginator>                    \n                            </div>                \n                        </section>    \n                        \n                        <hr class=\"full-width\" />\n        \n                        <div class=\"grouped-items full-width\">\n                            <h3>Do you Transfer personal data outside Uganda ?</h3>\n            \n                            <mat-radio-group color=\"primary\" aria-label=\"Pick one\" formControlName=\"StoreDataOutsideCountry\">\n                                <mat-radio-button value=\"Yes\">Yes</mat-radio-button>\n                                <mat-radio-button value=\"No\">No</mat-radio-button>\n                            </mat-radio-group>        \n                        </div> \n        \n                        <section \n                            *ngIf=\"formThirdParties.get('StoreDataOutsideCountry').value === 'Yes'\"\n                            class=\"expand-section reduced-properties table-wrapper\">\n                            <button \n                                mat-button\n                                color=\"primary\"\n                                [disabled]=\"processing\"\n                                class=\"add-item-button\"\n                                (click)=\"onAddACountry()\">\n                                <div class=\"button-label\">\n                                    <mat-icon>add</mat-icon>                            \n                                    <span>Add A Country</span>\n                                </div>\n                            </button>\n                            \n                            <div class=\"table-wrapper\">\n                                <table \n                                    mat-table \n                                    #countryOfTransferMatSort=\"matSort\"\n                                    matSortDisableClear=\"true\"\n                                    [dataSource]=\"countriesDataSource\"\n                                    matSort>\n                    \n                                    <ng-container matColumnDef=\"Count\">\n                                        <th mat-header-cell *matHeaderCellDef> # </th>\n                                        <td mat-cell *matCellDef=\"let index = index\"> {{ index + 1 }} </td>\n                                    </ng-container>\n                    \n                                    <ng-container matColumnDef=\"Country\">\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Country </th>\n                                        <td mat-cell *matCellDef=\"let row\">{{ row.Country }}</td>\n                                    </ng-container>          \n                    \n                                    <ng-container matColumnDef=\"Purpose\">\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Purpose </th>\n                                        <td mat-cell *matCellDef=\"let row\">{{ row.Purpose }}</td>\n                                    </ng-container>                                 \n                    \n                                    <ng-container matColumnDef=\"Description\">\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Description </th>\n                                        <td mat-cell *matCellDef=\"let row\">{{ row.Description }}</td>\n                                    </ng-container>                                 \n                    \n                                    <!-- Actions Column -->\n                                    <ng-container matColumnDef=\"Actions\">\n                                        <th mat-header-cell *matHeaderCellDef> Actions </th>\n                                        <td mat-cell *matCellDef=\"let row; let index = index\">\n                                            <button \n                                                mat-button \n                                                class=\"action-btn\"\n                                                [matMenuTriggerFor]=\"menu\" \n                                                (click)=\"$event.stopPropagation()\"\n                                                matTooltip=\"See more options\">\n                                                <mat-icon>more_vert</mat-icon>\n                                            </button>\n                    \n                                            <mat-menu yPosition=\"below\" #menu=\"matMenu\" class=\"more-options-mat-menu\">\n                    \n                                                <button \n                                                    mat-menu-item \n                                                    (click)=\"$event.stopPropagation();onEditCountry(row)\">\n                                                    <mat-icon>edit</mat-icon>\n                                                    <span>Make Changes</span>\n                                                </button>\n                                                      \n                                                <hr />\n                    \n                                                <button \n                                                    mat-menu-item \n                                                    (click)=\"$event.stopPropagation();onRemoveCountry(row)\">\n                                                    <mat-icon color=\"warn\">delete</mat-icon>\n                                                    <span>Remove</span>\n                                                </button>\n                    \n                                            </mat-menu>                                                  \n                                        </td>\n                                    </ng-container>\n                    \n                                    <tr mat-header-row *matHeaderRowDef=\"countryDisplayedColumns\"></tr>\n                                    <tr mat-row *matRowDef=\"let row; columns: countryDisplayedColumns;\" class=\"mat-data-row\"></tr>\n                                </table>\n        \n                                <mat-paginator \n                                    #countryOfTransferPaginator\n                                    [pageSize]=\"10\"\n                                    [pageSizeOptions]=\"[5, 10]\">\n                                </mat-paginator>                    \n                            </div>                \n                        </section>                   \n        \n                    </form>\n        \n                    <div class=\"button-wrapper\">\n                        <button mat-button class=\"back-btn\" matStepperPrevious>Back</button>\n                        \n                        <button \n                            mat-button \n                            class=\"save-draft-btn\"\n                            [disabled]=\"processing\"\n                            (click)=\"onSaveDraft()\"\n                            color=\"primary\">\n                            Save\n                        </button> \n\n                        <button \n                            mat-button \n                            [disabled]=\"formThirdParties.invalid \n                            || processing \n                            || ((formThirdParties.get('PersonalDataIsForDisclosure').value === 'Yes') && (thirdParties.length === 0)) \n                            || ((formThirdParties.get('StoreDataOutsideCountry').value === 'Yes') && (countries.length === 0))\" \n                            class=\"next-btn\" \n                            color=\"primary\" \n                            matStepperNext>\n                            Next\n                        </button>\n                    </div>\n                </mat-step>\n        \n                <mat-step [stepControl]=\"formSecurityMeasures\">\n                    <ng-template matStepLabel>\n                        <h3>Security Information</h3>\n                    </ng-template>\n        \n                    <form [formGroup]=\"formSecurityMeasures\">\n        \n                        <h1 class=\"full-width step-header\">State security measures in place to safeguard personal data collected or processed.</h1>\n        \n                        <section class=\"expand-section reduced-properties table-wrapper no-padding\">\n                            <button \n                                mat-button\n                                color=\"primary\"\n                                [disabled]=\"processing\"\n                                class=\"add-item-button\"\n                                (click)=\"onAddSecurityMeasure()\">\n                                <div class=\"button-label\">\n                                    <mat-icon>add</mat-icon>                            \n                                    <span>Add A Security Measure</span>\n                                </div>\n                            </button>\n                            \n                            <div class=\"table-wrapper\">\n                                <table \n                                    mat-table \n                                    #securityMeasureMatSort=\"matSort\"\n                                    matSortDisableClear=\"true\"\n                                    [dataSource]=\"securityMeasureDataSource\"\n                                    matSort>\n                    \n                                    <ng-container matColumnDef=\"Count\">\n                                        <th mat-header-cell *matHeaderCellDef> # </th>\n                                        <td mat-cell *matCellDef=\"let index = index\"> {{ index + 1 }} </td>\n                                    </ng-container>\n                    \n                                    <ng-container matColumnDef=\"SecurityMeasure\">\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Security Measure </th>\n                                        <td mat-cell *matCellDef=\"let row\">{{ row.SecurityMeasure }}</td>\n                                    </ng-container>                                  \n                    \n                                    <!-- Actions Column -->\n                                    <ng-container matColumnDef=\"Actions\">\n                                        <th mat-header-cell *matHeaderCellDef> Actions </th>\n                                        <td mat-cell *matCellDef=\"let row; let index = index\">\n                                            <button \n                                                mat-button \n                                                class=\"action-btn\"\n                                                [matMenuTriggerFor]=\"menu\" \n                                                (click)=\"$event.stopPropagation()\"\n                                                matTooltip=\"See more options\">\n                                                <mat-icon>more_vert</mat-icon>\n                                            </button>\n                    \n                                            <mat-menu yPosition=\"below\" #menu=\"matMenu\" class=\"more-options-mat-menu\">\n                \n                                                <button \n                                                    mat-menu-item \n                                                    (click)=\"$event.stopPropagation();onEditSecurityMeasure(row)\">\n                                                    <mat-icon>edit</mat-icon>\n                                                    <span>Make Changes</span>\n                                                </button>\n                                                      \n                                                <hr />\n                    \n                                                <button \n                                                    mat-menu-item \n                                                    (click)=\"$event.stopPropagation();onRemoveSecurityMeasure(row)\">\n                                                    <mat-icon color=\"warn\">delete</mat-icon>\n                                                    <span>Remove</span>\n                                                </button>                                        \n                    \n                                            </mat-menu>                                                  \n                                        </td>\n                                    </ng-container>\n                    \n                                    <tr mat-header-row *matHeaderRowDef=\"securityMeasuresDisplayedColumns\"></tr>\n                                    <tr mat-row *matRowDef=\"let row; columns: securityMeasuresDisplayedColumns;\" [ngClass]=\"{'selected-mat-data-row': selectedSpouse === row}\" class=\"mat-data-row\"></tr>\n                                </table>\n        \n                                <mat-paginator \n                                    #securityMeasurePaginator\n                                    [pageSize]=\"10\"\n                                    [pageSizeOptions]=\"[5, 10]\">\n                                </mat-paginator>                    \n                            </div>                \n                        </section>    \n                        \n                        <section class=\"expand-section reduced-properties table-wrapper margin documents\">\n                            <h1 class=\"full-width step-header\">Attach supporting documentation eg approved information security policy.</h1>\n        \n                            <div class=\"buttons\">\n                                <button \n                                    mat-button\n                                    color=\"primary\"\n                                    [disabled]=\"processing\"\n                                    class=\"add-item-button\"\n                                    (click)=\"onUploadAttachments()\">\n                                    <div class=\"button-label\">\n                                        <mat-icon>add</mat-icon>                            \n                                        <span> {{ document ? 'Replace Document' : 'Upload Attachment' }} </span>\n                                    </div>\n                                </button>\n            \n                                <button \n                                    mat-button\n                                    *ngIf=\"document\"\n                                    color=\"primary\"\n                                    [disabled]=\"processing\"\n                                    class=\"remove-button\"\n                                    (click)=\"onRemoveDocument()\">\n                                    <div class=\"button-label\">\n                                        <mat-icon>clear</mat-icon>\n                                        <span> Remove Document </span>\n                                    </div>\n                                </button>\n                            </div>\n        \n                            <div *ngIf=\"document\" class=\"uploaded-document\" matTooltip=\"Open Document\" (click)=\"onReadDocument(document)\">\n                                <img src=\"./assets/img/pdf.png\" alt=\"\">\n        \n                                <span>Document: {{ document.Name }} <span>  -  {{ document.Size }} Mbs</span></span>\n                            </div>\n        \n                        </section>\n        \n                        <hr class=\"full-width\" />\n        \n                        <section class=\"expand-section reduced-properties table-wrapper margin documents\">\n                            <h1 class=\"full-width step-header\">Attach Form 3</h1>\n        \n                            <div class=\"buttons\">        \n                                <button\n                                    mat-button\n                                    color=\"accent\"\n                                    class=\"download-form\"                           \n                                    (click)=\"onDownloadForm3()\">\n                                    <div class=\"button-label\">\n                                        <mat-icon>sim_card_download</mat-icon>                            \n                                        <span>Download Form 3</span>\n                                    </div>                        \n                                </button>\n        \n                                <button \n                                    mat-button\n                                    color=\"primary\"\n                                    [disabled]=\"processing\"\n                                    class=\"add-item-button\"\n                                    (click)=\"onUploadForm3Attachments()\">\n                                    <div class=\"button-label\">\n                                        <mat-icon>add</mat-icon>                            \n                                        <span> {{ documentForm3 ? 'Replace Form 3' : 'Upload Form 3' }} </span>\n                                    </div>\n                                </button>\n            \n                                <button \n                                    mat-button\n                                    *ngIf=\"documentForm3\"\n                                    color=\"primary\"\n                                    [disabled]=\"processing\"\n                                    class=\"remove-button\"\n                                    (click)=\"onRemoveForm3Document()\">\n                                    <div class=\"button-label\">\n                                        <mat-icon>clear</mat-icon>\n                                        <span> Remove Document </span>\n                                    </div>\n                                </button>\n                            </div>\n        \n                            <div *ngIf=\"documentForm3\" class=\"uploaded-document\" matTooltip=\"Open Document\" (click)=\"onReadDocument(documentForm3)\">\n                                <img src=\"./assets/img/pdf.png\" alt=\"\">\n        \n                                <span>Document: {{ documentForm3.Name }} <span>  -  {{ documentForm3.Size }} Mbs</span> </span>\n                            </div>\n        \n                        </section>\n\n                        <section class=\"expand-section reduced-properties table-wrapper margin documents\">\n                            <h1 class=\"full-width step-header\">Attach Proof of Payment</h1>\n        \n                            <div class=\"buttons\">\n                                <button \n                                    mat-button\n                                    color=\"primary\"\n                                    [disabled]=\"processing\"\n                                    class=\"add-item-button\"\n                                    (click)=\"onUploadProofOfPayment()\">\n                                    <div class=\"button-label\">\n                                        <mat-icon>add</mat-icon>                            \n                                        <span> {{ proofOfPayment ? 'Replace Document' : 'Upload Proof of Payment' }} </span>\n                                    </div>\n                                </button>\n            \n                                <button \n                                    mat-button\n                                    *ngIf=\"proofOfPayment\"\n                                    color=\"primary\"\n                                    [disabled]=\"processing\"\n                                    class=\"remove-button\"\n                                    (click)=\"onRemoveProofOfPaymen()\">\n                                    <div class=\"button-label\">\n                                        <mat-icon>clear</mat-icon>\n                                        <span> Remove Document </span>\n                                    </div>\n                                </button>\n                            </div>\n        \n                            <div *ngIf=\"proofOfPayment\" class=\"uploaded-document\" matTooltip=\"Open Document\" (click)=\"onReadDocument(proofOfPayment)\">\n                                <img src=\"./assets/img/pdf.png\" alt=\"\">\n        \n                                <span>Document: {{ proofOfPayment.Name }} <span>  -  {{ proofOfPayment.Size }} Mbs</span> </span>\n                            </div>\n        \n                        </section>\n        \n                        <hr class=\"full-width\" />\n        \n                \n        \n                        <hr class=\"full-width\" />\n        \n                        <mat-checkbox\n                            class=\"full-width\"\n                            formControlName=\"RegistrationConsent\"\n                            color=\"primary\">\n                            I certify that the above information is correct and complete and here by apply to be registered as \n                            data collector/ data processor / data controller (This shall be based on th category selected) \n                            under the data Protection and Privacy Act.\n                            <mat-error *ngIf=\"formSecurityMeasures.get('RegistrationConsent').invalid\">{{ getCheckboxErrorMessage() }}</mat-error>   \n                        </mat-checkbox>       \n                        \n                        <mat-form-field class=\"full-width\" hintLabel=\"The person authorized to complete and submit this application on the behalf of the applicant organization\">\n                            <mat-label>Name and title of person submitting the application<span class=\"required-field\">required</span></mat-label>\n                            <input appUppercase #RegistrationDoneByInput matInput maxlength=\"50\" formControlName=\"RegistrationDoneBy\">  \n                            <mat-error *ngIf=\"formSecurityMeasures.get('RegistrationDoneBy').invalid\">{{ getRegistrationDoneByErrorMessage() }}</mat-error>                             \n                            <mat-hint align=\"end\">{{ RegistrationDoneByInput.value.length }} / 50</mat-hint>    \n                        </mat-form-field>                  \n        \n                    </form>\n        \n                    <div class=\"button-wrapper\">\n                        <button mat-button class=\"back-btn\" matStepperPrevious>Back</button>\n\n                        <button \n                            mat-button \n                            [disabled]=\"processing\"\n                            class=\"save-draft-btn\"\n                            [disabled]=\"processing\"\n                            (click)=\"onSaveDraft()\"\n                            color=\"primary\">\n                            Save\n                        </button>                         \n\n                        <div class=\"buttons\">\n                            <button\n                                mat-button\n                                color=\"primary\" \n                                [disabled]=\"formGeneralInformation.invalid || formOrganisationDetails.invalid || formPersonalDataHeld.invalid || formPurposeRetention.invalid || formThirdParties.invalid || formSecurityMeasures.invalid || processing || securityMeasures.length === 0 || !documentForm3\" \n                                class=\"download\" \n                                matTooltip=\"Keep a copy of the information you have filled in\"\n                                (click)=\"onPreviewForm(true)\">\n                                <div class=\"button-label\">\n                                    <mat-icon>sim_card_download</mat-icon>\n                                    <span>Download</span>\n                                </div>\n                            </button>\n        \n                            <button\n                                mat-button\n                                color=\"primary\" \n                                [disabled]=\"formGeneralInformation.invalid || formOrganisationDetails.invalid || formPersonalDataHeld.invalid || formPurposeRetention.invalid || formThirdParties.invalid || formSecurityMeasures.invalid || processing || securityMeasures.length === 0 || !documentForm3\" \n                                class=\"preview\" \n                                matTooltip=\"Have a look at all the information you have filled in before sending.\"\n                                (click)=\"onPreviewForm(false)\">\n                                <div class=\"button-label\">\n                                    <mat-icon>visibility</mat-icon>\n                                    <span>Preview</span>\n                                </div>\n                            </button>\n        \n                        \n                            <button \n                                mat-button \n                                class=\"next-btn submit-btn\" \n                                [disabled]=\"formGeneralInformation.invalid || formOrganisationDetails.invalid || formPersonalDataHeld.invalid || formPurposeRetention.invalid || formThirdParties.invalid || formSecurityMeasures.invalid || processing || securityMeasures.length === 0 || !documentForm3\" \n                                [ngClass]=\"{'inline-processing-btn': processing}\" \n                                color=\"primary\" \n                                (click)=\"onSubmit()\">\n                                <app-inline-mat-spinner *ngIf=\"processing\"></app-inline-mat-spinner>                  \n                                <span>Submit Application</span>                    \n                            </button>                \n                        </div>\n                    </div>\n                </mat-step>\n        \n                <!-- <mat-step [stepControl]=\"form\">\n                    <ng-template matStepLabel>\n                        <h3>Legal <br /> Details</h3>\n                    </ng-template>\n        \n                    <form [formGroup]=\"form\">\n                        \n                    </form>\n        \n                    <div class=\"button-wrapper\">\n                        <button mat-button class=\"back-btn\" matStepperPrevious>Back</button>\n        \n                        <button \n                            mat-button \n                            [disabled]=\"form.invalid || processing\" \n                            class=\"next-btn\" \n                            color=\"primary\" \n                            matStepperNext>\n                            Next\n                        </button>\n                    </div>\n                </mat-step> -->\n        \n                <!-- <mat-step [stepControl]=\"formChildrenData\">\n                    <ng-template matStepLabel>\n                        <h3>Children <br /> Data</h3>\n                    </ng-template>\n        \n                    <form [formGroup]=\"formChildrenData\">\n                        \n                        <div class=\"grouped-items\">\n                            <h3>Do you collect personal data relating to Children?</h3>\n            \n                            <mat-radio-group color=\"primary\" aria-label=\"Pick one\" formControlName=\"CollectChildrenData\">\n                                <mat-radio-button value=\"Yes\">Yes</mat-radio-button>\n                                <mat-radio-button value=\"No\">No</mat-radio-button>\n                            </mat-radio-group>        \n                        </div>  \n        \n                        <mat-form-field>\n                            <mat-label>Please indicate who gave the consent <span class=\"required-field\">required</span></mat-label>\n                            <mat-select formControlName=\"ChildDataConsentor\">\n                                <mat-option value=\"1\">Parents / Guardian</mat-option>\n                                <mat-option value=\"2\">Relevant Authority</mat-option>\n                            </mat-select>    \n                        </mat-form-field>                  \n        \n                        <mat-form-field>\n                            <mat-label>Purpose for collection <span class=\"required-field\">required</span></mat-label>\n                            <mat-select formControlName=\"PurposeForCollectingChildData\">\n                                <mat-option value=\"1\">Comply with the Law</mat-option>\n                                <mat-option value=\"2\">Research or Statistical Purposes</mat-option>\n                            </mat-select>    \n                        </mat-form-field>      \n                        \n                        <mat-form-field>\n                            <mat-label>Indicate the law being complied with <span class=\"required-field\">required</span></mat-label>\n                            <mat-select formControlName=\"ChildLawPurpose\">\n                                <mat-option value=\"1\">Child Law</mat-option>\n                            </mat-select>    \n                        </mat-form-field>                   \n                        \n                        <mat-form-field>\n                            <mat-label>Indicate the research beign carried out.<span class=\"required-field\">required</span></mat-label>\n                            <textarea #CaseTitleInput matInput maxlength=\"1000\" formControlName=\"ChildResearchPurpose\"></textarea>\n                            <mat-hint align=\"end\">{{ CaseTitleInput.value.length }} / 1000</mat-hint>\n                        </mat-form-field>                     \n        \n                    </form>\n        \n                    <div class=\"button-wrapper\">\n                        <button mat-button class=\"back-btn\" matStepperPrevious>Back</button>\n        \n                        <button \n                            mat-button \n                            [disabled]=\"formChildrenData.invalid || processing\" \n                            class=\"next-btn\" \n                            color=\"primary\" \n                            (click)=\"onSubmit()\"\n                            matStepperNext>\n                            Submit\n                        </button>\n                    </div>\n                </mat-step> -->\n        \n                <!-- <mat-step>\n                    <ng-template matStepLabel>\n                        <h3>Payment</h3>          \n                    </ng-template>\n        \n                    <form>\n                        <h1 class=\"full-width step-header\">Show payment options.</h1>  \n                    </form>\n        \n                    <div class=\"button-wrapper single-button-start\">\n                        <button mat-button class=\"back-btn\" matStepperPrevious>Back</button>\n        \n                        <button \n                            mat-raised-button \n                            color=\"primary\" \n                            [ngClass]=\"{'inline-processing-btn': processing }\" \n                            [disabled]=\"processing\"                      \n                            (click)=\"onSubmit()\">\n                                <div class=\"btn-label\">\n                                    <app-inline-mat-spinner *ngIf=\"processing\"></app-inline-mat-spinner>                        \n                                    <span>Submit</span>\n                                </div>\n                        </button>\n                    </div>              \n                </mat-step> -->\n            </mat-horizontal-stepper>   \n        </main>\n    </fury-page-layout-content>\n</fury-page-layout>\n\n\n","var Buffer = require('../utils/buffer')\n\n/**\n * Helper class to handle QR Code symbol modules\n *\n * @param {Number} size Symbol size\n */\nfunction BitMatrix (size) {\n  if (!size || size < 1) {\n    throw new Error('BitMatrix size must be defined and greater than 0')\n  }\n\n  this.size = size\n  this.data = new Buffer(size * size)\n  this.data.fill(0)\n  this.reservedBit = new Buffer(size * size)\n  this.reservedBit.fill(0)\n}\n\n/**\n * Set bit value at specified location\n * If reserved flag is set, this bit will be ignored during masking process\n *\n * @param {Number}  row\n * @param {Number}  col\n * @param {Boolean} value\n * @param {Boolean} reserved\n */\nBitMatrix.prototype.set = function (row, col, value, reserved) {\n  var index = row * this.size + col\n  this.data[index] = value\n  if (reserved) this.reservedBit[index] = true\n}\n\n/**\n * Returns bit value at specified location\n *\n * @param  {Number}  row\n * @param  {Number}  col\n * @return {Boolean}\n */\nBitMatrix.prototype.get = function (row, col) {\n  return this.data[row * this.size + col]\n}\n\n/**\n * Applies xor operator at specified location\n * (used during masking process)\n *\n * @param {Number}  row\n * @param {Number}  col\n * @param {Boolean} value\n */\nBitMatrix.prototype.xor = function (row, col, value) {\n  this.data[row * this.size + col] ^= value\n}\n\n/**\n * Check if bit at specified location is reserved\n *\n * @param {Number}   row\n * @param {Number}   col\n * @return {Boolean}\n */\nBitMatrix.prototype.isReserved = function (row, col) {\n  return this.reservedBit[row * this.size + col]\n}\n\nmodule.exports = BitMatrix\n","import {AfterViewInit,EventEmitter, Component, Input, OnDestroy, OnInit, ViewChild} from '@angular/core';\nimport {\n    DataType,\n    DateFinderOptions,\n    IFinderField,\n    ListColumn,\n    LookupFinderOptions,\n    TextFinderOptions\n} from '../../../../../@fury/shared/list/list-column.model';\nimport { PRN } from '../company-registration.model';\nimport { Subscription} from 'rxjs';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {MatDialog} from '@angular/material/dialog';\nimport {Observable, of, ReplaySubject} from 'rxjs';\nimport {filter} from 'rxjs/operators';\nimport {fadeInRightAnimation} from '../../../../../@fury/animations/fade-in-right.animation';\nimport {fadeInUpAnimation} from '../../../../../@fury/animations/fade-in-up.animation';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {BaseFuryForm} from '../../../../../@fury/shared/base-fury-form';\nimport {CdkTextareaAutosize} from '@angular/cdk/text-field';\nimport {KeycloakService} from 'keycloak-angular';\nimport {WorkflowServiceService} from '../../../../services/workflow-service.service';\nimport {CompanyRegistrationService} from '../../../company-registration/company-registration.service';\nimport { RoutingService } from '../../../../services/routing.service';\nimport { ComplaintService } from '../../../complaints/complaints.service';\nimport { SuccessfulMessageDialogComponent } from '../../../../layout/dialogs/successful-message-dialog/successful-message-dialog.component';\nimport { ApiService } from '../../../../services/api.service';\nimport { environment } from '../../../../../environments/environment';\nimport {HttpClient} from '@angular/common/http';\nimport { ApiPayload } from '../../../../services/api.model';\nimport { ApiEndpointsService } from '../../../../services/api-endpoints.service';\nimport { catchError } from 'rxjs/operators';\n\n\n@Component({\n  selector: 'fury-manage-ura-payment',\n  templateUrl: './manage-ura-payment.component.html',\n  styleUrls: ['./manage-ura-payment.component.scss'],\n\n  animations: [fadeInRightAnimation, fadeInUpAnimation]\n  \n})\nexport class ManageUraPaymentComponent extends BaseFuryForm implements OnInit, AfterViewInit, OnDestroy {\n\n      // TODO:: Simulating a service with http that returns observables\n      subject$: ReplaySubject<PRN[]> = new ReplaySubject<PRN[]>(1);\n      data$: Observable<PRN[]> = this.subject$.asObservable();\n      PrnData: [];\n      dialogRef;\n      processing = false;\n      $processingEvent: EventEmitter<boolean> = new EventEmitter();\n      $errorsEvent: EventEmitter<any> = new EventEmitter();\n      $resultComplaintsEvent: EventEmitter<PRN> = new EventEmitter();\n      statusList: any[] = [];\n      pageSize = 10;\n      httpSub: Subscription;\n      subscriptions: Subscription[] = [];\n      statuses: any = [\n          {code: '001', description: 'Form 9'},\n          {code: '002', description: 'FORM 6'},\n          {code: '003', description: 'FORM 11'}\n      ];\n  \n      @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n      @ViewChild(MatSort, {static: true}) sort: MatSort;\n      @Input()\n  \n  \n  \n      columns: ListColumn[] = [\n          {name: 'Organisation', property: 'OrganisationName', visible: true, isModelProperty: true},\n          {name: 'PRN', property: 'PRN', visible: true, isModelProperty: true},\n          {name: 'Search Code', property: 'SearchCode', visible: true, isModelProperty: true},\n          {name: 'Generation Date', property: 'PRNGenerationDate', visible: true, isModelProperty: true},\n          {name: 'Days Passed', property: 'DaysPassed', visible: true, isModelProperty: true},\n          {name: 'Actions', property: 'actions', visible: true},\n      ] as ListColumn[];\n  \n      dataSource: MatTableDataSource<PRN> =  new MatTableDataSource<PRN>();\n  \n      // Search fields\n      searchFields: IFinderField[];\n  \n      @ViewChild('autosize') autosize: CdkTextareaAutosize;\n\n  constructor(\n    private dialog: MatDialog,\n    private route: ActivatedRoute, public authService: KeycloakService,\n    private router: Router,\n    private service: ApiService,\n    private http: HttpClient,\n    private endpoints: ApiEndpointsService,\n    public _workflowService: WorkflowServiceService,\n    public registrationService: CompanyRegistrationService,\n    public complaintService: ComplaintService,\n    private routingService : RoutingService\n  ) {\n        super(\n          authService,\n          _workflowService, registrationService, \n          complaintService\n      );\n   }\n\n      // TODO:: Need to hide addressedTo Column from data controllers its mainly for nita data-protection officers\n      get visibleColumns() {\n        return this.columns.filter(column => column.visible).map(column => column.property);\n    }\n\n\n  ngOnInit(): void {\n\n    this.dataSource.paginator = this.paginator;\n\n    this.getPRNData();\n\n    this.route.paramMap.subscribe(params => {\n        console.log(params.has('navigationPrams'));\n    });\n\n    this.statusList = this.getGenericDDL(this.statuses, {key: 'code', label: 'description'}, false);\n\n  }\n  ngAfterViewInit() {\n\n    setTimeout(() =>{\n\n        this.subscriptions['$resultComplaintsEvent'] = this.$resultComplaintsEvent.subscribe(result => {\n            if (result) {\n              console.log(result);\n                \n                this.PrnData = result.data;\n        \n\n                this.dataSource.data = result.data;\n        \n                this.isLoaded = true;\n            }\n            else{\n                console.log(\"expected\");\n            }\n        });\n    }, 0)\n\n}\n\nonFilterChange(value) {\n  if (!this.dataSource) {\n      return;\n  }\n  value = value.trim();\n  value = value.toLowerCase();\n  this.dataSource.filter = value;\n}\n\nngOnDestroy(): void {\n}\n\ngetPRNData() {\n  // tslint:disable-next-line:max-line-length\n  this.registrationService.getPrnData(this.$processingEvent, this.$resultComplaintsEvent, this.$errorsEvent);\n}\n\n\nviewPRNStatus(row){\n  console.log(row);\n  const data =  {\n\n    prn : row.PRN\n\n  }\n\n  this.httpSub = this.http.post<ApiPayload>(this.endpoints.checkPRN, data)\n    .pipe(catchError(this.service.handleError))\n    .subscribe((response) => {\n      console.log(response.data);\n\n      let message;\n      let status;\n\n      if(response.data.ErrorCode == 'A'){\n        message = 'The PRN is valid, however payment has not been made';\n        status = false;\n      }\n      else if(response.data.ErrorCode == 'R'){\n         message =  'The PRN is valid, however the cheque has not yet matured';\n         status = false;\n      }\n      else if(response.data.ErrorCode == 'T'){\n         message = 'Received and credited. The payment has been reconciled with the  bank';\n         status = true;\n      }\n      else if(response.data.ErrorCode == 'D'){\n         message = 'The PRN is valid, however the cheque was dishonoured';\n         status = false;\n      }\n      else if(response.data.ErrorCode == 'C'){\n         message = 'The PRN was cancelled';\n         status = false;\n      }\n      else if(response.data.ErrorCode == 'X'){\n         message = 'THe PRN has expired';\n         status = false;\n      }\n      else if(response.data.ErrorCode == 'APPOO1'){\n        message = response.data.ErrorDesc;\n        status =  false;\n      }\n      else{\n        message = 'An error occured';\n        status = false;\n      }\n\n\n      \n      this.dialogRef = this.dialog.open(SuccessfulMessageDialogComponent, {\n        disableClose: true,\n        data: {\n          title: 'URA PRN',\n          message: message,\n          status: false,\n        }\n      });\n\n\n      this.processing = false;\n    }, (error) => {\n      this.processing = false;\n\n      if (error.error.message) {\n        this.dialogRef = this.dialog.open( SuccessfulMessageDialogComponent, {\n          panelClass: ['forward-message-dialog', 'dialogs'],\n          disableClose: true,\n          data: {\n            title: error.error.message['title'] ? error.error.message['title'] : 'Operation Failed',\n            message: error.error.message['body'] ? error.error.message['body'] : environment.technicalErrorResponse,\n            status: false,\n          }\n        });\n      } else {\n        this.service.determineErrorResponse(error);\n      }\n    });\n}\n\n}\n","<fury-page-layout mode=\"card\">\n    <fury-page-layout-header>\n        <fury-breadcrumbs [@fadeInRight] [crumbs]=\"['PRN']\" current=\"Find\"></fury-breadcrumbs>\n    </fury-page-layout-header>\n\n    <fury-page-layout-content [@fadeInUp]>\n        <fury-list name=\"PRN\" [columns]=\"columns\" (filterChange)=\"onFilterChange($event)\"\n                   finderDialogTitle=\"PRN Finder\"\n                   [searchFields]=\"searchFields\">\n            <table [dataSource]=\"dataSource\" mat-table matSort>\n                <ng-container matColumnDef=\"checkbox\">\n                    <th *matHeaderCellDef class=\"actions-cell\" mat-header-cell>\n                        <mat-checkbox color=\"primary\" (click)=\"$event.stopPropagation()\"></mat-checkbox>\n                    </th>\n                    <td *matCellDef=\"let row\" class=\"actions-cell\" mat-cell>\n                        <mat-checkbox color=\"primary\" (click)=\"$event.stopPropagation()\"></mat-checkbox>\n                    </td>\n                </ng-container>\n\n                <!-- fullName Column -->\n                <ng-container *ngFor=\"let column of columns\">\n                    <ng-container *ngIf=\"column.isModelProperty\" [matColumnDef]=\"column.property\">\n                        <th *matHeaderCellDef mat-header-cell mat-sort-header> {{ column.name }}</th>\n                        <td *matCellDef=\"let row\" mat-cell>\n                            {{ row[column.property] }}\n                        </td>\n                    </ng-container>\n                </ng-container>\n\n                <ng-container matColumnDef=\"actions\">\n                    <th *matHeaderCellDef class=\"actions-cell\" mat-header-cell mat-sort-header></th>\n                    <td *matCellDef=\"let row\" class=\"actions-cell\" mat-cell>\n                        <button type=\"button\" mat-icon-button [matMenuTriggerFor]=\"actionsMenu\"\n                                (click)=\"$event.stopPropagation()\">\n                            <mat-icon>more_vert</mat-icon>\n                        </button>\n\n                        <mat-menu #actionsMenu=\"matMenu\" yPosition=\"below\" xPosition=\"before\">\n                            <!-- <button (click)=\"viewComplaint(row)\"  mat-menu-item\n                                routerLinkActive=\"router-link-active\">\n                                <mat-icon>visibility</mat-icon>\n                                <span>View</span>\n                            </button> -->\n                            <button (click)=\"viewPRNStatus(row)\" mat-menu-item routerLinkActive=\"router-link-active\">\n                                <mat-icon>settings</mat-icon>\n                                <span>View status</span>\n                            </button>\n                        </mat-menu>\n                    </td>\n                </ng-container>\n                <tr *matHeaderRowDef=\"visibleColumns\" mat-header-row></tr>\n                <tr\n                        *matRowDef=\"let row; columns: visibleColumns;\"\n                        class=\"clickable route-animations-elements\"\n                        mat-row></tr>\n            </table>\n            <mat-paginator  [pageSize]=\"pageSize\"></mat-paginator>\n        </fury-list>\n    </fury-page-layout-content>\n</fury-page-layout>\n\n\n","/**\n * Implementation of a subset of node.js Buffer methods for the browser.\n * Based on https://github.com/feross/buffer\n */\n\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar isArray = require('isarray')\n\nfunction typedArraySupport () {\n  // Can typed array instances be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nvar K_MAX_LENGTH = Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n\nfunction Buffer (arg, offset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, offset, length)\n  }\n\n  if (typeof arg === 'number') {\n    return allocUnsafe(this, arg)\n  }\n\n  return from(this, arg, offset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n\n  // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true,\n      enumerable: false,\n      writable: false\n    })\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\nfunction createBuffer (that, length) {\n  var buf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    buf = new Uint8Array(length)\n    buf.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    buf = that\n    if (buf === null) {\n      buf = new Buffer(length)\n    }\n    buf.length = length\n  }\n\n  return buf\n}\n\nfunction allocUnsafe (that, size) {\n  var buf = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      buf[i] = 0\n    }\n  }\n\n  return buf\n}\n\nfunction fromString (that, string) {\n  var length = byteLength(string) | 0\n  var buf = createBuffer(that, length)\n\n  var actual = buf.write(string)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    buf.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    buf = fromArrayLike(that, buf)\n  }\n\n  return buf\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(that, len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction byteLength (string) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  return utf8ToBytes(string).length\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction from (that, value, offset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, offset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, offset)\n  }\n\n  return fromObject(that, value)\n}\n\nBuffer.prototype.write = function write (string, offset, length) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n    } else {\n      length = undefined\n    }\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  return utf8Write(this, string, offset, length)\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    // Return an augmented `Uint8Array` instance\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\nBuffer.prototype.fill = function fill (val, start, end) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : new Buffer(val)\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return createBuffer(null, 0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = allocUnsafe(null, length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nBuffer.byteLength = byteLength\n\nBuffer.prototype._isBuffer = true\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nmodule.exports = Buffer\n","import {Component, OnInit, EventEmitter,ViewChild, Inject, Input, Output} from '@angular/core';\nimport {FormBuilder,FormControl, FormGroup, Validators} from '@angular/forms';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {BaseFuryForm} from '../../../../../@fury/shared/base-fury-form';\nimport {fadeInRightAnimation} from '../../../../../@fury/animations/fade-in-right.animation';\nimport {fadeInUpAnimation} from '../../../../../@fury/animations/fade-in-up.animation';\nimport {scaleInAnimation} from '../../../../../@fury/animations/scale-in.animation';\nimport {CdkTextareaAutosize} from '@angular/cdk/text-field';\nimport {Observable, of, ReplaySubject} from 'rxjs';\nimport { DocumentComment } from '../../../../../@fury/shared/base-fury-form.model';\nimport {KeycloakService} from 'keycloak-angular';\nimport {WorkflowServiceService} from '../../../../services/workflow-service.service';\nimport {CompanyRegistrationService} from '../../../company-registration/company-registration.service';\nimport {Action, ActionPerformed, WorkFlowActions, WorkFlowStep, WorkFlowTimeline, ActionMakeaComment} from '../../../models/document-workflow.model';\nimport {forkJoin, Subscription} from 'rxjs';\nimport {MatDialog, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport {OrgNoticeComponent} from '../../../../layout/dialogs/org-registration/org-notice/org-notice.component';\nimport {ComplaintCommentsComponent} from '../../../../layout/complaint-comments/complaint-comments.component';\nimport { ViewPdfDocumentBottomsheetComponent } from '../../../../layout/bottomsheets/view-pdf-document-bottomsheet/view-pdf-document-bottomsheet.component';\nimport { ApiPayload, FileUpload } from '../../../../services/api.model';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { ForwardMessageDialogComponent } from '../../../../layout/dialogs/forward-message-dialog/forward-message-dialog.component';\nimport { HttpClient } from '@angular/common/http';\nimport { ApiEndpointsService } from '../../../../services/api-endpoints.service';\nimport { catchError } from 'rxjs/operators';\nimport { ApiService } from '../../../../services/api.service';\nimport { environment } from '../../../../../environments/environment';\nimport {UtilService} from '../../../../../@fury/services/util.service';\nimport {DataSubjectModel} from '../../../models/data-subject.model';\nimport {SnackBarService} from '../../../../pages/services/snack-bar.service';\nimport { MoreInformationComponent } from '../../../../layout/dialogs/more-information/more-information.component';\nimport { MatCheckbox, MatCheckboxChange } from '@angular/material/checkbox';\nimport {SuccessfulMessageDialogComponent } from '../../../../layout/dialogs/successful-message-dialog/successful-message-dialog.component';\n\nimport { ComplaintService } from '../../../complaints/complaints.service';\nimport { AuthenticationService } from '../../../../authentication/authentication.service';\n\n@Component({\n  selector: 'fury-ura-payments',\n  templateUrl: './ura-payments.component.html',\n  styleUrls: ['./ura-payments.component.scss']\n})\nexport class UraPaymentsComponent extends BaseFuryForm implements OnInit {\n\n\n  processing = false;\n  httpSub: Subscription;\n  success_message = false;\n  dialogRef;\n  isLinear = false;\n  selected_role_id:string;\n  selected_role_name:string;\n  showPRN = false;\n  Organisation_User_ID : any;\n\n  current_prn : String;\n  current_search_code : String;\n\n  formCreateAccount: FormGroup;\n\n\n  constructor(    \n    private formBuilder: FormBuilder,\n    private activateRoute: ActivatedRoute,\n    private route: Router,\n    private dialog: MatDialog,\n    private bottomsheet: MatBottomSheet,\n    private endpoints: ApiEndpointsService,\n    private http: HttpClient,\n    private service: ApiService,\n    private allDialogRef: MatDialog,\n    private auth: KeycloakService,\n    public _auth: AuthenticationService,\n    private utilService: UtilService,\n    public snackBar: SnackBarService,\n    public authService: KeycloakService,\n    public _workflowService: WorkflowServiceService,\n    public registrationService: CompanyRegistrationService,\n    public complaintService: ComplaintService,) \n    { \n      super(\n        authService,\n        _workflowService,\n        registrationService,\n        complaintService\n    );\n\n\n    this.Organisation_User_ID = _auth.getUser().organisation_id;\n    console.log(this.Organisation_User_ID);\n\n    }\n\n\n  ngOnInit(): void {\n\n\n    this.formCreateAccount = this.formBuilder.group({\n\n      email: new FormControl('', [Validators.required, Validators.pattern(/^[a-zA-Z]+$/)]),\n      phone_number: new FormControl('', [Validators.required, Validators.pattern(/^[a-zA-Z]+$/)]),\n\n\n    });\n  }\n\n  ngAfterViewInit(): void {\n    this.httpSub = this.fetchRoles()\n    .pipe(catchError(this.service.handleError))\n    .subscribe((responseList) => {\n\n      this.processing = false;\n    }\n    , (error) => {\n        this.processing = false;\n        this.service.determineErrorResponse(error);\n      });  \n}\n\n\n  onSubmit(){\n\n    console.log(this.getFormData());\n    this.httpSub = this.http.post<ApiPayload>(this.endpoints.generatePRN, this.getFormData())\n    .pipe(catchError(this.service.handleError))\n    .subscribe((response) => {\n      console.log(response.data);\n    \n      this.current_prn = response.data.PRN;\n      this.current_search_code = response.data.SearchCode\n      this.showPRN = true;\n      \n      this.dialogRef = this.dialog.open(SuccessfulMessageDialogComponent, {\n        disableClose: true,\n        data: {\n          title: 'URA PRN',\n          message: 'PRN Generated successfully',\n          status: true,\n        }\n      });\n\n      this.processing = false;\n    }, (error) => {\n      this.processing = false;\n\n      if (error.error.message) {\n        this.dialogRef = this.dialog.open( ForwardMessageDialogComponent, {\n          panelClass: ['forward-message-dialog', 'dialogs'],\n          disableClose: true,\n          data: {\n            title: error.error.message['title'] ? error.error.message['title'] : 'Operation Failed',\n            message: error.error.message['body'] ? error.error.message['body'] : environment.technicalErrorResponse,\n            status: false,\n          }\n        });\n      } else {\n        this.service.determineErrorResponse(error);\n      }\n    });\n    \n\n  }\n\n\n  getFirstNameErrorMessage(): string {\n    return this.formCreateAccount.get('FirstName').hasError('required') \n    || this.formCreateAccount.get('ContactFirstName').hasError('required') ? 'Please enter a value' :\n    this.formCreateAccount.get('FirstName').hasError('pattern') \n    || this.formCreateAccount.get('ContactFirstName').hasError('pattern') ? 'Please enter a correct name' : '';\n  }\n\n  getLastNameErrorMessage(): string {\n    return this.formCreateAccount.get('LastName').hasError('required') \n    || this.formCreateAccount.get('ContactLastName').hasError('required') ? 'Please enter a value' :\n    this.formCreateAccount.get('LastName').hasError('pattern')\n    || this.formCreateAccount.get('ContactLastName').hasError('pattern') ? 'Please enter a correct name' : '';\n  }\n\n  getTelephoneNumberErrorMessage(): string {\n    return this.formCreateAccount.get('PhoneNumber').hasError('required') ? 'Please enter a value' : \n    this.formCreateAccount.get('PhoneNumber').hasError('pattern') ? 'Wrong Phone number' : ''\n  }\n\n  getEmailAddressErrorMessage(): string {\n    return this.formCreateAccount.get('ContactEmailAddress').hasError('required') ? 'Please enter a value' :\n    this.formCreateAccount.get('EmailAddress').hasError('email') \n    || this.formCreateAccount.get('ContactEmailAddress').hasError('email')  ? 'Wrong Email Address.' : '';\n  }\n\n  private getFormData(): any {\n    \n    const data = {\n        \n      phone_number: this.formCreateAccount.get('phone_number').value,\n      email: this.formCreateAccount.get('email').value,\n      organisation_user_id : this.Organisation_User_ID\n\n    }\n\n    return data;\n  }\n\n\n  private fetchRoles(): Observable<any[]> {\n    this.processing = true;\n\n    const Roles = this.http.get<ApiPayload>(this.endpoints.getKeycloakRoles);\n   \n    return forkJoin([Roles]);\n}\n\n\nonChangeOfRole(event, Role){\n  this.selected_role_id = Role.RoleID\n\n  this.selected_role_name = Role.RoleName\n}\n\n}\n","<fury-page-layout>\n    <fury-page-layout-header>\n        <fury-breadcrumbs [@fadeInRight]  current=\"Generate PRN\"></fury-breadcrumbs>\n    </fury-page-layout-header>\n    <fury-page-layout-content>\n        <div [@fadeInUp] class=\"\">\n                    \n                    <form [formGroup]=\"formCreateAccount\">\n                        <div>\n                            <mat-form-field fxFlex=\"2 2 auto\" [ngStyle]=\"{'margin-right': '20px'}\">\n                                <mat-label>Email Adress <span class=\"required-field\">required</span></mat-label>\n                                <input appRemoveSpaces matInput  formControlName=\"email\">\n            \n                            </mat-form-field>   \n            \n                            <mat-form-field fxFlex=\"2 2 auto\" [ngStyle]=\"{'margin-right': '20px'}\">\n                                <mat-label>Phone Number<span class=\"required-field\">required</span></mat-label>\n                                <input appRemoveSpaces matInput formControlName=\"phone_number\">                            \n\n                            </mat-form-field> \n                        </div><br>\n  \n                    </form>\n     \n                    <div class=\"buttons\" fxLayout=\"row\" fxLayoutAlign=\"center center\" fxLayoutGap=\"8px\">\n                        <button\n                            mat-button \n                            color=\"primary\" \n                            [ngClass]=\"{'inline-processing-btn': processing }\"      \n                            class=\"next-btn submit-btn\"                 \n                            (click)=\"onSubmit()\"\n                            mat-raised-button>                        \n                                <span>Generate PRN</span>\n                        </button>\n                    </div>\n        </div>\n\n        <div fxLayout=\"row\" fxLayoutAlign=\"center center\" fxLayoutGap=\"8px\" *ngIf=\"showPRN ==true\">\n            <h2 style=\"font-weight:700; \">PRN DETAILS</h2>\n        </div>\n            <br/><br/>\n            <div *ngIf=\"showPRN ==true\">\n                <table>\n\n                    <!--- Note that these columns can be defined in any order.\n                          The actual rendered columns are set as a property on the row definition\" -->\n                  \n                  \n                    <!-- PRN Column -->\n                    <tr>\n                        <th > PRN </th>\n                        <td > {{current_prn}} </td>\n                    </tr>\n                  \n                    <!-- CODE Column -->\n                    <tr>\n                        <th> SEARCH CODE </th>\n                        <td> {{current_search_code}} </td>\n                    </tr>\n                    \n              \n    \n                  </table>\n            </div>\n\n\n    </fury-page-layout-content>   \n</fury-page-layout>\n \n\n","// can-promise has a crash in some versions of react native that dont have\n// standard global objects\n// https://github.com/soldair/node-qrcode/issues/157\n\nmodule.exports = function () {\n  return typeof Promise === 'function' && Promise.prototype && Promise.prototype.then\n}\n","var Buffer = require('../utils/buffer')\n\nvar EXP_TABLE\nvar LOG_TABLE\n\nif (Buffer.alloc) {\n  EXP_TABLE = Buffer.alloc(512)\n  LOG_TABLE = Buffer.alloc(256)\n} else {\n  EXP_TABLE = new Buffer(512)\n  LOG_TABLE = new Buffer(256)\n}\n/**\n * Precompute the log and anti-log tables for faster computation later\n *\n * For each possible value in the galois field 2^8, we will pre-compute\n * the logarithm and anti-logarithm (exponential) of this value\n *\n * ref {@link https://en.wikiversity.org/wiki/Reed%E2%80%93Solomon_codes_for_coders#Introduction_to_mathematical_fields}\n */\n;(function initTables () {\n  var x = 1\n  for (var i = 0; i < 255; i++) {\n    EXP_TABLE[i] = x\n    LOG_TABLE[x] = i\n\n    x <<= 1 // multiply by 2\n\n    // The QR code specification says to use byte-wise modulo 100011101 arithmetic.\n    // This means that when a number is 256 or larger, it should be XORed with 0x11D.\n    if (x & 0x100) { // similar to x >= 256, but a lot faster (because 0x100 == 256)\n      x ^= 0x11D\n    }\n  }\n\n  // Optimization: double the size of the anti-log table so that we don't need to mod 255 to\n  // stay inside the bounds (because we will mainly use this table for the multiplication of\n  // two GF numbers, no more).\n  // @see {@link mul}\n  for (i = 255; i < 512; i++) {\n    EXP_TABLE[i] = EXP_TABLE[i - 255]\n  }\n}())\n\n/**\n * Returns log value of n inside Galois Field\n *\n * @param  {Number} n\n * @return {Number}\n */\nexports.log = function log (n) {\n  if (n < 1) throw new Error('log(' + n + ')')\n  return LOG_TABLE[n]\n}\n\n/**\n * Returns anti-log value of n inside Galois Field\n *\n * @param  {Number} n\n * @return {Number}\n */\nexports.exp = function exp (n) {\n  return EXP_TABLE[n]\n}\n\n/**\n * Multiplies two number inside Galois Field\n *\n * @param  {Number} x\n * @param  {Number} y\n * @return {Number}\n */\nexports.mul = function mul (x, y) {\n  if (x === 0 || y === 0) return 0\n\n  // should be EXP_TABLE[(LOG_TABLE[x] + LOG_TABLE[y]) % 255] if EXP_TABLE wasn't oversized\n  // @see {@link initTables}\n  return EXP_TABLE[LOG_TABLE[x] + LOG_TABLE[y]]\n}\n","var toSJISFunction\nvar CODEWORDS_COUNT = [\n  0, // Not used\n  26, 44, 70, 100, 134, 172, 196, 242, 292, 346,\n  404, 466, 532, 581, 655, 733, 815, 901, 991, 1085,\n  1156, 1258, 1364, 1474, 1588, 1706, 1828, 1921, 2051, 2185,\n  2323, 2465, 2611, 2761, 2876, 3034, 3196, 3362, 3532, 3706\n]\n\n/**\n * Returns the QR Code size for the specified version\n *\n * @param  {Number} version QR Code version\n * @return {Number}         size of QR code\n */\nexports.getSymbolSize = function getSymbolSize (version) {\n  if (!version) throw new Error('\"version\" cannot be null or undefined')\n  if (version < 1 || version > 40) throw new Error('\"version\" should be in range from 1 to 40')\n  return version * 4 + 17\n}\n\n/**\n * Returns the total number of codewords used to store data and EC information.\n *\n * @param  {Number} version QR Code version\n * @return {Number}         Data length in bits\n */\nexports.getSymbolTotalCodewords = function getSymbolTotalCodewords (version) {\n  return CODEWORDS_COUNT[version]\n}\n\n/**\n * Encode data with Bose-Chaudhuri-Hocquenghem\n *\n * @param  {Number} data Value to encode\n * @return {Number}      Encoded value\n */\nexports.getBCHDigit = function (data) {\n  var digit = 0\n\n  while (data !== 0) {\n    digit++\n    data >>>= 1\n  }\n\n  return digit\n}\n\nexports.setToSJISFunction = function setToSJISFunction (f) {\n  if (typeof f !== 'function') {\n    throw new Error('\"toSJISFunc\" is not a valid function.')\n  }\n\n  toSJISFunction = f\n}\n\nexports.isKanjiModeEnabled = function () {\n  return typeof toSJISFunction !== 'undefined'\n}\n\nexports.toSJIS = function toSJIS (kanji) {\n  return toSJISFunction(kanji)\n}\n","function BitBuffer () {\n  this.buffer = []\n  this.length = 0\n}\n\nBitBuffer.prototype = {\n\n  get: function (index) {\n    var bufIndex = Math.floor(index / 8)\n    return ((this.buffer[bufIndex] >>> (7 - index % 8)) & 1) === 1\n  },\n\n  put: function (num, length) {\n    for (var i = 0; i < length; i++) {\n      this.putBit(((num >>> (length - i - 1)) & 1) === 1)\n    }\n  },\n\n  getLengthInBits: function () {\n    return this.length\n  },\n\n  putBit: function (bit) {\n    var bufIndex = Math.floor(this.length / 8)\n    if (this.buffer.length <= bufIndex) {\n      this.buffer.push(0)\n    }\n\n    if (bit) {\n      this.buffer[bufIndex] |= (0x80 >>> (this.length % 8))\n    }\n\n    this.length++\n  }\n}\n\nmodule.exports = BitBuffer\n","/**\n * Data mask pattern reference\n * @type {Object}\n */\nexports.Patterns = {\n  PATTERN000: 0,\n  PATTERN001: 1,\n  PATTERN010: 2,\n  PATTERN011: 3,\n  PATTERN100: 4,\n  PATTERN101: 5,\n  PATTERN110: 6,\n  PATTERN111: 7\n}\n\n/**\n * Weighted penalty scores for the undesirable features\n * @type {Object}\n */\nvar PenaltyScores = {\n  N1: 3,\n  N2: 3,\n  N3: 40,\n  N4: 10\n}\n\n/**\n * Check if mask pattern value is valid\n *\n * @param  {Number}  mask    Mask pattern\n * @return {Boolean}         true if valid, false otherwise\n */\nexports.isValid = function isValid (mask) {\n  return mask != null && mask !== '' && !isNaN(mask) && mask >= 0 && mask <= 7\n}\n\n/**\n * Returns mask pattern from a value.\n * If value is not valid, returns undefined\n *\n * @param  {Number|String} value        Mask pattern value\n * @return {Number}                     Valid mask pattern or undefined\n */\nexports.from = function from (value) {\n  return exports.isValid(value) ? parseInt(value, 10) : undefined\n}\n\n/**\n* Find adjacent modules in row/column with the same color\n* and assign a penalty value.\n*\n* Points: N1 + i\n* i is the amount by which the number of adjacent modules of the same color exceeds 5\n*/\nexports.getPenaltyN1 = function getPenaltyN1 (data) {\n  var size = data.size\n  var points = 0\n  var sameCountCol = 0\n  var sameCountRow = 0\n  var lastCol = null\n  var lastRow = null\n\n  for (var row = 0; row < size; row++) {\n    sameCountCol = sameCountRow = 0\n    lastCol = lastRow = null\n\n    for (var col = 0; col < size; col++) {\n      var module = data.get(row, col)\n      if (module === lastCol) {\n        sameCountCol++\n      } else {\n        if (sameCountCol >= 5) points += PenaltyScores.N1 + (sameCountCol - 5)\n        lastCol = module\n        sameCountCol = 1\n      }\n\n      module = data.get(col, row)\n      if (module === lastRow) {\n        sameCountRow++\n      } else {\n        if (sameCountRow >= 5) points += PenaltyScores.N1 + (sameCountRow - 5)\n        lastRow = module\n        sameCountRow = 1\n      }\n    }\n\n    if (sameCountCol >= 5) points += PenaltyScores.N1 + (sameCountCol - 5)\n    if (sameCountRow >= 5) points += PenaltyScores.N1 + (sameCountRow - 5)\n  }\n\n  return points\n}\n\n/**\n * Find 2x2 blocks with the same color and assign a penalty value\n *\n * Points: N2 * (m - 1) * (n - 1)\n */\nexports.getPenaltyN2 = function getPenaltyN2 (data) {\n  var size = data.size\n  var points = 0\n\n  for (var row = 0; row < size - 1; row++) {\n    for (var col = 0; col < size - 1; col++) {\n      var last = data.get(row, col) +\n        data.get(row, col + 1) +\n        data.get(row + 1, col) +\n        data.get(row + 1, col + 1)\n\n      if (last === 4 || last === 0) points++\n    }\n  }\n\n  return points * PenaltyScores.N2\n}\n\n/**\n * Find 1:1:3:1:1 ratio (dark:light:dark:light:dark) pattern in row/column,\n * preceded or followed by light area 4 modules wide\n *\n * Points: N3 * number of pattern found\n */\nexports.getPenaltyN3 = function getPenaltyN3 (data) {\n  var size = data.size\n  var points = 0\n  var bitsCol = 0\n  var bitsRow = 0\n\n  for (var row = 0; row < size; row++) {\n    bitsCol = bitsRow = 0\n    for (var col = 0; col < size; col++) {\n      bitsCol = ((bitsCol << 1) & 0x7FF) | data.get(row, col)\n      if (col >= 10 && (bitsCol === 0x5D0 || bitsCol === 0x05D)) points++\n\n      bitsRow = ((bitsRow << 1) & 0x7FF) | data.get(col, row)\n      if (col >= 10 && (bitsRow === 0x5D0 || bitsRow === 0x05D)) points++\n    }\n  }\n\n  return points * PenaltyScores.N3\n}\n\n/**\n * Calculate proportion of dark modules in entire symbol\n *\n * Points: N4 * k\n *\n * k is the rating of the deviation of the proportion of dark modules\n * in the symbol from 50% in steps of 5%\n */\nexports.getPenaltyN4 = function getPenaltyN4 (data) {\n  var darkCount = 0\n  var modulesCount = data.data.length\n\n  for (var i = 0; i < modulesCount; i++) darkCount += data.data[i]\n\n  var k = Math.abs(Math.ceil((darkCount * 100 / modulesCount) / 5) - 10)\n\n  return k * PenaltyScores.N4\n}\n\n/**\n * Return mask value at given position\n *\n * @param  {Number} maskPattern Pattern reference value\n * @param  {Number} i           Row\n * @param  {Number} j           Column\n * @return {Boolean}            Mask value\n */\nfunction getMaskAt (maskPattern, i, j) {\n  switch (maskPattern) {\n    case exports.Patterns.PATTERN000: return (i + j) % 2 === 0\n    case exports.Patterns.PATTERN001: return i % 2 === 0\n    case exports.Patterns.PATTERN010: return j % 3 === 0\n    case exports.Patterns.PATTERN011: return (i + j) % 3 === 0\n    case exports.Patterns.PATTERN100: return (Math.floor(i / 2) + Math.floor(j / 3)) % 2 === 0\n    case exports.Patterns.PATTERN101: return (i * j) % 2 + (i * j) % 3 === 0\n    case exports.Patterns.PATTERN110: return ((i * j) % 2 + (i * j) % 3) % 2 === 0\n    case exports.Patterns.PATTERN111: return ((i * j) % 3 + (i + j) % 2) % 2 === 0\n\n    default: throw new Error('bad maskPattern:' + maskPattern)\n  }\n}\n\n/**\n * Apply a mask pattern to a BitMatrix\n *\n * @param  {Number}    pattern Pattern reference number\n * @param  {BitMatrix} data    BitMatrix data\n */\nexports.applyMask = function applyMask (pattern, data) {\n  var size = data.size\n\n  for (var col = 0; col < size; col++) {\n    for (var row = 0; row < size; row++) {\n      if (data.isReserved(row, col)) continue\n      data.xor(row, col, getMaskAt(pattern, row, col))\n    }\n  }\n}\n\n/**\n * Returns the best mask pattern for data\n *\n * @param  {BitMatrix} data\n * @return {Number} Mask pattern reference number\n */\nexports.getBestMask = function getBestMask (data, setupFormatFunc) {\n  var numPatterns = Object.keys(exports.Patterns).length\n  var bestPattern = 0\n  var lowerPenalty = Infinity\n\n  for (var p = 0; p < numPatterns; p++) {\n    setupFormatFunc(p)\n    exports.applyMask(p, data)\n\n    // Calculate penalty\n    var penalty =\n      exports.getPenaltyN1(data) +\n      exports.getPenaltyN2(data) +\n      exports.getPenaltyN3(data) +\n      exports.getPenaltyN4(data)\n\n    // Undo previously applied mask\n    exports.applyMask(p, data)\n\n    if (penalty < lowerPenalty) {\n      lowerPenalty = penalty\n      bestPattern = p\n    }\n  }\n\n  return bestPattern\n}\n","exports.L = { bit: 1 }\nexports.M = { bit: 0 }\nexports.Q = { bit: 3 }\nexports.H = { bit: 2 }\n\nfunction fromString (string) {\n  if (typeof string !== 'string') {\n    throw new Error('Param is not a string')\n  }\n\n  var lcStr = string.toLowerCase()\n\n  switch (lcStr) {\n    case 'l':\n    case 'low':\n      return exports.L\n\n    case 'm':\n    case 'medium':\n      return exports.M\n\n    case 'q':\n    case 'quartile':\n      return exports.Q\n\n    case 'h':\n    case 'high':\n      return exports.H\n\n    default:\n      throw new Error('Unknown EC Level: ' + string)\n  }\n}\n\nexports.isValid = function isValid (level) {\n  return level && typeof level.bit !== 'undefined' &&\n    level.bit >= 0 && level.bit < 4\n}\n\nexports.from = function from (value, defaultValue) {\n  if (exports.isValid(value)) {\n    return value\n  }\n\n  try {\n    return fromString(value)\n  } catch (e) {\n    return defaultValue\n  }\n}\n","var Buffer = require('../utils/buffer')\nvar Polynomial = require('./polynomial')\n\nfunction ReedSolomonEncoder (degree) {\n  this.genPoly = undefined\n  this.degree = degree\n\n  if (this.degree) this.initialize(this.degree)\n}\n\n/**\n * Initialize the encoder.\n * The input param should correspond to the number of error correction codewords.\n *\n * @param  {Number} degree\n */\nReedSolomonEncoder.prototype.initialize = function initialize (degree) {\n  // create an irreducible generator polynomial\n  this.degree = degree\n  this.genPoly = Polynomial.generateECPolynomial(this.degree)\n}\n\n/**\n * Encodes a chunk of data\n *\n * @param  {Buffer} data Buffer containing input data\n * @return {Buffer}      Buffer containing encoded data\n */\nReedSolomonEncoder.prototype.encode = function encode (data) {\n  if (!this.genPoly) {\n    throw new Error('Encoder not initialized')\n  }\n\n  // Calculate EC for this data block\n  // extends data size to data+genPoly size\n  var pad = new Buffer(this.degree)\n  pad.fill(0)\n  var paddedData = Buffer.concat([data, pad], data.length + this.degree)\n\n  // The error correction codewords are the remainder after dividing the data codewords\n  // by a generator polynomial\n  var remainder = Polynomial.mod(paddedData, this.genPoly)\n\n  // return EC data blocks (last n byte, where n is the degree of genPoly)\n  // If coefficients number in remainder are less than genPoly degree,\n  // pad with 0s to the left to reach the needed number of coefficients\n  var start = this.degree - remainder.length\n  if (start > 0) {\n    var buff = new Buffer(this.degree)\n    buff.fill(0)\n    remainder.copy(buff, start)\n\n    return buff\n  }\n\n  return remainder\n}\n\nmodule.exports = ReedSolomonEncoder\n","import { Component, EventEmitter, Input, OnChanges, OnInit, Output} from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {DataServiceError} from '../../../../../@fury/shared/HttpModel';\nimport {KeycloakService} from 'keycloak-angular';\nimport {UtilService} from '../../../../../@fury/services/util.service';\nimport {SnackBarService} from '../../../../pages/services/snack-bar.service';\nimport {ReferenceTableService} from '../../../../services/reference-table.service';\nimport {Subscription} from 'rxjs';\nimport {MatTableDataSource} from '@angular/material/table';\n\n@Component({\n  selector: 'fury-countries',\n  templateUrl: './countries.component.html',\n  styleUrls: ['./countries.component.scss']\n})\nexport class CountriesComponent implements OnInit, OnChanges {\n\n  countryFormGroup: FormGroup;\n  country: Country = new Country();\n  // arrays\n  errors: string[] = [];\n  // list = [];\n  list: MatTableDataSource<Country>;\n\n  displayColumns: string [] = ['nber', 'country', 'purpose', 'description', 'actions'];\n\n  // events\n  $processingEvent: EventEmitter<boolean> = new EventEmitter();\n  $errorsEvent: EventEmitter<DataServiceError[]> = new EventEmitter();\n  $resultRefCountriesEvent: EventEmitter<any> = new EventEmitter();\n  $countries: CountryModel[] = [];\n  subscriptions: Subscription[] = [];\n  @Input() countries: Country[];\n  @Input() isViewOnly: boolean;\n  @Output() countryEvent = new EventEmitter<Country[]>();\n  @Input() storeDataOutSideCountry: string;\n  // Button Config\n  buttonIcon = 'add_circle_outline';\n  buttonLabel = 'Add';\n  // boolean\n  isEditingCountry = false;\n  tableEditable = true;\n  // int\n  countryIndex = 0;\n  countryNumber = 1;\n\n  constructor(\n      private fb: FormBuilder,\n      private auth: KeycloakService,\n      private utilService: UtilService,\n      public snackBar: SnackBarService,\n      private referenceService: ReferenceTableService,\n  ) {\n  }\n\n  ngOnChanges(): void {\n    // Initialize list of countries\n    if (this.countries) {\n      this.list = new MatTableDataSource<Country>(this.countries);\n    }\n  }\n\n  ngOnInit(): void {\n    this.initForm();\n\n    this.initMainObject();\n    this.subscriptions['$resultRefCountriesEvent'] = this.$resultRefCountriesEvent.subscribe(result => {\n      if (result) {\n        this.$countries = result;\n      }\n    });\n    this.loadReferenceTableDetails();\n  }\n\n  private initForm(): void {\n\n    this.countryFormGroup = this.fb.group({\n      Country: new FormControl('', [Validators.required]),\n      Purpose: new FormControl('', [Validators.required]),\n      Description: new FormControl('', [Validators.required]),\n    });\n  }\n\n  private initMainObject() {\n    this.country = new Country();\n  }\n\n  addOrUpdateCountry(option: number): void {\n    if (this.countryFormGroup.valid) {\n      this.mapFormControlToControl(1);\n      if (option === 1) {\n        this.list.data.push(this.country);\n        this.countries.push(this.country);\n        this.list.data = [...this.list.data];\n      } else {\n        this.list[this.countryIndex] = this.country;\n        this.countries[this.countryIndex] = this.country;\n        this.list.data = [...this.countries];\n      }\n      // Send new country to parent\n      this.countryEvent.emit(this.countries);\n      // rest form and item object\n      this.resetCountry();\n    }\n  }\n\n  private mapFormControlToControl(option: number) {\n    if (option === 1) {\n      this.country.Country = this.countryFormGroup.get('Country').value;\n      this.country.Purpose = this.countryFormGroup.get('Purpose').value;\n      this.country.Description = this.countryFormGroup.get('Description').value;\n    } else {\n      this.countryFormGroup.get('Country').setValue(this.country.Country);\n      this.countryFormGroup.get('Purpose').setValue(this.country.Purpose);\n      this.countryFormGroup.get('Description').setValue(this.country.Description);\n    }\n  }\n\n  resetCountry() {\n    this.countryFormGroup.reset();\n    this.country = new Country();\n    this.validateCountryLabels(1);\n    this.manageCountry(1);\n  }\n\n  validateCountryLabels(option: number) {\n    if (option === 1) {\n      this.buttonIcon = 'add_circle_outline';\n      this.buttonLabel = 'Add Country';\n    } else {\n      this.buttonIcon = 'save';\n      this.buttonLabel = 'Save';\n    }\n  }\n\n  manageCountry(option: number, id ?: number) {\n    if (option === 2) {\n      this.country = this.countries[id];\n      this.isEditingCountry = true;\n      this.countryIndex = id;\n      this.mapFormControlToControl(option);\n    } else {\n      this.isEditingCountry = false;\n      this.country = new Country();\n      this.countryIndex = 0;\n    }\n    this.validateCountryLabels(option);\n  }\n\n  editItem(index: number) {\n    // Store the index of the item to be modified\n    this.countryIndex = index;\n    this.country = this.countries[this.countryIndex];\n    this.isEditingCountry = true;\n    // Map item to form fields\n    this.mapFormControlToControl(index);\n    this.validateCountryLabels(2);\n  }\n\n  loadReferenceTableDetails() {\n    this.referenceService.getCountries(this.$processingEvent, this.$resultRefCountriesEvent, this.$errorsEvent);\n  }\n\n  deleteItem(index: number) {\n    this.list.data.splice(index, 1);\n    this.countries.splice(index, 1);\n    this.list.data = [...this.list.data];\n    // Send items to parent\n    this.countryEvent.emit(this.countries);\n    this.isEditingCountry = false;\n  }\n\n  isValidForm() {\n    return this.countryFormGroup.valid;\n  }\n}\n\nexport class Country {\n  Country: string;\n  Purpose: string;\n  Description: string;\n}\n\nexport interface CountryModel {\n  CountryID: number;\n  Iso: string;\n  Name: string;\n  PhoneCode: string;\n}\n","<ng-container *ngIf=\"storeDataOutSideCountry !== 'No'\">\n\n    <fieldset>\n        <legend>Countries</legend>\n        <ng-container *ngIf=\"!isViewOnly\">\n            <form [formGroup]=\"countryFormGroup\">\n                <ng-template matStepLabel>Countries</ng-template>\n\n                <div class=\"content\" fxLayout=\"column\" fxLayoutGap=\"8px\">\n                    <div fxLayout=\"column\" fxLayout.gt-xs=\"row\" fxLayoutGap=\"8px\" fxLayoutGap.gt-xs=\"24px\">\n                        <mat-form-field class=\"full-width\">\n                            <mat-label>Country<span class=\"required-field\">required</span></mat-label>\n                            <mat-select formControlName=\"Country\">\n                                <mat-option *ngFor=\"let country of $countries\" [value]=\"country.CountryID\">\n                                    {{ country.Name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n\n                        <mat-form-field class=\"full-width\">\n                            <mat-label>Purpose of Transfer<span class=\"required-field\">required</span></mat-label>\n                            <textarea #PositionInput matInput maxlength=\"1000\" formControlName=\"Purpose\"></textarea>\n                            <mat-hint align=\"end\">{{ PositionInput.value.length }} / 1000</mat-hint>\n                        </mat-form-field>\n\n                        <mat-form-field class=\"full-width\" hintLabel=\"A brief Description of data transfered\">\n                            <mat-label>Brief Description<span class=\"required-field\">required</span></mat-label>\n                            <textarea #PositionInput matInput maxlength=\"1000\" formControlName=\"Description\"></textarea>\n                            <mat-hint align=\"end\">{{ PositionInput.value.length }} / 1000</mat-hint>\n                        </mat-form-field>\n\n                    </div>\n                </div>\n            </form>\n            <div *ngIf=\"!isViewOnly\" style=\"text-align: right; padding-top: 5px; padding-bottom: 5px;\">\n                <button mat-raised-button\n                        (click)=\"addOrUpdateCountry(isEditingCountry?2:1)\" color=\"primary\"\n                        [disabled]=\"!isValidForm()\">\n                    <mat-icon>{{buttonIcon}}</mat-icon>\n                    <span>{{buttonLabel}}</span>\n                </button>&nbsp;\n                <span class=\"example-spacer\"></span>\n                <button mat-raised-button (click)=\"resetCountry()\" color=\"warn\">\n                    <mat-icon>cancel</mat-icon>\n                    <span>Cancel</span>\n                </button>\n            </div>\n        </ng-container>\n\n        <div class=\"content\" fxLayout=\"column\" fxLayoutGap=\"8px\">\n            <table mat-table [dataSource]=\"list\">\n                <ng-container matColumnDef=\"nber\">\n                    <th mat-header-cell *matHeaderCellDef style=\"width: 5%\"\n                        class=\"tableFontSize firstColumnTable alignCenter\">#\n                    </th>\n                    <td mat-cell *matCellDef=\"let element; let j=index;\"\n                        class=\"tableFontSize firstColumnTable alignCenter\">\n                        {{j + 1}}\n                    </td>\n                </ng-container>\n                <ng-container matColumnDef=\"country\" *ngIf=\"isViewOnly\">\n                    <th mat-header-cell *matHeaderCellDef class=\"tableFontSize \" style=\"width: 20%\"> Country</th>\n                    <td mat-cell *matCellDef=\"let element\" class=\"tableFontSize \">\n                        {{element.Country}}\n                    </td>\n                </ng-container>\n                <ng-container matColumnDef=\"purpose\" *ngIf=\"isViewOnly\">\n                    <th mat-header-cell *matHeaderCellDef class=\"tableFontSize \" style=\"width: 20%\"> Purpose</th>\n                    <td mat-cell *matCellDef=\"let element\" class=\"tableFontSize \">\n                        {{element.Description}}\n                    </td>\n                </ng-container>\n                <ng-container matColumnDef=\"description\">\n                    <th mat-header-cell *matHeaderCellDef class=\"tableFontSize \" style=\"width: 20%\">Description</th>\n                    <td mat-cell *matCellDef=\"let element\" class=\"tableFontSize \"> {{element.Description}}</td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"actions\">\n                    <th mat-header-cell *matHeaderCellDef style=\"width: 5%\">Actions</th>\n                    <td mat-cell *matCellDef=\"let element; let j=index\" class=\"actions\">\n                        <ng-container *ngIf=\"!isViewOnly\">\n                            <a class=\"link\" (click)=\"manageCountry(2,j)\">\n                                <mat-icon color=\"primary\" class=\"material-icons-outlined\" matTooltip=\"Edit item\">edit\n                                </mat-icon>\n                            </a>&nbsp;&nbsp;\n                            <a class=\"link\" (click)=\"deleteItem(j)\">\n                                <mat-icon color=\"warn\" class=\"material-icons-outlined\" matTooltip=\"Delete item\">delete\n                                </mat-icon>\n                            </a>\n                        </ng-container>\n                    </td>\n                </ng-container>\n                <ng-container matColumnDef=\"noData\">\n                    <td mat-footer-cell *matFooterCellDef colspan=\"7\">\n                        There is no data!\n                    </td>\n                </ng-container>\n                <tr mat-header-row *matHeaderRowDef=\"displayColumns;sticky:true\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: displayColumns;\"></tr>\n                <tr mat-footer-row *matFooterRowDef=\"['noData']\" [ngClass]=\"{'hide':!(list?.data.length==0)}\"></tr>\n            </table>\n        </div>\n    </fieldset>\n</ng-container>\n\n\n<!-- LIST OF ITEMS -->\n\n","var getSymbolSize = require('./utils').getSymbolSize\nvar FINDER_PATTERN_SIZE = 7\n\n/**\n * Returns an array containing the positions of each finder pattern.\n * Each array's element represent the top-left point of the pattern as (x, y) coordinates\n *\n * @param  {Number} version QR Code version\n * @return {Array}          Array of coordinates\n */\nexports.getPositions = function getPositions (version) {\n  var size = getSymbolSize(version)\n\n  return [\n    // top-left\n    [0, 0],\n    // top-right\n    [size - FINDER_PATTERN_SIZE, 0],\n    // bottom-left\n    [0, size - FINDER_PATTERN_SIZE]\n  ]\n}\n","import {ChangeDetectionStrategy, Component, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild} from '@angular/core';\nimport {BaseFuryForm} from '../../../../../@fury/shared/base-fury-form';\nimport {FormArray, FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {\n    CertificateDetails, CertificateDetailsResponse,\n    CompanyRegistrationModel, DataProtectionActors,\n    ROLES_PERFORMED, SecurityMeasuresModel,\n    ThirdParties,\n    TypeOfOrganisation\n} from '../company-registration.model';\nimport {Observable, of, ReplaySubject, Subscription} from 'rxjs';\nimport {CdkTextareaAutosize} from '@angular/cdk/text-field';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {DocumentComment} from '../../../../../@fury/shared/base-fury-form.model';\nimport {fadeInRightAnimation} from '../../../../../@fury/animations/fade-in-right.animation';\nimport {fadeInUpAnimation} from '../../../../../@fury/animations/fade-in-up.animation';\nimport {DataProtectionOfficer} from '../../../models/data-subject.model';\nimport {DataServiceError} from '../../../../../@fury/shared/HttpModel';\nimport {CompanyRegistrationService} from '../../company-registration.service';\nimport {SnackBarService} from '../../../../pages/services/snack-bar.service';\nimport {KeycloakService} from 'keycloak-angular';\nimport {WorkflowServiceService} from '../../../../services/workflow-service.service';\nimport {Action, ActionPerformed, WorkFlowActions, WorkFlowStep, WorkFlowTimeline} from '../../../models/document-workflow.model';\nimport {MatDialog} from '@angular/material/dialog';\nimport {ReviewCommentsComponent} from '../../../../layout/review-comments/review-comments.component';\nimport {CertPreviewComponent} from '../cert-preview/cert-preview.component';\nimport {\n    Checklist,\n    DataPurposes,\n    DataSourceCategory, DataSources,\n    DataSourceSubCategory, DataSourceSubCategoryChecked,\n    NatureOfBusiness,\n    NatureOfBusinessSubCat,\n    Sector\n} from '../../../models/reference.model';\nimport {ReferenceTableService} from '../../../../services/reference-table.service';\nimport {MatCheckboxChange} from '@angular/material/checkbox';\nimport {ApplicationTimelineComponent} from '../../../../layout/application-timeline/application-timeline.component';\nimport {Country} from '../countries/countries.component';\nimport {difference, differenceBy} from 'lodash-es';\nimport { ComplaintService } from '../../../complaints/complaints.service';\nimport { NgModule } from '@angular/core';\nimport { UpdateRegistrationComponent } from '../update-registration/update-registration.component';\n\n\n// @ts-ignore\n@Component({\n    selector: 'fury-edit-company-registration',\n    templateUrl: './edit-company-registration.component.html',\n    styleUrls: ['./edit-company-registration.component.scss'],\n    // changeDetection: ChangeDetectionStrategy.OnPush,\n    animations: [fadeInRightAnimation, fadeInUpAnimation]\n})\nexport class EditCompanyRegistrationComponent extends BaseFuryForm implements OnInit, OnDestroy {\n\n    // Simulating A Service\n    subject$: ReplaySubject<CompanyRegistrationModel> = new ReplaySubject<CompanyRegistrationModel>(1);\n    data$: Observable<CompanyRegistrationModel> = this.subject$.asObservable();\n\n    // Output\n    @Input() certDetailsEventEmitter = new EventEmitter<CertificateDetails>();\n\n    // FormGroups\n    organizationFormGroup: FormGroup;\n    personalDataFormGroup: FormGroup;\n    thirdPartiesFormGroup: FormGroup;\n    childFormGroup: FormGroup;\n    securityFormGroup: FormGroup;\n    applicantDetails: FormGroup;\n    dataProtectionOfficerFormGroup: FormGroup;\n    purposeRetentionFormGroup: FormGroup;\n    personalDataHeldFormGroup: FormGroup;\n    disclosureFormGroup: FormGroup;\n    // ViewChild\n    @ViewChild('autosize') autosize: CdkTextareaAutosize;\n    // Main Object\n    application: CompanyRegistrationModel = new CompanyRegistrationModel();\n    actionPerformed: ActionPerformed = new ActionPerformed();\n    // PageStyle\n    private _gap = 16;\n    gap = `${this._gap}px`;\n    col2 = `1 1 calc(50% - ${this._gap / 2}px)`;\n    col3 = `1 1 calc(33.3333% - ${this._gap / 1.5}px)`;\n\n    // arrays\n    typesOfOrganisation: any[] = [];\n    dataProtectionActors: any [] = [];\n    sectors: any[] = [];\n    dataActors: any [];\n    _dataActors: any [];\n    dataPurposes = [];\n    rolesPerformed: any [] = [];\n    accesses: string[];\n    refDataSourcesCat: DataSourceCategory[] = [];\n    refDataSourceSubCat: DataSourceSubCategory[] = [];\n    dataSourceSubCatChecked: DataSourceSubCategoryChecked [] = [];\n    permittedActions: Action[] = [];\n    dataProtectionOfficers: DataProtectionOfficer[];\n    thirdParties: ThirdParties[];\n    $sectors: Sector[];\n    $natureOfBusiness: NatureOfBusiness[];\n    $natureOfBusinessCat: NatureOfBusinessSubCat[];\n    $dataPurposes: DataPurposes[] = [];\n    $dataSources: DataSources[];\n    securityMeasures: SecurityMeasuresModel[];\n    countries: Country[];\n    selectedDataSourceCategory: DataSourceCategory[] = [];\n    selectedDataSourceSubCategory: DataSourceSubCategory[] = [];\n    $checklist: Checklist[];\n    timeLineAccess: string[] = ['data-protection-officer-director', 'data-protection-officer-nita', 'data-protection-officer-technical', 'data-protection-officer-legal'];\n    isOfficer: boolean;\n    isApplicant: boolean;\n    //\n    today = new Date();\n    regTrackingNo: string;\n    role: string;\n    workflowID = '1';\n    workflowTimeLine: WorkFlowTimeline;\n    currentStep: WorkFlowStep;\n    certificateResponse: CertificateDetailsResponse;\n    certificateDetails: CertificateDetails;\n    // events\n    $processingEvent: EventEmitter<boolean> = new EventEmitter();\n    $errorsEvent: EventEmitter<DataServiceError[]> = new EventEmitter();\n    $resultDocumentEvent: EventEmitter<any> = new EventEmitter();\n    $resultRefDataSourceCatEvent: EventEmitter<any> = new EventEmitter();\n    $resultReferenceDataSourcesEvent: EventEmitter<any> = new EventEmitter();\n    $resultReferenceDataPurposesEvent: EventEmitter<any> = new EventEmitter();\n    $resultRefSectorsEvent: EventEmitter<any> = new EventEmitter();\n    $resultRefNatureOfBussEvent: EventEmitter<any> = new EventEmitter();\n    $resultDocumentCertificate: EventEmitter<any> = new EventEmitter();\n    $resultRefNatureOfBussCatEvent: EventEmitter<any> = new EventEmitter();\n    $resultRefNatureOfBussSubCatEvent: EventEmitter<any> = new EventEmitter();\n    $resultRefChecklistEvent: EventEmitter<any> = new EventEmitter();\n    // Subscriptions\n    subscriptions: Subscription[] = [];\n\n    constructor(\n        private fb: FormBuilder,\n        private activateRoute: ActivatedRoute,\n        private route: Router,\n        public registrationService: CompanyRegistrationService,\n        private _referenceService: ReferenceTableService,\n        public snackBar: SnackBarService,\n        public authService: KeycloakService,\n        public _workflowService: WorkflowServiceService,\n        public complaintService: ComplaintService,\n        private dialog: MatDialog\n    ) {\n        super(\n            authService,\n            _workflowService,\n            registrationService,\n            complaintService,\n        );\n\n        this.accesses = authService.getKeycloakInstance().resourceAccess['dps-frontend'].roles;\n        this.operationType = activateRoute.routeConfig.data.action;\n        this.regTrackingNo = this.route.getCurrentNavigation().extras.state.regTrackingNo;\n        if (this.operationType === 'EDIT') {\n            this.isEditMode = true;\n            this.application.Comments = [];\n            this.application.Countries = [];\n            this.application.DataProtectionOfficers = [];\n            this.application.ThirdParties = [];\n            this.application.SecurityMeasure = [];\n        } else if (this.operationType === 'CREATE') {\n            this.isEditMode = false;\n            this.application.Comments = [];\n            this.application.DataProtectionOfficers = [];\n            this.application.ThirdParties = [];\n            this.application.SecurityMeasure = [];\n            this.application.Countries = [];\n        } else if (this.operationType === 'VIEW') {\n            this.isEditMode = false;\n            this.isViewOnly = true;\n        }\n\n    }\n\n\n    ngOnInit(): void {\n        console.log(\n            'ISVIEW' + this.isViewOnly\n        );\n        this.initForms();\n        this.loadReferenceTableDetails();\n        // Reference Tables Event\n        this.referenceTableSubscriptions();\n        this.referenceTables();\n        // Disable Form By ApplicationStatus\n        this.disableByStatus();\n        // if (this.isViewOnly) {\n        //     this.disableAllControls();\n        // }\n        this.loadRegistrationDocumentDetails();\n        // this.disableFieldsByStatus();\n        this.isOfficer = this.timeLineAccess.includes(this.realmRole);\n        this.subscriptions['$resultDocumentCertificate'] = this.$resultDocumentCertificate.subscribe(result => {\n            if (result) {\n                this.certificateResponse = result;\n                this.certificateResponse.data.OrganizationID = this.application.OrganisationName;\n            }\n        });\n\n        // Company Registration Document Event\n        this.subscriptions['$resultDocumentEvent'] = this.$resultDocumentEvent.subscribe(result => {\n            if (result) {\n                this.application = result;\n                this.mapFields();\n                if (this.operationType === 'MANAGE') {\n                    this.findDocumentActions(1, this.application.CurrentStepID);\n                }\n                this.getDocumentWorkflow(this.application.RegTrackingNo, this.workflowID);\n                this.getIssuedCertDetails(+this.application.OrganisationID);\n                this.isLoaded = true;\n            }\n        });\n\n        // Document Actions\n        this.subscriptions['$resultOperations'] = this.$resultWorkFlowActionsEvent.subscribe(result => {\n            this.errors = [];\n            if (result) {\n                this.workFlowActions = result;\n                this.hasStepAccess = this.workFlowActions.StepAccess;\n                if (this.hasStepAccess) {\n                    console.log('this.workFlowActions.Actions:', this.workFlowActions.Actions);\n                    this.permittedActions = this.workFlowActions.Actions.filter(access => this.accesses.includes(access.ActionRole));\n                    console.log('permittedActions:', this.permittedActions);\n\n                    if (this.permittedActions.length === 0) {\n                        this.snackBar.snackBarAlert(\n                            'ERROR', 'Unauthorized To Perform Action On This Document ', {\n                                duration: 5000\n                            }\n                        );\n                    }\n                }\n                this.isLoaded = true;\n            }\n        });\n\n        // Action Performed\n        this.subscriptions['$resultPerformActionEvent'] = this.$resultPerformActionEvent.subscribe(result => {\n            this.errors = [];\n            if (result.message === 'Success') {\n                this.loadRegistrationDocumentDetails();\n                this.snackBar.snackBarAlert(\n                    'SUCCESS', 'Action Was Successfully, Registration Moved To Next Step', {\n                        duration: 5000\n                    }\n                );\n                this.permittedActions = [];\n            }\n        });\n\n        // Action Performed\n        this.subscriptions['$resultDocumentWorkflowTimelineEvent'] = this.$resultDocWorkFlowTimelineEvent.subscribe(result => {\n            this.errors = [];\n            if (result) {\n                this.workflowTimeLine = result;\n                this.currentStep = this.workflowTimeLine.data.find(\n                    step => +step.StepID === this.application.CurrentStepID\n                );\n                this.application.Status = this.currentStep.StepName;\n                // this.applicantDetails.get('status').setValue(this.application.Status);\n            }\n        });\n\n\n    }\n\n    // DisableByStatus\n    disableByStatus() {\n        if ((this.isApplicant && this.application &&\n                this.application.CurrentStepName !== 'Application Review - Legal' &&\n                this.application.CurrentStepName !== 'Application Review - Legal' &&\n                this.application.CurrentStepName !== 'Final Approver' &&\n                this.application.CurrentStepName !== 'Application Review - Technical' &&\n                this.application.CurrentStepName !== 'Certificate Issued') ||\n            (!this.isApplicant)) {\n            this.disableAllControls();\n        }\n    }\n\n    referenceTableSubscriptions() {\n        this.subscriptions['$resultRefDataSourceCatEvent'] = this.$resultRefDataSourceCatEvent.subscribe(result => {\n            if (result) {\n                this.refDataSourcesCat = result;\n                this.refDataSourcesCat.filter(\n                    e => {\n                        e.SubCategories.forEach(\n                            subCat => {\n                                if (e.SubCategories.indexOf(subCat) > 1) {\n                                    const obj = new DataSourceSubCategory();\n                                    obj.DataSubCategoryID = subCat.DataSubCategoryID;\n                                    obj.DataSubCategory = subCat.DataSubCategory;\n                                    obj.checked = false;\n                                    e.SubCategories.push(obj);\n                                }\n                            }\n                        );\n                    }\n                );\n            }\n        });\n        this.subscriptions['$resultRefNatureOfBussEvent'] = this.$resultRefNatureOfBussEvent.subscribe(result => {\n            if (result) {\n                this.$natureOfBusiness = result;\n            }\n        });\n        this.subscriptions['$resultRefNatureOfBussCatEvent'] = this.$resultRefNatureOfBussCatEvent.subscribe(result => {\n            if (result) {\n                this.$natureOfBusinessCat = result;\n            }\n        });\n        this.subscriptions['$resultReferenceDataSourcesEvent'] = this.$resultReferenceDataSourcesEvent.subscribe(result => {\n            if (result) {\n                this.$dataSources = result;\n            }\n        });\n        this.subscriptions['$resultReferenceDataPurposesEvent'] = this.$resultReferenceDataPurposesEvent.subscribe(result => {\n            if (result) {\n                this.$dataPurposes = result;\n            }\n        });\n        this.subscriptions['$resultRefSectorsEvent'] = this.$resultRefSectorsEvent.subscribe(result => {\n            if (result) {\n                this.$sectors = result;\n            }\n        });\n        this.subscriptions['$resultRefChecklistEvent'] = this.$resultRefChecklistEvent.subscribe(result => {\n            if (result) {\n                console.log(JSON.stringify('checklist' + JSON.stringify(result)));\n                this.$checklist = result.filter(\n                    e =>\n                        this.realmRole === 'data-protection-officer-technical' ? e.ChecklistSection === 'Technical' : e.ChecklistSection === 'Legal'\n                );\n            }\n        });\n        this.dataActors = [\n            {\n                OrganisationCategoryId: 1,\n                OrganisationCategoryName: 'Data Controller'\n            },\n            {\n                OrganisationCategoryId: 2,\n                OrganisationCategoryName: 'Data Processor'\n            },\n            {\n                OrganisationCategoryId: 3,\n                OrganisationCategoryName: 'Data Collector'\n            },\n        ];\n    }\n\n    // Get Certificate Details\n    getIssuedCertDetails(organisationId: number) {\n        this.registrationService.getCertificateDetails(\n            this.$processingEvent,\n            this.$resultDocumentCertificate,\n            this.$errorsEvent,\n            organisationId\n        );\n    }\n\n    onChangeSubCategory(event: MatCheckboxChange, SubCategory: DataSourceSubCategory): void {\n        if (event.checked) {\n            this.selectedDataSourceSubCategory.push(SubCategory);\n        } else {\n            this.selectedDataSourceSubCategory.splice(this.selectedDataSourceSubCategory.indexOf(SubCategory), 1);\n        }\n    }\n\n    // Perform Document Action\n    performAction(action: Action) {\n        this.dialog.open(ReviewCommentsComponent, {\n            width: '1391px',\n            height: '595px',\n            data: {\n                checklist: (action.ActionName === 'Technical-review' || action.ActionName === 'Legal-review') ? this.$checklist : [],\n                action: action,\n                currentStep: this.application.CurrentStepID\n            }\n        }).afterClosed().subscribe((dialogResult) => {\n            if (dialogResult !== null && dialogResult !== '') {\n                const performedAction = new ActionPerformed();\n                performedAction.WorkFlowID = this.workflowID;\n                performedAction.ActionID = action.ActionID.toString();\n                performedAction.RecordTrackingNo = this.application.RegTrackingNo;\n                performedAction.CurrentStepID = this.application.CurrentStepID.toString();\n                performedAction.Comment = dialogResult.comment;\n                performedAction.ActionIsFinal = action.ActionIsFinal;\n                performedAction.CheckList = dialogResult.checklist;\n                this.performingAction(performedAction);\n            }\n        });\n    }\n\n    // Certificate Preview\n    previewCert() {\n        this.dialog.open(CertPreviewComponent, {\n            // width: '841px',\n            // height: '695px',\n            panelClass: ['organisation-certificate-dialog', 'dialogs'],\n            data: this.certificateResponse.data\n        });\n    }\n\n    viewApplicationTimeLine() {\n        this.dialog.open(ApplicationTimelineComponent, {\n            width: '941px',\n            height: '595px',\n            data: this.workflowTimeLine\n        });\n    }\n\n    referenceTables() {\n        this.typesOfOrganisation = Object.entries(TypeOfOrganisation).map(([key, value]) => ({key: key, value: value}));\n        // this.dataActors = Object.entries(DataProtectionActors).map(([key, value]) => ({key: key, value: value}));\n        this.rolesPerformed = Object.entries(ROLES_PERFORMED).map(([key, value]) => ({key: key, value: value}));\n    }\n\n    disableAllControls() {\n        this.applicantDetails.disable();\n        this.dataProtectionOfficerFormGroup.disable();\n        this.personalDataHeldFormGroup.disable();\n        this.purposeRetentionFormGroup.disable();\n        this.disclosureFormGroup.disable();\n    }\n\n    onCommentChange(comments: DocumentComment[]) {\n        if (comments) {\n            this.application.Comments = comments;\n        }\n    }\n\n    initForms() {\n\n        this.applicantDetails = this.fb.group({\n            organizationName: [],\n            DPPActCategory: [],\n            OrganizationTypeID: [],\n            SectorID: [],\n            Location: [],\n            PhoneNumber: [],\n            EmailAddress: [],\n            NatureOfBusinessCat: [],\n            NatureOfBusinessSubCat: [],\n        });\n        this.dataProtectionOfficerFormGroup = this.fb.group({\n            DPOName: [],\n            DPOPhysicalAddress: [],\n            PhoneNumberCode: [],\n            DPOPhoneNumber: [],\n            DPOEmailAddress: [],\n            DPOPositionInOrganisation: [],\n            DPORequired: []\n        });\n        this.disclosureFormGroup = this.fb.group({\n            disclosePersonalData: [],\n            StoreDataOutsideCountry: []\n        });\n\n        this.purposeRetentionFormGroup = this.fb.group({\n            Purpose: [],\n            SpecifyTheLaw: [],\n            ServiceOrProductProvided: [],\n            SpecifyLegalObligation: [],\n            TotalRecordsAtRegistration: [],\n            RecordPercentageGrowth: [],\n            RetentionPeriod: []\n        });\n\n        this.personalDataHeldFormGroup = this.fb.group({\n            SourceOfDataID: [],\n            PersonalDataCollected: []\n        });\n\n        this.securityFormGroup = this.fb.group({});\n    }\n\n\n    loadRegistrationDocumentDetails() {\n        this.registrationService.getRegistrationByReferenceNumber(\n            this.$processingEvent, this.$resultDocumentEvent, this.$errorsEvent, this.regTrackingNo);\n    }\n\n    loadReferenceTableDetails() {\n        // this.registrationService.getDataSource(this.$processingEvent, this.$resultReferenceDataSourcesEvent, this.$errorsEvent);\n        // this.referenceService.getSubCategories(this.$processingEvent, this.$resultRefDataSourceCatEvent, this.$errorsEvent);\n        // this.referenceService.getDataPurposes(this.$processingEvent, this.$resultReferenceDataPurposesEvent, this.$errorsEvent);\n        // this.referenceService.getSectors(this.$processingEvent, this.$resultRefSectorsEvent, this.$errorsEvent);\n        // this.referenceService.getNatureOfBusiness(this.$processingEvent, this.$resultRefNatureOfBussEvent, this.$errorsEvent);\n        // this.referenceService.getChecklist(this.$processingEvent, this.$resultRefChecklistEvent, this.$errorsEvent);\n    }\n\n    onDataProtectionOfficerChange($event: DataProtectionOfficer[]) {\n        this.dataProtectionOfficers = $event;\n    }\n\n    onSecurityModelChange($event: SecurityMeasuresModel[]) {\n        this.application.SecurityMeasure = $event;\n    }\n\n    onCountriesChange($event: Country[]) {\n        this.application.Countries = $event;\n    }\n\n    onDataThirdPartiesChange($event: ThirdParties[]) {\n        this.application.ThirdParties = $event;\n    }\n\n    filter(data) {\n        console.log(data.value);\n    }\n\n    mapFields() {\n        this.isApplicationValid = true;\n        // generalFormGroup\n        if (this.application.OrganisationCategory.length > 0) {\n            const tempArr = [];\n            this.application.OrganisationCategory.forEach(e => tempArr.push(e.OrganisationCategoryId));\n            this.applicantDetails.get('DPPActCategory').setValue(tempArr);\n        }\n        this.applicantDetails.get('organizationName').setValue(this.application.OrganisationName);\n        this.applicantDetails.get('OrganizationTypeID').setValue(this.application.OrganizationTypeID);\n        this.applicantDetails.get('SectorID').setValue(this.application.SectorID);\n        this.applicantDetails.get('Location').setValue(this.application.Location);\n        this.applicantDetails.get('PhoneNumber').setValue(this.application.PhoneNumber);\n        this.applicantDetails.get('EmailAddress').setValue(this.application.EmailAddress);\n        if (this.application.NatureOfBusiness.length > 0) {\n            this.applicantDetails.get('NatureOfBusinessCat').setValue(\n                this.application.NatureOfBusiness[0].NatureOfBusinessCatID\n            );\n            const tempArr = [];\n            // this.referenceService.getNatureOfBusinessSubCat(\n            //     this.application.NatureOfBusiness[0].NatureOfBusinessCatID,\n            //     this.$processingEvent, this.$resultRefNatureOfBussCatEvent, this.$errorsEvent\n            // );\n            this.application.NatureOfBusiness.forEach(e => tempArr.push(e.NatureOfBusinessSubatID));\n            this.applicantDetails.get('NatureOfBusinessSubCat').setValue(\n                tempArr\n            );\n        }\n        this.dataProtectionOfficerFormGroup.get('DPORequired').setValue(this.application.DPORequired);\n        this.dataProtectionOfficerFormGroup.get('DPOName').setValue(this.application.DPOName);\n        this.dataProtectionOfficerFormGroup.get('DPOPhysicalAddress').setValue(this.application.DPOPhysicalAddress);\n        this.dataProtectionOfficerFormGroup.get('DPOPhoneNumber').setValue(this.application.DPOPhoneNumber);\n        this.dataProtectionOfficerFormGroup.get('DPOEmailAddress').setValue(this.application.DPOEmailAddress);\n        this.dataProtectionOfficerFormGroup.get('DPOPositionInOrganisation').setValue(this.application.DPOPositionInOrganisation);\n        if (this.application.Purpose.length > 0) {\n            const tempArr = [];\n            this.application.Purpose.forEach(e => tempArr.push(e.DataPurposeID));\n            this.purposeRetentionFormGroup.get('Purpose').setValue(tempArr);\n        }\n\n        this.purposeRetentionFormGroup.get('SpecifyTheLaw').setValue(this.application.SpecifyTheLaw);\n        this.purposeRetentionFormGroup.get('ServiceOrProductProvided').setValue(this.application.ServiceOrProductProvided);\n        this.purposeRetentionFormGroup.get('SpecifyLegalObligation').setValue(this.application.SpecifyLegalObligation);\n        this.purposeRetentionFormGroup.get('TotalRecordsAtRegistration').setValue(this.application.TotalRecordsAtRegistration);\n        this.purposeRetentionFormGroup.get('RecordPercentageGrowth').setValue(this.application.RecordPercentageGrowth);\n        this.purposeRetentionFormGroup.get('RetentionPeriod').setValue(this.application.RetentionPeriod);\n        if (this.application.SourceOfDataID.length > 0) {\n            const tempArr = [];\n            this.application.SourceOfDataID.forEach(e => tempArr.push(e.DataSourceID));\n            console.log('dataSources' + tempArr);\n            console.log('SourcesCategory' + JSON.stringify(this.$dataSources));\n            this.personalDataHeldFormGroup.get('SourceOfDataID').setValue(tempArr);\n            // this.personalDataHeldFormGroup.get('PersonalDataCollected').setValue(tempArr);\n        }\n        // if (this.refDataSourcesCat.length > 0) {\n        //     console.log('here');\n        //     if (this.application.PersonalDataCollected.length > 0) {\n        //         const tempArr = [];\n        //         this.application.PersonalDataCollected.forEach(e => {\n        //             const obj = new DataSourceSubCategoryChecked();\n        //             obj.DataSubCategoryID = +e.DataSubCategoryID;\n        //             obj.DataSubCategory = e.DataSubCategory;\n        //             obj.checked = false;\n        //             tempArr.push(obj);\n        //         });\n        //         this.refDataSourcesCat.filter(\n        //             e => {\n        //                 e.SubCategories.forEach((s) => {\n        //                         if (e.SubCategories.indexOf(s) > 1) {\n        //                             tempArr.find(a => {\n        //                                 if (s.DataSubCategory === a.DataSubCategory) {\n        //                                     s.checked = true;\n        //                                     console.log('checked');\n        //                                 } else {\n        //                                     s.checked = false;\n        //                                 }\n        //                                 e.SubCategories.push(s);\n        //                             });\n        //                         }\n        //                     }\n        //                 )\n        //                 ;\n        //                 // e.SubCategories.forEach((s) => tempArr.find(a => {\n        //                 //         if (s.DataSubCategory === a.DataSubCategory) {\n        //                 //             s.checked = true;\n        //                 //             console.log('checked');\n        //                 //             // this.personalDataHeldFormGroup.get('PersonalDataCollected').setValue(e.checked);\n        //                 //         }\n        //                 //     })\n        //                 // );\n        //             }\n        //         );\n        //\n        //         // this.dataSourceSubCatChecked.map((e) => tempArr.find(a => {\n        //         //     if (e.DataSubCategory === a.DataSubCategory) {\n        //         //         e.checked = true;\n        //         //         // this.personalDataHeldFormGroup.get('PersonalDataCollected').setValue(e.checked);\n        //         //     }\n        //         // }));\n        //         // this.updateChecked();\n        //         console.log('checked===>' + JSON.stringify(this.refDataSourcesCat));\n        //     }\n        // }\n\n        this.disclosureFormGroup.get('disclosePersonalData')\n            .setValue(this.application.PersonalDataIsForDisclosure);\n        this.disclosureFormGroup.get('StoreDataOutsideCountry')\n            .setValue(this.application.StoreDataOutsideCountry);\n\n    }\n\n    updateChecked() {\n        this.dataSourceSubCatChecked.every(t => t.checked);\n    }\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n    }\n\n    Update(){\n        this.dialog.open(UpdateRegistrationComponent, {\n\n           \n        });\n\n\n\n    }\n\n    \n}\n","<fury-page-layout mode=\"card\">\n    <fury-page-layout-header>\n        <fury-breadcrumbs [@fadeInRight] [crumbs]=\"['Company Registration']\"\n                          current=\"{{application.RegTrackingNo}}\"></fury-breadcrumbs>\n    </fury-page-layout-header>\n\n    <fury-page-layout-content [@fadeInUp]>\n        <div class=\"actions-button-padding\">\n            <mat-toolbar\n                    *ngIf=\"permittedActions.length > 0 || application.CurrentStepName === 'Certificate Issued' || isOfficer \">\n                <mat-toolbar-row>\n                    <ng-container *ngFor=\"let operation of permittedActions\">\n                        <button mat-raised-button [color]=\"operation.ActionColor\" class=\"actions-button-padding\"\n                                (click)=\"performAction(operation)\">\n                            <mat-icon>{{operation.ActionIcon}}</mat-icon>\n                            <span> {{operation.ActionName}}</span>\n                        </button>\n                    </ng-container>\n                    <span class=\"example-spacer\"></span>\n                    <button mat-raised-button matTooltip=\"Print Certificate\"\n                            *ngIf=\"application.CurrentStepName === 'Certificate Issued'\" color=\"primary\"\n                            (click)=\"previewCert()\">\n                        <mat-icon>print</mat-icon>\n                        <span> Print Certificate </span>\n                    </button>\n                 \n                    <button mat-raised-button matTooltip=\"View Timeline\" class=\"actions-button-padding\"\n                            *ngIf=\"isOfficer\" color=\"primary\" (click)=\"viewApplicationTimeLine()\">\n                        <mat-icon>view_timeline</mat-icon>\n                        <span>Application Timeline</span>\n                    </button>\n                </mat-toolbar-row>\n            </mat-toolbar>\n        </div>\n        <div [@fadeInUp] class=\"\">\n            <fury-card>\n                <mat-tab-group mat-stretch-tabs>\n                    <mat-tab>\n                        <ng-template mat-tab-label>\n                            <mat-icon>info</mat-icon>\n                            Applicant Info\n                        </ng-template>\n                        <fury-card-content class=\"padding-top\">\n                            <form [formGroup]=\"applicantDetails\">\n                                <div class=\"content\" fxLayout=\"column\" fxLayoutGap=\"8px\">\n\n                                    <div fxLayout=\"column\" fxLayout.gt-xs=\"row\" fxLayoutGap=\"8px\"\n                                         fxLayoutGap.gt-xs=\"24px\">\n                                        <mat-form-field fxFlex=\"2 1 auto\">\n                                            <mat-label>Organisation Name</mat-label>\n                                            <input formControlName=\"organizationName\" matInput>\n                                        </mat-form-field>\n\n                                        <mat-form-field fxFlex=\"2 1 auto\">\n                                            <mat-label>Category <span class=\"required-field\">required</span></mat-label>\n                                            <mat-select (selectionChange)=\"filter($event)\" multiple\n                                                        formControlName=\"DPPActCategory\">\n                                                <mat-option *ngFor=\"let actor of dataActors\"\n                                                            [value]=\"actor.OrganisationCategoryId \">\n                                                    {{actor.OrganisationCategoryName }}</mat-option>\n                                            </mat-select>\n                                        </mat-form-field>\n\n                                        <mat-form-field fxFlex=\"2 1 auto\">\n                                            <mat-label>Type of Organisation <span class=\"required-field\">required</span>\n                                            </mat-label>\n                                            <mat-select formControlName=\"OrganizationTypeID\">\n                                                <mat-option *ngFor=\"let type of typesOfOrganisation\"\n                                                            [value]=\"type.value.id\">{{ type.value.name }}\n                                                </mat-option>\n                                            </mat-select>\n                                        </mat-form-field>\n                                    </div>\n\n                                    <div fxLayout=\"column\" fxLayout.gt-xs=\"row\" fxLayoutGap=\"8px\"\n                                         fxLayoutGap.gt-xs=\"24px\">\n\n                                        <mat-form-field fxFlex=\"2 1 auto\">\n                                            <mat-label>Sector <span class=\"required-field\">required</span></mat-label>\n                                            <mat-select formControlName=\"SectorID\">\n                                                <mat-option *ngFor=\"let sector of $sectors\" [value]=\"sector.SectorID\">\n                                                    {{ sector.Sector }}\n                                                </mat-option>\n                                            </mat-select>\n                                        </mat-form-field>\n\n\n                                        <mat-form-field fxFlex=\"2 1 auto\">\n                                            <mat-label>Physical Address</mat-label>\n                                            <input formControlName=\"Location\" matInput>\n                                        </mat-form-field>\n\n                                        <mat-form-field fxFlex=\"2 1 auto\">\n                                            <mat-label>Organisation Telephone Number</mat-label>\n                                            <input formControlName=\"PhoneNumber\" matInput>\n                                        </mat-form-field>\n                                    </div>\n\n                                    <div fxLayout=\"column\" fxLayout.gt-xs=\"row\" fxLayoutGap=\"8px\"\n                                         fxLayoutGap.gt-xs=\"24px\">\n                                        <mat-form-field fxFlex=\"2 1 auto\">\n                                            <mat-label>Organisation Email Address</mat-label>\n                                            <input formControlName=\"EmailAddress\" matInput>\n                                        </mat-form-field>\n\n                                        <mat-form-field fxFlex=\"2 1 auto\">\n                                            <mat-label>Nature Of Business</mat-label>\n                                            <mat-select formControlName=\"NatureOfBusinessCat\">\n                                                <mat-option *ngFor=\"let business of $natureOfBusiness\"\n                                                            [value]=\"business.NatureOfBusinessCatId\">\n                                                    {{ business.NatureOfBusinessCategoryName }}\n                                                </mat-option>\n                                            </mat-select>\n                                        </mat-form-field>\n                                    </div>\n                                    <div fxLayout=\"column\" fxLayout.gt-xs=\"row\" fxLayoutGap=\"8px\"\n                                         fxLayoutGap.gt-xs=\"24px\">\n                                        <mat-form-field fxFlex=\"2 1 auto\" hintLabel=\"\">\n                                            <mat-label>Nature of Business Sub-Categories\n                                            </mat-label>\n                                            <mat-select formControlName=\"NatureOfBusinessSubCat\" multiple>\n                                                <mat-option *ngFor=\"let subCat of $natureOfBusinessCat\"\n                                                            [value]=\"subCat.NatureOfBusinessSubCatId\">\n                                                    {{ subCat.NatureOfBusinessSubCategoryName }}\n                                                </mat-option>\n                                            </mat-select>\n                                        </mat-form-field>\n                                    </div>\n\n                                </div>\n                            </form>\n                        </fury-card-content>\n                    </mat-tab>\n                    <mat-tab>\n                        <ng-template mat-tab-label>\n                            <mat-icon>admin_panel_settings</mat-icon>\n                            Data Protection Officer\n                        </ng-template>\n\n                        <fury-card-content class=\"padding-top\">\n                            <fieldset>\n                                <legend>Data Protection Officer Details</legend>\n                                <form [formGroup]=\"dataProtectionOfficerFormGroup\">\n                                    <div class=\"content\" fxLayout=\"column\" fxLayoutGap=\"8px\">\n\n                                        <div fxLayout=\"column\" fxLayout.gt-xs=\"row\" fxLayoutGap=\"8px\"\n                                             fxLayoutGap.gt-xs=\"24px\">\n                                            <mat-label>Are you required by Law to designate a data protection Officer ?\n                                            </mat-label>\n                                            <mat-radio-group\n                                                    color=\"primary\"\n                                                    formControlName=\"DPORequired\"\n                                                    aria-label=\"Pick one\">\n                                                <mat-radio-button value=\"Yes\">Yes</mat-radio-button>\n                                                <mat-radio-button value=\"No\">No</mat-radio-button>\n                                            </mat-radio-group>\n\n                                            <mat-form-field fxFlex=\"2 1 auto\" *ngIf=\"application.DPORequired === 'YES'\">\n                                                <mat-label> Name</mat-label>\n                                                <input formControlName=\"DPOName\" matInput>\n                                            </mat-form-field>\n\n                                            <mat-form-field fxFlex=\"2 1 auto\" *ngIf=\"application.DPORequired === 'YES'\">\n                                                <mat-label>Physical Address</mat-label>\n                                                <input formControlName=\"DPOPhysicalAddress\" matInput>\n                                            </mat-form-field>\n\n                                            <mat-form-field fxFlex=\"2 1 auto\" *ngIf=\"application.DPORequired === 'YES'\">\n                                                <mat-label>Phone</mat-label>\n                                                <input formControlName=\"DPOPhoneNumber\" matInput>\n                                            </mat-form-field>\n                                        </div>\n\n                                        <div fxLayout=\"column\" fxLayout.gt-xs=\"row\" fxLayoutGap=\"8px\"\n                                             fxLayoutGap.gt-xs=\"24px\">\n\n                                            <mat-form-field fxFlex=\"2 1 auto\" *ngIf=\"application.DPORequired === 'YES'\">\n                                                <mat-label>Email Address</mat-label>\n                                                <input formControlName=\"DPOEmailAddress\" matInput>\n                                            </mat-form-field>\n\n                                            <mat-form-field fxFlex=\"2 1 auto\" *ngIf=\"application.DPORequired === 'YES'\">\n                                                <mat-label>Title Held</mat-label>\n                                                <input formControlName=\"DPOPositionInOrganisation\" matInput>\n                                            </mat-form-field>\n\n                                        </div>\n                                    </div>\n                                </form>\n                            </fieldset>\n                        </fury-card-content>\n                    </mat-tab>\n                    <mat-tab label=\"\">\n                        <ng-template mat-tab-label>\n                            <mat-icon>folder_shared</mat-icon>\n                            Data Collected or Processed\n                        </ng-template>\n\n                        <fury-card-content class=\"padding-top\">\n                            <fieldset>\n                                <legend>Data Collected / Processed</legend>\n                                <form [formGroup]=\"personalDataHeldFormGroup\">\n                                    <ng-template matStepLabel>Personal Data Held</ng-template>\n                                    <div class=\"content\" fxLayout=\"column\" fxLayoutGap=\"8px\">\n                                        <mat-form-field hintLabel=\"Choose all that apply.\" class=\"full-width\">\n                                            <mat-label>Source of Data\n                                            </mat-label>\n                                            <mat-select multiple formControlName=\"SourceOfDataID\">\n                                                <mat-option *ngFor=\"let source of $dataSources\"\n                                                            [value]=\"source.DataSourceID\">\n                                                    {{ source.DataSource }}\n                                                </mat-option>\n                                            </mat-select>\n                                        </mat-form-field>\n                                        <section *ngFor=\"let category of refDataSourcesCat; let i = index\"\n                                                 class=\"expand-section categories\">\n\n                                            <h3 [innerHTML]=\"category.DataCategory\"></h3>\n                                            <br>\n\n                                            <ng-container *ngFor=\"let item of category.SubCategories\">\n                                                <mat-checkbox formControlName=\"PersonalDataCollected\"\n                                                              [(ngModel)]=\"item.checked\"\n                                                >\n                                                    {{item.DataSubCategory}}\n                                                </mat-checkbox>\n                                            </ng-container>\n\n<!--                                            <mat-checkbox formControlName=\"PersonalDataCollected\"-->\n<!--                                                          *ngFor=\"let SubCategory of category.SubCategories\"-->\n<!--                                                          [(ngModel)]=\"SubCategory.checked\"-->\n<!--                                                          [ngClass]=\"{'full-width': category.SubCategories.length === 1}\"-->\n<!--                                                          color=\"primary\"-->\n<!--                                                          (change)=\"onChangeSubCategory($event,SubCategory)\"-->\n<!--                                                          [required]=\"'false'\">-->\n<!--                                                {{ SubCategory.DataSubCategory }}-->\n<!--                                            </mat-checkbox>-->\n                                        </section>\n                                    </div>\n                                </form>\n                            </fieldset>\n\n                        </fury-card-content>\n                    </mat-tab>\n                    <mat-tab label=\"\">\n                        <ng-template mat-tab-label>\n                            <mat-icon>verified_user</mat-icon>\n                            Purpose & Retention\n                        </ng-template>\n                        <fury-card-content class=\"padding-top\">\n                            <fieldset>\n                                <legend>Purpose & Retention Details</legend>\n                                <form [formGroup]=\"purposeRetentionFormGroup\">\n                                    <div class=\"content\" fxLayout=\"column\" fxLayoutGap=\"8px\">\n                                        <div fxLayout=\"column\" fxLayout.gt-xs=\"row\" fxLayoutGap=\"8px\"\n                                             fxLayoutGap.gt-xs=\"24px\">\n                                            <mat-form-field fxFlex=\"2 1 auto\"\n                                                            hintLabel=\"Why do you collect personal Data?\">\n                                                <mat-label>For What Purpose ?<span\n                                                        class=\"required-field\">required</span>\n                                                </mat-label>\n                                                <mat-select formControlName=\"Purpose\" multiple>\n                                                    <mat-option *ngFor=\"let purpose of $dataPurposes\"\n                                                                [value]=\"purpose.DataPurposeID\">\n                                                        {{ purpose.DataPurpose }}\n                                                    </mat-option>\n                                                </mat-select>\n                                            </mat-form-field>\n\n                                            <mat-form-field fxFlex=\"2 1 auto\"\n                                                            hintLabel=\"If the purpose is Collection / Processing is required by Law.\"\n                                            >\n                                                <mat-label>Specify the Law\n                                                </mat-label>\n                                                <input matInput maxlength=\"14\" formControlName=\"SpecifyTheLaw\">\n                                            </mat-form-field>\n\n                                            <mat-form-field fxFlex=\"2 1 auto\"\n                                                            hintLabel=\"If the purpose is to provide services / products to Individuals.\"\n                                            >\n                                                <mat-label>Specify the Service / Product Provided</mat-label>\n                                                <input matInput maxlength=\"14\"\n                                                       formControlName=\"ServiceOrProductProvided\">\n                                            </mat-form-field>\n                                        </div>\n                                        <div fxLayout=\"column\" fxLayout.gt-xs=\"row\" fxLayoutGap=\"8px\"\n                                             fxLayoutGap.gt-xs=\"24px\">\n                                            <mat-form-field fxFlex=\"2 1 auto\"\n                                                            hintLabel=\"If the purpose is for Complience with a Legal Obligation.\"\n                                            >\n                                                <mat-label>Specify the Legal Obligation</mat-label>\n                                                <input matInput maxlength=\"14\" formControlName=\"SpecifyLegalObligation\">\n                                            </mat-form-field>\n\n                                            <mat-form-field fxFlex=\"2 1 auto\"\n                                                            hintLabel=\"Approximate number of Personal Data Records held.\">\n                                                <mat-label>Total Records\n                                                </mat-label>\n                                                <input appCurrencyDirective matInput maxlength=\"14\"\n                                                       formControlName=\"TotalRecordsAtRegistration\">\n                                            </mat-form-field>\n\n                                            <mat-form-field fxFlex=\"2 1 auto\"\n                                                            hintLabel=\"The percentage annual growth of Personal Records held\">\n                                                <mat-label>Percentage Annual Growth</mat-label>\n                                                <input appCurrencyDirective matInput maxlength=\"3\"\n                                                       formControlName=\"RecordPercentageGrowth\">\n                                                <span matSuffix>%</span>\n                                            </mat-form-field>\n\n                                            <mat-form-field fxFlex=\"2 1 auto\"\n                                                            hintLabel=\"Duration for which personal data shall be kept (Years).\">\n                                                <mat-label>Retention period\n                                                </mat-label>\n                                                <input appCurrencyDirective matInput maxlength=\"5\"\n                                                       formControlName=\"RetentionPeriod\">\n                                            </mat-form-field>\n                                        </div>\n                                    </div>\n                                </form>\n                            </fieldset>\n\n                        </fury-card-content>\n                    </mat-tab>\n                    <mat-tab label=\"\">\n                        <ng-template mat-tab-label>\n                            <mat-icon>group_add</mat-icon>\n                            DisClosure & Transfer\n                        </ng-template>\n                        <fury-card-content class=\"padding-top\">\n                            <form [formGroup]=\"disclosureFormGroup\">\n                                <div class=\"content\" fxLayout=\"column\" fxLayoutGap=\"8px\">\n\n                                    <div fxLayout=\"column\" fxLayout.gt-xs=\"row\" fxLayoutGap=\"8px\"\n                                         fxLayoutGap.gt-xs=\"24px\">\n                                        <mat-label>List of persons or Bodies to whom personal data may be disclosed\n                                            Do you disclose Personal Data to other Persons or Bodies ?\n                                        </mat-label>\n                                        <mat-radio-group color=\"primary\" aria-label=\"Pick one\"\n                                                         formControlName=\"disclosePersonalData\">\n                                            <mat-radio-button value=\"Yes\"> Yes</mat-radio-button>\n                                            <mat-radio-button value=\"No\"> No</mat-radio-button>\n                                        </mat-radio-group>\n                                    </div>\n                                    <div fxFlex=\"2 2 auto\">\n                                        <fury-third-parties\n                                                [disclosePersonalData]=\"application.PersonalDataIsForDisclosure\"\n                                                [thirdParties]=\"application.ThirdParties\"\n                                                [isViewOnly]=\"true\"\n                                                (thirdPartiesEvent)=\"onDataThirdPartiesChange($event)\">\n                                        </fury-third-parties>\n                                    </div>\n                                    <div fxLayout=\"column\" fxLayout.gt-xs=\"row\" fxLayoutGap=\"8px\"\n                                         fxLayoutGap.gt-xs=\"24px\">\n                                        <mat-label>Do you Transfer personal data outside Uganda\n                                        </mat-label>\n                                        <mat-radio-group color=\"primary\" aria-label=\"Pick one\"\n                                                         formControlName=\"StoreDataOutsideCountry\">\n                                            <mat-radio-button value=\"Yes\"> Yes</mat-radio-button>\n                                            <mat-radio-button value=\"No\"> No</mat-radio-button>\n                                        </mat-radio-group>\n                                    </div>\n                                    <fury-countries\n                                            [storeDataOutSideCountry]=\"application.StoreDataOutsideCountry\"\n                                            [countries]=\"application.Countries\"\n                                            [isViewOnly]=\"true\"\n                                            (countryEvent)=\"onCountriesChange($event)\"\n                                    ></fury-countries>\n                                </div>\n                            </form>\n                        </fury-card-content>\n                    </mat-tab>\n                    <mat-tab label=\"\">\n                        <ng-template mat-tab-label>\n                            <mat-icon>admin_panel_settings</mat-icon>\n                            Security Information\n                        </ng-template>\n                        <fury-card-content class=\"padding-top\">\n                            <fury-security-measures\n                                    [securityMeasures]=\"application.SecurityMeasure\"\n                                    [isViewOnly]=\"true\"\n                                    (securityEvent)=\"onSecurityModelChange($event)\"\n                            ></fury-security-measures>\n                        </fury-card-content>\n                    </mat-tab>\n                </mat-tab-group>\n            </fury-card>\n        </div>\n    </fury-page-layout-content>\n</fury-page-layout>\n","var Utils = require('./utils')\n\nvar G15 = (1 << 10) | (1 << 8) | (1 << 5) | (1 << 4) | (1 << 2) | (1 << 1) | (1 << 0)\nvar G15_MASK = (1 << 14) | (1 << 12) | (1 << 10) | (1 << 4) | (1 << 1)\nvar G15_BCH = Utils.getBCHDigit(G15)\n\n/**\n * Returns format information with relative error correction bits\n *\n * The format information is a 15-bit sequence containing 5 data bits,\n * with 10 error correction bits calculated using the (15, 5) BCH code.\n *\n * @param  {Number} errorCorrectionLevel Error correction level\n * @param  {Number} mask                 Mask pattern\n * @return {Number}                      Encoded format information bits\n */\nexports.getEncodedBits = function getEncodedBits (errorCorrectionLevel, mask) {\n  var data = ((errorCorrectionLevel.bit << 3) | mask)\n  var d = data << 10\n\n  while (Utils.getBCHDigit(d) - G15_BCH >= 0) {\n    d ^= (G15 << (Utils.getBCHDigit(d) - G15_BCH))\n  }\n\n  // xor final data with mask pattern in order to ensure that\n  // no combination of Error Correction Level and data mask pattern\n  // will result in an all-zero data string\n  return ((data << 10) | d) ^ G15_MASK\n}\n","import {AfterViewInit, Component, EventEmitter, Input, OnInit, ViewChild} from '@angular/core';\nimport { Subscription} from 'rxjs';\nimport {\n    CompanyRegistration,\n    ComponyRegistrationObject\n} from '../company-registration.model';\nimport {\n    DataType, DateFinderOptions,\n    IFinderField,\n    ListColumn,\n    LookupFinderOptions,\n    TextFinderOptions\n} from '../../../../../@fury/shared/list/list-column.model';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {MatDialog} from '@angular/material/dialog';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {fadeInRightAnimation} from '../../../../../@fury/animations/fade-in-right.animation';\nimport {fadeInUpAnimation} from '../../../../../@fury/animations/fade-in-up.animation';\nimport {BaseFuryForm} from '../../../../../@fury/shared/base-fury-form';\nimport {CompanyRegistrationService} from '../../company-registration.service';\nimport {KeycloakService} from 'keycloak-angular';\nimport {WorkflowServiceService} from '../../../../services/workflow-service.service';\nimport {AuthenticationService} from '../../../../authentication/authentication.service';\nimport {ComplaintService} from '../../../complaints/complaints.service';\n\n@Component({\n    selector: 'fury-find-company-registration',\n    templateUrl: './find-company-registration.component.html',\n    styleUrls: ['./find-company-registration.component.scss'],\n    animations: [fadeInRightAnimation, fadeInUpAnimation]\n})\nexport class FindCompanyRegistrationComponent extends BaseFuryForm implements OnInit, AfterViewInit {\n\n\n    statuses: any = [\n        {code: '001', description: 'Received'},\n        {code: '002', description: 'Pending Payment'},\n        {code: '003', description: 'Legal Review'},\n        {code: '004', description: 'Technical Review'},\n        {code: '005', description: 'Paid'},\n        {code: '002', description: 'Certificate Issued'},\n    ];\n\n    operationType = '';\n    realmRole: string;\n    showUpdateButton =  false;\n    // Array\n    accesses: any [] = [];\n    statusList: any[] = [];\n    companyRegistrations: ComponyRegistrationObject[];\n    // Subscriptions\n    subscriptions: Subscription[] = [];\n    // Events\n    $processingEvent: EventEmitter<boolean> = new EventEmitter();\n    $errorsEvent: EventEmitter<any> = new EventEmitter();\n    $resultCompaniesEvent: EventEmitter<ComponyRegistrationObject> = new EventEmitter();\n    // Boolean\n    isProcessing = false;\n    isOrganisation = false;\n    @Input()\n    columns: ListColumn[] = [\n        {name: 'Tracking No', property: 'RegTrackingNo', visible: true, isModelProperty: true},\n        {name: 'Organisation Name', property: 'OrganisationName', visible: true, isModelProperty: true},\n        {name: 'Current Status', property: 'CurrentStepName', visible: true, isModelProperty: true},\n        {name: 'Email', property: 'EmailAddress', visible: true, isModelProperty: true},\n        {name: 'PhoneNumber', property: 'PhoneNumber', visible: true, isModelProperty: true},\n        {name: 'Created On', property: 'EnteredOn', visible: true, isModelProperty: false},\n        {name: 'Actions', property: 'actions', visible: true},\n    ] as ListColumn[];\n    pageSize = 10;\n    dataSource: MatTableDataSource<CompanyRegistration> | null;\n\n    @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n    @ViewChild(MatSort, {static: true}) sort: MatSort;\n\n    // Search fields\n    searchFields: IFinderField[];\n\n    constructor(\n        private dialog: MatDialog,\n        private route: ActivatedRoute,\n        private router: Router,\n        private auth: KeycloakService,\n        private authenticationService: AuthenticationService,\n        public registrationService: CompanyRegistrationService,\n        public _workflowService: WorkflowServiceService,\n        public complaintService:ComplaintService\n    ) {\n        super(\n            auth,\n            _workflowService,\n            registrationService,\n            complaintService,\n        );\n\n        this.operationType = route.routeConfig.data.action;\n    }\n\n    // TODO:: Need to hide addressedTo Column from data controllers its mainly for nita data-protection officers\n    get visibleColumns() {\n        return this.columns.filter(column => column.visible).map(column => column.property);\n    }\n\n    ngOnInit(): void {\n        if (this.auth.getKeycloakInstance().resourceAccess['dps-frontend']) {\n            this.accesses = this.auth.getKeycloakInstance().resourceAccess['dps-frontend'].roles;\n        }\n\n        console.log(this.auth.getKeycloakInstance());\n\n        if (this.auth.getKeycloakInstance().realmAccess) {\n            if(this.auth.getKeycloakInstance().realmAccess.roles.includes('organisation')){\n                this.isOrganisation = true;\n            }\n            //this.realmRole = this.auth.getKeycloakInstance().realmAccess.roles[1];\n            //console.log(this.realmRole);\n            //console.log(\"here\");\n            //if (this.realmRole === 'organisation') {\n                //this.isOrganisation = true;\n            //}\n        }\n\n        // Processing event\n        this.subscriptions['$processingEvent'] = this.$processingEvent.subscribe(isProcessing => this.isProcessing = isProcessing);\n\n        this.dataSource = new MatTableDataSource();\n\n        // registeredCompanies\n        this.subscriptions['$resultCompaniesEvent'] = this.$resultCompaniesEvent.subscribe(result => {\n            if (result) {\n                this.companyRegistrations = result;\n                this.dataSource.data = result;\n                this.isLoaded = true;\n            }\n        });\n\n        this.statusList = this.getGenericDDL(this.statuses, {key: 'code', label: 'description'}, false);\n\n        this.defineSearchFields();\n\n        if (this.operationType === 'FIND') {\n            if (this.isOrganisation) {\n                this.loadByOrganisationID();\n            } else {\n                this.loadRegisteredOrganisation();\n            }\n        }\n\n        if (this.operationType === 'PENDING-TASK') {\n            this.loadMyPendingTask();\n        }\n    }\n\n    loadRegisteredOrganisation() {\n        this.showUpdateButton = true;\n        this.registrationService.getRegisteredOrganisation(this.$processingEvent, this.$resultCompaniesEvent, this.$errorsEvent);\n    }\n\n    loadByOrganisationID() {\n        // tslint:disable-next-line:max-line-length\n        this.registrationService.getByOrgID(this.$processingEvent, this.$resultCompaniesEvent, this.$errorsEvent, this.authenticationService.getOrganisationID());\n    }\n    //\n\n    loadMyPendingTask() {\n        console.log(this.realmRole);\n        this.registrationService.getMyPendingTask(\n            this.realmRole, this.$processingEvent, this.$resultCompaniesEvent, this.$errorsEvent);\n    }\n\n    ngAfterViewInit() {\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n    }\n\n    onFilterChange(value) {\n        if (!this.dataSource) {\n            return;\n        }\n        value = value.trim();\n        value = value.toLowerCase();\n        this.dataSource.filter = value;\n    }\n\n    viewRegistration(registration) {\n        this.router.navigate(['/company-registration/view'],\n            {state: {regTrackingNo: registration.RegTrackingNo}}).then( );\n    }\n\n    manageRegistration(registration) {\n        console.log(registration);\n        if(registration.CurrentStepID === 7 || registration.CurrentStepID === 8){\n            this.router.navigate(['/company-registration/manage-registration-update'],\n                {state: {regTrackingNo: registration.RegTrackingNo,\n                         OrganisationID: registration.OrganisationID,\n                         CurrentStepID : registration.CurrentStepID}}).then();\n        }\n        else{\n            console.log('tracking number' + JSON.stringify(registration.RegTrackingNo));\n            this.router.navigate(['/company-registration/update-application'],\n                {state: {regTrackingNo: registration.RegTrackingNo}}).then();\n        }\n      \n    }\n\n\n    updateRegistrationDetails(registration) {\n        \n        this.router.navigate(['/company-registration/update-registration-details'],\n            {state: {regTrackingNo: registration.RegTrackingNo}}).then();\n         \n    }\n\n    private defineSearchFields() {\n        this.searchFields = [\n            {\n                label: 'Registration reference #',\n                fieldName: 'registrationReference',\n                operators: TextFinderOptions,\n                dataType: DataType.TEXT\n            },\n            {\n                label: 'Company Name',\n                fieldName: 'companyName',\n                operators: TextFinderOptions,\n                dataType: DataType.TEXT\n            },\n            {\n                label: 'Status',\n                fieldName: 'status',\n                operators: LookupFinderOptions,\n                dataType: DataType.TEXT,\n                lookupOptions: this.statusList,\n                multiple: true\n            },\n            {\n                label: 'Registration date',\n                fieldName: 'registrationDate',\n                operators: DateFinderOptions,\n                dataType: DataType.DATETIME\n            },\n        ];\n    }\n\n\n}","<fury-page-layout mode=\"card\">\n    <fury-page-layout-header>\n        <fury-breadcrumbs [@fadeInRight] [crumbs]=\"['Company Registration']\" current=\"Find\"></fury-breadcrumbs>\n    </fury-page-layout-header>\n\n    <fury-page-layout-content [@fadeInUp]>\n        <fury-list \n            name=\"Company Registration\" \n            [columns]=\"columns\" \n            (filterChange)=\"onFilterChange($event)\"\n            finderDialogTitle=\"Company Registration Finder\"\n            [searchFields]=\"searchFields\">\n\n            <div class=\"table-container\">\n                <table [dataSource]=\"dataSource\" mat-table matSort>\n                    <ng-container matColumnDef=\"checkbox\">\n                        <th *matHeaderCellDef class=\"actions-cell\" mat-header-cell>\n                            <mat-checkbox color=\"primary\" (click)=\"$event.stopPropagation()\"></mat-checkbox>\n                        </th>\n                        <td *matCellDef=\"let row\" class=\"actions-cell\" mat-cell>\n                            <mat-checkbox color=\"primary\" (click)=\"$event.stopPropagation()\"></mat-checkbox>\n                        </td>\n                    </ng-container>\n    \n                    <!-- fullName Column -->\n                    <ng-container *ngFor=\"let column of columns\">\n                        <ng-container *ngIf=\"column.isModelProperty\" [matColumnDef]=\"column.property\">\n                            <th *matHeaderCellDef mat-header-cell mat-sort-header> {{ column.name }}</th>\n                            <td *matCellDef=\"let row\" mat-cell>\n                                {{ row[column.property] }}\n                            </td>\n                        </ng-container>\n    \n                        <ng-container *ngIf=\"column.name === 'Created On'\" [matColumnDef]=\"column.property\">\n                            <th *matHeaderCellDef mat-header-cell mat-sort-header> {{ column.name}}</th>\n                            <td *matCellDef=\"let row\" mat-cell>\n                                {{ row[column.property]  | date :'MMM d, y, h:mm a'  }}\n                            </td>\n                        </ng-container>\n                    </ng-container>\n    \n                    <ng-container matColumnDef=\"actions\">\n                        <th *matHeaderCellDef class=\"actions-cell\" mat-header-cell mat-sort-header>Actions</th>\n                        <td *matCellDef=\"let row\" class=\"actions-cell\" mat-cell>\n                            <button type=\"button\" mat-icon-button [matMenuTriggerFor]=\"actionsMenu\"\n                                    (click)=\"$event.stopPropagation()\">\n                                <mat-icon>more_vert</mat-icon>\n                            </button>\n    \n                            <mat-menu #actionsMenu=\"matMenu\" yPosition=\"below\" xPosition=\"before\">\n                                <!-- <button (click)=\"viewRegistration(row)\"  mat-menu-item\n                                   routerLinkActive=\"router-link-active\">\n                                    <mat-icon>visibility</mat-icon>\n                                    <span>View</span>\n                                </button> -->\n                                <button (click)=\"manageRegistration(row)\"  mat-menu-item\n                                        routerLinkActive=\"router-link-active\">\n                                    <mat-icon>settings</mat-icon>\n                                    <span>Manage</span>\n                                </button>\n                                <button *ngIf = \"showUpdateButton\" (click)=\"updateRegistrationDetails(row)\"  mat-menu-item\n                                routerLinkActive=\"router-link-active\">\n                            <mat-icon>settings</mat-icon>\n                            <span>Update</span>\n                        </button>\n                            </mat-menu>\n                        </td>\n                    </ng-container>\n                    <tr *matHeaderRowDef=\"visibleColumns\" mat-header-row></tr>\n                    <tr\n                        *matRowDef=\"let row; columns: visibleColumns;\"\n                        class=\"clickable route-animations-elements\"\n                        mat-row></tr>\n                </table>\n            </div>\n            \n            <mat-paginator \n\n                class=\"paginator\" \n                [pageSize]=\"pageSize\">\n            </mat-paginator>\n        </fury-list>\n    </fury-page-layout-content>\n    \n</fury-page-layout>","var Mode = require('./mode')\n\n/**\n * Array of characters available in alphanumeric mode\n *\n * As per QR Code specification, to each character\n * is assigned a value from 0 to 44 which in this case coincides\n * with the array index\n *\n * @type {Array}\n */\nvar ALPHA_NUM_CHARS = [\n  '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',\n  'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M',\n  'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z',\n  ' ', '$', '%', '*', '+', '-', '.', '/', ':'\n]\n\nfunction AlphanumericData (data) {\n  this.mode = Mode.ALPHANUMERIC\n  this.data = data\n}\n\nAlphanumericData.getBitsLength = function getBitsLength (length) {\n  return 11 * Math.floor(length / 2) + 6 * (length % 2)\n}\n\nAlphanumericData.prototype.getLength = function getLength () {\n  return this.data.length\n}\n\nAlphanumericData.prototype.getBitsLength = function getBitsLength () {\n  return AlphanumericData.getBitsLength(this.data.length)\n}\n\nAlphanumericData.prototype.write = function write (bitBuffer) {\n  var i\n\n  // Input data characters are divided into groups of two characters\n  // and encoded as 11-bit binary codes.\n  for (i = 0; i + 2 <= this.data.length; i += 2) {\n    // The character value of the first character is multiplied by 45\n    var value = ALPHA_NUM_CHARS.indexOf(this.data[i]) * 45\n\n    // The character value of the second digit is added to the product\n    value += ALPHA_NUM_CHARS.indexOf(this.data[i + 1])\n\n    // The sum is then stored as 11-bit binary number\n    bitBuffer.put(value, 11)\n  }\n\n  // If the number of input data characters is not a multiple of two,\n  // the character value of the final character is encoded as a 6-bit binary number.\n  if (this.data.length % 2) {\n    bitBuffer.put(ALPHA_NUM_CHARS.indexOf(this.data[i]), 6)\n  }\n}\n\nmodule.exports = AlphanumericData\n","import {AfterViewInit, Component, Inject, OnInit, ViewChild} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {FormBuilder} from '@angular/forms';\nimport {CertificateDetails} from '../company-registration.model';\nimport { CompanyCertComponent } from '../company-cert/company-cert.component';\n\n@Component({\n  selector: 'fury-cert-preview',\n  templateUrl: './cert-preview.component.html',\n  styleUrls: ['./cert-preview.component.scss']\n})\nexport class CertPreviewComponent implements OnInit, AfterViewInit {\n\n  @ViewChild(CompanyCertComponent) companyCertComponent!: CompanyCertComponent;\n\n  constructor(@Inject(MAT_DIALOG_DATA) public certDetails: CertificateDetails,\n              private dialogRef: MatDialogRef<CertPreviewComponent>,\n              private fb: FormBuilder) {\n  }\n\n  ngOnInit(): void {\n    console.log(this.certDetails);\n  }\n\n  ngAfterViewInit(): void {\n  }\n\n}\n","\n    <fury-company-cert\n            [certificateData]=\"certDetails\"\n    ></fury-company-cert>\n\n","var Buffer = require('../utils/buffer')\nvar Utils = require('./utils')\nvar ECLevel = require('./error-correction-level')\nvar BitBuffer = require('./bit-buffer')\nvar BitMatrix = require('./bit-matrix')\nvar AlignmentPattern = require('./alignment-pattern')\nvar FinderPattern = require('./finder-pattern')\nvar MaskPattern = require('./mask-pattern')\nvar ECCode = require('./error-correction-code')\nvar ReedSolomonEncoder = require('./reed-solomon-encoder')\nvar Version = require('./version')\nvar FormatInfo = require('./format-info')\nvar Mode = require('./mode')\nvar Segments = require('./segments')\nvar isArray = require('isarray')\n\n/**\n * QRCode for JavaScript\n *\n * modified by Ryan Day for nodejs support\n * Copyright (c) 2011 Ryan Day\n *\n * Licensed under the MIT license:\n *   http://www.opensource.org/licenses/mit-license.php\n *\n//---------------------------------------------------------------------\n// QRCode for JavaScript\n//\n// Copyright (c) 2009 Kazuhiko Arase\n//\n// URL: http://www.d-project.com/\n//\n// Licensed under the MIT license:\n//   http://www.opensource.org/licenses/mit-license.php\n//\n// The word \"QR Code\" is registered trademark of\n// DENSO WAVE INCORPORATED\n//   http://www.denso-wave.com/qrcode/faqpatent-e.html\n//\n//---------------------------------------------------------------------\n*/\n\n/**\n * Add finder patterns bits to matrix\n *\n * @param  {BitMatrix} matrix  Modules matrix\n * @param  {Number}    version QR Code version\n */\nfunction setupFinderPattern (matrix, version) {\n  var size = matrix.size\n  var pos = FinderPattern.getPositions(version)\n\n  for (var i = 0; i < pos.length; i++) {\n    var row = pos[i][0]\n    var col = pos[i][1]\n\n    for (var r = -1; r <= 7; r++) {\n      if (row + r <= -1 || size <= row + r) continue\n\n      for (var c = -1; c <= 7; c++) {\n        if (col + c <= -1 || size <= col + c) continue\n\n        if ((r >= 0 && r <= 6 && (c === 0 || c === 6)) ||\n          (c >= 0 && c <= 6 && (r === 0 || r === 6)) ||\n          (r >= 2 && r <= 4 && c >= 2 && c <= 4)) {\n          matrix.set(row + r, col + c, true, true)\n        } else {\n          matrix.set(row + r, col + c, false, true)\n        }\n      }\n    }\n  }\n}\n\n/**\n * Add timing pattern bits to matrix\n *\n * Note: this function must be called before {@link setupAlignmentPattern}\n *\n * @param  {BitMatrix} matrix Modules matrix\n */\nfunction setupTimingPattern (matrix) {\n  var size = matrix.size\n\n  for (var r = 8; r < size - 8; r++) {\n    var value = r % 2 === 0\n    matrix.set(r, 6, value, true)\n    matrix.set(6, r, value, true)\n  }\n}\n\n/**\n * Add alignment patterns bits to matrix\n *\n * Note: this function must be called after {@link setupTimingPattern}\n *\n * @param  {BitMatrix} matrix  Modules matrix\n * @param  {Number}    version QR Code version\n */\nfunction setupAlignmentPattern (matrix, version) {\n  var pos = AlignmentPattern.getPositions(version)\n\n  for (var i = 0; i < pos.length; i++) {\n    var row = pos[i][0]\n    var col = pos[i][1]\n\n    for (var r = -2; r <= 2; r++) {\n      for (var c = -2; c <= 2; c++) {\n        if (r === -2 || r === 2 || c === -2 || c === 2 ||\n          (r === 0 && c === 0)) {\n          matrix.set(row + r, col + c, true, true)\n        } else {\n          matrix.set(row + r, col + c, false, true)\n        }\n      }\n    }\n  }\n}\n\n/**\n * Add version info bits to matrix\n *\n * @param  {BitMatrix} matrix  Modules matrix\n * @param  {Number}    version QR Code version\n */\nfunction setupVersionInfo (matrix, version) {\n  var size = matrix.size\n  var bits = Version.getEncodedBits(version)\n  var row, col, mod\n\n  for (var i = 0; i < 18; i++) {\n    row = Math.floor(i / 3)\n    col = i % 3 + size - 8 - 3\n    mod = ((bits >> i) & 1) === 1\n\n    matrix.set(row, col, mod, true)\n    matrix.set(col, row, mod, true)\n  }\n}\n\n/**\n * Add format info bits to matrix\n *\n * @param  {BitMatrix} matrix               Modules matrix\n * @param  {ErrorCorrectionLevel}    errorCorrectionLevel Error correction level\n * @param  {Number}    maskPattern          Mask pattern reference value\n */\nfunction setupFormatInfo (matrix, errorCorrectionLevel, maskPattern) {\n  var size = matrix.size\n  var bits = FormatInfo.getEncodedBits(errorCorrectionLevel, maskPattern)\n  var i, mod\n\n  for (i = 0; i < 15; i++) {\n    mod = ((bits >> i) & 1) === 1\n\n    // vertical\n    if (i < 6) {\n      matrix.set(i, 8, mod, true)\n    } else if (i < 8) {\n      matrix.set(i + 1, 8, mod, true)\n    } else {\n      matrix.set(size - 15 + i, 8, mod, true)\n    }\n\n    // horizontal\n    if (i < 8) {\n      matrix.set(8, size - i - 1, mod, true)\n    } else if (i < 9) {\n      matrix.set(8, 15 - i - 1 + 1, mod, true)\n    } else {\n      matrix.set(8, 15 - i - 1, mod, true)\n    }\n  }\n\n  // fixed module\n  matrix.set(size - 8, 8, 1, true)\n}\n\n/**\n * Add encoded data bits to matrix\n *\n * @param  {BitMatrix} matrix Modules matrix\n * @param  {Buffer}    data   Data codewords\n */\nfunction setupData (matrix, data) {\n  var size = matrix.size\n  var inc = -1\n  var row = size - 1\n  var bitIndex = 7\n  var byteIndex = 0\n\n  for (var col = size - 1; col > 0; col -= 2) {\n    if (col === 6) col--\n\n    while (true) {\n      for (var c = 0; c < 2; c++) {\n        if (!matrix.isReserved(row, col - c)) {\n          var dark = false\n\n          if (byteIndex < data.length) {\n            dark = (((data[byteIndex] >>> bitIndex) & 1) === 1)\n          }\n\n          matrix.set(row, col - c, dark)\n          bitIndex--\n\n          if (bitIndex === -1) {\n            byteIndex++\n            bitIndex = 7\n          }\n        }\n      }\n\n      row += inc\n\n      if (row < 0 || size <= row) {\n        row -= inc\n        inc = -inc\n        break\n      }\n    }\n  }\n}\n\n/**\n * Create encoded codewords from data input\n *\n * @param  {Number}   version              QR Code version\n * @param  {ErrorCorrectionLevel}   errorCorrectionLevel Error correction level\n * @param  {ByteData} data                 Data input\n * @return {Buffer}                        Buffer containing encoded codewords\n */\nfunction createData (version, errorCorrectionLevel, segments) {\n  // Prepare data buffer\n  var buffer = new BitBuffer()\n\n  segments.forEach(function (data) {\n    // prefix data with mode indicator (4 bits)\n    buffer.put(data.mode.bit, 4)\n\n    // Prefix data with character count indicator.\n    // The character count indicator is a string of bits that represents the\n    // number of characters that are being encoded.\n    // The character count indicator must be placed after the mode indicator\n    // and must be a certain number of bits long, depending on the QR version\n    // and data mode\n    // @see {@link Mode.getCharCountIndicator}.\n    buffer.put(data.getLength(), Mode.getCharCountIndicator(data.mode, version))\n\n    // add binary data sequence to buffer\n    data.write(buffer)\n  })\n\n  // Calculate required number of bits\n  var totalCodewords = Utils.getSymbolTotalCodewords(version)\n  var ecTotalCodewords = ECCode.getTotalCodewordsCount(version, errorCorrectionLevel)\n  var dataTotalCodewordsBits = (totalCodewords - ecTotalCodewords) * 8\n\n  // Add a terminator.\n  // If the bit string is shorter than the total number of required bits,\n  // a terminator of up to four 0s must be added to the right side of the string.\n  // If the bit string is more than four bits shorter than the required number of bits,\n  // add four 0s to the end.\n  if (buffer.getLengthInBits() + 4 <= dataTotalCodewordsBits) {\n    buffer.put(0, 4)\n  }\n\n  // If the bit string is fewer than four bits shorter, add only the number of 0s that\n  // are needed to reach the required number of bits.\n\n  // After adding the terminator, if the number of bits in the string is not a multiple of 8,\n  // pad the string on the right with 0s to make the string's length a multiple of 8.\n  while (buffer.getLengthInBits() % 8 !== 0) {\n    buffer.putBit(0)\n  }\n\n  // Add pad bytes if the string is still shorter than the total number of required bits.\n  // Extend the buffer to fill the data capacity of the symbol corresponding to\n  // the Version and Error Correction Level by adding the Pad Codewords 11101100 (0xEC)\n  // and 00010001 (0x11) alternately.\n  var remainingByte = (dataTotalCodewordsBits - buffer.getLengthInBits()) / 8\n  for (var i = 0; i < remainingByte; i++) {\n    buffer.put(i % 2 ? 0x11 : 0xEC, 8)\n  }\n\n  return createCodewords(buffer, version, errorCorrectionLevel)\n}\n\n/**\n * Encode input data with Reed-Solomon and return codewords with\n * relative error correction bits\n *\n * @param  {BitBuffer} bitBuffer            Data to encode\n * @param  {Number}    version              QR Code version\n * @param  {ErrorCorrectionLevel} errorCorrectionLevel Error correction level\n * @return {Buffer}                         Buffer containing encoded codewords\n */\nfunction createCodewords (bitBuffer, version, errorCorrectionLevel) {\n  // Total codewords for this QR code version (Data + Error correction)\n  var totalCodewords = Utils.getSymbolTotalCodewords(version)\n\n  // Total number of error correction codewords\n  var ecTotalCodewords = ECCode.getTotalCodewordsCount(version, errorCorrectionLevel)\n\n  // Total number of data codewords\n  var dataTotalCodewords = totalCodewords - ecTotalCodewords\n\n  // Total number of blocks\n  var ecTotalBlocks = ECCode.getBlocksCount(version, errorCorrectionLevel)\n\n  // Calculate how many blocks each group should contain\n  var blocksInGroup2 = totalCodewords % ecTotalBlocks\n  var blocksInGroup1 = ecTotalBlocks - blocksInGroup2\n\n  var totalCodewordsInGroup1 = Math.floor(totalCodewords / ecTotalBlocks)\n\n  var dataCodewordsInGroup1 = Math.floor(dataTotalCodewords / ecTotalBlocks)\n  var dataCodewordsInGroup2 = dataCodewordsInGroup1 + 1\n\n  // Number of EC codewords is the same for both groups\n  var ecCount = totalCodewordsInGroup1 - dataCodewordsInGroup1\n\n  // Initialize a Reed-Solomon encoder with a generator polynomial of degree ecCount\n  var rs = new ReedSolomonEncoder(ecCount)\n\n  var offset = 0\n  var dcData = new Array(ecTotalBlocks)\n  var ecData = new Array(ecTotalBlocks)\n  var maxDataSize = 0\n  var buffer = new Buffer(bitBuffer.buffer)\n\n  // Divide the buffer into the required number of blocks\n  for (var b = 0; b < ecTotalBlocks; b++) {\n    var dataSize = b < blocksInGroup1 ? dataCodewordsInGroup1 : dataCodewordsInGroup2\n\n    // extract a block of data from buffer\n    dcData[b] = buffer.slice(offset, offset + dataSize)\n\n    // Calculate EC codewords for this data block\n    ecData[b] = rs.encode(dcData[b])\n\n    offset += dataSize\n    maxDataSize = Math.max(maxDataSize, dataSize)\n  }\n\n  // Create final data\n  // Interleave the data and error correction codewords from each block\n  var data = new Buffer(totalCodewords)\n  var index = 0\n  var i, r\n\n  // Add data codewords\n  for (i = 0; i < maxDataSize; i++) {\n    for (r = 0; r < ecTotalBlocks; r++) {\n      if (i < dcData[r].length) {\n        data[index++] = dcData[r][i]\n      }\n    }\n  }\n\n  // Apped EC codewords\n  for (i = 0; i < ecCount; i++) {\n    for (r = 0; r < ecTotalBlocks; r++) {\n      data[index++] = ecData[r][i]\n    }\n  }\n\n  return data\n}\n\n/**\n * Build QR Code symbol\n *\n * @param  {String} data                 Input string\n * @param  {Number} version              QR Code version\n * @param  {ErrorCorretionLevel} errorCorrectionLevel Error level\n * @param  {MaskPattern} maskPattern     Mask pattern\n * @return {Object}                      Object containing symbol data\n */\nfunction createSymbol (data, version, errorCorrectionLevel, maskPattern) {\n  var segments\n\n  if (isArray(data)) {\n    segments = Segments.fromArray(data)\n  } else if (typeof data === 'string') {\n    var estimatedVersion = version\n\n    if (!estimatedVersion) {\n      var rawSegments = Segments.rawSplit(data)\n\n      // Estimate best version that can contain raw splitted segments\n      estimatedVersion = Version.getBestVersionForData(rawSegments,\n        errorCorrectionLevel)\n    }\n\n    // Build optimized segments\n    // If estimated version is undefined, try with the highest version\n    segments = Segments.fromString(data, estimatedVersion || 40)\n  } else {\n    throw new Error('Invalid data')\n  }\n\n  // Get the min version that can contain data\n  var bestVersion = Version.getBestVersionForData(segments,\n      errorCorrectionLevel)\n\n  // If no version is found, data cannot be stored\n  if (!bestVersion) {\n    throw new Error('The amount of data is too big to be stored in a QR Code')\n  }\n\n  // If not specified, use min version as default\n  if (!version) {\n    version = bestVersion\n\n  // Check if the specified version can contain the data\n  } else if (version < bestVersion) {\n    throw new Error('\\n' +\n      'The chosen QR Code version cannot contain this amount of data.\\n' +\n      'Minimum version required to store current data is: ' + bestVersion + '.\\n'\n    )\n  }\n\n  var dataBits = createData(version, errorCorrectionLevel, segments)\n\n  // Allocate matrix buffer\n  var moduleCount = Utils.getSymbolSize(version)\n  var modules = new BitMatrix(moduleCount)\n\n  // Add function modules\n  setupFinderPattern(modules, version)\n  setupTimingPattern(modules)\n  setupAlignmentPattern(modules, version)\n\n  // Add temporary dummy bits for format info just to set them as reserved.\n  // This is needed to prevent these bits from being masked by {@link MaskPattern.applyMask}\n  // since the masking operation must be performed only on the encoding region.\n  // These blocks will be replaced with correct values later in code.\n  setupFormatInfo(modules, errorCorrectionLevel, 0)\n\n  if (version >= 7) {\n    setupVersionInfo(modules, version)\n  }\n\n  // Add data codewords\n  setupData(modules, dataBits)\n\n  if (isNaN(maskPattern)) {\n    // Find best mask pattern\n    maskPattern = MaskPattern.getBestMask(modules,\n      setupFormatInfo.bind(null, modules, errorCorrectionLevel))\n  }\n\n  // Apply mask pattern\n  MaskPattern.applyMask(maskPattern, modules)\n\n  // Replace format info bits with correct values\n  setupFormatInfo(modules, errorCorrectionLevel, maskPattern)\n\n  return {\n    modules: modules,\n    version: version,\n    errorCorrectionLevel: errorCorrectionLevel,\n    maskPattern: maskPattern,\n    segments: segments\n  }\n}\n\n/**\n * QR Code\n *\n * @param {String | Array} data                 Input data\n * @param {Object} options                      Optional configurations\n * @param {Number} options.version              QR Code version\n * @param {String} options.errorCorrectionLevel Error correction level\n * @param {Function} options.toSJISFunc         Helper func to convert utf8 to sjis\n */\nexports.create = function create (data, options) {\n  if (typeof data === 'undefined' || data === '') {\n    throw new Error('No input text')\n  }\n\n  var errorCorrectionLevel = ECLevel.M\n  var version\n  var mask\n\n  if (typeof options !== 'undefined') {\n    // Use higher error correction level as default\n    errorCorrectionLevel = ECLevel.from(options.errorCorrectionLevel, ECLevel.M)\n    version = Version.from(options.version)\n    mask = MaskPattern.from(options.maskPattern)\n\n    if (options.toSJISFunc) {\n      Utils.setToSJISFunction(options.toSJISFunc)\n    }\n  }\n\n  return createSymbol(data, version, errorCorrectionLevel, mask)\n}\n","import {DocumentComment} from '../../../../@fury/shared/base-fury-form.model';\nimport { ThirdParty } from '../../../services/api.model';\nimport {DataProtectionOfficer} from '../../models/data-subject.model';\nimport {DataPurposes, DataSources, PersonalDataCollected} from '../../models/reference.model';\nimport {Country} from './countries/countries.component';\n\nexport class CompanyRegistrationModel {\n    OrganisationID: string;\n    OrganisationName: string;\n    OrganizationRegNo: string;\n    RegTrackingNo: string;\n    YearOfStart: string;\n    TIN: string;\n    Status: string;\n    URSBNumber: string;\n    OrganizationTypeID: string;\n    PublicBodyTypeID: string;\n    Location: string;\n    HeadOfOrganization: string;\n    TitleOfOrganizationHead: string;\n    PostalAddress: string;\n    PhoneNumber: string;\n    Landline: string;\n    EmailAddress: string;\n    SectorID: string;\n    TotalRecordsAtRegistration: string;\n    RecordPercentageGrowth: string;\n    RetentionPeriod: string;\n    Purpose: DataPurposes[];\n    SourceOfDataID: DataSources[];\n    PersonalDataCollected: PersonalDataCollected[];\n    GetConsent: string;\n    StoreDataOutsideCountry: string;\n    PersonalDataIsForDisclosure: string;\n    CollectChildrenData: string;\n    ChildDataConsentor: string;\n    OrganisationCategory: OrganisationCategory[];\n    PurposeForCollectingChildData: string;\n    ChildResearchPurpose: ChildrenDataPurpose[];\n    EnteredOn: string;\n    DPPActCategory: string[];\n    DataProtectionOfficers: DataProtectionOfficer[];\n    ThirdParties: ThirdParties[];\n    Comments: DocumentComment[];\n    NatureOfBusiness: NatureOfBusiness[];\n    SecurityMeasure: SecurityMeasuresModel[];\n    CurrentStepID: number;\n    DPORequired: string;\n    DPOName: string;\n    DPOPhysicalAddress: string;\n    DPOPhoneNumber: string;\n    DPOEmailAddress: string;\n    DPOPositionInOrganisation: string;\n    SpecifyTheLaw: string;\n    ServiceOrProductProvided: string;\n    SpecifyLegalObligation: string;\n    CurrentStepName: string;\n    Countries: Country[];\n    CheckList: CheckListed[];\n    Attachment: string;\n    Form3Attachment: string;\n    ProofOfPayment: string;\n    RegistrationDoneBy: string;\n}\n\nexport class NewCompanyRegistrationModel {\n    OrganisationID: string;\n    OrganisationName: string;\n    OrganizationRegNo: string;\n    RegTrackingNo: string;\n    YearOfStart: string;\n    TIN: string;\n    Status: string;\n    URSBNumber: string;\n    OrganizationTypeID: string;\n    PublicBodyTypeID: string;\n    Location: string;\n    HeadOfOrganization: string;\n    TitleOfOrganizationHead: string;\n    PostalAddress: string;\n    PhoneNumber: string;\n    Landline: string;\n    EmailAddress: string;\n    SectorID: string;\n    TotalRecordsAtRegistration: string;\n    RecordPercentageGrowth: string;\n    RetentionPeriod: string;\n    Purpose: DataPurposes[];\n    SourceOfDataID: DataSources[];\n    PersonalDataCollected: PersonalDataCollected[];\n    GetConsent: string;\n    StoreDataOutsideCountry: string;\n    PersonalDataIsForDisclosure: string;\n    ChildDataConsentor: string;\n    OrganisationCategory: OrganisationCategory[];\n    PurposeForCollectingChildData: string;\n    ChildResearchPurpose: string;\n    EnteredOn: string;\n    DPPActCategory: string[];\n    DataProtectionOfficers: DataProtectionOfficer[];\n    ThirdParties: ThirdParty[];\n    Comments: DocumentComment[];\n    NatureOfBusiness: NatureOfBusiness[];\n    SecurityMeasure: SecurityMeasuresModel[];\n    CurrentStepID: number;\n    DPORequired: string;\n    DPOName: string;\n    DPOPhysicalAddress: string;\n    DPOPhoneNumber: string;\n    DPOEmailAddress: string;\n    DPOPositionInOrganisation: string;\n    SpecifyTheLaw: string;\n    ServiceOrProductProvided: string;\n    SpecifyLegalObligation: string;\n    CurrentStepName: string;\n    Countries: Country[];\n    CheckList: CheckListed[];\n    Attachment: string;\n    Form3Attachment: string;\n    ProofOfPayment: string;\n    PRN:string;\n    PurposeForCollection:string;\n    ChildrenDataConsentor:string;\n    CollectChildrenData:string;\n    RegistrationDoneBy: string;\n}\n\nexport class CheckListed {\n    CheckListID: number;\n    CheckListValue: string;\n    CheckListName: string;\n    StepID: number;\n    ActionID: number;\n}\nexport class NatureOfBusiness {\n    NatureOfBusinessCatID: number;\n    NatureOfBusinessCategoryName: string;\n    NatureOfBusinessSubatID: number;\n    NatureOfBusinessSubCategoryName: string;\n}\n\nexport class OrganisationCategory {\n    OrganisationCategoryId: string;\n    OrganisationCategoryName: string;\n}\n\nexport class ChildrenDataPurpose {\n    ChildDataID: number;\n    ChildDataPurpose: string;\n}\n\nexport class CancelRegistration {\n    RegTrackingNo:string;\n    CancellationApproval:string;\n    ReasonForCancellation:string;\n}\n\nexport class CompanyRegistration {\n    id?: number;\n    oragisationName: string;\n    yearOfStart: string;\n    tin: string;\n    ursbNumber: string;\n    organisationType: string[];\n    publicBody: string;\n    localGovement: string;\n    statute: string;\n    location: string;\n    headOfOganisation: string;\n    titleOfOrganizationHead: string;\n    postalAddress: string;\n    phoneNumber: string;\n    landLine: string;\n    emailAddress: string;\n    dpoActCategory: string [];\n    sector: string;\n    rolesPerformed: string [];\n    mainActivities: MainActivite [];\n    dataProtectionOfficers: DataProtectionOfficerModel[];\n    totalRecordsAtRegistration: string;\n    recordPercentageGrowth: string;\n    retentionPeriod: string;\n    dataStoredCategory: string [];\n    dataStoredSubCategory: string [];\n    purpose: string;\n    sourceOfData: string [];\n    countriesStoringYourData: string [];\n    securityMeasures: SecurityMeasuresModel[];\n    personalDataIsForDisclosure: string;\n    reasonsForSharing: string [];\n    thirdParties: ThirdParties [];\n    collectChildrenData: string;\n    childDataConsentor: string;\n    purposeForCollectingChildData: string;\n    childLawPurpose: string;\n    childResearchPurpose: string;\n    status: string;\n    comments: DocumentComment[];\n    concent: string;\n    natureOfProcessing: string[];\n    storeDataOutsideCountry: string;\n    registrationDate: string;\n\n\n    constructor(model) {\n        this.id = model.id;\n        this.oragisationName = model.oragisationName;\n        this.yearOfStart = model.yearOfStart;\n        this.tin = model.tin;\n        this.ursbNumber = model.ursbNumber;\n        this.organisationType = model.organisationType;\n        this.publicBody = model.publicBody;\n        this.localGovement = model.localGovement;\n        this.statute = model.statute;\n        this.location = model.location;\n        this.headOfOganisation = model.headOfOganisation;\n        this.titleOfOrganizationHead = model.titleOfOrganizationHead;\n        this.postalAddress = model.postalAddress;\n        this.phoneNumber = model.phoneNumber;\n        this.landLine = model.landLine;\n        this.emailAddress = model.emailAddress;\n        this.dpoActCategory = model.dpoActCategory;\n        this.sector = model.sector;\n        this.rolesPerformed = model.rolesPerformed;\n        this.mainActivities = model.mainActivities;\n        this.dataProtectionOfficers = model.dataProtectionOfficers;\n        this.totalRecordsAtRegistration = model.totalRecordsAtRegistration;\n        this.recordPercentageGrowth = model.recordPercentageGrowth;\n        this.retentionPeriod = model.retentionPeriod;\n        this.dataStoredCategory = model.dataStoredCategory;\n        this.dataStoredSubCategory = model.dataStoredSubCategory;\n        this.purpose = model.purpose;\n        this.sourceOfData = model.sourceOfData;\n        this.countriesStoringYourData = model.countriesStoringYourData;\n        this.securityMeasures = model.securityMeasures;\n        this.personalDataIsForDisclosure = model.personalDataIsForDisclosure;\n        this.reasonsForSharing = model.reasonsForSharing;\n        this.thirdParties = model.thirdParties;\n        this.collectChildrenData = model.collectChildrenData;\n        this.childDataConsentor = model.childDataConsentor;\n        this.purposeForCollectingChildData = model.purposeForCollectingChildData;\n        this.childLawPurpose = model.childLawPurpose;\n        this.childResearchPurpose = model.childResearchPurpose;\n        this.status = model.status;\n        this.registrationDate = model.registrationDate;\n        this.concent = model.concent;\n    }\n}\n\nexport class ComponyRegistrationObject {\n    OrganisationID: string;\n    OrganisationName: string;\n    CurrentStepName: string;\n    OrganizationRegNo: string;\n    RegTrackingNo: string;\n    YearOfStart: string;\n    TIN: string;\n    URSBNumber: string;\n    OrganizationTypeID: string;\n    PublicBodyTypeID: string;\n    Location: string;\n    HeadOfOrganization: string;\n    TitleOfOrganizati: string;\n    PostalAddress: string;\n    PhoneNumber: string;\n    Landline: string;\n    EmailAddres: string;\n    SectorID: string;\n    TotalRecordsAtRegistration: string;\n    RecordPercentageGr: string;\n    RetentionPer: string;\n    Purpose: string;\n    GetConsent: string;\n    StoreDataOutsideCountry: string;\n    PersonalDataIsForDisclosure: string;\n    CollectChildrenData: string;\n    ChildDataConsentor: string;\n    PurposeForCollectingChildDat: string;\n    ChildResearchPurpose: string;\n    DataProtectionOfficers: DataProtectionOfficerModelObject[];\n    ThirdParties: ThirdPartiesObject[];\n}\n\nexport class DataProtectionOfficerModelObject {\n    Name: string;\n    PositionInOrganisation: string;\n    EmailAddress: string;\n    PhysicalAddress: string;\n    PhoneNumber: string;\n}\n\nexport class CertificateDetailsResponse {\n    code: number;\n    message: string;\n    data: CertificateDetails;\n}\n\nexport class CertificateDetails {\n    OrganizationID: any;\n    OrgRegNumber: string;\n    IssueDate: string;\n    ExpiryDate: string;\n    IssueType: string;\n    DownloadCount: any;\n}\n\nexport class CertificateRequest {\n    OrganizationID: string;\n}\n\nexport class ThirdPartiesObject {\n    ContactPerson: string;\n    ThirdPartyName: string;\n    PhoneNumber: string;\n    EmailAddress: string;\n}\n\nexport class SecurityMeasuresModel {\n    Name: string;\n    FileSize: string;\n    Link: string;\n}\n\nexport class PRN {\n    OrganisationUserID:number;\n    OrganisationName: string;\n    PRN: string;\n    SearchCode: string;\n    PRNGenerationDate:string;\n    DaysPassed:string;\n}\n\nexport class MainActivite {\n    activity: string;\n}\n\nexport class ThirdParties {\n    ContactPerson: string;\n    ThirdPartyName: string;\n    PhoneNumber: string;\n    EmailAddress: string;\n}\n\nexport class CompanyModel {\n    id?: number;\n    name?: string;\n    address?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n\n    constructor(companyDetails) {\n        this.id = companyDetails.id;\n        this.name = companyDetails.name;\n        this.address = companyDetails.address;\n        this.contact = companyDetails.contact;\n        this.email = companyDetails.email;\n        this.website = companyDetails.website;\n    }\n}\n\nexport class DataProtectionOfficerModel {\n    Name: string;\n    PositionInOrganisation: string;\n    EmailAddress: string;\n    PhysicalAddress: string;\n    PhoneNumber: string;\n}\n\n\nexport const COMPANY_REGISTRATION_DATA = [\n    {\n        'id': 324324,\n        'oragisationName': 'Applied Principles',\n        'yearOfStart': '2021-02-02T21:00:00.000Z',\n        'tin': '1234567890',\n        'ursbNumber': 'wewe',\n        'organisationType': '1',\n        'publicBody': '1',\n        'localGovement': '1',\n        'statute': 'Sample Statute',\n        'location': 'Bukoto',\n        'headOfOganisation': 'Patrick Okiring',\n        'titleOfOrganizationHead': 'CEO',\n        'postalAddress': '',\n        'phoneNumber': '0703333889',\n        'landLine': '',\n        'emailAddress': 'pokiring@principlesapplied.com',\n        'dpoActCategory': [\n            '1',\n            '2'\n        ],\n        'concent': '',\n        'sector': 'Public Sector',\n        'rolesPerformed': [\n            '1',\n            '2'\n        ],\n        'mainActivities': [\n            {\n                'activity': 'Security tests'\n            }\n        ],\n        'dataProtectionOfficers': [\n            {\n                'id': 93892,\n                'name': 'Jovita',\n                'emailAddress': 'jovita@apc.go.ug',\n                'phoneNumber': '0700000898',\n                'physicalAddress': 'Mengo',\n                'positionInOrganisation': 'DPO'\n            }\n        ],\n        'totalRecordsAtRegistration': '12023400',\n        'recordPercentageGrowth': '5',\n        'retentionPeriod': '1',\n        'dataStoredCategory': [\n            'Identifiers',\n            'Sensory Data'\n        ],\n        'dataStoredSubCategory': [\n            'Name',\n            'Nationality',\n            'Age'\n        ],\n        'purpose': '1',\n        'sourceOfData': [\n            '1',\n            '2'\n        ],\n        'getConsent': 'Yes',\n        'natureOfProcessing': [\n            '',\n            ''\n        ],\n        'storeDataOutsideCountry': 'Yes',\n        'countriesStoringYourData': [\n            '1',\n            '2'\n        ],\n        'securityMeasures': [\n            {\n                'name': '21042021012350-Form_5_-_Application_for_Certified_Copy_of_Extract_Entry_in_Register.pdf',\n                'document': {},\n                'size': '0.087'\n            }\n        ],\n        'personalDataIsForDisclosure': 'Yes',\n        'reasonsForSharing': [\n            '2',\n            '3'\n        ],\n        'thirdParties': [\n            {\n                'name': 'APC',\n                'contactPerson': 'JB',\n                'emailAddress': 'jb@apc.go.ug',\n                'phoneNumber': '0777777777'\n            }\n        ],\n        'collectChildrenData': 'Yes',\n        'childDataConsentor': '1',\n        'purposeForCollectingChildData': '1',\n        'childLawPurpose': '1',\n        'childResearchPurpose': 'ffdfd',\n        'status': 'SUBMITTED',\n        'registrationDate': '23-02-2021 18:20:20',\n        'comments': [\n            {\n                'instanceId': 23,\n                'username': 'jkalungi',\n                'creationDate': '23-02-2021 18:20:20',\n                'comment': 'Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry\\'sd  Lorem Ipsum has been the industry'\n            },\n        ]\n    }\n];\n\n\nexport const COMPANY_REGISTRATION = {\n    'id': 324324,\n    'oragisationName': 'Applied Principles',\n    'yearOfStart': '2021-02-02T21:00:00.000Z',\n    'tin': '1234567890',\n    'ursbNumber': 'wewe',\n    'organisationType': [\n        'COMPANY_OR_A_LIMITED_COMPANY'\n    ],\n    'concent': '',\n    'publicBody': '1',\n    'localGovement': '1',\n    'statute': 'Sample Statute',\n    'location': 'Bukoto',\n    'headOfOganisation': 'Patrick Okiring',\n    'titleOfOrganizationHead': 'CEO',\n    'postalAddress': 'P.O.Box 2372',\n    'phoneNumber': '0703333889',\n    'landLine': '0323878273',\n    'emailAddress': 'pokiring@principlesapplied.com',\n    'dpoActCategory': [\n        '1',\n        '2'\n    ],\n    'sector': 'Public Sector',\n    'rolesPerformed': [\n        // {'code':'',\"name\":''}\n    ],\n    'mainActivities': [\n        {\n            'activity': 'Security tests'\n        }\n    ],\n    'dataProtectionOfficers': [\n        {\n            'id': 93892,\n            'name': 'Jovita',\n            'emailAddress': 'jovita@apc.go.ug',\n            'phoneNumber': '0700000898',\n            'physicalAddress': 'Mengo',\n            'positionInOrganisation': 'DPO'\n        }\n    ],\n    'totalRecordsAtRegistration': '12023400',\n    'recordPercentageGrowth': '5',\n    'retentionPeriod': '1',\n    'dataStoredCategory': [\n        'Identifiers',\n        'Sensory Data'\n    ],\n    'dataStoredSubCategory': [\n        'Name',\n        'Nationality',\n        'Age'\n    ],\n    'purpose': '1',\n    'sourceOfData': [\n        '1',\n        '2'\n    ],\n    'getConsent': 'Yes',\n    'natureOfProcessing': [\n        'Organized, adapted or altered for use in fulfilling organizations mandate and role',\n        'Data is stored and retrieved and used for internal consultation or verification'\n    ],\n    'storeDataOutsideCountry': 'Yes',\n    'countriesStoringYourData': [\n        '1',\n        '2'\n    ],\n    'securityMeasures': [\n        {\n            'name': '21042021012350-Form_5_-_Application_for_Certified_Copy_of_Extract_Entry_in_Register.pdf',\n            'document': {},\n            'size': '0.087'\n        }\n    ],\n    'personalDataIsForDisclosure': 'Yes',\n    'reasonsForSharing': [\n        '2',\n        '3'\n    ],\n    'thirdParties': [\n        {\n            'name': 'APC',\n            'contactPerson': 'JB',\n            'emailAddress': 'jb@apc.go.ug',\n            'phoneNumber': '0777777777'\n        }\n    ],\n    'collectChildrenData': 'Yes',\n    'childDataConsentor': '1',\n    'purposeForCollectingChildData': '1',\n    'childLawPurpose': '1',\n    'childResearchPurpose': 'ffdfd',\n    'status': 'SUBMITTED',\n    'registrationDate': '23-02-2021 18:20:20',\n    'comments': [\n        {\n            'instanceId': 23,\n            'username': 'jkalungi',\n            'creationDate': '23-02-2021 18:20:20',\n            'comment': 'Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry\\'sd  Lorem Ipsum has been the industry'\n        },\n    ]\n};\n\nexport const TypeOfOrganisation = [\n    {id: 1, name: 'Limited Liability Company Or Corporation'},\n    {id: 2, name: 'Partnership'},\n    {id: 3, name: 'Public Body'},\n    {id: 4, name: 'Non Governmental Organisation'}\n];\n\nexport const DataProtectionActors: any = [\n    {id: '1', name: 'Data Controller'},\n    {id: '2', name: 'Data Processor'},\n    {id: '3', name: 'Data Collector'},\n];\n\nexport const Sectors = [\n    {\n        SectorID: 1,\n        Sector: 'Public Sector'\n    },\n    {\n        SectorID: 2,\n        Sector: 'Transportation'\n    },\n    {\n        SectorID: 3,\n        Sector: 'Civil / Infrastructure Engineering'\n    },\n    {\n        SectorID: 4,\n        Sector: 'Academia'\n    },\n    {\n        SectorID: 5,\n        Sector: 'Energy'\n    },\n    {\n        SectorID: 6,\n        Sector: 'Health Care'\n    },\n    {\n        SectorID: 7,\n        Sector: 'Finance'\n    },\n    {\n        SectorID: 8,\n        Sector: 'Utilities'\n    },\n    {\n        SectorID: 9,\n        Sector: 'Information Technology'\n    },\n    {\n        SectorID: 10,\n        Sector: 'Manufacturing / Industrial'\n    },\n    {\n        SectorID: 11,\n        Sector: 'Telecommunication Services'\n    },\n    {\n        SectorID: 12,\n        Sector: 'Materials'\n    },\n    {\n        SectorID: 13,\n        Sector: 'Consulting'\n    },\n    {\n        SectorID: 14,\n        Sector: 'Others'\n    },\n];\nexport const ROLES_PERFORMED = [\n    {id: 1, name: 'Protection of National Security'},\n    {id: 2, name: 'Public revenue collection'},\n    {id: 3, name: 'Enforcement of law which imposes a pecuniary penalty'},\n    {id: 3, name: 'Conduct proceedings before any court'}\n];\nexport const SECTORS = [\n    {\n        id: 1,\n        name: 'Public Sector'\n    },\n    {\n        id: 2,\n        name: 'Transportation'\n    },\n    {\n        id: 3,\n        name: 'Civil / Infrastructure Engineering'\n    },\n    {\n        id: 4,\n        name: 'Academia'\n    },\n    {\n        id: 5,\n        name: 'Energy'\n    },\n    {\n        id: 6,\n        name: 'Health Care'\n    },\n    {\n        id: 7,\n        name: 'Finance'\n    },\n    {\n        id: 8,\n        name: 'Utilities'\n    },\n    {\n        id: 9,\n        name: 'Information Technology'\n    },\n    {\n        id: 10,\n        name: 'Manufacturing / Industrial'\n    },\n    {\n        id: 11,\n        name: 'Telecommunication Services'\n    },\n    {\n        id: 12,\n        name: 'Materials'\n    },\n    {\n        id: 13,\n        name: 'Consulting'\n    },\n    {\n        id: 14,\n        name: 'Others'\n    },\n];\n\nexport enum DataProtectionAct {\n    DATA_CONTROLER = 'Data Controller',\n    DATA_COLLECTOR = 'Data Collector',\n    DATA_PROCESSOR = 'Data Processor'\n}\n\n[\n    {\n        'OrganisationID': 32,\n        'OrganisationName': 'National Identification & Registration Authority',\n        'OrganizationRegNo': '',\n        'RegTrackingNo': 'REG/16/10/21/5337',\n        'YearOfStart': '2012',\n        'TIN': '1234567890',\n        'URSBNumber': 'wewe',\n        'OrganizationTypeID': 3,\n        'PublicBodyTypeID': 1,\n        'Location': 'Kololo',\n        'HeadOfOrganization': 'Patrick Okiring',\n        'TitleOfOrganizationHead': 'CEO',\n        'PostalAddress': '',\n        'PhoneNumber': '0703333889',\n        'Landline': '',\n        'EmailAddress': 'pokiring@principlesapplied.com',\n        'SectorID': 1,\n        'TotalRecordsAtRegistration': 12023400,\n        'RecordPercentageGrowth': 5,\n        'RetentionPeriod': 1,\n        'Purpose': '1',\n        'GetConsent': 'Yes',\n        'StoreDataOutsideCountry': 'Yes',\n        'PersonalDataIsForDisclosure': 'Yes       ',\n        'CollectChildrenData': 'Yes       ',\n        'ChildDataConsentor': '1',\n        'PurposeForCollectingChildData': '1',\n        'ChildResearchPurpose': 'test',\n        'EnteredOn': '2021-10-16 14:32:47.413000',\n        'DataProtectionOfficers': [\n            {\n                'Name': 'Grace',\n                'PositionInOrganisation': 'Manager ICT',\n                'EmailAddress': 'grace@nira.go.ug',\n                'PhysicalAddress': 'Kololo',\n                'PhoneNumber': '0700000000'\n            }\n        ],\n        'ThirdParties': [\n            {\n                'ContactPerson': 'mark',\n                'ThirdPartyName': 'UNRA',\n                'PhoneNumber': '',\n                'EmailAddress': 'mark@unra.go.ug'\n            }\n        ]\n    },\n    {\n        'OrganisationID': 33,\n        'OrganisationName': 'National Identification & Registration Authority',\n        'OrganizationRegNo': '',\n        'RegTrackingNo': 'REG/16/10/21/3684',\n        'YearOfStart': '2012',\n        'TIN': '1234567890',\n        'URSBNumber': 'wewe',\n        'OrganizationTypeID': 3,\n        'PublicBodyTypeID': 1,\n        'Location': 'Kololo',\n        'HeadOfOrganization': 'Patrick Okiring',\n        'TitleOfOrganizationHead': 'CEO',\n        'PostalAddress': '',\n        'PhoneNumber': '0703333889',\n        'Landline': '',\n        'EmailAddress': 'pokiring@principlesapplied.com',\n        'SectorID': 1,\n        'TotalRecordsAtRegistration': 12023400,\n        'RecordPercentageGrowth': 5,\n        'RetentionPeriod': 1,\n        'Purpose': '1',\n        'GetConsent': 'Yes',\n        'StoreDataOutsideCountry': 'Yes',\n        'PersonalDataIsForDisclosure': 'Yes       ',\n        'CollectChildrenData': 'Yes       ',\n        'ChildDataConsentor': '1',\n        'PurposeForCollectingChildData': '1',\n        'ChildResearchPurpose': 'test',\n        'EnteredOn': '2021-10-16 14:34:03.153000',\n        'DataProtectionOfficers': [\n            {\n                'Name': 'Grace',\n                'PositionInOrganisation': 'Manager ICT',\n                'EmailAddress': 'grace@nira.go.ug',\n                'PhysicalAddress': 'Kololo',\n                'PhoneNumber': '0700000000'\n            }\n        ],\n        'ThirdParties': [\n            {\n                'ContactPerson': 'mark',\n                'ThirdPartyName': 'UNRA',\n                'PhoneNumber': '',\n                'EmailAddress': 'mark@unra.go.ug'\n            }\n        ]\n    },\n    {\n        'OrganisationID': 34,\n        'OrganisationName': 'National Identification & Registration Authority',\n        'OrganizationRegNo': '',\n        'RegTrackingNo': 'REG/16/10/21/1616',\n        'YearOfStart': '2012',\n        'TIN': '1234567890',\n        'URSBNumber': 'wewe',\n        'OrganizationTypeID': 3,\n        'PublicBodyTypeID': 1,\n        'Location': 'Kololo',\n        'HeadOfOrganization': 'Patrick Okiring',\n        'TitleOfOrganizationHead': 'CEO',\n        'PostalAddress': '',\n        'PhoneNumber': '0703333889',\n        'Landline': '',\n        'EmailAddress': 'pokiring@principlesapplied.com',\n        'SectorID': 1,\n        'TotalRecordsAtRegistration': 12023400,\n        'RecordPercentageGrowth': 5,\n        'RetentionPeriod': 1,\n        'Purpose': '1',\n        'GetConsent': 'Yes',\n        'StoreDataOutsideCountry': 'Yes',\n        'PersonalDataIsForDisclosure': 'Yes       ',\n        'CollectChildrenData': 'Yes       ',\n        'ChildDataConsentor': '1',\n        'PurposeForCollectingChildData': '1',\n        'ChildResearchPurpose': 'test',\n        'EnteredOn': '2021-10-16 14:35:18.113000',\n        'DataProtectionOfficers': [\n            {\n                'Name': 'Grace',\n                'PositionInOrganisation': 'Manager ICT',\n                'EmailAddress': 'grace@nira.go.ug',\n                'PhysicalAddress': 'Kololo',\n                'PhoneNumber': '0700000000'\n            },\n            {\n                'Name': 'John',\n                'PositionInOrganisation': 'Manager ICT',\n                'EmailAddress': 'grace@nira.go.ug',\n                'PhysicalAddress': 'Kololo',\n                'PhoneNumber': '0700000000'\n            },\n            {\n                'Name': 'Kevin',\n                'PositionInOrganisation': 'Manager ICT',\n                'EmailAddress': 'grace@nira.go.ug',\n                'PhysicalAddress': 'Kololo',\n                'PhoneNumber': '0700000000'\n            }\n        ],\n        'ThirdParties': [\n            {\n                'ContactPerson': 'mark',\n                'ThirdPartyName': 'UNRA',\n                'PhoneNumber': '',\n                'EmailAddress': 'mark@unra.go.ug'\n            }\n        ]\n    },\n    {\n        'OrganisationID': 35,\n        'OrganisationName': 'MTN Uganda',\n        'OrganizationRegNo': '',\n        'RegTrackingNo': 'REG/21/10/21/8585',\n        'YearOfStart': '2021',\n        'TIN': '2873849732',\n        'URSBNumber': '',\n        'OrganizationTypeID': 3,\n        'PublicBodyTypeID': 2,\n        'Location': 'Bukoto',\n        'HeadOfOrganization': 'Isaac',\n        'TitleOfOrganizationHead': 'Isaac',\n        'PostalAddress': '',\n        'PhoneNumber': '702 837 483',\n        'Landline': '',\n        'EmailAddress': 'isaac@ap.com',\n        'SectorID': 2,\n        'TotalRecordsAtRegistration': 9000,\n        'RecordPercentageGrowth': 23,\n        'RetentionPeriod': 324,\n        'Purpose': '2',\n        'GetConsent': 'No',\n        'StoreDataOutsideCountry': 'No',\n        'PersonalDataIsForDisclosure': 'Yes       ',\n        'CollectChildrenData': 'No        ',\n        'ChildDataConsentor': '2',\n        'PurposeForCollectingChildData': '2',\n        'ChildResearchPurpose': 'Google LLC is an American multinational technology',\n        'EnteredOn': '2021-10-21 09:28:44.900000',\n        'DataProtectionOfficers': [\n            {\n                'Name': 'TestUser ',\n                'PositionInOrganisation': 'Head',\n                'EmailAddress': 'test@gmail.com',\n                'PhysicalAddress': '',\n                'PhoneNumber': '0823843294'\n            }\n        ],\n        'ThirdParties': [\n            {\n                'ContactPerson': 'Enock',\n                'ThirdPartyName': 'Google LLC is an American multinational technology company that specializes in Internet-related services and products, which include online advertising technologies, a search engine, cloud computing, software, and hardware.',\n                'PhoneNumber': '',\n                'EmailAddress': 'enock@gmail.com'\n            }\n        ]\n    },\n    {\n        'OrganisationID': 36,\n        'OrganisationName': 'UAP ',\n        'OrganizationRegNo': '',\n        'RegTrackingNo': 'REG/21/10/21/4981',\n        'YearOfStart': '2003',\n        'TIN': '9829384',\n        'URSBNumber': '',\n        'OrganizationTypeID': 3,\n        'PublicBodyTypeID': 3,\n        'Location': 'Nakawa',\n        'HeadOfOrganization': 'John',\n        'TitleOfOrganizationHead': 'CTO',\n        'PostalAddress': '',\n        'PhoneNumber': '783 223 433',\n        'Landline': '',\n        'EmailAddress': '',\n        'SectorID': 3,\n        'TotalRecordsAtRegistration': 90,\n        'RecordPercentageGrowth': 20,\n        'RetentionPeriod': 23,\n        'Purpose': '1',\n        'GetConsent': 'Yes',\n        'StoreDataOutsideCountry': 'No',\n        'PersonalDataIsForDisclosure': 'No        ',\n        'CollectChildrenData': 'No        ',\n        'ChildDataConsentor': '1',\n        'PurposeForCollectingChildData': '1',\n        'ChildResearchPurpose': 'Google LLC is an American multinational technology',\n        'EnteredOn': '2021-10-21 09:41:55.267000',\n        'DataProtectionOfficers': [\n            {\n                'Name': 'Mark',\n                'PositionInOrganisation': 'CTO',\n                'EmailAddress': 'mark@ura.go.ug',\n                'PhysicalAddress': '',\n                'PhoneNumber': ''\n            }\n        ],\n        'ThirdParties': [\n            {\n                'ContactPerson': 'Isaac',\n                'ThirdPartyName': 'Google LLC ',\n                'PhoneNumber': '',\n                'EmailAddress': 'isaac@mtn.go'\n            }\n        ]\n    },\n    {\n        'OrganisationID': 37,\n        'OrganisationName': 'Sco Systems Limited',\n        'OrganizationRegNo': '',\n        'RegTrackingNo': 'REG/11/11/21/5629',\n        'YearOfStart': '2003',\n        'TIN': '1232341345',\n        'URSBNumber': 'QW2323DEFE',\n        'OrganizationTypeID': 3,\n        'PublicBodyTypeID': 4,\n        'Location': 'D',\n        'HeadOfOrganization': 'Olive Duncan',\n        'TitleOfOrganizationHead': 'CEO',\n        'PostalAddress': 'D',\n        'PhoneNumber': '700 392 854',\n        'Landline': '700 392 854',\n        'EmailAddress': 'A@F.COM',\n        'SectorID': 2,\n        'TotalRecordsAtRegistration': 12,\n        'RecordPercentageGrowth': 12,\n        'RetentionPeriod': 12,\n        'Purpose': '2',\n        'GetConsent': 'Yes',\n        'StoreDataOutsideCountry': 'Yes',\n        'PersonalDataIsForDisclosure': 'Yes       ',\n        'CollectChildrenData': '          ',\n        'ChildDataConsentor': '2',\n        'PurposeForCollectingChildData': '2',\n        'ChildResearchPurpose': 'rr',\n        'EnteredOn': '2021-11-11 10:41:35.643000',\n        'DataProtectionOfficers': [\n            {\n                'Name': 'f',\n                'PositionInOrganisation': 'f',\n                'EmailAddress': 'f',\n                'PhysicalAddress': 'f',\n                'PhoneNumber': 'f'\n            }\n        ],\n        'ThirdParties': [\n            {\n                'ContactPerson': 'r',\n                'ThirdPartyName': 'r',\n                'PhoneNumber': 'r',\n                'EmailAddress': 'r'\n            }\n        ]\n    }\n];\n// id?: number;\n// OrganisationName: string;\n// YearOfStart: string;\n// tin: string;\n// ursbNumber: string;\n// organisationType: string[];\n// publicBody: string;\n// localGovement: string;\n// statute: string;\n// location: string;\n// headOfOganisation: string;\n// titleOfOrganizationHead: string;\n// postalAddress: string;\n// phoneNumber: string;\n// landLine: string;\n// emailAddress: string;\n// dpoActCategory: string [];\n// sector: string;\n// rolesPerformed: string [];\n// mainActivities: MainActivite [];\n// dataProtectionOfficers: DataProtectionOfficerModel[];\n// totalRecordsAtRegistration: string;\n// recordPercentageGrowth: string;\n// retentionPeriod: string;\n// dataStoredCategory: string [];\n// dataStoredSubCategory: string [];\n// purpose: string;\n// sourceOfData: string [];\n// countriesStoringYourData: string [];\n// securityMeasures: SecurityMeasuresModel[];\n// personalDataIsForDisclosure: string;\n// reasonsForSharing: string [];\n// thirdParties: ThirdParties [];\n// collectChildrenData: string;\n// childDataConsentor: string;\n// purposeForCollectingChildData: string;\n// childLawPurpose: string;\n// childResearchPurpose: string;\n// status: string;\n// comments: DocumentComment[];\n// concent:string;\n// natureOfProcessing: string[];\n// storeDataOutsideCountry: string;\n// registrationDate: string;\n","var VersionCheck = require('./version-check')\nvar Regex = require('./regex')\n\n/**\n * Numeric mode encodes data from the decimal digit set (0 - 9)\n * (byte values 30HEX to 39HEX).\n * Normally, 3 data characters are represented by 10 bits.\n *\n * @type {Object}\n */\nexports.NUMERIC = {\n  id: 'Numeric',\n  bit: 1 << 0,\n  ccBits: [10, 12, 14]\n}\n\n/**\n * Alphanumeric mode encodes data from a set of 45 characters,\n * i.e. 10 numeric digits (0 - 9),\n *      26 alphabetic characters (A - Z),\n *   and 9 symbols (SP, $, %, *, +, -, ., /, :).\n * Normally, two input characters are represented by 11 bits.\n *\n * @type {Object}\n */\nexports.ALPHANUMERIC = {\n  id: 'Alphanumeric',\n  bit: 1 << 1,\n  ccBits: [9, 11, 13]\n}\n\n/**\n * In byte mode, data is encoded at 8 bits per character.\n *\n * @type {Object}\n */\nexports.BYTE = {\n  id: 'Byte',\n  bit: 1 << 2,\n  ccBits: [8, 16, 16]\n}\n\n/**\n * The Kanji mode efficiently encodes Kanji characters in accordance with\n * the Shift JIS system based on JIS X 0208.\n * The Shift JIS values are shifted from the JIS X 0208 values.\n * JIS X 0208 gives details of the shift coded representation.\n * Each two-byte character value is compacted to a 13-bit binary codeword.\n *\n * @type {Object}\n */\nexports.KANJI = {\n  id: 'Kanji',\n  bit: 1 << 3,\n  ccBits: [8, 10, 12]\n}\n\n/**\n * Mixed mode will contain a sequences of data in a combination of any of\n * the modes described above\n *\n * @type {Object}\n */\nexports.MIXED = {\n  bit: -1\n}\n\n/**\n * Returns the number of bits needed to store the data length\n * according to QR Code specifications.\n *\n * @param  {Mode}   mode    Data mode\n * @param  {Number} version QR Code version\n * @return {Number}         Number of bits\n */\nexports.getCharCountIndicator = function getCharCountIndicator (mode, version) {\n  if (!mode.ccBits) throw new Error('Invalid mode: ' + mode)\n\n  if (!VersionCheck.isValid(version)) {\n    throw new Error('Invalid version: ' + version)\n  }\n\n  if (version >= 1 && version < 10) return mode.ccBits[0]\n  else if (version < 27) return mode.ccBits[1]\n  return mode.ccBits[2]\n}\n\n/**\n * Returns the most efficient mode to store the specified data\n *\n * @param  {String} dataStr Input data string\n * @return {Mode}           Best mode\n */\nexports.getBestModeForData = function getBestModeForData (dataStr) {\n  if (Regex.testNumeric(dataStr)) return exports.NUMERIC\n  else if (Regex.testAlphanumeric(dataStr)) return exports.ALPHANUMERIC\n  else if (Regex.testKanji(dataStr)) return exports.KANJI\n  else return exports.BYTE\n}\n\n/**\n * Return mode name as string\n *\n * @param {Mode} mode Mode object\n * @returns {String}  Mode name\n */\nexports.toString = function toString (mode) {\n  if (mode && mode.id) return mode.id\n  throw new Error('Invalid mode')\n}\n\n/**\n * Check if input param is a valid mode object\n *\n * @param   {Mode}    mode Mode object\n * @returns {Boolean} True if valid mode, false otherwise\n */\nexports.isValid = function isValid (mode) {\n  return mode && mode.bit && mode.ccBits\n}\n\n/**\n * Get mode object from its name\n *\n * @param   {String} string Mode name\n * @returns {Mode}          Mode object\n */\nfunction fromString (string) {\n  if (typeof string !== 'string') {\n    throw new Error('Param is not a string')\n  }\n\n  var lcStr = string.toLowerCase()\n\n  switch (lcStr) {\n    case 'numeric':\n      return exports.NUMERIC\n    case 'alphanumeric':\n      return exports.ALPHANUMERIC\n    case 'kanji':\n      return exports.KANJI\n    case 'byte':\n      return exports.BYTE\n    default:\n      throw new Error('Unknown mode: ' + string)\n  }\n}\n\n/**\n * Returns mode from a value.\n * If value is not a valid mode, returns defaultValue\n *\n * @param  {Mode|String} value        Encoding mode\n * @param  {Mode}        defaultValue Fallback value\n * @return {Mode}                     Encoding mode\n */\nexports.from = function from (value, defaultValue) {\n  if (exports.isValid(value)) {\n    return value\n  }\n\n  try {\n    return fromString(value)\n  } catch (e) {\n    return defaultValue\n  }\n}\n","var Mode = require('./mode')\nvar NumericData = require('./numeric-data')\nvar AlphanumericData = require('./alphanumeric-data')\nvar ByteData = require('./byte-data')\nvar KanjiData = require('./kanji-data')\nvar Regex = require('./regex')\nvar Utils = require('./utils')\nvar dijkstra = require('dijkstrajs')\n\n/**\n * Returns UTF8 byte length\n *\n * @param  {String} str Input string\n * @return {Number}     Number of byte\n */\nfunction getStringByteLength (str) {\n  return unescape(encodeURIComponent(str)).length\n}\n\n/**\n * Get a list of segments of the specified mode\n * from a string\n *\n * @param  {Mode}   mode Segment mode\n * @param  {String} str  String to process\n * @return {Array}       Array of object with segments data\n */\nfunction getSegments (regex, mode, str) {\n  var segments = []\n  var result\n\n  while ((result = regex.exec(str)) !== null) {\n    segments.push({\n      data: result[0],\n      index: result.index,\n      mode: mode,\n      length: result[0].length\n    })\n  }\n\n  return segments\n}\n\n/**\n * Extracts a series of segments with the appropriate\n * modes from a string\n *\n * @param  {String} dataStr Input string\n * @return {Array}          Array of object with segments data\n */\nfunction getSegmentsFromString (dataStr) {\n  var numSegs = getSegments(Regex.NUMERIC, Mode.NUMERIC, dataStr)\n  var alphaNumSegs = getSegments(Regex.ALPHANUMERIC, Mode.ALPHANUMERIC, dataStr)\n  var byteSegs\n  var kanjiSegs\n\n  if (Utils.isKanjiModeEnabled()) {\n    byteSegs = getSegments(Regex.BYTE, Mode.BYTE, dataStr)\n    kanjiSegs = getSegments(Regex.KANJI, Mode.KANJI, dataStr)\n  } else {\n    byteSegs = getSegments(Regex.BYTE_KANJI, Mode.BYTE, dataStr)\n    kanjiSegs = []\n  }\n\n  var segs = numSegs.concat(alphaNumSegs, byteSegs, kanjiSegs)\n\n  return segs\n    .sort(function (s1, s2) {\n      return s1.index - s2.index\n    })\n    .map(function (obj) {\n      return {\n        data: obj.data,\n        mode: obj.mode,\n        length: obj.length\n      }\n    })\n}\n\n/**\n * Returns how many bits are needed to encode a string of\n * specified length with the specified mode\n *\n * @param  {Number} length String length\n * @param  {Mode} mode     Segment mode\n * @return {Number}        Bit length\n */\nfunction getSegmentBitsLength (length, mode) {\n  switch (mode) {\n    case Mode.NUMERIC:\n      return NumericData.getBitsLength(length)\n    case Mode.ALPHANUMERIC:\n      return AlphanumericData.getBitsLength(length)\n    case Mode.KANJI:\n      return KanjiData.getBitsLength(length)\n    case Mode.BYTE:\n      return ByteData.getBitsLength(length)\n  }\n}\n\n/**\n * Merges adjacent segments which have the same mode\n *\n * @param  {Array} segs Array of object with segments data\n * @return {Array}      Array of object with segments data\n */\nfunction mergeSegments (segs) {\n  return segs.reduce(function (acc, curr) {\n    var prevSeg = acc.length - 1 >= 0 ? acc[acc.length - 1] : null\n    if (prevSeg && prevSeg.mode === curr.mode) {\n      acc[acc.length - 1].data += curr.data\n      return acc\n    }\n\n    acc.push(curr)\n    return acc\n  }, [])\n}\n\n/**\n * Generates a list of all possible nodes combination which\n * will be used to build a segments graph.\n *\n * Nodes are divided by groups. Each group will contain a list of all the modes\n * in which is possible to encode the given text.\n *\n * For example the text '12345' can be encoded as Numeric, Alphanumeric or Byte.\n * The group for '12345' will contain then 3 objects, one for each\n * possible encoding mode.\n *\n * Each node represents a possible segment.\n *\n * @param  {Array} segs Array of object with segments data\n * @return {Array}      Array of object with segments data\n */\nfunction buildNodes (segs) {\n  var nodes = []\n  for (var i = 0; i < segs.length; i++) {\n    var seg = segs[i]\n\n    switch (seg.mode) {\n      case Mode.NUMERIC:\n        nodes.push([seg,\n          { data: seg.data, mode: Mode.ALPHANUMERIC, length: seg.length },\n          { data: seg.data, mode: Mode.BYTE, length: seg.length }\n        ])\n        break\n      case Mode.ALPHANUMERIC:\n        nodes.push([seg,\n          { data: seg.data, mode: Mode.BYTE, length: seg.length }\n        ])\n        break\n      case Mode.KANJI:\n        nodes.push([seg,\n          { data: seg.data, mode: Mode.BYTE, length: getStringByteLength(seg.data) }\n        ])\n        break\n      case Mode.BYTE:\n        nodes.push([\n          { data: seg.data, mode: Mode.BYTE, length: getStringByteLength(seg.data) }\n        ])\n    }\n  }\n\n  return nodes\n}\n\n/**\n * Builds a graph from a list of nodes.\n * All segments in each node group will be connected with all the segments of\n * the next group and so on.\n *\n * At each connection will be assigned a weight depending on the\n * segment's byte length.\n *\n * @param  {Array} nodes    Array of object with segments data\n * @param  {Number} version QR Code version\n * @return {Object}         Graph of all possible segments\n */\nfunction buildGraph (nodes, version) {\n  var table = {}\n  var graph = {'start': {}}\n  var prevNodeIds = ['start']\n\n  for (var i = 0; i < nodes.length; i++) {\n    var nodeGroup = nodes[i]\n    var currentNodeIds = []\n\n    for (var j = 0; j < nodeGroup.length; j++) {\n      var node = nodeGroup[j]\n      var key = '' + i + j\n\n      currentNodeIds.push(key)\n      table[key] = { node: node, lastCount: 0 }\n      graph[key] = {}\n\n      for (var n = 0; n < prevNodeIds.length; n++) {\n        var prevNodeId = prevNodeIds[n]\n\n        if (table[prevNodeId] && table[prevNodeId].node.mode === node.mode) {\n          graph[prevNodeId][key] =\n            getSegmentBitsLength(table[prevNodeId].lastCount + node.length, node.mode) -\n            getSegmentBitsLength(table[prevNodeId].lastCount, node.mode)\n\n          table[prevNodeId].lastCount += node.length\n        } else {\n          if (table[prevNodeId]) table[prevNodeId].lastCount = node.length\n\n          graph[prevNodeId][key] = getSegmentBitsLength(node.length, node.mode) +\n            4 + Mode.getCharCountIndicator(node.mode, version) // switch cost\n        }\n      }\n    }\n\n    prevNodeIds = currentNodeIds\n  }\n\n  for (n = 0; n < prevNodeIds.length; n++) {\n    graph[prevNodeIds[n]]['end'] = 0\n  }\n\n  return { map: graph, table: table }\n}\n\n/**\n * Builds a segment from a specified data and mode.\n * If a mode is not specified, the more suitable will be used.\n *\n * @param  {String} data             Input data\n * @param  {Mode | String} modesHint Data mode\n * @return {Segment}                 Segment\n */\nfunction buildSingleSegment (data, modesHint) {\n  var mode\n  var bestMode = Mode.getBestModeForData(data)\n\n  mode = Mode.from(modesHint, bestMode)\n\n  // Make sure data can be encoded\n  if (mode !== Mode.BYTE && mode.bit < bestMode.bit) {\n    throw new Error('\"' + data + '\"' +\n      ' cannot be encoded with mode ' + Mode.toString(mode) +\n      '.\\n Suggested mode is: ' + Mode.toString(bestMode))\n  }\n\n  // Use Mode.BYTE if Kanji support is disabled\n  if (mode === Mode.KANJI && !Utils.isKanjiModeEnabled()) {\n    mode = Mode.BYTE\n  }\n\n  switch (mode) {\n    case Mode.NUMERIC:\n      return new NumericData(data)\n\n    case Mode.ALPHANUMERIC:\n      return new AlphanumericData(data)\n\n    case Mode.KANJI:\n      return new KanjiData(data)\n\n    case Mode.BYTE:\n      return new ByteData(data)\n  }\n}\n\n/**\n * Builds a list of segments from an array.\n * Array can contain Strings or Objects with segment's info.\n *\n * For each item which is a string, will be generated a segment with the given\n * string and the more appropriate encoding mode.\n *\n * For each item which is an object, will be generated a segment with the given\n * data and mode.\n * Objects must contain at least the property \"data\".\n * If property \"mode\" is not present, the more suitable mode will be used.\n *\n * @param  {Array} array Array of objects with segments data\n * @return {Array}       Array of Segments\n */\nexports.fromArray = function fromArray (array) {\n  return array.reduce(function (acc, seg) {\n    if (typeof seg === 'string') {\n      acc.push(buildSingleSegment(seg, null))\n    } else if (seg.data) {\n      acc.push(buildSingleSegment(seg.data, seg.mode))\n    }\n\n    return acc\n  }, [])\n}\n\n/**\n * Builds an optimized sequence of segments from a string,\n * which will produce the shortest possible bitstream.\n *\n * @param  {String} data    Input string\n * @param  {Number} version QR Code version\n * @return {Array}          Array of segments\n */\nexports.fromString = function fromString (data, version) {\n  var segs = getSegmentsFromString(data, Utils.isKanjiModeEnabled())\n\n  var nodes = buildNodes(segs)\n  var graph = buildGraph(nodes, version)\n  var path = dijkstra.find_path(graph.map, 'start', 'end')\n\n  var optimizedSegs = []\n  for (var i = 1; i < path.length - 1; i++) {\n    optimizedSegs.push(graph.table[path[i]].node)\n  }\n\n  return exports.fromArray(mergeSegments(optimizedSegs))\n}\n\n/**\n * Splits a string in various segments with the modes which\n * best represent their content.\n * The produced segments are far from being optimized.\n * The output of this function is only used to estimate a QR Code version\n * which may contain the data.\n *\n * @param  {string} data Input string\n * @return {Array}       Array of segments\n */\nexports.rawSplit = function rawSplit (data) {\n  return exports.fromArray(\n    getSegmentsFromString(data, Utils.isKanjiModeEnabled())\n  )\n}\n","var Utils = require('./utils')\nvar ECCode = require('./error-correction-code')\nvar ECLevel = require('./error-correction-level')\nvar Mode = require('./mode')\nvar VersionCheck = require('./version-check')\nvar isArray = require('isarray')\n\n// Generator polynomial used to encode version information\nvar G18 = (1 << 12) | (1 << 11) | (1 << 10) | (1 << 9) | (1 << 8) | (1 << 5) | (1 << 2) | (1 << 0)\nvar G18_BCH = Utils.getBCHDigit(G18)\n\nfunction getBestVersionForDataLength (mode, length, errorCorrectionLevel) {\n  for (var currentVersion = 1; currentVersion <= 40; currentVersion++) {\n    if (length <= exports.getCapacity(currentVersion, errorCorrectionLevel, mode)) {\n      return currentVersion\n    }\n  }\n\n  return undefined\n}\n\nfunction getReservedBitsCount (mode, version) {\n  // Character count indicator + mode indicator bits\n  return Mode.getCharCountIndicator(mode, version) + 4\n}\n\nfunction getTotalBitsFromDataArray (segments, version) {\n  var totalBits = 0\n\n  segments.forEach(function (data) {\n    var reservedBits = getReservedBitsCount(data.mode, version)\n    totalBits += reservedBits + data.getBitsLength()\n  })\n\n  return totalBits\n}\n\nfunction getBestVersionForMixedData (segments, errorCorrectionLevel) {\n  for (var currentVersion = 1; currentVersion <= 40; currentVersion++) {\n    var length = getTotalBitsFromDataArray(segments, currentVersion)\n    if (length <= exports.getCapacity(currentVersion, errorCorrectionLevel, Mode.MIXED)) {\n      return currentVersion\n    }\n  }\n\n  return undefined\n}\n\n/**\n * Returns version number from a value.\n * If value is not a valid version, returns defaultValue\n *\n * @param  {Number|String} value        QR Code version\n * @param  {Number}        defaultValue Fallback value\n * @return {Number}                     QR Code version number\n */\nexports.from = function from (value, defaultValue) {\n  if (VersionCheck.isValid(value)) {\n    return parseInt(value, 10)\n  }\n\n  return defaultValue\n}\n\n/**\n * Returns how much data can be stored with the specified QR code version\n * and error correction level\n *\n * @param  {Number} version              QR Code version (1-40)\n * @param  {Number} errorCorrectionLevel Error correction level\n * @param  {Mode}   mode                 Data mode\n * @return {Number}                      Quantity of storable data\n */\nexports.getCapacity = function getCapacity (version, errorCorrectionLevel, mode) {\n  if (!VersionCheck.isValid(version)) {\n    throw new Error('Invalid QR Code version')\n  }\n\n  // Use Byte mode as default\n  if (typeof mode === 'undefined') mode = Mode.BYTE\n\n  // Total codewords for this QR code version (Data + Error correction)\n  var totalCodewords = Utils.getSymbolTotalCodewords(version)\n\n  // Total number of error correction codewords\n  var ecTotalCodewords = ECCode.getTotalCodewordsCount(version, errorCorrectionLevel)\n\n  // Total number of data codewords\n  var dataTotalCodewordsBits = (totalCodewords - ecTotalCodewords) * 8\n\n  if (mode === Mode.MIXED) return dataTotalCodewordsBits\n\n  var usableBits = dataTotalCodewordsBits - getReservedBitsCount(mode, version)\n\n  // Return max number of storable codewords\n  switch (mode) {\n    case Mode.NUMERIC:\n      return Math.floor((usableBits / 10) * 3)\n\n    case Mode.ALPHANUMERIC:\n      return Math.floor((usableBits / 11) * 2)\n\n    case Mode.KANJI:\n      return Math.floor(usableBits / 13)\n\n    case Mode.BYTE:\n    default:\n      return Math.floor(usableBits / 8)\n  }\n}\n\n/**\n * Returns the minimum version needed to contain the amount of data\n *\n * @param  {Segment} data                    Segment of data\n * @param  {Number} [errorCorrectionLevel=H] Error correction level\n * @param  {Mode} mode                       Data mode\n * @return {Number}                          QR Code version\n */\nexports.getBestVersionForData = function getBestVersionForData (data, errorCorrectionLevel) {\n  var seg\n\n  var ecl = ECLevel.from(errorCorrectionLevel, ECLevel.M)\n\n  if (isArray(data)) {\n    if (data.length > 1) {\n      return getBestVersionForMixedData(data, ecl)\n    }\n\n    if (data.length === 0) {\n      return 1\n    }\n\n    seg = data[0]\n  } else {\n    seg = data\n  }\n\n  return getBestVersionForDataLength(seg.mode, seg.getLength(), ecl)\n}\n\n/**\n * Returns version information with relative error correction bits\n *\n * The version information is included in QR Code symbols of version 7 or larger.\n * It consists of an 18-bit sequence containing 6 data bits,\n * with 12 error correction bits calculated using the (18, 6) Golay code.\n *\n * @param  {Number} version QR Code version\n * @return {Number}         Encoded version info bits\n */\nexports.getEncodedBits = function getEncodedBits (version) {\n  if (!VersionCheck.isValid(version) || version < 7) {\n    throw new Error('Invalid QR Code version')\n  }\n\n  var d = version << 12\n\n  while (Utils.getBCHDigit(d) - G18_BCH >= 0) {\n    d ^= (G18 << (Utils.getBCHDigit(d) - G18_BCH))\n  }\n\n  return (version << 12) | d\n}\n","export class DataSubjectModel {\n    id:any;\n    name: string;\n    email: string;\n    phone: string;\n}\n\nexport class DataProtectionOfficer {\n    id: any;\n    Name: string;\n    PositionInOrganisation: string;\n    EmailAddress: string;\n    PhysicalAddress: string;\n    PhoneNumber: string;\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {FindCompanyRegistrationComponent} from './components/find-company-registration/find-company-registration.component';\nimport {AuthGuard} from '../../authentication/auth.guard';\nimport {EditCompanyRegistrationComponent} from './components/edit-company-registration/edit-company-registration.component';\nimport { RegisterOrganisationComponent } from './components/register-organisation/register-organisation.component';\nimport { UpdateRegistrationComponent } from './components/update-registration/update-registration.component';\nimport { RenewalsComponent } from './components/cert-renewals/renewals/renewals.component';\nimport { UpdateInformationComponent } from './components/update/update-information/update-information.component';\nimport { ManageRegistrationUpdateComponent } from './components/manage-registration-update/manage-registration-update.component';\nimport { UraPaymentsComponent } from './components/ura-payments/ura-payments.component';\nimport { ManageUraPaymentComponent } from './components/manage-ura-payment/manage-ura-payment.component';\nimport { CancelRegistrationComponent } from './components/cancel-registration/cancel-registration.component';\nimport { ViewCancelRegistrationComponent } from './components/view-cancel-registration/view-cancel-registration.component';\nimport { CompanyRegistrationDetailComponent } from './components/company-registration-detail/company-registration-detail.component';\n\nconst routes: Routes = [\n  {\n    path: 'find',\n    component: FindCompanyRegistrationComponent,\n    canActivate: [AuthGuard],\n    data: {\n      roles: ['find.company.registration'],\n      action: 'FIND'\n    }\n  },\n  {\n    path: 'pending-task',\n    component: FindCompanyRegistrationComponent,\n    canActivate: [AuthGuard],\n    data: {\n      roles: ['find.company.registration'],\n      action: 'PENDING-TASK'\n    }\n  },\n\n  {\n    path: 'register',\n    component: EditCompanyRegistrationComponent,\n    canActivate: [AuthGuard],\n    data: {\n      roles: ['register.company'],\n      action: 'EDIT',\n      viewOnlyMode: false\n    }\n  },\n\n  {\n    path: 'cancel-registration',\n    component: CancelRegistrationComponent,\n    canActivate: [AuthGuard],\n    data: {\n      roles: ['cancel.registration'],\n      action: 'EDIT',\n      viewOnlyMode: true\n    }\n  },\n\n\n\n  {\n    path: 'apply',\n    component: RegisterOrganisationComponent,\n    canActivate: [AuthGuard],\n    data: {\n      // roles: ['register.company'],\n      action: 'EDIT',\n      viewOnlyMode: false\n    }\n  },\n  {\n    path: 'view',\n    component: UpdateRegistrationComponent,\n    canActivate: [AuthGuard],\n    data: {\n      roles: ['view.company.registration'],\n      action: 'VIEW',\n      viewOnlyMode: true\n    }\n  },\n  {\n    path: 'ura-payment',\n    component: UraPaymentsComponent,\n    canActivate: [AuthGuard],\n    data: {\n      roles: ['ura.payment'],\n      action: 'MANAGE',\n      viewOnlyMode: false\n    }\n  },\n\n  {\n    path: 'prn-information',\n    component: ManageUraPaymentComponent,\n    canActivate: [AuthGuard],\n    data: {\n      roles: ['manage.ura'],\n      action: 'FIND',\n      viewOnlyMode: false\n    }\n  },\n  {\n    path: 'perform-action',\n    component: EditCompanyRegistrationComponent,\n    canActivate: [AuthGuard],\n    data: {\n      roles: ['view.company.registration'],\n      action: 'MANAGE',\n      viewOnlyMode: true\n    }\n  },\n\n  {\n    path: 'update',\n    component: UpdateInformationComponent,\n    canActivate: [AuthGuard],\n    data: {\n      roles: ['renewals.registration'],\n      action: 'MANAGE'\n    }\n  },\n\n \n  {\n    path: 'update-application',\n    component: UpdateRegistrationComponent,\n    canActivate: [AuthGuard],\n    data: {\n      roles: ['view.company.registration'],\n      action: 'MANAGE',\n      viewOnlyMode: true\n    }\n  },\n\n  {\n    path: 'update-registration-details',\n    component: CompanyRegistrationDetailComponent,\n    canActivate: [AuthGuard],\n    data: {\n      roles: ['view.company.registration'],\n      action: 'MANAGE',\n      viewOnlyMode: true\n    }\n  },\n\n  {\n    path: 'view-cancel-registration',\n    component: ViewCancelRegistrationComponent,\n    canActivate: [AuthGuard],\n    data: {\n      roles: ['cancel.registration'],\n      action: 'MANAGE',\n      viewOnlyMode: true\n    }\n  },\n\n  {\n    path: 'manage-registration-update',\n    component: ManageRegistrationUpdateComponent,\n    canActivate: [AuthGuard],\n    data: {\n      roles: ['view.company.registration'],\n      action: 'MANAGE',\n      viewOnlyMode: true\n    }\n  },\n  {\n    path: 'renewals',\n    component: RenewalsComponent,\n    canActivate: [AuthGuard],\n    data: {\n      // roles: ['register.company'],\n      action: 'EDIT',\n      viewOnlyMode: false\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CompanyRegistrationRoutingModule { }\n","import {AfterViewInit, Component, EventEmitter, Input, OnInit, ViewChild} from '@angular/core';\nimport {forkJoin,Observable,Subscription} from 'rxjs';\nimport {catchError} from 'rxjs/operators';\nimport {HttpClient} from '@angular/common/http';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {\n    ComponyRegistrationObject,\n    CancelRegistration\n} from '../company-registration.model';\nimport {\n    DataType, DateFinderOptions,\n    IFinderField,\n    ListColumn,\n    LookupFinderOptions,\n    TextFinderOptions\n} from '../../../../../@fury/shared/list/list-column.model';\nimport {\n  ApiPayload,\n  FileUpload,\n    \n} from '../../../../services/api.model';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {MatDialog} from '@angular/material/dialog';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {fadeInRightAnimation} from '../../../../../@fury/animations/fade-in-right.animation';\nimport {fadeInUpAnimation} from '../../../../../@fury/animations/fade-in-up.animation';\nimport {BaseFuryForm} from '../../../../../@fury/shared/base-fury-form';\nimport {CompanyRegistrationService} from '../../company-registration.service';\nimport {KeycloakService} from 'keycloak-angular';\nimport {WorkflowServiceService} from '../../../../services/workflow-service.service';\nimport {AuthenticationService} from '../../../../authentication/authentication.service';\nimport {ComplaintService} from '../../../complaints/complaints.service';\nimport { OrgUploadComponent } from '../../../../layout/dialogs/org-upload/org-upload.component';\nimport {ApiService} from '../../../../services/api.service';\nimport { SuccessfulMessageDialogComponent } from '../../../../layout/dialogs/successful-message-dialog/successful-message-dialog.component';\nimport { environment } from '../../../../../environments/environment';\nimport {ApiEndpointsService} from '../../../../services/api-endpoints.service';\n\n@Component({\n  selector: 'fury-cancel-registration',\n  templateUrl: './cancel-registration.component.html',\n  styleUrls: ['./cancel-registration.component.scss'],\n  animations: [fadeInRightAnimation, fadeInUpAnimation]\n})\nexport class CancelRegistrationComponent extends BaseFuryForm implements OnInit, AfterViewInit {\n\noperationType = '';\nRegTrackingNo: string;\nprocessing=false;\nrealmRole: string;\ndialogRef;\n// Array\nhttpSub: Subscription;\naccesses: any [] = [];\nformCancelRegistration: FormGroup;\ndocument: FileUpload | null;\n// Subscriptions\nsubscriptions: Subscription[] = [];\n\ncancelRegistration: CancelRegistration[];\n// Events\n$processingEvent: EventEmitter<boolean> = new EventEmitter();\n$errorsEvent: EventEmitter<any> = new EventEmitter();\n$resultCompaniesEvent: EventEmitter<CancelRegistration> = new EventEmitter();\n// Boolean\nisProcessing = false;\nisOrganisation = false;\n@Input()\ncolumns: ListColumn[] = [\n    {name: 'Registration N0', property: 'RegTrackingNo', visible: true, isModelProperty: true},\n    {name: 'Reason for Cancellation', property: 'ReasonForCancellation', visible: true, isModelProperty: true},\n    {name: 'Status', property: 'CancellationApproval', visible: true, isModelProperty: true},\n    {name: 'Actions', property: 'actions', visible: true},\n] as ListColumn[];\npageSize = 10;\ndataSource: MatTableDataSource<CancelRegistration> | null;\n\n@ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n@ViewChild(MatSort, {static: true}) sort: MatSort;\n\n// Search fields\nsearchFields: IFinderField[];\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private dialog: MatDialog,\n    private http: HttpClient,\n    private service: ApiService,\n    private route: ActivatedRoute,\n    private endpoints: ApiEndpointsService,\n    public _auth: AuthenticationService,\n    private router: Router,\n    private auth: KeycloakService,\n    private authenticationService: AuthenticationService,\n    public registrationService: CompanyRegistrationService,\n    public _workflowService: WorkflowServiceService,\n    public complaintService:ComplaintService\n   \n  ) {\n    super(\n      auth,\n      _workflowService,\n      registrationService,\n      complaintService,\n  );\n\n  this.operationType = route.routeConfig.data.action;\n   }\n\n  ngOnInit(): void {\n\n    if (this.auth.getKeycloakInstance().resourceAccess['dps-frontend']) {\n      this.accesses = this.auth.getKeycloakInstance().resourceAccess['dps-frontend'].roles;\n\n  }\n\n  \n  this.formCancelRegistration = this.formBuilder.group({\n    ReasonForCancellation: new FormControl('', [Validators.required]),\n  });\n\n  if (this.auth.getKeycloakInstance().realmAccess) {\n      if(this.auth.getKeycloakInstance().realmAccess.roles.includes('organisation')){\n          this.isOrganisation = true;\n\n          this.httpSub = this.fetchMultiple()\n          .pipe(catchError(this.service.handleError))\n          .subscribe((responseList) => {\n            console.log(responseList[0][0]);\n\n            if(!(responseList[1].data[0].CerificateNumber)){\n\n              this.dialogRef.afterClosed().subscribe(() => {\n                this.dialogRef = this.dialog.open(SuccessfulMessageDialogComponent, {\n                  panelClass: ['successful-message-dialog', 'dialogs'],\n                  disableClose: true,\n                  data: {\n                    title:  'Error',\n                    message: 'Organisation does not have a valid certificate',\n                    status: false,\n                  }\n                });\n                this.router.navigate(['/']);\n              });\n            }\n           \n            this.RegTrackingNo =  responseList[0][0].RegTrackingNo;\n      \n            \n      \n            this.processing = false;\n          }, (error) => {\n            this.processing = false;\n            this.service.determineErrorResponse(error);\n          });\n      }\n  }\n\n   \n\n\n  // Processing event\n  this.subscriptions['$processingEvent'] = this.$processingEvent.subscribe(isProcessing => this.isProcessing = isProcessing);\n\n  this.dataSource = new MatTableDataSource();\n\n  // registeredCompanies\n  this.subscriptions['$resultCompaniesEvent'] = this.$resultCompaniesEvent.subscribe(result => {\n      if (result) {\n        console.log(result);\n          this.cancelRegistration = result;\n          this.dataSource.data = result;\n          this.isLoaded = true;\n      }\n  });\n\n  this.loadRegistrationCancelRequests();\n\n  \n\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n}\n\n\nprivate getFormData(): any {\n\n  return {\n    \n    \n    ReasonForCancellation: this.formCancelRegistration.get('ReasonForCancellation').value ? this.formCancelRegistration.get('ReasonForCancellation').value : '',\n    Attachment: this.document ? this.document.Base64 : '',\n    RegTrackingNo: this.RegTrackingNo,\n    \n  \n  };\n}\n\n// TODO:: Need to hide addressedTo Column from data controllers its mainly for nita data-protection officers\nget visibleColumns() {\n  return this.columns.filter(column => column.visible).map(column => column.property);\n}\n\nonSubmit(): void {\n  this.processing = true;\n  console.log(this.getFormData());\n  console.log('save the registration information:', this.getFormData());\n\n  this.httpSub = this.http.post<ApiPayload>(this.endpoints.cancelRegistration, this.getFormData())\n  .pipe(catchError(this.service.handleError))\n  .subscribe((response) => {\n    \n    this.dialogRef = this.dialog.open(SuccessfulMessageDialogComponent, {\n      panelClass: ['successful-message-dialog', 'dialogs'],\n      disableClose: true,\n      data: {\n        title:  'Success',\n        message: 'Request to cancel registration has been sent',\n        status: true,\n      }\n    });\n    this.router.navigate(['/']);\n\n    this.processing = false;\n  }, (error) => {\n    this.processing = false;\n\n    if (error.error.message) {\n      this.dialogRef = this.dialog.open(SuccessfulMessageDialogComponent, {\n        panelClass: ['successful-message-dialog', 'dialogs'],\n        disableClose: true,\n        data: {\n          title: error.error.message['title'] ? error.error.message['title'] : 'Operation Failed',\n          message: error.error.message['body'] ? error.error.message['body'] : environment.technicalErrorResponse,\n          status: false,\n        }\n      });\n    } else {\n      this.service.determineErrorResponse(error);\n    }\n  });\n}\n\nonFilterChange(value) {\n  if (!this.dataSource) {\n      return;\n  }\n  value = value.trim();\n  value = value.toLowerCase();\n  this.dataSource.filter = value;\n}\n\nloadRegistrationCancelRequests() {\n\n  \n\n  this.registrationService.getRequestsToCancel( this.$processingEvent, this.$resultCompaniesEvent, this.$errorsEvent);\n}\n\nonUploadAttachments(): void {\n  this.dialogRef = this.dialog.open(OrgUploadComponent, {\n    panelClass: ['organisation-upload-dialog', 'dialogs'],\n    disableClose: true,\n    data: {\n      multiple: false\n    }\n  });\n\n  this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: FileUpload }) => {\n    console.log('row:', result.row);\n\n    if (result.status) {\n      this.document = result.row;\n    }\n  });\n}\n\nonRemoveDocument(): void {\n  this.document = null;\n}\n\n\nprivate fetchMultiple(): Observable<any[]> {\n  \n  const registrationDetails = this.http.get<ApiPayload>(this.endpoints.getOrgDetailsById, { params: { OrganizationID: this._auth.getOrganisationID() } });\n  const certificate =  this.http.get<ApiPayload>(this.endpoints.checkCertificate, { params: { OrganizationID: this._auth.getOrganisationID() } });\n  // tslint:disable-next-line:max-line-length\n  return forkJoin([\n    registrationDetails, certificate\n  ]);\n}\n\n\nmanageRegistration(registration) {\n  \n      this.router.navigate(['/company-registration/view-cancel-registration'],\n          {state: {regTrackingNo: registration.RegTrackingNo}}).then();\n  \n\n}\n\n\n}\n","<fury-page-layout>\n    <fury-page-layout-header>\n        <fury-breadcrumbs [@fadeInRight]  current=\"Cancel Registration\"></fury-breadcrumbs>\n    </fury-page-layout-header>\n    <fury-page-layout-content *ngIf=\"isOrganisation\">\n        <div [@fadeInUp] class=\"\">\n            <div labelPosition=\"top\">\n \n                <div>\n                    \n                    <form [formGroup]=\"formCancelRegistration\">\n                        <section style=\"margin-top: 50px;\">\n                            <h2 style=\"text-align: center; font-weight: bold;\">CANCEL REGISTRATION</h2>\n                        </section>\n                        <section>\n                            <mat-form-field fxFlex=\"2 2 auto\" [ngStyle]=\"{'margin-right': '20px'}\">\n                                <mat-label>Reason for cancellation<span class=\"required-field\">required</span></mat-label>\n                                <textarea matInput\n                                    cdkTextareaAutosize\n                                    #autosize=\"cdkTextareaAutosize\"\n                                    cdkAutosizeMinRows=\"1\"\n                                    formControlName=\"ReasonForCancellation\"\n                                    cdkAutosizeMaxRows=\"5\"></textarea>             \n                            </mat-form-field>\n            \n                        </section>\n\n                        <section class=\"expand-section reduced-properties table-wrapper margin documents\">\n                            <h2 class=\"full-width step-header\">Attach notice for cancellation</h2>\n        \n                            <div class=\"buttons\">\n                                <button \n                                    mat-button\n                                    color=\"primary\"\n                                    [disabled]=\"processing\"\n                                    class=\"add-item-button\"\n                                    (click)=\"onUploadAttachments()\">\n                                    <div class=\"button-label\">\n                                        <mat-icon>add</mat-icon>                            \n                                        <span> {{ document ? 'Replace Document' : 'Upload Attachment' }} </span>\n                                    </div>\n                                </button>\n            \n                                <button \n                                    mat-button\n                                    *ngIf=\"document\"\n                                    color=\"primary\"\n                                    [disabled]=\"processing\"\n                                    class=\"remove-button\"\n                                    (click)=\"onRemoveDocument()\">\n                                    <div class=\"button-label\">\n                                        <mat-icon>clear</mat-icon>\n                                        <span> Remove Document </span>\n                                    </div>\n                                </button>\n                            </div>\n        \n                            <div *ngIf=\"document\" class=\"uploaded-document\" matTooltip=\"Open Document\" (click)=\"onReadDocument(document)\" style=\"margin-top: 20px;\">\n                                <img width=\"50\" height=\"50\" src=\"./assets/img/pdf.png\" alt=\"\">\n        \n                                <span>Document: {{ document.Name }} <span>  -  {{ document.Size }} Mbs</span></span>\n                            </div>\n        \n                        </section>\n                    </form>\n     \n                    <div class=\"buttons\" fxLayout=\"row\" fxLayoutAlign=\"end center\" fxLayoutGap=\"8px\">\n                        <button\n                            [disabled]=\"formCancelRegistration.invalid\"\n                            mat-button \n                            color=\"primary\" \n                            [ngClass]=\"{'inline-processing-btn': processing }\"      \n                            class=\"next-btn submit-btn\"                 \n                            (click)=\"onSubmit()\"\n                            mat-raised-button>                        \n                                <span>Submit Request</span>\n                        </button>\n                    </div>\n                                \n                </div>\n            </div>    \n        </div>\n    </fury-page-layout-content>   \n\n    <fury-page-layout-content *ngIf=\"isOrganisation == false\" [@fadeInUp]>\n        <fury-list \n            name=\"Requests to cancel\" \n            [columns]=\"columns\" \n            (filterChange)=\"onFilterChange($event)\"\n            finderDialogTitle=\"Finder\"\n            [searchFields]=\"searchFields\">\n\n            <div class=\"table-container\">\n                <table [dataSource]=\"dataSource\" mat-table matSort>\n                    <ng-container matColumnDef=\"checkbox\">\n                        <th *matHeaderCellDef class=\"actions-cell\" mat-header-cell>\n                            <mat-checkbox color=\"primary\" (click)=\"$event.stopPropagation()\"></mat-checkbox>\n                        </th>\n                        <td *matCellDef=\"let row\" class=\"actions-cell\" mat-cell>\n                            <mat-checkbox color=\"primary\" (click)=\"$event.stopPropagation()\"></mat-checkbox>\n                        </td>\n                    </ng-container>\n    \n                    <!-- fullName Column -->\n                    <ng-container *ngFor=\"let column of columns\">\n                        <ng-container *ngIf=\"column.isModelProperty\" [matColumnDef]=\"column.property\">\n                            <th *matHeaderCellDef mat-header-cell mat-sort-header> {{ column.name }}</th>\n                            <td *matCellDef=\"let row\" mat-cell>\n                                {{ row[column.property] }}\n                            </td>\n                        </ng-container>\n                    </ng-container>\n    \n                    <ng-container matColumnDef=\"actions\">\n                        <th *matHeaderCellDef class=\"actions-cell\" mat-header-cell mat-sort-header>Actions</th>\n                        <td *matCellDef=\"let row\" class=\"actions-cell\" mat-cell>\n                            <button type=\"button\" mat-icon-button [matMenuTriggerFor]=\"actionsMenu\"\n                                    (click)=\"$event.stopPropagation()\">\n                                <mat-icon>more_vert</mat-icon>\n                            </button>\n    \n                            <mat-menu #actionsMenu=\"matMenu\" yPosition=\"below\" xPosition=\"before\">\n                                <!-- <button (click)=\"viewRegistration(row)\"  mat-menu-item\n                                   routerLinkActive=\"router-link-active\">\n                                    <mat-icon>visibility</mat-icon>\n                                    <span>View</span>\n                                </button> -->\n                                <button (click)=\"manageRegistration(row)\"  mat-menu-item\n                                        routerLinkActive=\"router-link-active\">\n                                    <mat-icon>settings</mat-icon>\n                                    <span>Manage</span>\n                                </button>\n                            </mat-menu>\n                        </td>\n                    </ng-container>\n                    <tr *matHeaderRowDef=\"visibleColumns\" mat-header-row></tr>\n                    <tr\n                        *matRowDef=\"let row; columns: visibleColumns;\"\n                        class=\"clickable route-animations-elements\"\n                        mat-row></tr>\n                </table>\n            </div>\n            \n            <mat-paginator \n\n                class=\"paginator\" \n                [pageSize]=\"pageSize\">\n            </mat-paginator>\n        </fury-list>\n    </fury-page-layout-content>\n</fury-page-layout>\n \n"]}