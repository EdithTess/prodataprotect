{"version":3,"sources":["./node_modules/qrcode/lib/browser.js","./node_modules/angularx-qrcode/__ivy_ngcc__/fesm2015/angularx-qrcode.js","./src/app/modules/company-registration/components/data-protection-officers/data-protection-officers.component.ts","./src/app/modules/company-registration/components/data-protection-officers/data-protection-officers.component.html","./node_modules/qrcode/lib/core/alignment-pattern.js","./src/app/modules/company-registration/components/test-preview/test-preview.component.ts","./src/app/modules/company-registration/components/test-preview/test-preview.component.html","./node_modules/qrcode/lib/core/numeric-data.js","./src/app/modules/company-registration/company-registration.module.ts","./node_modules/qrcode/node_modules/isarray/index.js","./node_modules/qrcode/lib/core/byte-data.js","./node_modules/qrcode/lib/core/regex.js","./src/app/modules/company-registration/components/security-measures/security-measures.component.ts","./src/app/modules/company-registration/components/security-measures/security-measures.component.html","./src/app/modules/company-registration/components/third-parties/third-parties.component.ts","./src/app/modules/company-registration/components/third-parties/third-parties.component.html","./src/app/modules/company-registration/components/update/update-information/update-information.component.ts","./src/app/modules/company-registration/components/update/update-information/update-information.component.html","./node_modules/dijkstrajs/dijkstra.js","./src/app/modules/company-registration/components/cert-renewals/renewals/renewals.component.ts","./src/app/modules/company-registration/components/cert-renewals/renewals/renewals.component.html","./node_modules/qrcode/lib/core/version-check.js","./node_modules/qrcode/lib/core/polynomial.js","./node_modules/qrcode/lib/core/kanji-data.js","./src/app/modules/company-registration/components/view-cancel-registration/view-cancel-registration.component.ts","./src/app/modules/company-registration/components/view-cancel-registration/view-cancel-registration.component.html","./node_modules/qrcode/lib/core/error-correction-code.js","./src/app/modules/company-registration/components/manage-registration-update/manage-registration-update.component.ts","./src/app/modules/company-registration/components/manage-registration-update/manage-registration-update.component.html","./src/app/modules/company-registration/components/update-registration/update-registration.component.ts","./src/app/modules/company-registration/components/update-registration/update-registration.component.html","./node_modules/qrcode/lib/renderer/svg-tag.js","./node_modules/qrcode/lib/renderer/canvas.js","./src/app/modules/company-registration/components/company-registration-detail/company-registration-detail.component.ts","./src/app/modules/company-registration/components/company-registration-detail/company-registration-detail.component.html","./node_modules/qrcode/lib/renderer/utils.js","./src/app/modules/company-registration/components/company-cert/company-cert.component.ts","./src/app/modules/company-registration/components/company-cert/company-cert.component.html","./src/app/modules/company-registration/components/register-organisation/register-organisation.component.ts","./src/app/modules/company-registration/components/register-organisation/register-organisation.component.html","./node_modules/qrcode/lib/core/bit-matrix.js","./src/app/modules/company-registration/components/manage-ura-payment/manage-ura-payment.component.ts","./src/app/modules/company-registration/components/manage-ura-payment/manage-ura-payment.component.html","./node_modules/qrcode/lib/utils/typedarray-buffer.js","./src/app/modules/company-registration/components/ura-payments/ura-payments.component.ts","./src/app/modules/company-registration/components/ura-payments/ura-payments.component.html","./node_modules/qrcode/lib/can-promise.js","./node_modules/qrcode/lib/core/galois-field.js","./node_modules/qrcode/lib/core/utils.js","./node_modules/qrcode/lib/core/bit-buffer.js","./node_modules/qrcode/lib/core/mask-pattern.js","./node_modules/qrcode/lib/core/error-correction-level.js","./node_modules/qrcode/lib/core/reed-solomon-encoder.js","./src/app/modules/company-registration/components/countries/countries.component.ts","./src/app/modules/company-registration/components/countries/countries.component.html","./node_modules/qrcode/lib/core/finder-pattern.js","./src/app/modules/company-registration/components/edit-company-registration/edit-company-registration.component.ts","./src/app/modules/company-registration/components/edit-company-registration/edit-company-registration.component.html","./node_modules/qrcode/lib/core/format-info.js","./src/app/modules/company-registration/components/find-company-registration/find-company-registration.component.ts","./src/app/modules/company-registration/components/find-company-registration/find-company-registration.component.html","./node_modules/qrcode/lib/core/alphanumeric-data.js","./src/app/modules/company-registration/components/cert-preview/cert-preview.component.ts","./src/app/modules/company-registration/components/cert-preview/cert-preview.component.html","./node_modules/qrcode/lib/core/qrcode.js","./src/app/modules/company-registration/components/company-registration.model.ts","./node_modules/qrcode/lib/core/mode.js","./node_modules/qrcode/lib/core/segments.js","./node_modules/qrcode/lib/core/version.js","./src/app/modules/models/data-subject.model.ts","./src/app/modules/company-registration/company-registration-routing.module.ts","./src/app/modules/company-registration/components/cancel-registration/cancel-registration.component.ts","./src/app/modules/company-registration/components/cancel-registration/cancel-registration.component.html"],"names":[],"mappings":";;;;;;;;;;AACA,iBAAiB,mBAAO,CAAC,2BAAe;;AAExC,aAAa,mBAAO,CAAC,2BAAe;AACpC,qBAAqB,mBAAO,CAAC,+BAAmB;AAChD,kBAAkB,mBAAO,CAAC,mCAAuB;;AAEjD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;AC3ED;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0G;AACnD;;AAEf;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,wDAAS;AACrB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,YAAY,uDAAQ;AACpB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,YAAY,uDAAQ;AACpB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AA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A;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;;AAGA;AACA,IAAI,IAA6B;AACjC;AACA;;;;;;;;;;;;;ACpKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgD;AAC2D;AAC5B;AAC5B;AACM;AACV;AACY;AACH;AAsBd;AAEwC;AACnB;AACmD;AACoB;AAGZ;AAGZ;AACkB;AACX;AACpB;AACkC;AAGD;AACW;AAClE;AAC1B;AACuC;AACP;AACU;AAGoE;AAC/F;AACiC;AACxD;AAEgC;AACI;AACiD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IC5CtG,qEAAI;IAAA,oEAAS;IAAA,4DAAK;;;IASd,4EAA0E;IAAA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ACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,YAAY;AAC7B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,mBAAmB,cAAc;AACjC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,qBAAqB,QAAQ;AAC7B;AACA;AACA,GAAG;AACH;AACA,eAAe,SAAS;AACxB;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,mBAAmB,SAAS;AAC5B;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;;AAEA;AACA;AACA,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;AC/fA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+F;AACjB;AACvB;AACiB;AAOvB;AACoC;AACiB;AAE1D;AACwB;AAKJ;AACmE;AACjF;AAC+B;AACrC;AACkB;AACQ;AACC;AAEM;AAG8D;AAEjE;AACgB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICElF,0EACI;IAAA,yEAA8B;IAAA,sEAAW;IAAA,4DAAK;IAClD,4DAAM;;;IAEF,sEACI;IAAA,wEAEI;IAKA,qEACI;IAAA,qEAAM;IAAA,gEAAI;IAAA,4DAAK;IACf,qEAA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AmB;gBAC7B,WAAW,EAAE,+BAA+B;gBAC5C,SAAS,EAAE,CAAC,+BAA+B,CAAC;aAC7C;;;;;;;;;;;;;AEzCD;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;ACNA,aAAa,mBAAO,CAAC,6BAAiB;;AAEtC;AACA;;AAEA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA,CAAC;AACD;AACA,iBAAiB,SAAS;AAC1B;AACA;;AAEA;;AAEA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX,eAAe,SAAS;AACxB;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY;AACZ;AACA;AACA;;AAEA;AACA,WAAW;AACX;AACA;;;;;;;;;;;;AC9EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;AC9DA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA,mBAAmB,YAAY;AAC/B;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;;ACpCA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,cAAc;AAC1B,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,YAAY;AAC/B;AACA;;AAEA,qBAAqB,YAAY;AACjC;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,gBAAgB;AACnC,qBAAqB,gBAAgB;AACrC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,YAAY;AAC/B;AACA,qBAAqB,YAAY;AACjC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,kBAAkB;;AAEnC;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,UAAU;AACtB;AACA;AACA;;AAEA,mBAAmB,YAAY;AAC/B,qBAAqB,YAAY;AACjC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,UAAU;AACtB,YAAY,OAAO;AACnB;AACA;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,mBAAO,CAAC,qBAAS;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,UAAU;AACtB,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA,iBAAiB,gBAAgB;AACjC;AACA;;AAEA,oBAAoB,QAAQ;AAC5B;;AAEA,sBAAsB,QAAQ;AAC9B;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA,YAAY,UAAU;AACtB;AACA;AACA;;AAEA,iBAAiB,cAAc;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA,YAAY,UAAU;AACtB,YAAY,OAAO;AACnB;AACA;AACA;;AAEA,iBAAiB,gBAAgB;AACjC;AACA;;AAEA,oBAAoB,QAAQ;AAC5B,sBAAsB,QAAQ;AAC9B;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,UAAU;AACtB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,QAAQ;AACzB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,UAAU;AACtB,YAAY,qBAAqB;AACjC,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;;AAEA,aAAa,QAAQ;AACrB;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,UAAU;AACtB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,0BAA0B,SAAS;AACnC;;AAEA;AACA,qBAAqB,OAAO;AAC5B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,qBAAqB;AACjC,YAAY,SAAS;AACrB,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,iCAAiC;AAC9C;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,mBAAmB;AACpC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,UAAU;AACtB,YAAY,OAAO;AACnB,YAAY,qBAAqB;AACjC,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,mBAAmB;AACpC;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,iBAAiB;AAC9B,eAAe,mBAAmB;AAClC;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,aAAa;AAC1B,eAAe,mBAAmB;AAClC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,oBAAoB;AAChC,YAAY,YAAY;AACxB,YAAY,OAAO;AACnB;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AAC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;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,KAAK;AACjB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,KAAK;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,KAAK;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,YAAY;AACxB,YAAY,KAAK;AACjB,YAAY,KAAK;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;;;;;;;;;;;ACtKA,WAAW,mBAAO,CAAC,oBAAQ;AAC3B,kBAAkB,mBAAO,CAAC,4BAAgB;AAC1C,uBAAuB,mBAAO,CAAC,iCAAqB;AACpD,eAAe,mBAAO,CAAC,yBAAa;AACpC,gBAAgB,mBAAO,CAAC,0BAAc;AACtC,YAAY,mBAAO,CAAC,qBAAS;AAC7B,YAAY,mBAAO,CAAC,qBAAS;AAC7B,eAAe,mBAAO,CAAC,wBAAY;;AAEnC;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,KAAK;AACjB,YAAY,OAAO;AACnB,YAAY,MAAM;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,KAAK;AACjB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,MAAM;AAClB,YAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,MAAM;AAClB,YAAY,MAAM;AAClB;AACA;AACA;AACA,iBAAiB,iBAAiB;AAClC;;AAEA;AACA;AACA;AACA,WAAW,8DAA8D;AACzE,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,MAAM;AAClB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB;AACA;AACA;AACA,eAAe;AACf;;AAEA,iBAAiB,kBAAkB;AACnC;AACA;;AAEA,mBAAmB,sBAAsB;AACzC;AACA;;AAEA;AACA,oBAAoB;AACpB;;AAEA,qBAAqB,wBAAwB;AAC7C;;AAEA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,aAAa,wBAAwB;AACrC;AACA;;AAEA,UAAU;AACV;;AAEA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,cAAc;AAC1B,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,MAAM;AAClB,YAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,MAAM;AAClB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iBAAiB,qBAAqB;AACtC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,MAAM;AAClB;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACzUA,YAAY,mBAAO,CAAC,qBAAS;AAC7B,aAAa,mBAAO,CAAC,qCAAyB;AAC9C,cAAc,mBAAO,CAAC,sCAA0B;AAChD,WAAW,mBAAO,CAAC,oBAAQ;AAC3B,mBAAmB,mBAAO,CAAC,6BAAiB;AAC5C,cAAc,mBAAO,CAAC,qBAAS;;AAE/B;AACA;AACA;;AAEA;AACA,8BAA8B,sBAAsB;AACpD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA,8BAA8B,sBAAsB;AACpD;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,cAAc;AAC1B,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,KAAK;AACjB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAC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","file":"modules-company-registration-company-registration-module-es2015.js","sourcesContent":["\nvar canPromise = require('./can-promise')\n\nvar QRCode = require('./core/qrcode')\nvar CanvasRenderer = require('./renderer/canvas')\nvar SvgRenderer = require('./renderer/svg-tag.js')\n\nfunction renderCanvas (renderFunc, canvas, text, opts, cb) {\n  var args = [].slice.call(arguments, 1)\n  var argsNum = args.length\n  var isLastArgCb = typeof args[argsNum - 1] === 'function'\n\n  if (!isLastArgCb && !canPromise()) {\n    throw new Error('Callback required as last argument')\n  }\n\n  if (isLastArgCb) {\n    if (argsNum < 2) {\n      throw new Error('Too few arguments provided')\n    }\n\n    if (argsNum === 2) {\n      cb = text\n      text = canvas\n      canvas = opts = undefined\n    } else if (argsNum === 3) {\n      if (canvas.getContext && typeof cb === 'undefined') {\n        cb = opts\n        opts = undefined\n      } else {\n        cb = opts\n        opts = text\n        text = canvas\n        canvas = undefined\n      }\n    }\n  } else {\n    if (argsNum < 1) {\n      throw new Error('Too few arguments provided')\n    }\n\n    if (argsNum === 1) {\n      text = canvas\n      canvas = opts = undefined\n    } else if (argsNum === 2 && !canvas.getContext) {\n      opts = text\n      text = canvas\n      canvas = undefined\n    }\n\n    return new Promise(function (resolve, reject) {\n      try {\n        var data = QRCode.create(text, opts)\n        resolve(renderFunc(data, canvas, opts))\n      } catch (e) {\n        reject(e)\n      }\n    })\n  }\n\n  try {\n    var data = QRCode.create(text, opts)\n    cb(null, renderFunc(data, canvas, opts))\n  } catch (e) {\n    cb(e)\n  }\n}\n\nexports.create = QRCode.create\nexports.toCanvas = renderCanvas.bind(null, CanvasRenderer.render)\nexports.toDataURL = renderCanvas.bind(null, CanvasRenderer.renderToDataURL)\n\n// only svg for now.\nexports.toString = renderCanvas.bind(null, function (data, _, opts) {\n  return SvgRenderer.render(data, opts)\n})\n","import { Component, ChangeDetectionStrategy, Renderer2, Input, ViewChild, NgModule } from '@angular/core';\nimport { toDataURL, toCanvas, toString } from 'qrcode';\n\nimport * as ɵngcc0 from '@angular/core';\n\nconst _c0 = [\"qrcElement\"];\nclass QRCodeComponent {\n    constructor(renderer) {\n        this.renderer = renderer;\n        // Deprecated\n        this.colordark = '';\n        this.colorlight = '';\n        this.level = '';\n        this.hidetitle = false;\n        this.size = 0;\n        this.usesvg = false;\n        // Valid for 1.x and 2.x\n        this.allowEmptyString = false;\n        this.qrdata = '';\n        // New fields introduced in 2.0.0\n        this.colorDark = '#000000ff';\n        this.colorLight = '#ffffffff';\n        this.cssClass = 'qrcode';\n        this.elementType = 'canvas';\n        this.errorCorrectionLevel = 'M';\n        this.margin = 4;\n        this.scale = 4;\n        this.width = 10;\n        // Deprecation warnings\n        if (this.colordark !== '') {\n            console.warn('[angularx-qrcode] colordark is deprecated, use colorDark.');\n        }\n        if (this.colorlight !== '') {\n            console.warn('[angularx-qrcode] colorlight is deprecated, use colorLight.');\n        }\n        if (this.level !== '') {\n            console.warn('[angularx-qrcode] level is deprecated, use errorCorrectionLevel.');\n        }\n        if (this.hidetitle !== false) {\n            console.warn('[angularx-qrcode] hidetitle is deprecated.');\n        }\n        if (this.size !== 0) {\n            console.warn('[angularx-qrcode] size is deprecated, use `width`. Defaults to 10.');\n        }\n        if (this.usesvg !== false) {\n            console.warn(`[angularx-qrcode] usesvg is deprecated, use [elementType]=\"'svg'\".`);\n        }\n    }\n    ngOnChanges() {\n        this.createQRCode();\n    }\n    isValidQrCodeText(data) {\n        if (this.allowEmptyString === false) {\n            return !(typeof data === 'undefined' ||\n                data === '' ||\n                data === 'null' ||\n                data === null);\n        }\n        return !(typeof data === 'undefined');\n    }\n    toDataURL() {\n        return new Promise((resolve, reject) => {\n            toDataURL(this.qrdata, {\n                color: {\n                    dark: this.colorDark,\n                    light: this.colorLight,\n                },\n                errorCorrectionLevel: this.errorCorrectionLevel,\n                margin: this.margin,\n                scale: this.scale,\n                version: this.version,\n                width: this.width,\n            }, (err, url) => {\n                if (err) {\n                    reject(err);\n                }\n                else {\n                    resolve(url);\n                }\n            });\n        });\n    }\n    toCanvas(canvas) {\n        return new Promise((resolve, reject) => {\n            toCanvas(canvas, this.qrdata, {\n                color: {\n                    dark: this.colorDark,\n                    light: this.colorLight,\n                },\n                errorCorrectionLevel: this.errorCorrectionLevel,\n                margin: this.margin,\n                scale: this.scale,\n                version: this.version,\n                width: this.width,\n            }, (error) => {\n                if (error) {\n                    reject(error);\n                }\n                else {\n                    resolve('success');\n                }\n            });\n        });\n    }\n    toSVG() {\n        return new Promise((resolve, reject) => {\n            toString(this.qrdata, {\n                color: {\n                    dark: this.colorDark,\n                    light: this.colorLight,\n                },\n                errorCorrectionLevel: this.errorCorrectionLevel,\n                margin: this.margin,\n                scale: this.scale,\n                type: 'svg',\n                version: this.version,\n                width: this.width,\n            }, (err, url) => {\n                if (err) {\n                    reject(err);\n                }\n                else {\n                    resolve(url);\n                }\n            });\n        });\n    }\n    renderElement(element) {\n        for (const node of this.qrcElement.nativeElement.childNodes) {\n            this.renderer.removeChild(this.qrcElement.nativeElement, node);\n        }\n        this.renderer.appendChild(this.qrcElement.nativeElement, element);\n    }\n    createQRCode() {\n        // Set sensitive defaults\n        if (this.version && this.version > 40) {\n            console.warn('[angularx-qrcode] max value for `version` is 40');\n            this.version = 40;\n        }\n        else if (this.version && this.version < 1) {\n            console.warn('[angularx-qrcode]`min value for `version` is 1');\n            this.version = 1;\n        }\n        else if (this.version !== undefined && isNaN(this.version)) {\n            console.warn('[angularx-qrcode] version should be a number, defaulting to auto.');\n            this.version = undefined;\n        }\n        try {\n            if (!this.isValidQrCodeText(this.qrdata)) {\n                throw new Error('[angularx-qrcode] Field `qrdata` is empty, set`allowEmptyString=\"true\"` to overwrite this behaviour.');\n            }\n            let element;\n            switch (this.elementType) {\n                case 'canvas':\n                    element = this.renderer.createElement('canvas');\n                    this.toCanvas(element)\n                        .then(() => {\n                        this.renderElement(element);\n                    })\n                        .catch((e) => {\n                        console.error('[angularx-qrcode] canvas error: ', e);\n                    });\n                    break;\n                case 'svg':\n                    element = this.renderer.createElement('div');\n                    this.toSVG()\n                        .then((svgString) => {\n                        this.renderer.setProperty(element, 'innerHTML', svgString);\n                        const innerElement = element.firstChild;\n                        this.renderer.setAttribute(innerElement, 'height', `${this.width}`);\n                        this.renderer.setAttribute(innerElement, 'width', `${this.width}`);\n                        this.renderElement(innerElement);\n                    })\n                        .catch((e) => {\n                        console.error('[angularx-qrcode] svg error: ', e);\n                    });\n                    break;\n                case 'url':\n                case 'img':\n                default:\n                    element = this.renderer.createElement('img');\n                    this.toDataURL()\n                        .then((dataUrl) => {\n                        element.setAttribute('src', dataUrl);\n                        this.renderElement(element);\n                    })\n                        .catch((e) => {\n                        console.error('[angularx-qrcode] img/url error: ', e);\n                    });\n            }\n        }\n        catch (e) {\n            console.error('[angularx-qrcode] Error generating QR Code: ', e.message);\n        }\n    }\n}\nQRCodeComponent.ɵfac = function QRCodeComponent_Factory(t) { return new (t || QRCodeComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2)); };\nQRCodeComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: QRCodeComponent, selectors: [[\"qrcode\"]], viewQuery: function QRCodeComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(_c0, true);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.qrcElement = _t.first);\n    } }, inputs: { colordark: \"colordark\", colorlight: \"colorlight\", level: \"level\", hidetitle: \"hidetitle\", size: \"size\", usesvg: \"usesvg\", allowEmptyString: \"allowEmptyString\", qrdata: \"qrdata\", colorDark: \"colorDark\", colorLight: \"colorLight\", cssClass: \"cssClass\", elementType: \"elementType\", errorCorrectionLevel: \"errorCorrectionLevel\", margin: \"margin\", scale: \"scale\", width: \"width\", version: \"version\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 2, vars: 2, consts: [[\"qrcElement\", \"\"]], template: function QRCodeComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"div\", null, 0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassMap(ctx.cssClass);\n    } }, encapsulation: 2, changeDetection: 0 });\nQRCodeComponent.ctorParameters = () => [\n    { type: Renderer2 }\n];\nQRCodeComponent.propDecorators = {\n    colordark: [{ type: Input }],\n    colorlight: [{ type: Input }],\n    level: [{ type: Input }],\n    hidetitle: [{ type: Input }],\n    size: [{ type: Input }],\n    usesvg: [{ type: Input }],\n    allowEmptyString: [{ type: Input }],\n    qrdata: [{ type: Input }],\n    colorDark: [{ type: Input }],\n    colorLight: [{ type: Input }],\n    cssClass: [{ type: Input }],\n    elementType: [{ type: Input }],\n    errorCorrectionLevel: [{ type: Input }],\n    margin: [{ type: Input }],\n    scale: [{ type: Input }],\n    version: [{ type: Input }],\n    width: [{ type: Input }],\n    qrcElement: [{ type: ViewChild, args: ['qrcElement', { static: true },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(QRCodeComponent, [{\n        type: Component,\n        args: [{\n                selector: 'qrcode',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                template: `<div #qrcElement [class]=\"cssClass\"></div>`\n            }]\n    }], function () { return [{ type: ɵngcc0.Renderer2 }]; }, { colordark: [{\n            type: Input\n        }], colorlight: [{\n            type: Input\n        }], level: [{\n            type: Input\n        }], hidetitle: [{\n            type: Input\n        }], size: [{\n            type: Input\n        }], usesvg: [{\n            type: Input\n        }], allowEmptyString: [{\n            type: Input\n        }], qrdata: [{\n            type: Input\n        }], colorDark: [{\n            type: Input\n        }], colorLight: [{\n            type: Input\n        }], cssClass: [{\n            type: Input\n        }], elementType: [{\n            type: Input\n        }], errorCorrectionLevel: [{\n            type: Input\n        }], margin: [{\n            type: Input\n        }], scale: [{\n            type: Input\n        }], width: [{\n            type: Input\n        }], version: [{\n            type: Input\n        }], qrcElement: [{\n            type: ViewChild,\n            args: ['qrcElement', { static: true }]\n        }] }); })();\n\nclass QRCodeModule {\n}\nQRCodeModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: QRCodeModule });\nQRCodeModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function QRCodeModule_Factory(t) { return new (t || QRCodeModule)(); }, providers: [] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(QRCodeModule, { declarations: [QRCodeComponent], exports: [QRCodeComponent] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(QRCodeModule, [{\n        type: NgModule,\n        args: [{\n                providers: [],\n                declarations: [QRCodeComponent],\n                exports: [QRCodeComponent]\n            }]\n    }], null, null); })();\n\n/*\n * Public API Surface of angularx-qrcode\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { QRCodeComponent, QRCodeModule };\n\n//# sourceMappingURL=angularx-qrcode.js.map","import {Component, EventEmitter, Input, OnInit} from '@angular/core';\nimport {\n    BreachControlCategoryReferenceModel,\n    BreachControlModel,\n    BreachControlReferenceModel, ImpactOfBreachModel\n} from '../../../reporting-and-notification/breach-model';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {Subscription} from 'rxjs';\nimport {DataProtectionOfficer} from '../../../models/data-subject.model';\nimport {DataServiceError} from '../../../../../@fury/shared/HttpModel';\nimport {KeycloakService} from 'keycloak-angular';\nimport {SnackBarService} from '../../../../pages/services/snack-bar.service';\nimport {UtilService} from '../../../../../@fury/services/util.service';\n\n@Component({\n    selector: 'fury-data-protection-officers',\n    templateUrl: './data-protection-officers.component.html',\n    styleUrls: ['./data-protection-officers.component.scss']\n})\nexport class DataProtectionOfficersComponent implements OnInit {\n\n    @Input() dataProtectionOfficers: DataProtectionOfficer[];\n    @Input() isViewOnly: boolean;\n    @Input() dataProtectionOfficerEvent = new EventEmitter<DataProtectionOfficer[]>();\n\n    dataProtectionOfficer: DataProtectionOfficer = new DataProtectionOfficer();\n\n    dataProtectionOfficersFormGroup: FormGroup;\n\n    subscriptions: Subscription[] = [];\n\n    //arrays\n    errors: string[] = [];\n    list = [];\n    displayColumns: string [] = ['nber', 'name', 'postionInOrganisation', 'email', 'physicalAddress', 'phoneNumber', 'actions'];\n    $dataProtectionOfficers: DataProtectionOfficer [] = [];\n    //events\n    $processingEvent: EventEmitter<boolean> = new EventEmitter();\n    $errorsEvent: EventEmitter<DataServiceError[]> = new EventEmitter();\n    //Button Config\n    buttonIcon = 'add_circle_outline';\n    buttonLabel = 'Add';\n    //boolean\n    isEditingDataProtectionOfficer = false;\n    tableEditable: boolean = true;\n    // int\n    dataProtectionOfficerIndex = 0;\n    dataProtectionOfficerNumber = 1;\n\n    constructor(\n        private fb: FormBuilder,\n        private auth: KeycloakService,\n        private utilService: UtilService,\n        public snackBar: SnackBarService\n    ) {\n\n    }\n\n    ngOnInit(): void {\n        this.initForms();\n        console.log(\"DPO \" + this.dataProtectionOfficers);\n        if (this.dataProtectionOfficers) {\n            this.dataProtectionOfficers.forEach(dataProtectionOfficer => this.list.push(dataProtectionOfficer));\n        }\n        this.initMainObject();\n    }\n\n    private initMainObject() {\n        this.dataProtectionOfficer = new DataProtectionOfficer();\n    }\n\n    private initForms(): void {\n        this.dataProtectionOfficersFormGroup = this.fb.group(\n            {\n                name: [null, Validators.required],\n                postionInOrgainsation: [null, Validators.required],\n                email: [null, Validators.required],\n                physicalAddress: [null, Validators.required],\n                phoneNumber: [null, Validators.required],\n            }\n        );\n    }\n\n    addOrUpdateDataProtectionOfficer(option: number): void {\n        if (this.dataProtectionOfficersFormGroup.valid) {\n            this.mapFormControlToControl(1);\n            if (option === 1) {\n                this.list.push(this.dataProtectionOfficer);\n                this.dataProtectionOfficers.push(this.dataProtectionOfficer);\n                this.list = [...this.list];\n            } else {\n                this.list[this.dataProtectionOfficerIndex] = this.dataProtectionOfficer;\n                this.dataProtectionOfficers[this.dataProtectionOfficerNumber] = this.dataProtectionOfficer;\n                this.list = [...this.dataProtectionOfficers];\n            }\n            this.restDataProtectionOfficer();\n            console.log(this.list);\n        }\n    }\n\n    private mapFormControlToControl(option: number) {\n        if (option === 1) {\n            this.dataProtectionOfficer.Name = this.dataProtectionOfficersFormGroup.get('name').value;\n            this.dataProtectionOfficer.PositionInOrganisation = this.dataProtectionOfficersFormGroup.get('postionInOrgainsation').value;\n            this.dataProtectionOfficer.EmailAddress = this.dataProtectionOfficersFormGroup.get('email').value;\n            this.dataProtectionOfficer.PhysicalAddress = this.dataProtectionOfficersFormGroup.get('physicalAddress').value;\n            this.dataProtectionOfficer.PhoneNumber = this.dataProtectionOfficersFormGroup.get('phoneNumber').value;\n        } else {\n            this.dataProtectionOfficersFormGroup.get('name').setValue(this.dataProtectionOfficer.Name);\n            this.dataProtectionOfficersFormGroup.get('postionInOrgainsation').setValue(this.dataProtectionOfficer.PositionInOrganisation);\n            this.dataProtectionOfficersFormGroup.get('email').setValue(this.dataProtectionOfficer.EmailAddress);\n            this.dataProtectionOfficersFormGroup.get('physicalAddress').setValue(this.dataProtectionOfficer.PhysicalAddress);\n            this.dataProtectionOfficersFormGroup.get('phoneNumber').setValue(this.dataProtectionOfficer.PhoneNumber);\n        }\n    }\n\n\n    restDataProtectionOfficer() {\n        this.dataProtectionOfficersFormGroup.reset();\n        this.dataProtectionOfficer = new DataProtectionOfficer();\n        this.validateDataProtectionOfficerLabels(1);\n        this.manageDataProtectionOfficer(1);\n    }\n\n    validateDataProtectionOfficerLabels(option: number) {\n        if (option === 1) {\n            this.buttonIcon = 'add_circle_outline';\n            this.buttonLabel = 'Add potential Imapact';\n        } else {\n            this.buttonIcon = 'save';\n            this.buttonLabel = 'Save';\n        }\n    }\n\n    manageDataProtectionOfficer(option: number, id ?: number) {\n        if (option === 2) {\n            this.dataProtectionOfficer = this.dataProtectionOfficers[id];\n            this.isEditingDataProtectionOfficer = true;\n            this.dataProtectionOfficerIndex = id;\n            this.mapFormControlToControl(option);\n        } else {\n            this.isEditingDataProtectionOfficer = false;\n            this.dataProtectionOfficer = new DataProtectionOfficer();\n            this.dataProtectionOfficerIndex = 0;\n        }\n        this.validateDataProtectionOfficerLabels(option);\n    }\n\n    deleteItem(index: number) {\n        this.list.splice(index, 1);\n        this.dataProtectionOfficers.splice(index, 1);\n        this.list = [...this.list];\n        // Send items to parent\n        this.dataProtectionOfficerEvent.emit(this.dataProtectionOfficers);\n        this.isEditingDataProtectionOfficer = false;\n    }\n\n    isValidForm() {\n        let formValid = this.dataProtectionOfficersFormGroup.valid;\n        return formValid;\n    }\n\n}\n\n","<ng-container>\n    <ng-container *ngIf=\"!isViewOnly\">\n        <form [formGroup]=\"dataProtectionOfficersFormGroup\">\n            <ng-template matStepLabel>Data Protection Officers</ng-template>\n\n            <div class=\"content\" fxLayout=\"column\" fxLayoutGap=\"8px\">\n                <mat-form-field fxFlex=\"2 1 auto\">\n                    <mat-label>Name</mat-label>\n                    <input formControlName=\"name\" matInput>\n                </mat-form-field>\n                <mat-form-field fxFlex=\"2 1 auto\">\n                    <mat-label>Position In Organisation</mat-label>\n                    <input formControlName=\"postionInOrgainsation\" matInput>\n                </mat-form-field>\n                <mat-form-field fxFlex=\"2 1 auto\">\n                    <mat-label>Email Address</mat-label>\n                    <input formControlName=\"email\" matInput>\n                </mat-form-field>\n                <mat-form-field fxFlex=\"2 1 auto\">\n                    <mat-label>Physical Address</mat-label>\n                    <input formControlName=\"physicalAddress\" matInput>\n                </mat-form-field>\n                <mat-form-field fxFlex=\"2 1 auto\">\n                    <mat-label>Phone Number</mat-label>\n                    <input formControlName=\"phoneNumber\" matInput>\n                </mat-form-field>\n            </div>\n        </form>\n        <div *ngIf=\"!isViewOnly\" style=\"text-align: right; padding-top: 5px; padding-bottom: 5px;\">\n            <button mat-raised-button\n                    (click)=\"addOrUpdateDataProtectionOfficer(isEditingDataProtectionOfficer?2:1)\" color=\"primary\"\n                    [disabled]=\"!isValidForm()\">\n                <mat-icon>{{buttonIcon}}</mat-icon>\n                <span>{{buttonLabel}}</span>\n            </button>&nbsp;\n            <span class=\"example-spacer\"></span>\n            <button mat-raised-button (click)=\"restDataProtectionOfficer()\" color=\"warn\">\n                <mat-icon>cancel</mat-icon>\n                <span>Cancel</span>\n            </button>\n        </div>\n    </ng-container>\n\n    <div class=\"content\" fxLayout=\"column\" fxLayoutGap=\"8px\">\n        <table mat-table [dataSource]=\"list\">\n            <ng-container matColumnDef=\"nber\">\n                <th mat-header-cell *matHeaderCellDef style=\"width: 5%\"\n                    class=\"tableFontSize firstColumnTable alignCenter\">#\n                </th>\n                <td mat-cell *matCellDef=\"let element; let j=index;\"\n                    class=\"tableFontSize firstColumnTable alignCenter\">\n                    {{j + 1}}\n                </td>\n            </ng-container>\n            <ng-container matColumnDef=\"name\">\n                <th mat-header-cell *matHeaderCellDef class=\"tableFontSize \" style=\"width: 20%\">Name</th>\n                <td mat-cell *matCellDef=\"let element\" class=\"tableFontSize \">\n                    {{element.Name}}\n                </td>\n            </ng-container>\n            <ng-container matColumnDef=\"postionInOrganisation\">\n                <th mat-header-cell *matHeaderCellDef class=\"tableFontSize \" style=\"width: 20%\">Postion In\n                    Organisation\n                </th>\n                <td mat-cell *matCellDef=\"let element\" class=\"tableFontSize \">\n                    {{element.PositionInOrganisation}}\n                </td>\n            </ng-container>\n            <ng-container matColumnDef=\"email\">\n                <th mat-header-cell *matHeaderCellDef class=\"tableFontSize \" style=\"width: 20%\">Email</th>\n                <td mat-cell *matCellDef=\"let element\" class=\"tableFontSize \">\n                    {{element.EmailAddress}}\n                </td>\n            </ng-container>\n            <ng-container matColumnDef=\"physicalAddress\">\n                <th mat-header-cell *matHeaderCellDef class=\"tableFontSize \" style=\"width: 20%\">Physical Address</th>\n                <td mat-cell *matCellDef=\"let element\" class=\"tableFontSize \">\n                    {{element.PhysicalAddress}}\n                </td>\n            </ng-container>\n            <ng-container matColumnDef=\"phoneNumber\">\n                <th mat-header-cell *matHeaderCellDef class=\"tableFontSize \" style=\"width: 20%\"> Phone Number</th>\n                <td mat-cell *matCellDef=\"let element\" class=\"tableFontSize \">\n                    {{element.PhoneNumber}}\n                </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"actions\">\n                <th mat-header-cell *matHeaderCellDef style=\"width: 5%\">Actions</th>\n                <td mat-cell *matCellDef=\"let element; let j=index\" class=\"actions\">\n                    <ng-container *ngIf=\"!isViewOnly\">\n                        <a class=\"link\" (click)=\"manageDataProtectionOfficer(2,j)\">\n                            <mat-icon color=\"primary\" class=\"material-icons-outlined\" matTooltip=\"Edit item\">edit\n                            </mat-icon>\n                        </a>&nbsp;&nbsp;\n                        <a class=\"link\" (click)=\"deleteItem(j)\">\n                            <mat-icon color=\"warn\" class=\"material-icons-outlined\" matTooltip=\"Delete item\">delete\n                            </mat-icon>\n                        </a>\n                    </ng-container>\n                </td>\n            </ng-container>\n            <ng-container matColumnDef=\"noData\">\n                <td mat-footer-cell *matFooterCellDef colspan=\"7\">\n                    There is no data!\n                </td>\n            </ng-container>\n            <tr mat-header-row *matHeaderRowDef=\"displayColumns;sticky:true\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayColumns;\"></tr>\n            <tr mat-footer-row *matFooterRowDef=\"['noData']\" [ngClass]=\"{'hide':!(list?.length==0)}\"></tr>\n        </table>\n    </div>\n</ng-container>\n\n\n<!-- LIST OF ITEMS -->\n\n","/**\n * Alignment pattern are fixed reference pattern in defined positions\n * in a matrix symbology, which enables the decode software to re-synchronise\n * the coordinate mapping of the image modules in the event of moderate amounts\n * of distortion of the image.\n *\n * Alignment patterns are present only in QR Code symbols of version 2 or larger\n * and their number depends on the symbol version.\n */\n\nvar getSymbolSize = require('./utils').getSymbolSize\n\n/**\n * Calculate the row/column coordinates of the center module of each alignment pattern\n * for the specified QR Code version.\n *\n * The alignment patterns are positioned symmetrically on either side of the diagonal\n * running from the top left corner of the symbol to the bottom right corner.\n *\n * Since positions are simmetrical only half of the coordinates are returned.\n * Each item of the array will represent in turn the x and y coordinate.\n * @see {@link getPositions}\n *\n * @param  {Number} version QR Code version\n * @return {Array}          Array of coordinate\n */\nexports.getRowColCoords = function getRowColCoords (version) {\n  if (version === 1) return []\n\n  var posCount = Math.floor(version / 7) + 2\n  var size = getSymbolSize(version)\n  var intervals = size === 145 ? 26 : Math.ceil((size - 13) / (2 * posCount - 2)) * 2\n  var positions = [size - 7] // Last coord is always (size - 7)\n\n  for (var i = 1; i < posCount - 1; i++) {\n    positions[i] = positions[i - 1] - intervals\n  }\n\n  positions.push(6) // First coord is always 6\n\n  return positions.reverse()\n}\n\n/**\n * Returns an array containing the positions of each alignment pattern.\n * Each array's element represent the center point of the pattern as (x, y) coordinates\n *\n * Coordinates are calculated expanding the row/column coordinates returned by {@link getRowColCoords}\n * and filtering out the items that overlaps with finder pattern\n *\n * @example\n * For a Version 7 symbol {@link getRowColCoords} returns values 6, 22 and 38.\n * The alignment patterns, therefore, are to be centered on (row, column)\n * positions (6,22), (22,6), (22,22), (22,38), (38,22), (38,38).\n * Note that the coordinates (6,6), (6,38), (38,6) are occupied by finder patterns\n * and are not therefore used for alignment patterns.\n *\n * var pos = getPositions(7)\n * // [[6,22], [22,6], [22,22], [22,38], [38,22], [38,38]]\n *\n * @param  {Number} version QR Code version\n * @return {Array}          Array of coordinates\n */\nexports.getPositions = function getPositions (version) {\n  var coords = []\n  var pos = exports.getRowColCoords(version)\n  var posLength = pos.length\n\n  for (var i = 0; i < posLength; i++) {\n    for (var j = 0; j < posLength; j++) {\n      // Skip if position is occupied by finder patterns\n      if ((i === 0 && j === 0) ||             // top-left\n          (i === 0 && j === posLength - 1) || // bottom-left\n          (i === posLength - 1 && j === 0)) { // top-right\n        continue\n      }\n\n      coords.push([pos[i], pos[j]])\n    }\n  }\n\n  return coords\n}\n","\nimport { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n// tslint:disable-next-line:max-line-length\n// import { CountryOfTransfer, DataProtectionOfficer, DataPurposes, DataSource, DataSubCategory, FileUpload, NatureOfBusinessSubCat, SecurityMeasure, ThirdParty } from 'src/app/services/api.model';\nimport * as html2pdf from 'html2pdf.js';\n\n\n\ninterface Data {\n  download: boolean;\n  row: FormData;\n  Attachment: any;\n  Form3: any;\n  ProofOfPayment: any;\n  OrganizationType: string;\n  Sector: string;\n  NatureOfBusinessCat: string;\n  CountryOfIncorporation: string;\n}\n\ninterface FormData {\n  OrganisationName: string;\n  OrganisationCategory: string;\n  OrganizationTypeID: string;\n  CountryOfIncorporation: string;\n  URSBNumber: string;\n  SectorID: string;\n  OtherSector: string;\n  Location: string;\n  PhoneNumber: string;\n  EmailAddress: string;\n  NatureOfBusinessCatID: number;\n  NatureOfBusiness: any [];\n  DPORequired: string;\n  DPOName: string;\n  DPOPhysicalAddress: string;\n  DPOPhoneNumber: string;\n  DPOEmailAddress: string;\n  DPOPositionInOrganisation: string;\n  SourceOfDataID: any [];\n  PersonalDataCollected: any [];\n  Purpose: any [];\n  SpecifyTheLaw: string;\n  ServiceOrProductProvided: string;\n  SpecifyLegalObligation: string;\n  TotalRecordsAtRegistration: number;\n  RecordPercentageGrowth: number;\n  RetentionPeriod: number;\n  PersonalDataIsForDisclosure: string;\n  ThirdParties: any [];\n  StoreDataOutsideCountry: string;\n  Countries: any [];\n  SecurityMeasures: any [];\n  Attachment: string;\n  Form3Attachment: string;\n  RegistrationConsent: string;\n  RegistrationDoneBy: string;\n  ProofOfPayment: string;\n}\n\n@Component({\n  selector: 'fury-test-preview',\n  templateUrl: './test-preview.component.html',\n  styleUrls: ['./test-preview.component.scss']\n})\n\nexport class TestPreviewComponent implements OnInit {\n\n  downloading = false;\n\n  constructor(\n      private dialogRef: MatDialogRef<TestPreviewComponent>,\n      @Inject(MAT_DIALOG_DATA) public data: Data,\n      // private service: ApiService,\n  ) { }\n\n  ngOnInit(): void {\n\n    console.log('data:', this.data);\n\n    if (this.data.download) {\n      this.onDownloadLetter();\n    }\n\n  }\n\n  onCloseWindow(): void {\n    this.dialogRef.close();\n  }\n\n  onDownloadLetter(): void {\n    this.downloading = true;\n\n    setTimeout(() => {\n      // this.service.openSnackBar('Downloading. Please wait.', 'nuetral');\n\n      const options = {\n        filename: 'Registration.pdf',\n        image: { type: 'jpeg', quality: 1.00 },\n        html2canvas: {\n          scale: 2,\n          backgroundColor: null,\n        },\n        jspdf: {\n          unit: 'in',\n          format: 'letter',\n          orientation: 'landscape '\n        },\n        margin: 1,\n      };\n\n      const content: Element = document.getElementById('letterBodyContainer');\n\n      html2pdf()\n          .from(content)\n          .set(options)\n          .save()\n          .then((onFulfilled) => {\n\n            setTimeout(() => {\n              this.downloading = false;\n\n              if (this.data.download) {\n                this.onCloseWindow();\n              }\n\n              // this.service.openSnackBar('Downloaded. Please check in your downloads.', 'success-lg');\n            }, 1000);\n\n          });\n    }, 1000);\n  }\n}\n\n","<main>\n    <button mat-button class=\"close-window-btn\" (click)=\"onCloseWindow()\">\n        <mat-icon>clear</mat-icon>\n    </button>\n\n    <article\n            style=\"width: 100%; margin: 0px 0px 30px; position: relative;\"\n            id=\"letterBodyContainer\">\n\n        <button\n                *ngIf=\"!downloading\"\n                mat-button\n                color=\"primary\"\n                [disabled]=\"downloading\"\n                class=\"download-button\"\n                (click)=\"onDownloadLetter()\">\n            <div class=\"button-label\">\n                <mat-icon>cloud_download</mat-icon>\n                <span>Download </span>\n            </div>\n        </button>\n\n        <div class=\"image-wrapper\" [ngStyle]=\"{'margin': downloading ? '10px auto 40px' : '30px auto 40px', 'width': '200px', 'overflow': 'hidden'}\">\n            <img src=\"./assets/icons/Final-logos-28.png\" style=\"width: 100%; \" alt=\"\">\n        </div>\n\n        <section class=\"letter-body\" style=\"padding: 0px 40px 45px;\">\n            <div style=\"position:absolute;left:0px;top:0px\">\n                <img src=\"./assets/img/background1.jpg\" style=\"width:841px; height:595px\" alt=\"\">\n            </div>\n            <div style=\"position:absolute;left:113.50px;top:59.40px\" class=\"cls_003\"><span class=\"cls_003\">Regulation 19(2)</span></div>\n            <div style=\"position:absolute;left:113.50px;top:75.00px\" class=\"cls_003\"><span class=\"cls_003\">FORM 4</span></div>\n            <div style=\"position:absolute;left:269.94px;top:167.49px\" class=\"cls_002\"><span class=\"cls_002\">CERTIFICATE OF REGISTRATION</span></div>\n            <div style=\"position:absolute;left:352.45px;top:218.12px\" class=\"cls_004\"><span class=\"cls_004\">I CERTIFY THAT</span></div>\n            <div style=\"position:absolute;left:119.76px;top:256.17px\" class=\"cls_004\"><span class=\"cls_004\">………………………………………</span> <b> </b></div>\n            <div style=\"position:absolute;left:475.80px;top:256.17px\" class=\"cls_004\"><span class=\"cls_004\">……………………………………………...</span></div>\n            <div style=\"position:absolute;left:315.83px;top:294.21px\" class=\"cls_004\"><span class=\"cls_004\">has this day been registered as</span></div>\n            <div style=\"position:absolute;left:233.56px;top:313.22px\" class=\"cls_005\"><span class=\"cls_005\">a data collector/data processor/data controller </span><span class=\"cls_004\">under</span></div>\n            <div style=\"position:absolute;left:212.22px;top:332.24px\" class=\"cls_004\"><span class=\"cls_004\">the Data Protection and Privacy Act, 2019 under the following</span></div>\n            <div style=\"position:absolute;left:149.82px;top:370.28px\" class=\"cls_004\"><span class=\"cls_004\">registration number…………………………………<b></b>………………………………</span></div>\n            <div style=\"position:absolute;left:204.77px;top:389.29px\" class=\"cls_004\"><span class=\"cls_004\">This certificate is valid for twelve months from the date of issue.</span></div>\n            <div style=\"position:absolute;left:166.46px;top:427.33px\" class=\"cls_004\"><span class=\"cls_004\">Dated this………<b></b>………day of…………<b></b>……………the year…………<b></b>…………</span></div>\n            <div style=\"position:absolute;left:268.90px;top:478.98px\" class=\"cls_004\"><span class=\"cls_004\">……………………………………………………</span></div>\n            <div style=\"position:absolute;left:270.92px;top:502.54px\" class=\"cls_005\"><span class=\"cls_005\">National Personal Data Protection Director</span></div>\n            <div style=\"position:absolute;left:177.83px;top:557.48px\" class=\"cls_006\"><span class=\"cls_006\">This certificate shall remain in force unless revoked by the Personal Data Protection Office</span></div>\n\n        </section>\n\n    </article>\n</main>\n","var Mode = require('./mode')\n\nfunction NumericData (data) {\n  this.mode = Mode.NUMERIC\n  this.data = data.toString()\n}\n\nNumericData.getBitsLength = function getBitsLength (length) {\n  return 10 * Math.floor(length / 3) + ((length % 3) ? ((length % 3) * 3 + 1) : 0)\n}\n\nNumericData.prototype.getLength = function getLength () {\n  return this.data.length\n}\n\nNumericData.prototype.getBitsLength = function getBitsLength () {\n  return NumericData.getBitsLength(this.data.length)\n}\n\nNumericData.prototype.write = function write (bitBuffer) {\n  var i, group, value\n\n  // The input data string is divided into groups of three digits,\n  // and each group is converted to its 10-bit binary equivalent.\n  for (i = 0; i + 3 <= this.data.length; i += 3) {\n    group = this.data.substr(i, 3)\n    value = parseInt(group, 10)\n\n    bitBuffer.put(value, 10)\n  }\n\n  // If the number of input digits is not an exact multiple of three,\n  // the final one or two digits are converted to 4 or 7 bits respectively.\n  var remainingNum = this.data.length - i\n  if (remainingNum > 0) {\n    group = this.data.substr(i)\n    value = parseInt(group, 10)\n\n    bitBuffer.put(value, remainingNum * 3 + 1)\n  }\n}\n\nmodule.exports = NumericData\n","import {NgModule} from '@angular/core';\nimport {CommonModule, DatePipe} from '@angular/common';\n\nimport {CompanyRegistrationRoutingModule} from './company-registration-routing.module';\nimport {FindCompanyRegistrationComponent} from './components/find-company-registration/find-company-registration.component';\nimport {EditCompanyRegistrationComponent} from './components/edit-company-registration/edit-company-registration.component';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {MaterialModule} from '../../../@fury/shared/material-components.module';\nimport {FurySharedModule} from '../../../@fury/fury-shared.module';\nimport {ListModule} from '../../../@fury/shared/list/list.module';\nimport {CustomerCreateUpdateModule} from '../../pages/tables/all-in-one-table/customer-create-update/customer-create-update.module';\nimport {BreadcrumbsModule} from '../../../@fury/shared/breadcrumbs/breadcrumbs.module';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {ReportingAndNotificationRoutingModule} from '../reporting-and-notification/reporting-and-notification-routing.module';\nimport {FormElementsRoutingModule} from '../../pages/forms/form-elements/form-elements-routing.module';\nimport {FormWizardRoutingModule} from '../../pages/forms/form-wizard/form-wizard-routing.module';\nimport {HighlightModule} from '../../../@fury/shared/highlightjs/highlight.module';\nimport {FuryCardModule} from '../../../@fury/shared/card/card.module';\nimport { SecurityMeasuresComponent } from './components/security-measures/security-measures.component';\nimport { ThirdPartiesComponent } from './components/third-parties/third-parties.component';\nimport { DataProtectionOfficersComponent } from './components/data-protection-officers/data-protection-officers.component';\nimport {ReviewCommentsModule} from '../../layout/review-comments/review-comments.module';\nimport { CompanyCertComponent } from './components/company-cert/company-cert.component';\nimport { CertPreviewComponent } from './components/cert-preview/cert-preview.component';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {ApplicationTimelineModule} from '../../layout/application-timeline/application-timeline.module';\nimport {MglTimelineModule} from 'angular-mgl-timeline';\nimport { CountriesComponent } from './components/countries/countries.component';\nimport { TestPreviewComponent } from './components/test-preview/test-preview.component';\nimport { RegisterOrganisationComponent } from './components/register-organisation/register-organisation.component';\nimport { SharedModule } from '../../../@fury/shared/shared-module.module';\nimport { UpdateRegistrationComponent } from './components/update-registration/update-registration.component';\nimport { RenewalsComponent } from './components/cert-renewals/renewals/renewals.component';\nimport { UpdateInformationComponent } from './components/update/update-information/update-information.component';\nimport { ManageRegistrationUpdateComponent } from './components/manage-registration-update/manage-registration-update.component';\nimport { UraPaymentsComponent } from './components/ura-payments/ura-payments.component';\nimport { QRCodeModule } from 'angularx-qrcode';\n\nimport {MatTableModule} from '@angular/material/table';\nimport {Component} from '@angular/core';\nimport { ManageUraPaymentComponent } from './components/manage-ura-payment/manage-ura-payment.component';\nimport { CancelRegistrationComponent } from './components/cancel-registration/cancel-registration.component';\nimport { ViewCancelRegistrationComponent } from './components/view-cancel-registration/view-cancel-registration.component';\nimport { CompanyRegistrationDetailComponent } from './components/company-registration-detail/company-registration-detail.component';\n\n@NgModule({\n    declarations: [\n        FindCompanyRegistrationComponent,\n        EditCompanyRegistrationComponent,\n        SecurityMeasuresComponent,\n        ThirdPartiesComponent,\n        DataProtectionOfficersComponent,\n        CompanyCertComponent,\n        CertPreviewComponent,\n        CountriesComponent,\n        TestPreviewComponent,\n        RegisterOrganisationComponent,\n        UpdateRegistrationComponent,\n        RenewalsComponent,\n        UpdateInformationComponent,\n        ManageRegistrationUpdateComponent,\n        UraPaymentsComponent,\n        ManageUraPaymentComponent,\n        CancelRegistrationComponent,\n        ViewCancelRegistrationComponent,\n        CompanyRegistrationDetailComponent\n    ],\n    imports: [\n        CommonModule,\n        CompanyRegistrationRoutingModule,\n        FormsModule,\n        MaterialModule,\n        SharedModule,\n        FormElementsRoutingModule,\n        ReactiveFormsModule,\n        FurySharedModule,\n        FormWizardRoutingModule,\n        ReviewCommentsModule,\n        ApplicationTimelineModule,\n        // MatTabsModule,\n        // Core\n        ListModule,\n        HighlightModule,\n        FuryCardModule,\n        CustomerCreateUpdateModule,\n        BreadcrumbsModule,\n        QRCodeModule\n    ],\n    providers:[\n        DatePipe\n    ]\n})\nexport class CompanyRegistrationModule {\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","var Buffer = require('../utils/buffer')\nvar Mode = require('./mode')\n\nfunction ByteData (data) {\n  this.mode = Mode.BYTE\n  this.data = new Buffer(data)\n}\n\nByteData.getBitsLength = function getBitsLength (length) {\n  return length * 8\n}\n\nByteData.prototype.getLength = function getLength () {\n  return this.data.length\n}\n\nByteData.prototype.getBitsLength = function getBitsLength () {\n  return ByteData.getBitsLength(this.data.length)\n}\n\nByteData.prototype.write = function (bitBuffer) {\n  for (var i = 0, l = this.data.length; i < l; i++) {\n    bitBuffer.put(this.data[i], 8)\n  }\n}\n\nmodule.exports = ByteData\n","var numeric = '[0-9]+'\nvar alphanumeric = '[A-Z $%*+\\\\-./:]+'\nvar kanji = '(?:[u3000-u303F]|[u3040-u309F]|[u30A0-u30FF]|' +\n  '[uFF00-uFFEF]|[u4E00-u9FAF]|[u2605-u2606]|[u2190-u2195]|u203B|' +\n  '[u2010u2015u2018u2019u2025u2026u201Cu201Du2225u2260]|' +\n  '[u0391-u0451]|[u00A7u00A8u00B1u00B4u00D7u00F7])+'\nkanji = kanji.replace(/u/g, '\\\\u')\n\nvar byte = '(?:(?![A-Z0-9 $%*+\\\\-./:]|' + kanji + ')(?:.|[\\r\\n]))+'\n\nexports.KANJI = new RegExp(kanji, 'g')\nexports.BYTE_KANJI = new RegExp('[^A-Z0-9 $%*+\\\\-./:]+', 'g')\nexports.BYTE = new RegExp(byte, 'g')\nexports.NUMERIC = new RegExp(numeric, 'g')\nexports.ALPHANUMERIC = new RegExp(alphanumeric, 'g')\n\nvar TEST_KANJI = new RegExp('^' + kanji + '$')\nvar TEST_NUMERIC = new RegExp('^' + numeric + '$')\nvar TEST_ALPHANUMERIC = new RegExp('^[A-Z0-9 $%*+\\\\-./:]+$')\n\nexports.testKanji = function testKanji (str) {\n  return TEST_KANJI.test(str)\n}\n\nexports.testNumeric = function testNumeric (str) {\n  return TEST_NUMERIC.test(str)\n}\n\nexports.testAlphanumeric = function testAlphanumeric (str) {\n  return TEST_ALPHANUMERIC.test(str)\n}\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {SecurityMeasuresModel} from '../company-registration.model';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {Subscription} from 'rxjs';\nimport {DataServiceError} from '../../../../../@fury/shared/HttpModel';\nimport {KeycloakService} from 'keycloak-angular';\nimport {UtilService} from '../../../../../@fury/services/util.service';\nimport {SnackBarService} from '../../../../pages/services/snack-bar.service';\n\n@Component({\n  selector: 'fury-security-measures',\n  templateUrl: './security-measures.component.html',\n  styleUrls: ['./security-measures.component.scss']\n})\nexport class SecurityMeasuresComponent implements OnInit {\n\n  @Input() securityMeasures: SecurityMeasuresModel[];\n  @Input() isViewOnly: boolean;\n  @Output() securityEvent = new EventEmitter<SecurityMeasuresModel[]>();\n\n  securityMeasure : SecurityMeasuresModel = new SecurityMeasuresModel();\n\n  securityFormGroup: FormGroup;\n\n  subscriptions: Subscription[] = [];\n\n  // arrays\n  errors: string[] = [];\n  list = [];\n  displayColumns: string [] = ['nber', 'security_measure', 'actions'];\n  $securityMeasure: Subscription [] = [];\n\n  // events\n  $processingEvent: EventEmitter<boolean> = new EventEmitter();\n  $errorsEvent: EventEmitter<DataServiceError[]> = new EventEmitter();\n  // Button Config\n  buttonIcon = 'add_circle_outline';\n  buttonLabel = 'Add';\n  // boolean\n  isEditingSecurityMeasure = false;\n  tableEditable = true;\n  // int\n  securityMeasureIndex = 0;\n  securityMeasureNumber = 1;\n\n  constructor(\n      private fb: FormBuilder,\n      private auth: KeycloakService,\n      private utilService: UtilService,\n      public snackBar: SnackBarService\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.initForms();\n    if (this.securityMeasures) {\n      this.securityMeasures.forEach(securityMeasure => this.list.push(securityMeasure));\n    }\n    this.initMainObject();\n  }\n\n  private initMainObject() {\n    this.securityMeasure = new SecurityMeasuresModel();\n  }\n\n  private initForms(): void {\n    this.securityFormGroup = this.fb.group(\n        {\n          security_measure: [null, Validators.required],\n        }\n    );\n  }\n\n  addOrUpdateSecurityMeasure(option: number): void {\n\n    if (this.securityFormGroup.valid) {\n      this.mapFormControlToControl(1);\n      if (option === 1) {\n        this.list.push(this.securityMeasure);\n        this.securityMeasures.push(this.securityMeasure);\n        this.list = [...this.list];\n      } else {\n        this.list[this.securityMeasureIndex] = this.securityMeasure;\n        this.securityMeasures[this.securityMeasureIndex] = this.securityMeasure;\n        this.list = [...this.securityMeasures];\n      }\n      this.securityEvent.emit(this.securityMeasures);\n      this.resetControl();\n    }\n  }\n\n  resetControl() {\n    this.securityFormGroup.reset();\n    this.securityMeasure = new SecurityMeasuresModel();\n    this.validateSecurityMeasureLabels(1);\n    this.manageControl(1);\n  }\n  validateSecurityMeasureLabels(option: number) {\n    if (option === 1) {\n      this.buttonIcon = 'add_circle_outline';\n      this.buttonLabel = 'Add new Security Measure';\n    } else {\n      this.buttonIcon = 'save';\n      this.buttonLabel = 'Save';\n    }\n  }\n\n  manageControl(option: number, id ?: number) {\n    if (option === 2) {\n      this.securityMeasure = this.securityMeasures[id];\n      this.isEditingSecurityMeasure = true;\n      this.securityMeasureIndex = id;\n      this.mapFormControlToControl(option);\n    } else {\n      this.isEditingSecurityMeasure = false;\n      this.securityMeasure = new SecurityMeasuresModel();\n      this.securityMeasureIndex = 0;\n    }\n    this.validateSecurityMeasureLabels(option);\n  }\n\n\n  private mapFormControlToControl(option: number) {\n    if (option === 1) {\n      this.securityMeasure.Name = this.securityFormGroup.get('fileName').value;\n    } else {\n      this.securityFormGroup.get('fileName').setValue(this.securityMeasures);\n    }\n  }\n\n  deleteItem(index: number) {\n    this.list.splice(index, 1);\n    this.securityMeasures.splice(index, 1);\n    this.list = [...this.list];\n    // Send items to parent\n    this.securityEvent.emit(this.securityMeasures);\n    this.isEditingSecurityMeasure = false;\n  }\n\n  isValidForm() {\n    return this.securityFormGroup.valid;\n  }\n\n}\n","<ng-container>\n\n    <fieldset>\n        <legend>Security Measures</legend>\n        <ng-container  *ngIf=\"!isViewOnly\">\n            <form [formGroup]=\"securityFormGroup\">\n                <ng-template matStepLabel>Security Measures</ng-template>\n\n                <div class=\"content\" fxLayout=\"column\" fxLayoutGap=\"8px\">\n                    <div fxLayout=\"column\" fxLayout.gt-xs=\"row\" fxLayoutGap=\"8px\" fxLayoutGap.gt-xs=\"24px\">\n\n                        <mat-form-field fxFlex=\"auto\">\n                            <mat-label>Security Measure</mat-label>\n                            <input formControlName=\"security_measure\" matInput>\n                            <mat-hint></mat-hint>\n                        </mat-form-field>\n\n                    </div>\n                </div>\n            </form>\n            <div style=\"text-align: right; padding-top: 5px; padding-bottom: 5px;\">\n                <button mat-raised-button\n                        (click)=\"addOrUpdateSecurityMeasure(isEditingSecurityMeasure?2:1)\" color=\"primary\"\n                        [disabled]=\"!isValidForm()\">\n                    <mat-icon>{{buttonIcon}}</mat-icon>\n                    <span>{{buttonLabel}}</span>\n                </button>&nbsp;\n                <span class=\"example-spacer\"></span>\n                <button mat-raised-button (click)=\"resetControl()\" color=\"warn\">\n                    <mat-icon>cancel</mat-icon>\n                    <span>Cancel</span>\n                </button>\n            </div>\n        </ng-container>\n\n        <div class=\"content\" fxLayout=\"column\" fxLayoutGap=\"8px\">\n            <table mat-table [dataSource]=\"list\">\n                <ng-container matColumnDef=\"nber\">\n                    <th mat-header-cell *matHeaderCellDef style=\"width: 5%\"\n                        class=\"tableFontSize firstColumnTable alignCenter\">#\n                    </th>\n                    <td mat-cell *matCellDef=\"let element; let j=index;\"\n                        class=\"tableFontSize firstColumnTable alignCenter\">\n                        {{j + 1}}\n                    </td>\n                </ng-container>\n                <ng-container matColumnDef=\"security_measure\">\n                    <th mat-header-cell *matHeaderCellDef class=\"tableFontSize \" style=\"width: 20%\">Security Measure</th>\n                    <td mat-cell *matCellDef=\"let element\" class=\"tableFontSize \"> {{element.Name}}</td>\n                </ng-container>\n\n<!--                <ng-container matColumnDef=\"size\">-->\n<!--                    <th mat-header-cell *matHeaderCellDef class=\"tableFontSize \" style=\"width: 20%\">Size</th>-->\n<!--                    <td mat-cell *matCellDef=\"let element\" class=\"tableFontSize \"> {{element.FileSize}}</td>-->\n<!--                </ng-container>-->\n\n<!--                <ng-container matColumnDef=\"link\">-->\n<!--                    <th mat-header-cell *matHeaderCellDef class=\"tableFontSize \" style=\"width: 20%\">Download Link</th>-->\n<!--                    <td mat-cell *matCellDef=\"let element\" class=\"tableFontSize \"> {{element.Link}}</td>-->\n<!--                </ng-container>-->\n\n                <ng-container matColumnDef=\"actions\">\n                    <th mat-header-cell *matHeaderCellDef style=\"width: 5%\">Actions</th>\n                    <td mat-cell *matCellDef=\"let element; let j=index\" class=\"actions\">\n                        <ng-container>\n                            <a class=\"link\" (click)=\"manageControl(2,j)\">\n                                <mat-icon color=\"primary\" class=\"material-icons-outlined\" matTooltip=\"Edit item\">edit\n                                </mat-icon>\n                            </a>&nbsp;&nbsp;\n                            <a class=\"link\" (click)=\"deleteItem(j)\">\n                                <mat-icon color=\"warn\" class=\"material-icons-outlined\" matTooltip=\"Delete item\">delete\n                                </mat-icon>\n                            </a>\n                        </ng-container>\n                    </td>\n                </ng-container>\n                <ng-container matColumnDef=\"noData\">\n                    <td mat-footer-cell *matFooterCellDef colspan=\"7\">\n                        There is no data!\n                    </td>\n                </ng-container>\n                <tr mat-header-row *matHeaderRowDef=\"displayColumns;sticky:true\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: displayColumns;\"></tr>\n                <tr mat-footer-row *matFooterRowDef=\"['noData']\" [ngClass]=\"{'hide':!(list?.length==0)}\"></tr>\n            </table>\n        </div>\n\n    </fieldset>\n</ng-container>\n\n\n<!-- LIST OF ITEMS -->\n\n","import {AfterViewInit, Component, EventEmitter, Input, OnChanges, OnInit, Output, ViewChild} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {Subscription} from 'rxjs';\nimport {ThirdParties} from '../company-registration.model';\nimport {DataServiceError} from '../../../../../@fury/shared/HttpModel';\nimport {KeycloakService} from 'keycloak-angular';\nimport {UtilService} from '../../../../../@fury/services/util.service';\nimport {SnackBarService} from '../../../../pages/services/snack-bar.service';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatTableDataSource} from '@angular/material/table';\n\n@Component({\n  selector: 'fury-third-parties',\n  templateUrl: './third-parties.component.html',\n  styleUrls: ['./third-parties.component.scss']\n})\nexport class ThirdPartiesComponent implements OnInit, AfterViewInit, OnChanges {\n\n  @Input() thirdParties: ThirdParties[];\n  @Input() isViewOnly: boolean;\n  @Input() disclosePersonalData: string;\n  @Output() thirdPartiesEvent: EventEmitter<ThirdParties[]> = new EventEmitter<ThirdParties[]>();\n\n  thirdParty: ThirdParties = new ThirdParties();\n\n  thirdPartyFormGroup: FormGroup;\n  disclosePersonalDataTrimmed = '';\n  subscriptions: Subscription[] = [];\n\n  // arrays\n  errors: string[] = [];\n  list: MatTableDataSource<ThirdParties>;\n  displayColumns: string [] = ['nber', 'ThirdPartyName', 'purposeOfDisclosure', 'actions'];\n  $impactOfBreaches: ThirdParties [] = [];\n\n  // events\n  $processingEvent: EventEmitter<boolean> = new EventEmitter();\n  $errorsEvent: EventEmitter<DataServiceError[]> = new EventEmitter();\n  // Button Config\n  buttonIcon = 'add_circle_outline';\n  buttonLabel = 'Add';\n  // boolean\n  isEditingThirdParty = false;\n  tableEditable = true;\n  // int\n  thirdPartiesIndex = 0;\n  thirdPartiesNumber = 1;\n  thirdPartiesList: any;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  constructor(\n      private fb: FormBuilder,\n      public snackBar: SnackBarService\n  ) {\n  }\n\n\n  ngOnInit(): void {\n    this.initForms();\n    this.initMainObject();\n  }\n\n  ngOnChanges(): void {\n    if (this.thirdParties) {\n      this.list = new MatTableDataSource<ThirdParties>(this.thirdParties);\n      this.list.paginator = this.paginator;\n    }\n  }\n\n  ngAfterViewInit() {\n  }\n\n  private initMainObject() {\n    this.thirdParty = new ThirdParties();\n  }\n\n  private initForms(): void {\n    this.thirdPartyFormGroup = this.fb.group(\n        {\n          // contactPerson: [null, Validators.required],\n          thirdPartyName: [null, Validators.required],\n          purposeOfDisclosure: [null, Validators.required],\n          // phoneNumber: [null, Validators.required],\n        }\n    );\n  }\n\n  addOrUpdateThirdParties(option: number): void {\n    if (this.thirdPartyFormGroup.valid) {\n      this.mapFormControlToControl(1);\n      if (option === 1) {\n        this.list.data.push(this.thirdParty);\n        this.thirdParties.push(this.thirdParty);\n        this.list.data = [...this.list.data];\n      } else {\n        this.list[this.thirdPartiesIndex] = this.thirdParty;\n        this.thirdParties[this.thirdPartiesIndex] = this.thirdParty;\n        this.list.data = [...this.thirdParties];\n      }\n      this.thirdPartiesEvent.emit(this.thirdParties);\n      this.resetControl();\n    }\n  }\n\n  resetControl() {\n    this.thirdPartyFormGroup.reset();\n    this.thirdParty = new ThirdParties();\n    this.validateThirdPartiesLabels(1);\n    this.manageControl(1);\n  }\n\n  validateThirdPartiesLabels(option: number) {\n    if (option === 1) {\n      this.buttonIcon = 'add_circle_outline';\n      this.buttonLabel = 'Add new thirdParty data';\n    } else {\n      this.buttonIcon = 'save';\n      this.buttonLabel = 'Save';\n    }\n  }\n\n  manageControl(option: number, id ?: number) {\n    if (option === 2) {\n      this.thirdParty = this.thirdParties[id];\n      this.isEditingThirdParty = true;\n      this.thirdPartiesIndex = id;\n      this.mapFormControlToControl(option);\n    } else {\n      this.isEditingThirdParty = false;\n      this.thirdParty = new ThirdParties();\n      this.thirdPartiesIndex = 0;\n    }\n    this.validateThirdPartiesLabels(option);\n  }\n\n\n  private mapFormControlToControl(option: number) {\n    if (option === 1) {\n      // this.thirdParty.ContactPerson = this.thirdPartyFormGroup.get('contactPerson').value;\n      this.thirdParty.ThirdPartyName = this.thirdPartyFormGroup.get('thirdPartyName').value;\n      this.thirdParty.EmailAddress = this.thirdPartyFormGroup.get('purposeOfDisclosure').value;\n      // this.thirdParty.PhoneNumber = this.thirdPartyFormGroup.get('phoneNumber').value;\n    } else {\n      this.thirdParty.ThirdPartyName = this.thirdPartyFormGroup.get('thirdPartyName').value;\n      this.thirdParty.EmailAddress = this.thirdPartyFormGroup.get('purposeOfDisclosure').value;\n      // this.thirdPartyFormGroup.get('contactPerson').setValue(this.thirdParty.ContactPerson);\n      // this.thirdPartyFormGroup.get('thirdPartyName').setValue(this.thirdParty.ThirdPartyName);\n      // this.thirdPartyFormGroup.get('emailAddress').setValue(this.thirdParty.EmailAddress);\n      // this.thirdPartyFormGroup.get('phoneNumber').setValue(this.thirdParty.PhoneNumber);\n    }\n  }\n\n  deleteItem(index: number) {\n    this.list.data.splice(index, 1);\n    this.thirdParties.splice(index, 1);\n    this.list.data = [...this.list.data];\n    // Send items to parent\n    this.thirdPartiesEvent.emit(this.thirdParties);\n    this.isEditingThirdParty = false;\n  }\n\n  isValidForm() {\n    return this.thirdPartyFormGroup.valid;\n  }\n\n\n}\n","<ng-container *ngIf=\"disclosePersonalData !== 'No'\">\n\n    <fieldset>\n        <legend>ThirdParties</legend>\n        <ng-container *ngIf=\"!isViewOnly\">\n            <form [formGroup]=\"thirdPartyFormGroup\">\n                <ng-template matStepLabel>ThirdParties</ng-template>\n\n                <div class=\"content\" fxLayout=\"column\" fxLayoutGap=\"8px\">\n                    <div fxLayout=\"column\" fxLayout.gt-xs=\"row\" fxLayoutGap=\"8px\" fxLayoutGap.gt-xs=\"24px\">\n                        <mat-form-field fxFlex=\"auto\">\n                            <mat-label>ThirdParty Name</mat-label>\n                            <input formControlName=\"thirdPartyName\" matInput>\n                            <mat-hint></mat-hint>\n                        </mat-form-field>\n\n                        <mat-form-field fxFlex=\"auto\">\n                            <mat-label>Email Address</mat-label>\n                            <input formControlName=\"purposeOfDisclosure\" matInput>\n                            <mat-hint></mat-hint>\n                        </mat-form-field>\n                    </div>\n                </div>\n            </form>\n            <div style=\"text-align: right; padding-top: 5px; padding-bottom: 5px;\">\n                <button mat-raised-button\n                        (click)=\"addOrUpdateThirdParties(isEditingThirdParty?2:1)\" color=\"primary\"\n                        [disabled]=\"!isValidForm()\">\n                    <mat-icon>{{buttonIcon}}</mat-icon>\n                    <span>{{buttonLabel}}</span>\n                </button>&nbsp;\n                <span class=\"example-spacer\"></span>\n                <button mat-raised-button (click)=\"resetControl()\" color=\"warn\">\n                    <mat-icon>cancel</mat-icon>\n                    <span>Cancel</span>\n                </button>\n            </div>\n        </ng-container>\n\n        <div class=\"table-responsive\" fxLayout=\"column\" fxLayoutGap=\"8px\">\n            <table mat-table [dataSource]=\"list\" >\n                <ng-container matColumnDef=\"nber\">\n                    <th mat-header-cell *matHeaderCellDef style=\"width: 5%\"\n                        class=\"tableFontSize firstColumnTable alignCenter\">#\n                    </th>\n                    <td mat-cell *matCellDef=\"let element; let j=index;\"\n                        class=\"tableFontSize firstColumnTable alignCenter\">\n                        {{j + 1}}\n                    </td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"ThirdPartyName\">\n                    <th mat-header-cell *matHeaderCellDef class=\"tableFontSize \" style=\"width: 20%\">Title</th>\n                    <td mat-cell *matCellDef=\"let element\"\n                        class=\"tableFontSize \"> {{element.ThirdPartyName}}</td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"purposeOfDisclosure\">\n                    <th mat-header-cell *matHeaderCellDef class=\"tableFontSize \" style=\"width: 20%\"> Purpose of\n                        Disclosure\n                    </th>\n                    <td mat-cell *matCellDef=\"let element\" class=\"tableFontSize \"> {{element.EmailAddress}}</td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"actions\">\n                    <th mat-header-cell *matHeaderCellDef style=\"width: 5%\">Actions</th>\n                    <td mat-cell *matCellDef=\"let element; let j=index\" class=\"actions\">\n                        <ng-container>\n                            <a class=\"link\" (click)=\"manageControl(2,j)\" *ngIf=\"!isViewOnly\">\n                                <mat-icon color=\"primary\" class=\"material-icons-outlined\" matTooltip=\"Edit item\">edit\n                                </mat-icon>\n                            </a>&nbsp;&nbsp;\n                            <a class=\"link\" (click)=\"deleteItem(j)\" *ngIf=\"!isViewOnly\">\n                                <mat-icon color=\"warn\" class=\"material-icons-outlined\" matTooltip=\"Delete item\">delete\n                                </mat-icon>\n                            </a>\n                        </ng-container>\n                    </td>\n                </ng-container>\n                <ng-container matColumnDef=\"noData\">\n                    <td mat-footer-cell *matFooterCellDef colspan=\"7\">\n                        There is no data!\n                    </td>\n                </ng-container>\n                <tr mat-header-row *matHeaderRowDef=\"displayColumns;sticky:true\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: displayColumns;\"></tr>\n                <tr mat-footer-row *matFooterRowDef=\"['noData']\" [ngClass]=\"{'hide':!(list?.data.length==0)}\"></tr>\n            </table>\n            <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\"\n                           showFirstLastButtons\n                           aria-label=\"Select page of periodic elements\">\n            </mat-paginator>\n        </div>\n    </fieldset>\n\n</ng-container>\n\n\n<!-- LIST OF ITEMS -->\n\n","import {HttpClient} from '@angular/common/http';\nimport {AfterContentInit, ChangeDetectorRef, Component, OnDestroy, OnInit, ViewChild} from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {MatDialog} from '@angular/material/dialog';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {forkJoin, Observable, Subscription} from 'rxjs';\n// tslint:disable-next-line:max-line-length\nimport {\n  ApiPayload,\n  Country,\n  CountryOfTransfer,\n  DataCategory,\n  DataProtectionOfficer,\n  DataPurposes,\n  DataSource,\n  DataSubCategory,\n  FileUpload,\n  MainActivity,\n  NatureOfBusinessCat,\n  NatureOfBusinessSubCat,\n  OrganisationCategory,\n  OrganisationType,\n  Sector,\n  SecurityMeasure,\n  ThirdParty\n} from '../../../../../services/api.model';\nimport {catchError} from 'rxjs/operators';\nimport {MatCheckboxChange} from '@angular/material/checkbox';\nimport {ApiEndpointsService} from '../../../../../services/api-endpoints.service';\nimport {ApiService} from '../../../../../services/api.service';\nimport {OrgNoticeComponent} from '../../../../../layout/dialogs/org-registration/org-notice/org-notice.component';\nimport {OrgMainActivityComponent} from '../../../../../layout/dialogs/org-registration/org-main-activity/org-main-activity.component';\nimport {\n  OrgDataProtectionOfficerComponent\n} from '../../../../../layout/dialogs/org-registration/org-data-protection-officer/org-data-protection-officer.component';\nimport {\n  OrgSecurityMeasuresComponent\n} from '../../../../../layout/dialogs/org-registration/org-security-measures/org-security-measures.component';\nimport {OrgThirdPartyComponent} from '../../../../../layout/dialogs/org-registration/org-third-party/org-third-party.component';\nimport {OrgCountryComponent} from '../../../../../layout/dialogs/org-registration/org-country/org-country.component';\nimport {OrgUploadComponent} from '../../../../../layout/dialogs/org-upload/org-upload.component';\nimport {OrgForm3DialogComponent} from '../../../../../layout/dialogs/org-registration/org-form3-dialog/org-form3-dialog.component';\nimport {\n  OrgRegistrationPreviewDialogComponent\n} from '../../../../../layout/dialogs/org-registration/org-registration-preview-dialog/org-registration-preview-dialog.component';\nimport {SuccessfulMessageDialogComponent} from '../../../../../layout/dialogs/successful-message-dialog/successful-message-dialog.component';\nimport {BaseFuryForm} from '../../../../../../@fury/shared/base-fury-form';\nimport {KeycloakService} from 'keycloak-angular';\nimport {WorkflowServiceService} from '../../../../../services/workflow-service.service';\nimport {CompanyRegistrationService} from '../../../company-registration.service';\nimport {AuthenticationService} from '../../../../../authentication/authentication.service';\nimport {fadeInRightAnimation} from '../../../../../../@fury/animations/fade-in-right.animation';\nimport {fadeInUpAnimation} from '../../../../../../@fury/animations/fade-in-up.animation';\nimport { ViewPdfDocumentBottomsheetComponent } from '../../../../../layout/bottomsheets/view-pdf-document-bottomsheet/view-pdf-document-bottomsheet.component';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { NatureOfBusiness, NewCompanyRegistrationModel } from '../../company-registration.model';\nimport { Router } from '@angular/router';\nimport { KeycloakProfile } from 'keycloak-js';\nimport { environment } from '../../../../../../environments/environment';\nimport { ComplaintService } from '../../../../complaints/complaints.service';\n\n\n@Component({\n  selector: 'fury-update-information',\n  templateUrl: './update-information.component.html',\n  styleUrls: ['./update-information.component.scss']\n})\nexport class UpdateInformationComponent extends BaseFuryForm implements OnInit, OnDestroy {\n\n  dialogRef;\n    bottomsheetRef;\n    processing = false;\n    formGeneralInformation: FormGroup;\n    formOrganisationDetails: FormGroup;\n    formPersonalDataHeld: FormGroup;\n    formPurposeRetention: FormGroup;\n    formSecurityMeasures: FormGroup;\n    formThirdParties: FormGroup;\n    formChildrenData: FormGroup;\n    // selectedIndex = 5;\n    selectedIndex = 0;\n    isLinear = true;\n    // isLinear = false;\n    today = new Date();\n    sectors: Sector[];\n    countries: Country[];\n    selected = false;\n    OrganisationID:number;\n    DPOSelected = false;\n    natureOfbusinesses: any;\n    natureOfbusinesses_arr: any = [];\n    organisationCategories: OrganisationCategory[] = [];\n    selectedOrganisationCategories: OrganisationCategory[] = [];\n    organisationTypes: OrganisationType[];\n    dataSources: DataSource[];\n    selectedDataSources: DataSource[] = [];\n    httpSub: Subscription;\n    MainActivitiesDisplayedColumns: string[] = ['Count', 'MainActivity', 'Actions'];\n    dpoDisplayedColumns: string[] = ['Count', 'Name', 'Telephone', 'Email', 'PhysicalAddress', 'Actions'];\n    securityMeasuresDisplayedColumns: string[] = ['Count', 'SecurityMeasure', 'Actions'];\n    thirdPartyDisplayedColumns: string[] = ['Count', 'NameOfThirdParty', 'Purpose', 'Actions'];\n    countryDisplayedColumns: string[] = ['Count', 'Country', 'Purpose', 'Description', 'Actions'];\n    mainActivities: MainActivity[] = [];\n    mainActivitiesDataSource: MatTableDataSource<MainActivity>;\n    dataProtectionOfficers: DataProtectionOfficer[] = [];\n    dpoDataSource: MatTableDataSource<DataProtectionOfficer>;\n    securityMeasures: SecurityMeasure[] = [];\n    securityMeasureDataSource: MatTableDataSource<SecurityMeasure>;\n    thirdParties: ThirdParty[] = [];\n    thirdPartyDataSource: MatTableDataSource<ThirdParty>;\n    countriesOfTransfer: CountryOfTransfer[] = [];\n    countriesDataSource: MatTableDataSource<CountryOfTransfer>;\n    selectedDataCategory: DataCategory[] = [];\n    selectedDataSubCategory: DataSubCategory[] = [];\n    dataCategories: DataCategory[];\n    dataPurposes: DataPurposes[];\n    selectedDataPurposes: DataPurposes[] = [];\n    natureOfBusinessCat: NatureOfBusinessCat[] = [];\n    natureOfBusinessSubCat: NatureOfBusinessSubCat[] = [];\n    selectedNatureOfBusinessSubCat: NatureOfBusinessSubCat[] = [];\n    SpecifyTheLaw = false;\n    ServiceOrProductProvided = false;\n    SpecifyLegalObligation = false;\n    document: FileUpload | null;\n    documentForm3: FileUpload | null;\n    proofOfPayment: FileUpload | null;\n    OrganizationType = null;\n    SectorName = null;\n    NatureOfBusinessCat = null;\n    CountryOfIncorporation = null;\n    application: NewCompanyRegistrationModel = new NewCompanyRegistrationModel();\n    public userProfile: KeycloakProfile | null = null;\n    regTrackingNo: any;\n  \n    dataCategory = new FormControl();\n  \n    @ViewChild('MainActivityPaginator', { static: false }) MainActivityPaginator: MatPaginator;\n    @ViewChild('MainActivityMatSort', { static: false }) MainActivityMatSort: MatSort;\n    @ViewChild('dpoPaginator', { static: false }) dpoPaginator: MatPaginator;\n    @ViewChild('dpoMatSort', { static: false }) dpoMatSort: MatSort;\n    @ViewChild('securityMeasurePaginator', { static: false }) securityMeasurePaginator: MatPaginator;\n    @ViewChild('securityMeasureMatSort', { static: false }) securityMeasureMatSort: MatSort;\n    @ViewChild('thirdPartyPaginator', { static: false }) thirdPartyPaginator: MatPaginator;\n    @ViewChild('thirdPartyMatSort', { static: false }) thirdPartyMatSort: MatSort;\n    @ViewChild('countryOfTransferPaginator', { static: false }) countryOfTransferPaginator: MatPaginator;\n    @ViewChild('countryOfTransferMatSort', { static: false }) countryOfTransferMatSort: MatSort;\n\n\n  constructor(\n\n    private formBuilder: FormBuilder,\n    private service: ApiService,\n    private endpoints: ApiEndpointsService,\n    private dialog: MatDialog,\n    private bottomsheet: MatBottomSheet,\n    public authService: KeycloakService,\n    public _auth: AuthenticationService,\n    public _workflowService: WorkflowServiceService,\n    private http: HttpClient,\n    private changeDetector: ChangeDetectorRef,\n    public registrationService: CompanyRegistrationService,\n    public complaintService:ComplaintService,\n    private route: Router,\n\n  ) {\n\n    super(\n      authService,\n      _workflowService,\n      registrationService,\n      complaintService\n    );\n\n    // this.regTrackingNo = this.route.getCurrentNavigation().extras.state.regTrackingNo;\n\n    this.service.updatePageTitle(['Organisations', 'New Registration']);\n\n   }\n\n  ngOnInit(): void {\n\n    this.formGeneralInformation = this.formBuilder.group({\n      OrganizationName: [{value: this._auth.getOrganisationName()}],\n      DPPActCategory: new FormControl('', [Validators.required]),\n      OrganizationTypeID: new FormControl('', [Validators.required]),\n      CountryOfIncorporation: new FormControl('', [Validators.required]),\n      URSBNumber: new FormControl(''),\n      SectorID: new FormControl('', [Validators.required]),\n      OtherSector: new FormControl('', [Validators.maxLength(50)]),\n      Location: new FormControl('', [Validators.required]),\n      PhoneNumberCode: new FormControl({ value: '', disabled: false }, [Validators.required]),\n      PhoneNumber: new FormControl({ value: '', disabled: false}, [\n        Validators.required,\n        Validators.pattern(/^[0-9 ]+$/),\n      ]),\n      EmailAddress: new FormControl({ value: '', disabled: false }, [\n        Validators.required,\n        Validators.email\n      ]),\n      // NatureOfBusiness: new FormControl('', [Validators.required]),\n      NatureOfBusinessCat: new FormControl('', [Validators.required]),\n      NatureOfBusinessSubCat: new FormControl('', [Validators.required]),\n    });\n\n    this.formOrganisationDetails = this.formBuilder.group({\n      DPORequired: new FormControl(''),\n      DPOName: new FormControl(''),\n      DPOPhysicalAddress: new FormControl(''),\n      PhoneNumberCode: new FormControl(''),\n      DPOPhoneNumber: new FormControl(''),\n      DPOEmailAddress: new FormControl(''),\n      DPOPositionInOrganisation: new FormControl(''),\n    });\n\n    this.formPersonalDataHeld = this.formBuilder.group({\n      SourceOfDataID: new FormControl('', [Validators.required]),\n    });\n\n    this.formPurposeRetention = this.formBuilder.group({\n      Purpose: new FormControl('', [Validators.required]),\n      SpecifyTheLaw: new FormControl(''),\n      ServiceOrProductProvided: new FormControl(''),\n      SpecifyLegalObligation: new FormControl(''),\n      TotalRecordsAtRegistration: new FormControl('', [Validators.pattern(/^[0-9,]+$/)]),\n      RecordPercentageGrowth: new FormControl('' , [\n        Validators.pattern(/^[0-9,]+$/),\n        Validators.max(100),\n      ]),\n      RetentionPeriod: new FormControl('', [\n        Validators.required,\n        Validators.pattern(/^[0-9,]+$/),\n        Validators.max(100),\n      ]),\n    });\n\n    this.formSecurityMeasures = this.formBuilder.group({\n      RegistrationConsent: new FormControl('', [Validators.required]),\n      RegistrationDoneBy: new FormControl('', [Validators.required, Validators.pattern(/^[a-zA-Z ]+$/)]),\n    });\n\n    this.formThirdParties = this.formBuilder.group({\n      PersonalDataIsForDisclosure: new FormControl('', [Validators.required]),\n      StoreDataOutsideCountry: new FormControl('', [Validators.required]),\n    });\n    this.Listeners();\n  }\n\n  ngAfterContentInit(): void {\n    this.httpSub = this.fetchMultiple()\n    .pipe(catchError(this.service.handleError))\n    .subscribe((responseList) => {\n      console.log(responseList)\n      this.countries = responseList[0];\n\n      this.organisationCategories = [\n        {\n          OrganisationCategoryId: 1,\n          OrganisationCategoryName: 'Data Controller'\n        },\n        {\n          OrganisationCategoryId: 2,\n          OrganisationCategoryName: 'Data Processor'\n        },\n        {\n          OrganisationCategoryId: 3,\n          OrganisationCategoryName: 'Data Collector'\n        },\n      ];\n\n      this.formGeneralInformation.get('PhoneNumberCode').patchValue('256');\n      this.formOrganisationDetails.get('PhoneNumberCode').patchValue('256');\n\n      this.dataSources = responseList[1];\n\n      this.organisationTypes = responseList[2];\n\n      this.sectors = responseList[3];\n\n      this.dataCategories = responseList[4];\n\n      this.dataPurposes = responseList[5];\n\n      this.natureOfBusinessCat = responseList[6];\n\n      this._loadApplicationDraft(responseList[7]);\n\n      this.processing = false;\n    }, (error) => {\n      this.processing = false;\n      this.service.determineErrorResponse(error);\n    });\n  }\n\n  private Listeners(): void {\n    // STEP ONE\n    this.formGeneralInformation.get('DPPActCategory').valueChanges.subscribe((value) => {\n      const values: number[] = value;\n      this.selectedOrganisationCategories.length = 0;\n\n      this.organisationCategories.filter((item) => {\n        if (values.includes(item.OrganisationCategoryId)) {\n          this.selectedOrganisationCategories.push(item);\n        }\n      });\n    });\n\n    this.formGeneralInformation.get('OrganizationTypeID').valueChanges.subscribe((value) => {\n      if (value !== 4) {\n        this.formGeneralInformation.get('CountryOfIncorporation').setValidators([Validators.required]);\n        this.formGeneralInformation.get('URSBNumber').setValidators([Validators.required]);\n      } else {\n        this.formGeneralInformation.get('CountryOfIncorporation').clearValidators();\n        this.formGeneralInformation.get('CountryOfIncorporation').reset();\n        this.formGeneralInformation.get('URSBNumber').clearValidators();\n        this.formGeneralInformation.get('URSBNumber').reset();\n        this.CountryOfIncorporation = null;\n      }\n\n      this.formGeneralInformation.controls['CountryOfIncorporation'].updateValueAndValidity();\n      this.formGeneralInformation.controls['URSBNumber'].updateValueAndValidity();\n    });\n\n    this.formGeneralInformation.get('SectorID').valueChanges.subscribe((value) => {\n      if (value === 14) {\n        this.formGeneralInformation.get('OtherSector').setValidators([Validators.required]);\n      } else {\n        this.formGeneralInformation.get('OtherSector').clearValidators();\n        this.formGeneralInformation.get('OtherSector').reset();\n      }\n\n      this.formGeneralInformation.controls['OtherSector'].updateValueAndValidity();\n    });\n\n    this.formGeneralInformation.get('NatureOfBusinessCat').valueChanges.subscribe((value) => {\n      this.onNatureOfBusinessCatSelected(value);\n    });\n\n    this.formGeneralInformation.get('NatureOfBusinessSubCat').valueChanges.subscribe((value) => {\n      const values: number[] = value;\n      this.selectedNatureOfBusinessSubCat.length = 0;\n\n      this.natureOfBusinessSubCat.filter((item) => {\n        if (values.includes(item.NatureOfBusinessSubCatId)) {\n          this.selectedNatureOfBusinessSubCat.push(item);\n        }\n      });\n    });\n\n    // STEP TWO\n    this.formOrganisationDetails.get('DPORequired').valueChanges.subscribe((value) => {\n\n      if (value === 'Yes') {\n        this.formOrganisationDetails.get('DPOName').setValidators([Validators.required, Validators.pattern(/^[a-zA-Z ]+$/), ]);\n        this.formOrganisationDetails.get('DPOPhysicalAddress').setValidators([Validators.required]);\n        this.formOrganisationDetails.get('DPOPhoneNumber').setValidators([Validators.required, Validators.pattern(/^[0-9 ]+$/)]);\n        this.formOrganisationDetails.get('DPOEmailAddress').setValidators([Validators.required, Validators.email]);\n        this.formOrganisationDetails.get('DPOPositionInOrganisation').setValidators([Validators.required]);\n      } else {\n        this.formOrganisationDetails.get('DPOName').clearValidators();\n        this.formOrganisationDetails.get('DPOName').reset();\n        this.formOrganisationDetails.get('DPOPhysicalAddress').clearValidators();\n        this.formOrganisationDetails.get('DPOPhysicalAddress').reset();\n        this.formOrganisationDetails.get('DPOPhoneNumber').clearValidators();\n        this.formOrganisationDetails.get('DPOPhoneNumber').reset();\n        this.formOrganisationDetails.get('DPOEmailAddress').clearValidators();\n        this.formOrganisationDetails.get('DPOEmailAddress').reset();\n        this.formOrganisationDetails.get('DPOPositionInOrganisation').clearValidators();\n        this.formOrganisationDetails.get('DPOPositionInOrganisation').reset();\n      }\n\n      this.formOrganisationDetails.controls['DPOName'].updateValueAndValidity();\n      this.formOrganisationDetails.controls['DPOPhysicalAddress'].updateValueAndValidity();\n      this.formOrganisationDetails.controls['DPOPhoneNumber'].updateValueAndValidity();\n      this.formOrganisationDetails.controls['DPOEmailAddress'].updateValueAndValidity();\n      this.formOrganisationDetails.controls['DPOPositionInOrganisation'].updateValueAndValidity();\n    });\n\n    // STEP THREE\n    this.formPersonalDataHeld.get('SourceOfDataID').valueChanges.subscribe((value) => {\n      const values: number[] = value;\n      this.selectedDataSources.length = 0;\n\n      this.dataSources.filter((item) => {\n        if (values.includes(item.DataSourceID)) {\n          this.selectedDataSources.push(item);\n        }\n      });\n    });\n\n    // STEP FOUR\n    this.formPurposeRetention.get('Purpose').valueChanges.subscribe((value) => {\n      const values: number[] = value;\n\n      this.selectedDataPurposes.length = 0;\n\n      // Reset all the fields first\n      this.SpecifyTheLaw = false;\n      this.ServiceOrProductProvided = false;\n      this.SpecifyLegalObligation = false;\n      this.formPurposeRetention.get('SpecifyTheLaw').clearValidators();\n      this.formPurposeRetention.get('SpecifyTheLaw').reset();\n      this.formPurposeRetention.get('ServiceOrProductProvided').clearValidators();\n      this.formPurposeRetention.get('ServiceOrProductProvided').reset();\n      this.formPurposeRetention.get('SpecifyLegalObligation').clearValidators();\n      this.formPurposeRetention.get('SpecifyLegalObligation').reset();\n\n      values.filter((item) => {\n        if (item === 1) {\n          this.SpecifyTheLaw = true;\n          this.formPurposeRetention.get('SpecifyTheLaw').setValidators([Validators.required]);\n        }\n\n        if (item === 3) {\n          this.ServiceOrProductProvided = true;\n          this.formPurposeRetention.get('ServiceOrProductProvided').setValidators([Validators.required]);\n        }\n\n        if (item === 6) {\n          this.SpecifyLegalObligation = true;\n          this.formPurposeRetention.get('SpecifyLegalObligation').setValidators([Validators.required]);\n        }\n      });\n\n      this.formPurposeRetention.controls['SpecifyTheLaw'].updateValueAndValidity();\n      this.formPurposeRetention.controls['ServiceOrProductProvided'].updateValueAndValidity();\n      this.formPurposeRetention.controls['SpecifyLegalObligation'].updateValueAndValidity();\n\n      this.dataPurposes.filter((item) => {\n        if (values.includes(item.DataPurposeID)) {\n          this.selectedDataPurposes.push(item);\n        }\n      });\n\n      this.changeDetector.detectChanges();\n    });\n\n    this.formPurposeRetention.get('RecordPercentageGrowth').valueChanges.subscribe((value) => {\n\n      if (value > 100) {\n        this.formPurposeRetention.get('RecordPercentageGrowth').patchValue(100);\n      }\n\n      this.changeDetector.detectChanges();\n    });\n\n    this.formPurposeRetention.get('RetentionPeriod').valueChanges.subscribe((value) => {\n\n      if (value > 100) {\n        this.formPurposeRetention.get('RetentionPeriod').patchValue(100);\n      }\n\n      this.changeDetector.detectChanges();\n    });\n\n    // STEP FIVE\n    this.formThirdParties.get('PersonalDataIsForDisclosure').valueChanges.subscribe((value) => {\n      this.thirdParties.length = 0;\n    });\n\n    this.formThirdParties.get('StoreDataOutsideCountry').valueChanges.subscribe((value) => {\n      this.countriesOfTransfer.length = 0;\n    });\n  }\n\n  private onShowNotice(): void {\n    this.dialogRef = this.dialog.open(OrgNoticeComponent, {\n      panelClass: ['organisation-data-protection-officer-dialog', 'dialogs'],\n      disableClose: true,\n    });\n\n    this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: DataProtectionOfficer }) => {\n\n    });\n  }\n\n  getOrganizationNameErrorMessage(): string {\n    return this.formGeneralInformation.get('OrganizationName').hasError('required') ? 'Please enter a value' : '';\n  }\n\n  getURSBNumberErrorMessage(): string {\n    return this.formGeneralInformation.get('URSBNumber').hasError('required') ? 'Please enter a value' : '';\n  }\n\n  getSelectErrorMessage(): string {\n    return this.formGeneralInformation.get('DPPActCategory').hasError('required')\n    || this.formGeneralInformation.get('OrganizationTypeID').hasError('required')\n    || this.formGeneralInformation.get('CountryOfIncorporation').hasError('required')\n    || this.formGeneralInformation.get('SectorID').hasError('required')\n    || this.formGeneralInformation.get('NatureOfBusinessCat').hasError('required')\n    || this.formGeneralInformation.get('NatureOfBusinessSubCat').hasError('required')\n    || this.formPersonalDataHeld.get('SourceOfDataID').hasError('required')\n    || this.formPurposeRetention.get('Purpose').hasError('required')\n    ? 'Please choose a value' : '';\n  }\n\n  getTelephoneNumberErrorMessage(): string {\n    return this.formGeneralInformation.get('PhoneNumber').hasError('required') ? 'Please enter a value' :\n    this.formGeneralInformation.get('PhoneNumber').hasError('pattern') ? 'Wrong Phone number' : '';\n  }\n\n  getEmailAddressErrorMessage(): string {\n    return this.formGeneralInformation.get('EmailAddress').hasError('required') ? 'Please enter a value' :\n    this.formGeneralInformation.get('EmailAddress').hasError('email') ? 'Wrong Email Address.' : '';\n  }\n\n  getOtherSectorErrorMessage(): string {\n    return this.formGeneralInformation.get('OtherSector').hasError('required') ? 'Please enter a value' : '';\n  }\n\n  getLocationErrorMessage(): string {\n    return this.formGeneralInformation.get('Location').hasError('required') ? 'Please enter a location' : '';\n  }\n\n  getDPONameErrorMessage(): string {\n    return this.formOrganisationDetails.get('DPOName').hasError('required') ? 'Please enter a value' :\n    this.formOrganisationDetails.get('DPOName').hasError('pattern') ? 'Please enter a correct name' : '';\n  }\n\n  getDPOPhysicalAddressErrorMessage(): string {\n    return this.formOrganisationDetails.get('DPOPhysicalAddress').hasError('required') ? 'Please enter a location' : '';\n  }\n\n  getDPOPhoneNumberErrorMessage(): string {\n    return this.formOrganisationDetails.get('DPOPhoneNumber').hasError('required') ? 'Please enter a value' :\n    this.formOrganisationDetails.get('DPOPhoneNumber').hasError('pattern') ? 'Wrong Phone number' : '';\n  }\n\n  getDPOEmailAddressErrorMessage(): string {\n    return this.formOrganisationDetails.get('DPOEmailAddress').hasError('required') ? 'Please enter a value' :\n    this.formOrganisationDetails.get('DPOEmailAddress').hasError('email') ? 'Wrong Email Address.' : '';\n  }\n\n  getDPOPositionInOrganisationErrorMessage(): string {\n    return this.formOrganisationDetails.get('DPOPositionInOrganisation').hasError('required') ? 'Please enter a value' : '';\n  }\n\n  getRequiredErrorMessage(): string {\n    return this.formPurposeRetention.get('SpecifyTheLaw').hasError('required')\n    || this.formPurposeRetention.get('ServiceOrProductProvided').hasError('required')\n    || this.formPurposeRetention.get('SpecifyLegalObligation').hasError('required')\n    ? 'Please enter a value' : '';\n  }\n\n  getPatternErrorMessage(): string {\n    return this.formPurposeRetention.get('TotalRecordsAtRegistration').hasError('pattern')\n    ? 'Please enter correct information' : '';\n  }\n\n  getRetentionPeriodErrorMessage(): string {\n    return this.formPurposeRetention.get('RetentionPeriod').hasError('required') ? 'Please enter a value' :\n    this.formPurposeRetention.get('RetentionPeriod').hasError('max') ? 'Maximum of 100' :\n    this.formPurposeRetention.get('RetentionPeriod').hasError('pattern') ? 'Not valid' : '';\n  }\n\n  getRecordPercentageGrowthErrorMessage(): string {\n    return this.formPurposeRetention.get('RecordPercentageGrowth').hasError('max') ? 'Maximum of 100' :\n    this.formPurposeRetention.get('RecordPercentageGrowth').hasError('pattern') ? 'Not valid' : '';\n  }\n\n  getCheckboxErrorMessage(): string {\n    return this.formSecurityMeasures.get('RegistrationConsent').hasError('max') ? 'This field is required' : '';\n  }\n\n  getRegistrationDoneByErrorMessage(): string {\n    return this.formSecurityMeasures.get('RegistrationDoneBy').hasError('required') ? 'Please enter a value' :\n    this.formSecurityMeasures.get('RegistrationDoneBy').hasError('pattern') ? 'Please enter a correct name' : '';\n  }\n\n  onAddMainActivity(): void {\n    this.dialogRef = this.dialog.open(OrgMainActivityComponent, {\n      panelClass: ['organisation-main-activity-dialog', 'dialogs'],\n      disableClose: true,\n    });\n\n    this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: MainActivity }) => {\n      if (result.status) {\n          let found = false;\n          this.mainActivities.filter((activity) => {\n            if (activity.Activity === result.row.Activity) {\n              found = true;\n            }\n          });\n\n          if (found) {\n            this.service.openSnackBar('Sorry, this record already exists', 'error-lg');\n          } else {\n            this.mainActivities.push(result.row);\n          }\n\n        this.mainActivitiesDataSource = new MatTableDataSource(this.mainActivities);\n\n        setTimeout(() => {\n          this.mainActivitiesDataSource.paginator = this.MainActivityPaginator;\n          this.mainActivitiesDataSource.sort = this.MainActivityMatSort;\n        });\n      }\n    });\n  }\n\n  onEditMainActivity(row: MainActivity): void {\n    this.dialogRef = this.dialog.open(OrgMainActivityComponent, {\n      panelClass: ['organisation-main-activity-dialog', 'dialogs'],\n      disableClose: true,\n      data: { row }\n    });\n\n    this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: MainActivity }) => {\n      if (result.status) {\n\n        this.mainActivities[this.mainActivities.indexOf(row)] = {\n          Activity: result.row.Activity,\n        };\n\n        this.mainActivitiesDataSource = new MatTableDataSource(this.mainActivities);\n\n        setTimeout(() => {\n          this.mainActivitiesDataSource.paginator = this.MainActivityPaginator;\n          this.mainActivitiesDataSource.sort = this.MainActivityMatSort;\n        });\n      }\n    });\n  }\n\n  onRemoveMainActivity(row: MainActivity): void {\n    this.mainActivities.splice(this.mainActivities.indexOf(row), 1);\n\n    this.mainActivitiesDataSource = new MatTableDataSource(this.mainActivities);\n\n    setTimeout(() => {\n      this.mainActivitiesDataSource.paginator = this.MainActivityPaginator;\n      this.mainActivitiesDataSource.sort = this.MainActivityMatSort;\n    });\n  }\n\n  onAddADPO(): void {\n    this.dialogRef = this.dialog.open(OrgDataProtectionOfficerComponent, {\n      panelClass: ['organisation-data-protection-officer-dialog', 'dialogs'],\n      disableClose: true,\n    });\n\n    this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: DataProtectionOfficer }) => {\n      if (result.status) {\n        let found = false;\n        this.dataProtectionOfficers.filter((dpo) => {\n          if (dpo.EmailAddress === result.row.EmailAddress || dpo.PhoneNumber === result.row.PhoneNumber) {\n            found = true;\n          }\n        });\n\n        if (found) {\n          this.service.openSnackBar('Sorry, this record already exists', 'error-lg');\n        } else {\n          this.dataProtectionOfficers.push(result.row);\n        }\n\n        this.dpoDataSource = new MatTableDataSource(this.dataProtectionOfficers);\n\n        setTimeout(() => {\n          this.dpoDataSource.paginator = this.dpoPaginator;\n          this.dpoDataSource.sort = this.dpoMatSort;\n        });\n      }\n    });\n  }\n\n  onEditDPO(row: DataProtectionOfficer): void {\n    this.dialogRef = this.dialog.open(OrgDataProtectionOfficerComponent, {\n      panelClass: ['organisation-data-protection-officer-dialog', 'dialogs'],\n      disableClose: true,\n      data: { row }\n    });\n\n    this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: DataProtectionOfficer }) => {\n      if (result.status) {\n\n        this.dataProtectionOfficers[this.dataProtectionOfficers.indexOf(row)] = {\n          Name: result.row.Name,\n          EmailAddress: result.row.EmailAddress,\n          PhoneNumber: result.row.PhoneNumber,\n          PhysicalAddress: result.row.PhysicalAddress,\n          PositionInOrganisation: result.row.PositionInOrganisation,\n        };\n\n        this.dpoDataSource = new MatTableDataSource(this.dataProtectionOfficers);\n\n        setTimeout(() => {\n          this.dpoDataSource.paginator = this.dpoPaginator;\n          this.dpoDataSource.sort = this.dpoMatSort;\n        });\n      }\n    });\n  }\n\n  onRemoveDPO(row: DataProtectionOfficer): void {\n    this.dataProtectionOfficers.splice(this.dataProtectionOfficers.indexOf(row), 1);\n\n    this.dpoDataSource = new MatTableDataSource(this.dataProtectionOfficers);\n\n    setTimeout(() => {\n      this.dpoDataSource.paginator = this.dpoPaginator;\n      this.dpoDataSource.sort = this.dpoMatSort;\n    });\n  }\n\n  onAddSecurityMeasure(): void {\n    this.dialogRef = this.dialog.open(OrgSecurityMeasuresComponent, {\n      panelClass: ['organisation-security-measure-dialog', 'dialogs'],\n      disableClose: true,\n    });\n\n    this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: SecurityMeasure }) => {\n      if (result.status) {\n        let found = false;\n        this.securityMeasures.filter((item) => {\n          if (item.SecurityMeasure === result.row.SecurityMeasure) {\n            found = true;\n          }\n        });\n\n        if (found) {\n          this.service.openSnackBar('Sorry, this record already exists', 'error-lg');\n        } else {\n          this.securityMeasures.push(result.row);\n        }\n\n        this.securityMeasureDataSource = new MatTableDataSource(this.securityMeasures);\n\n        setTimeout(() => {\n          this.securityMeasureDataSource.paginator = this.securityMeasurePaginator;\n          this.securityMeasureDataSource.sort = this.securityMeasureMatSort;\n        });\n      }\n    });\n  }\n\n  onEditSecurityMeasure(row: SecurityMeasure): void {\n    this.dialogRef = this.dialog.open(OrgSecurityMeasuresComponent, {\n      panelClass: ['organisation-security-measure-dialog', 'dialogs'],\n      disableClose: true,\n      data: { row }\n    });\n\n    this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: SecurityMeasure }) => {\n      if (result.status) {\n\n        this.securityMeasures[this.securityMeasures.indexOf(row)] = {\n          SecurityMeasure: result.row.SecurityMeasure,\n        };\n\n        this.securityMeasureDataSource = new MatTableDataSource(this.securityMeasures);\n\n        setTimeout(() => {\n          this.securityMeasureDataSource.paginator = this.securityMeasurePaginator;\n          this.securityMeasureDataSource.sort = this.securityMeasureMatSort;\n        });\n      }\n    });\n  }\n\n  onRemoveSecurityMeasure(row: SecurityMeasure): void {\n    this.securityMeasures.splice(this.securityMeasures.indexOf(row), 1);\n\n    this.securityMeasureDataSource = new MatTableDataSource(this.securityMeasures);\n\n    setTimeout(() => {\n      this.securityMeasureDataSource.paginator = this.securityMeasurePaginator;\n      this.securityMeasureDataSource.sort = this.securityMeasureMatSort;\n    });\n  }\n\n  onAddAThirdParty(): void {\n    this.dialogRef = this.dialog.open(OrgThirdPartyComponent, {\n      panelClass: ['organisation-third-party-dialog', 'dialogs'],\n      disableClose: true,\n    });\n\n    this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: ThirdParty }) => {\n      if (result.status) {\n          let found = false;\n\n          this.thirdParties.filter((party) => {\n            if (party.ThirdPartyName === result.row.ThirdPartyName) {\n              found = true;\n            }\n          });\n\n          if (found) {\n            this.service.openSnackBar('Sorry, this record already exists', 'error-lg');\n          } else {\n            this.thirdParties.push(result.row);\n          }\n\n        this.thirdPartyDataSource = new MatTableDataSource(this.thirdParties);\n\n        setTimeout(() => {\n          this.thirdPartyDataSource.paginator = this.thirdPartyPaginator;\n          this.thirdPartyDataSource.sort = this.thirdPartyMatSort;\n        });\n      }\n    });\n  }\n\n  onEditThirdParty(row: ThirdParty): void {\n    this.dialogRef = this.dialog.open(OrgThirdPartyComponent, {\n      panelClass: ['organisation-third-party-dialog', 'dialogs'],\n      disableClose: true,\n      data: { row }\n    });\n\n    this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: ThirdParty }) => {\n      if (result.status) {\n\n        this.thirdParties[this.thirdParties.indexOf(row)] = {\n          ThirdPartyName: result.row.ThirdPartyName,\n          Purpose: result.row.Purpose,\n        };\n\n        this.thirdPartyDataSource = new MatTableDataSource(this.thirdParties);\n\n        setTimeout(() => {\n          this.thirdPartyDataSource.paginator = this.thirdPartyPaginator;\n          this.thirdPartyDataSource.sort = this.thirdPartyMatSort;\n        });\n      }\n    });\n  }\n\n  onRemoveThirdParty(row: ThirdParty): void {\n    this.thirdParties.splice(this.thirdParties.indexOf(row), 1);\n\n    this.thirdPartyDataSource = new MatTableDataSource(this.thirdParties);\n\n    setTimeout(() => {\n      this.thirdPartyDataSource.paginator = this.thirdPartyPaginator;\n      this.thirdPartyDataSource.sort = this.thirdPartyMatSort;\n    });\n  }\n\n  onAddACountry(): void {\n    this.dialogRef = this.dialog.open(OrgCountryComponent, {\n      panelClass: ['organisation-country-dialog', 'dialogs'],\n      disableClose: true,\n    });\n\n    this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: CountryOfTransfer }) => {\n      if (result.status) {\n          let found = false;\n          this.countriesOfTransfer.filter((party) => {\n            if (party.Country === result.row.Country) {\n              found = true;\n            }\n          });\n\n          if (found) {\n            this.service.openSnackBar('Sorry, this record already exists', 'error-lg');\n          } else {\n            this.countriesOfTransfer.push(result.row);\n          }\n\n        this.countriesDataSource = new MatTableDataSource(this.countriesOfTransfer);\n\n        setTimeout(() => {\n          this.countriesDataSource.paginator = this.countryOfTransferPaginator;\n          this.countriesDataSource.sort = this.countryOfTransferMatSort;\n        });\n      }\n    });\n  }\n\n  onEditCountry(row: CountryOfTransfer): void {\n    this.dialogRef = this.dialog.open(OrgCountryComponent, {\n      panelClass: ['organisation-country-dialog', 'dialogs'],\n      disableClose: true,\n      data: { row }\n    });\n\n    this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: CountryOfTransfer }) => {\n      if (result.status) {\n        this.countriesOfTransfer[this.countriesOfTransfer.indexOf(row)] = {\n          CountryID: result.row.CountryID,\n          Country: result.row.Country,\n          Purpose: result.row.Purpose,\n          Description: result.row.Description,\n        };\n\n        this.countriesDataSource = new MatTableDataSource(this.countriesOfTransfer);\n\n        setTimeout(() => {\n          this.countriesDataSource.paginator = this.countryOfTransferPaginator;\n          this.countriesDataSource.sort = this.countryOfTransferMatSort;\n        });\n      }\n    });\n  }\n\n  onRemoveCountry(row: CountryOfTransfer): void {\n    this.countriesOfTransfer.splice(this.countriesOfTransfer.indexOf(row), 1);\n\n    this.countriesDataSource = new MatTableDataSource(this.countriesOfTransfer);\n\n    setTimeout(() => {\n      this.countriesDataSource.paginator = this.countryOfTransferPaginator;\n      this.countriesDataSource.sort = this.countryOfTransferMatSort;\n    });\n  }\n\n  onUploadAttachments(): void {\n    this.dialogRef = this.dialog.open(OrgUploadComponent, {\n      panelClass: ['organisation-upload-dialog', 'dialogs'],\n      disableClose: true,\n      data: {\n        multiple: false\n      }\n    });\n\n    this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: FileUpload }) => {\n      console.log('row:', result.row);\n\n      if (result.status) {\n        this.document = result.row;\n      }\n    });\n  }\n\n  onRemoveDocument(): void {\n    this.document = null;\n  }\n\n  onDownloadForm3(): void {\n    this.dialogRef = this.dialog.open(OrgForm3DialogComponent, {\n      panelClass: ['organisation-form-3-dialog', 'dialogs'],\n      disableClose: true,\n      data: {\n        OrganisationName: this.formGeneralInformation.get('OrganizationName').value,\n        PhysicalAddress: this.formGeneralInformation.get('Location').value,\n        Date: new Date()\n      }\n    });\n  }\n\n  onUploadProofOfPayment(): void {\n    this.dialogRef = this.dialog.open(OrgUploadComponent, {\n      panelClass: ['organisation-upload-dialog', 'dialogs'],\n      disableClose: true,\n      data: {\n        multiple: false\n      }\n    });\n\n    this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: FileUpload }) => {\n\n      if (result.status) {\n        this.proofOfPayment = result.row;\n      }\n    });\n  }\n\n  onRemoveProofOfPaymen(): void {\n    this.proofOfPayment = null;\n  }\n\n  onUploadForm3Attachments(): void {\n    this.dialogRef = this.dialog.open(OrgUploadComponent, {\n      panelClass: ['organisation-upload-dialog', 'dialogs'],\n      disableClose: true,\n      data: {\n        multiple: false\n      }\n    });\n\n    this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: FileUpload }) => {\n      if (result.status) {\n        this.documentForm3 = result.row;\n      }\n    });\n  }\n\n  onRemoveForm3Document(): void {\n    this.documentForm3 = null;\n  }\n\n  onChangeSubCategory(event: MatCheckboxChange, SubCategory: DataSubCategory): void {\n    if (event.checked) {\n      this.selectedDataSubCategory.push(SubCategory);\n    } else {\n      this.selectedDataSubCategory.splice(this.selectedDataSubCategory.indexOf(SubCategory), 1);\n    }\n  }\n\n  private fetchMultiple(): Observable<any[]> {\n    this.processing = true;\n    const reqCountries = this.http.get<ApiPayload>(this.endpoints.countries);\n    const reqDataSources = this.http.get<ApiPayload>(this.endpoints.dataSources);\n    const reqOrganisationType = this.http.get<ApiPayload>(this.endpoints.organisationType);\n    const reqSector = this.http.get<ApiPayload>(this.endpoints.sector);\n    const reqDataSubcategories = this.http.get<ApiPayload>(this.endpoints.dataSubcategories);\n    const reqDataPurpose = this.http.get<ApiPayload>(this.endpoints.dataPurpose);\n    const reqNatureOfBusiness = this.http.get<ApiPayload>(this.endpoints.natureOfBusiness);\n    const reqOrgRegSaveDraft = this.http.get<ApiPayload>(this.endpoints.getOrgDetailsById, { params: { OrganizationID: this._auth.getOrganisationID() } });\n    // tslint:disable-next-line:max-line-length\n    return forkJoin([\n      reqCountries, \n      reqDataSources, \n      reqOrganisationType, \n      reqSector, \n      reqDataSubcategories, \n      reqDataPurpose, \n      reqNatureOfBusiness,\n      reqOrgRegSaveDraft,\n    ]);\n  }\n\n  private getFormData(): any {\n\n    return {\n      OrganisationUserID: +this._auth.getOrganisationID(),\n      OrganisationName: this.formGeneralInformation.get('OrganizationName').value,\n      OrganisationCategory: this.selectedOrganisationCategories ? this.selectedOrganisationCategories : [],\n      OrganizationTypeID: this.formGeneralInformation.get('OrganizationTypeID').value ? this.formGeneralInformation.get('OrganizationTypeID').value : 0,\n      CountryOfIncorporation: this.formGeneralInformation.get('CountryOfIncorporation').value ? this.formGeneralInformation.get('CountryOfIncorporation').value : 0,\n      URSBNumber: this.formGeneralInformation.get('URSBNumber').value ? this.formGeneralInformation.get('URSBNumber').value : '',\n      SectorID: this.formGeneralInformation.get('SectorID').value ? this.formGeneralInformation.get('SectorID').value : 0,\n      OtherSector: this.formGeneralInformation.get('OtherSector').value ? this.formGeneralInformation.get('OtherSector').value : '',\n      Location: this.formGeneralInformation.get('Location').value ? this.formGeneralInformation.get('Location').value : '',\n      // tslint:disable-next-line:max-line-length\n      // PhoneNumber: this.formGeneralInformation.get('PhoneNumberCode').value + (this.formGeneralInformation.get('PhoneNumber').value).replaceAll(' ', ''),\n      // EmailAddress: this.formGeneralInformation.get('EmailAddress').value,\n      RegTrackingNo: this.regTrackingNo,\n      OrganisationID: this.OrganisationID.toString(),\n      PhoneNumber: this.application.PhoneNumber,\n      EmailAddress: this.application.EmailAddress,\n      NatureOfBusinessCatID: this.formGeneralInformation.get('NatureOfBusinessCat').value ? this.formGeneralInformation.get('NatureOfBusinessCat').value : 0,\n      NatureOfBusiness: this.selectedNatureOfBusinessSubCat ? this.selectedNatureOfBusinessSubCat : [],\n      \n      DPORequired: this.formOrganisationDetails.get('DPORequired').value,\n      DPOName: this.formOrganisationDetails.get('DPORequired').value === 'Yes' ? this.formOrganisationDetails.get('DPOName').value : '',\n      DPOPhysicalAddress: this.formOrganisationDetails.get('DPORequired').value === 'Yes' ? this.formOrganisationDetails.get('DPOPhysicalAddress').value : '',\n      // tslint:disable-next-line:max-line-length\n      DPOPhoneNumber: this.formOrganisationDetails.get('DPOPhoneNumber').value ? this.formOrganisationDetails.get('PhoneNumberCode').value + (this.formOrganisationDetails.get('DPOPhoneNumber').value).replaceAll(' ', '') : '',\n      // tslint:disable-next-line:max-line-length\n      DPOEmailAddress: this.formOrganisationDetails.get('DPORequired').value === 'Yes' ? this.formOrganisationDetails.get('DPOEmailAddress').value : '',\n      DPOPositionInOrganisation: this.formOrganisationDetails.get('DPORequired').value === 'Yes' ? this.formOrganisationDetails.get('DPOPositionInOrganisation').value : '',\n      SourceOfDataID: this.selectedDataSources ? this.selectedDataSources : [],\n      PersonalDataCollected: this.selectedDataSubCategory ? this.selectedDataSubCategory : [],\n      Purpose: this.selectedDataPurposes ? this.selectedDataPurposes : [],\n      SpecifyTheLaw: this.formPurposeRetention.get('SpecifyTheLaw').value ? this.formPurposeRetention.get('SpecifyTheLaw').value : '',\n      ServiceOrProductProvided: this.formPurposeRetention.get('ServiceOrProductProvided').value ? this.formPurposeRetention.get('ServiceOrProductProvided').value : '',\n      SpecifyLegalObligation: this.formPurposeRetention.get('SpecifyLegalObligation').value ? this.formPurposeRetention.get('SpecifyLegalObligation').value : '',\n      // tslint:disable-next-line:max-line-length\n      TotalRecordsAtRegistration: this.formPurposeRetention.get('TotalRecordsAtRegistration').value ? parseInt(this.formPurposeRetention.get('TotalRecordsAtRegistration').value, 10) : 0,\n      RecordPercentageGrowth: this.formPurposeRetention.get('RecordPercentageGrowth').value ? parseInt(this.formPurposeRetention.get('RecordPercentageGrowth').value, 10) : 0,\n      // RetentionPeriod: this.formPurposeRetention.get('RetentionPeriod').value,\n      RetentionPeriod: this.formPurposeRetention.get('RetentionPeriod').value ? parseInt(this.formPurposeRetention.get('RetentionPeriod').value, 10) : 0,\n      PersonalDataIsForDisclosure: this.formThirdParties.get('PersonalDataIsForDisclosure').value ? this.formThirdParties.get('PersonalDataIsForDisclosure').value : '',\n      ThirdParties: this.thirdParties ? this.thirdParties : [],\n      StoreDataOutsideCountry: this.formThirdParties.get('StoreDataOutsideCountry').value ? this.formThirdParties.get('StoreDataOutsideCountry').value : '',\n      Countries: this.countriesOfTransfer ? this.countriesOfTransfer : [],\n      SecurityMeasures: this.securityMeasures ? this.securityMeasures : [],\n      Attachment: this.document ? this.document.Base64 : '',\n      Form3Attachment: this.documentForm3 ? this.documentForm3.Base64 : '',\n      RegistrationConsent: this.formSecurityMeasures.get('RegistrationConsent').value ? true : false,\n      RegistrationDoneBy: this.formSecurityMeasures.get('RegistrationDoneBy').value ? this.formSecurityMeasures.get('RegistrationDoneBy').value : '',\n      ProofOfPayment: this.proofOfPayment ? this.proofOfPayment.Base64 : '',\n    };\n  }\n\n  onNatureOfBusinessCatSelected(NatureOfBusinessCatId): void {\n    // tslint:disable-next-line:max-line-length\n    this.httpSub = this.http.get<NatureOfBusinessSubCat[]>(this.endpoints.natureOfBusiness + '?NatureOfBusinessSubCat=' + NatureOfBusinessCatId)\n    .pipe(catchError(this.service.handleError))\n    .subscribe((response) => {\n\n      this.natureOfBusinessSubCat = response;\n\n    }, (error) => {\n      this.processing = false;\n      this.service.determineErrorResponse(error);\n    });\n  }\n\n  onPreviewForm(download: boolean): void {\n    this.dialogRef = this.dialog.open(OrgRegistrationPreviewDialogComponent, {\n      panelClass: ['organisation-registration-preview-form-3-dialog', 'dialogs'],\n      disableClose: true,\n      data: {\n        download: download,\n        row: this.getFormData(),\n        Attachment: this.document ? this.document : '',\n        Form3: this.documentForm3 ? this.documentForm3 : '',\n        ProofOfPayment: this.proofOfPayment ? this.proofOfPayment : '',\n        OrganizationType: this.OrganizationType,\n        // tslint:disable-next-line:max-line-length\n        Sector: this.formGeneralInformation.get('OtherSector').value ? this.formGeneralInformation.get('OtherSector').value : this.SectorName,\n        NatureOfBusinessCat: this.NatureOfBusinessCat,\n        CountryOfIncorporation: this.CountryOfIncorporation\n      }\n    });\n  }\n\n  onSubmit(): void {\n    this.processing = true;\n    console.log('save the registration information:', this.getFormData());\n\n    this.httpSub = this.http.post<ApiPayload>(this.endpoints.updateRegistrationDetails, this.getFormData())\n    .pipe(catchError(this.service.handleError))\n    .subscribe((response) => {\n      this.dialogRef = this.dialog.open(SuccessfulMessageDialogComponent, {\n        panelClass: ['successful-message-dialog', 'dialogs'],\n        disableClose: true,\n        data: {\n          title: response.message['title'],\n          message: response.message['body'],\n          status: response.code === 200 ? true : false,\n        }\n      });\n\n      this.dialogRef.afterClosed().subscribe(() => {\n        this.route.navigate(['/company-registration/find']);\n      });\n\n      this.processing = false;\n    }, (error) => {\n      this.processing = false;\n\n      if (error.error.message) {\n        this.dialogRef = this.dialog.open(SuccessfulMessageDialogComponent, {\n          panelClass: ['successful-message-dialog', 'dialogs'],\n          disableClose: true,\n          data: {\n            title: error.error.message['title'] ? error.error.message['title'] : 'Operation Failed',\n            message: error.error.message['body'] ? error.error.message['body'] : environment.technicalErrorResponse,\n            status: false,\n          }\n        });\n      } else {\n        this.service.determineErrorResponse(error);\n      }\n    });\n  }\n\n  onReadDocument(document: FileUpload): void {\n    console.log(document.Base64)\n    this.bottomsheetRef = this.bottomsheet.open(ViewPdfDocumentBottomsheetComponent, {\n      disableClose: true,\n      panelClass: ['view-pdf-document-bottomsheet', 'bottomsheets'],\n      data: {\n        url: document.Base64,\n        title: document.Name\n      }\n    });      \n  }\n\n  private _loadApplicationDraft(response): void {\n    console.log(response)\n    this.application = response[0];\n    this.processing = false;\n\n    this.regTrackingNo = response[0]['RegTrackingNo'];\n    this.OrganisationID = response[0]['OrganisationID'];\n    console.log(this.regTrackingNo);\n    console.log(this.application);\n    console.log(\"here\");\n\n    if (this.application.CurrentStepName !== 'Certificate Issued') {      \n      this.dialogRef = this.dialog.open(SuccessfulMessageDialogComponent, {\n        panelClass: ['successful-message-dialog', 'dialogs'],\n        disableClose: true,\n        data: {\n          title: 'No Previous Certificate',\n          message: 'Please complete your registration',\n          status: false,\n        }\n      });\n\n      this.dialogRef.afterClosed().subscribe(() => {\n        // console.log('regTrackingNo:', this.regTrackingNo);\n        this.route.navigate(\n          ['/company-registration/view'],\n          { state: { regTrackingNo: this.regTrackingNo }}\n        ).then();\n      });      \n\n    } else {\n\n      if (this.application.OrganisationCategory) {\n        let organisationCategories: any = this.application.OrganisationCategory;\n        let cat: number[] = [];\n    \n        organisationCategories.filter((item) => {\n          cat.push(item.OrganisationCategoryId);\n        });\n    \n        this.formGeneralInformation.get('DPPActCategory').patchValue(cat);\n      }\n  \n      this.formGeneralInformation.get('OrganizationTypeID').patchValue(this.application.OrganizationTypeID);\n      this.formGeneralInformation.get('OrganizationName').patchValue(this.application.OrganisationName);\n      this.formGeneralInformation.get('URSBNumber').patchValue(this.application.URSBNumber);\n      this.formGeneralInformation.get('SectorID').patchValue(this.application.SectorID);\n      this.formGeneralInformation.get('CountryOfIncorporation').patchValue(this.application['CountryOfIncorporation']);\n      this.formGeneralInformation.get('OtherSector').patchValue(this.application['OtherSector']);\n      this.formGeneralInformation.get('Location').patchValue(this.application.Location);\n      this.formGeneralInformation.get('PhoneNumberCode').patchValue(this.application.PhoneNumber.substring(0, 3));\n      this.formGeneralInformation.get('PhoneNumber').patchValue(this.application.PhoneNumber.substring(3, 13));\n      this.formGeneralInformation.get('EmailAddress').patchValue(this.application.EmailAddress);\n  \n      if (response[0]['NatureOfBusiness'].length) {\n        this.formGeneralInformation.get('NatureOfBusinessCat').patchValue(response[0]['NatureOfBusiness'][0]['NatureOfBusinessCatID']);\n        this.natureOfbusinesses = response[0]['NatureOfBusiness'];\n\n        this.onNatureOfBusinessCatSelected(response[0]['NatureOfBusiness'][0]['NatureOfBusinessCatID']);\n        \n        let _selectedNatureOfBusinessSubCat: NatureOfBusinessSubCat[] = [];\n        this.natureOfbusinesses.filter((item) => {\n            this.natureOfbusinesses_arr.push(item.NatureOfBusinessSubatID);\n\n            _selectedNatureOfBusinessSubCat.push({\n                NatureOfBusinessSubCatId: item.NatureOfBusinessSubatID,\n                NatureOfBusinessSubCategoryName: item.NatureOfBusinessSubCategoryName\n            });\n        });\n\n                  \n        this.formGeneralInformation.get('NatureOfBusinessSubCat').patchValue(this.natureOfbusinesses_arr);\n        this.selectedNatureOfBusinessSubCat = _selectedNatureOfBusinessSubCat;\n      }\n  \n      // STEP TWO\n      this.formOrganisationDetails.get('DPORequired').patchValue(this.application['DPORequired']);\n  \n      this.formOrganisationDetails.get('DPOName').patchValue(this.application['DPOName']);\n      this.formOrganisationDetails.get('DPOPhysicalAddress').patchValue(this.application['DPOPhysicalAddress']);\n      this.formOrganisationDetails.get('PhoneNumberCode').patchValue(this.application['DPOPhoneNumber'].substring(0, 3));\n      this.formOrganisationDetails.get('DPOPhoneNumber').patchValue(this.application['DPOPhoneNumber'].substring(3, 13));\n      this.formOrganisationDetails.get('DPOEmailAddress').patchValue(this.application['DPOEmailAddress']);\n      this.formOrganisationDetails.get('DPOPositionInOrganisation').patchValue(this.application['DPOPositionInOrganisation']);\n  \n      // STEP THREE\n      let sourceofdata = this.application['SourceOfDataID'];\n      let sourceofdata_arr: number [] = [];\n      \n      sourceofdata.filter((item) => {\n        sourceofdata_arr.push(item.DataSourceID);\n      });\n  \n      this.formPersonalDataHeld.get('SourceOfDataID').patchValue(sourceofdata_arr);\n  \n      if (this.application['PersonalDataCollected']) {\n        const personalDataCollected: any[] = this.application['PersonalDataCollected'];\n    \n        this.dataCategories.filter((category) => {\n          category.SubCategories.filter((subCat) => {\n            personalDataCollected.filter((selectedSubCat) => {            \n              if (subCat.DataSubCategoryID === selectedSubCat.DataSubCategoryID) {\n                subCat.IsChecked = true;\n                this.selectedDataSubCategory.push(subCat);\n              }\n            });\n          });\n        });\n      }\n  \n      // STEP FOUR\n      const purpose: any = this.application['Purpose'];\n      let purpose_arr: any[] = [];\n      let _selectedDataPurposes: DataPurposes[]  = [];\n  \n      purpose.filter((item) => {\n        if (item.DataPurposeID === 1) {\n          this.SpecifyTheLaw = true;\n          this.formPurposeRetention.get('SpecifyTheLaw').setValidators([Validators.required]);\n        }\n  \n        if (item.DataPurposeID === 3) {\n          this.ServiceOrProductProvided = true;\n          this.formPurposeRetention.get('ServiceOrProductProvided').setValidators([Validators.required]);\n        }\n  \n        if (item.DataPurposeID === 6) {\n          this.SpecifyLegalObligation = true;\n          this.formPurposeRetention.get('SpecifyLegalObligation').setValidators([Validators.required]);\n        }\n  \n        purpose_arr.push(item.DataPurposeID);\n  \n        _selectedDataPurposes.push(item);\n      });\n      \n      this.formPurposeRetention.get('Purpose').patchValue(purpose_arr);\n      this.selectedDataPurposes = _selectedDataPurposes;\n  \n      this.formPurposeRetention.get('SpecifyTheLaw').patchValue(this.application['SpecifyTheLaw']);\n      this.formPurposeRetention.get('ServiceOrProductProvided').patchValue(this.application['ServiceOrProductProvided']);\n      this.formPurposeRetention.get('SpecifyLegalObligation').patchValue(this.application['SpecifyLegalObligation']);\n      this.formPurposeRetention.get('TotalRecordsAtRegistration').patchValue(this.application['TotalRecordsAtRegistration']);\n      this.formPurposeRetention.get('RecordPercentageGrowth').patchValue(this.application['RecordPercentageGrowth']);\n      this.formPurposeRetention.get('RetentionPeriod').patchValue(this.application['RetentionPeriod']);\n  \n      // STEP FIVE\n      this.formThirdParties.get('PersonalDataIsForDisclosure').patchValue(this.application['PersonalDataIsForDisclosure'].replace(/\\s/g, ''));\n      this.thirdParties = this.application['ThirdParties'];\n      this.thirdPartyDataSource = new MatTableDataSource(this.thirdParties);\n  \n      setTimeout(() => {\n        this.thirdPartyDataSource.paginator = this.thirdPartyPaginator;\n        this.thirdPartyDataSource.sort = this.thirdPartyMatSort;\n      });\n  \n      this.formThirdParties.get('StoreDataOutsideCountry').patchValue(this.application['StoreDataOutsideCountry']);\n      this.countriesOfTransfer = this.application['Countries'];\n      this.countriesDataSource = new MatTableDataSource(this.countriesOfTransfer);\n  \n      setTimeout(() => {\n        this.countriesDataSource.paginator = this.countryOfTransferPaginator;\n        this.countriesDataSource.sort = this.countryOfTransferMatSort;\n      });\n  \n      // STEP SIX\n      this.securityMeasures = this.application['SecurityMeasures'];\n      this.securityMeasureDataSource = new MatTableDataSource(this.securityMeasures);\n      setTimeout(() => {\n          this.securityMeasureDataSource.paginator = this.securityMeasurePaginator;\n          this.securityMeasureDataSource.sort = this.securityMeasureMatSort;\n      });\n  \n      if (this.application.Attachment) {\n        this.document = { \n          Document: null, \n          Name: 'Supporting Documentation.pdf', \n          Size: null, \n          Base64: this.application.Attachment \n        };\n      }\n\n      this.formSecurityMeasures.get('RegistrationConsent').patchValue(this.application['RegistrationConsent'] == true ? true : null);\n      this.formSecurityMeasures.get('RegistrationDoneBy').patchValue(this.application['RegistrationDoneBy']);    \n    }\n  }\n\n  onSaveDraft(): void {\n    this.processing = true;\n\n    this.httpSub = this.http.put<ApiPayload>(this.endpoints.orgRegSaveDraft, this.getFormData())\n    .pipe(catchError(this.service.handleError))\n    .subscribe((response) => {\n\n      this.dialogRef = this.dialog.open(SuccessfulMessageDialogComponent, {\n        panelClass: ['successful-message-dialog', 'dialogs'],\n        disableClose: true,\n        data: {\n          title: response.message['title'],\n          message: response.message['body'],\n          status: response.code === 200 ? true : false,\n        }\n      });\n\n      this.processing = false;\n    }, (error) => {\n      this.processing = false;\n\n      if (error.error.message) {\n        this.dialogRef = this.dialog.open(SuccessfulMessageDialogComponent, {\n          panelClass: ['successful-message-dialog', 'dialogs'],\n          disableClose: true,\n          data: {\n            title: error.error.message['title'] ? error.error.message['title'] : 'Operation Failed',\n            message: error.error.message['body'] ? error.error.message['body'] : environment.technicalErrorResponse,\n            status: false,\n          }\n        });\n      } else {\n        this.service.determineErrorResponse(error);\n      }\n    });    \n  }\n\n  ngOnDestroy(): void {\n    if (this.httpSub) { this.httpSub.unsubscribe(); }\n  }\n\n\n}\n","\n<fury-page-layout mode=\"card\">\n    <fury-page-layout-header>\n        <fury-breadcrumbs [@fadeInRight] [crumbs]=\"['New Registration']\"\n                          current=\"New Application\"></fury-breadcrumbs>\n    </fury-page-layout-header>\n\n    <fury-page-layout-content [@fadeInUp]>\n        <main class=\"fadeInUp _delay4ms\">\n\n            <!-- <app-page-breadcrumb [title]=\"'Application for New Registration / Renewal'\"></app-page-breadcrumb> -->\n        \n            <mat-horizontal-stepper \n                [linear]=\"isLinear\"\n                [selectedIndex]=\"selectedIndex\"\n                labelPosition=\"bottom\" #stepper>\n        \n                <mat-step [stepControl]=\"formGeneralInformation\">\n                    <ng-template matStepLabel>\n                        <h3>Applicant</h3>\n                    </ng-template>\n        \n                    <form [formGroup]=\"formGeneralInformation\">\n                        <h1 class=\"full-width step-header\">Details of the applicant which could be an organisation or Individual that collects or processes Personal Data </h1>\n        \n                        <mat-form-field>\n                            <mat-label>Name of Organisation <span class=\"required-field\">required</span></mat-label>\n                            <input appUppercase matInput formControlName=\"OrganizationName\">       \n                            <mat-error *ngIf=\"formGeneralInformation.get('OrganizationName').invalid\">{{ getOrganizationNameErrorMessage() }}</mat-error>\n                        </mat-form-field>  \n        \n                        <div class=\"telephone-code-number-wrapper\">\n                            <mat-form-field class=\"fadeInUp _delay2ms\">\n                                <mat-label>Pick one </mat-label>\n                                <mat-select formControlName=\"PhoneNumberCode\">\n                                    <mat-option selected *ngIf=\"!selected\" value=\"256\">+256</mat-option>\n                                    <!-- <mat-option selected *ngIf=\"!selected\" value=\"256\">+256 - Uganda</mat-option> -->\n                                    <mat-option *ngFor=\"let code of countries\" [value]=\"code.PhoneCode\" (click)=\"selected = true\">\n                                        +{{ code.PhoneCode }}\n                                    </mat-option>\n                                </mat-select>\n                            </mat-form-field>\n        \n                            <!-- <mat-form-field class=\"fadeInUp _delay2ms\" [hintLabel]=\"'Organisation Telephone Number.'\"> -->\n                            <mat-form-field class=\"fadeInUp _delay2ms\">\n                                <mat-label>Organisation Telephone Number <span class=\"required-field\">required</span></mat-label>\n                                <input type=\"text\" maxlength=\"11\" matInput appTelephoneFormaterDirective formControlName=\"PhoneNumber\" placeholder=\"Ex. 414 318 111\">\n                                <mat-error *ngIf=\"formGeneralInformation.get('PhoneNumber').invalid\">{{ getTelephoneNumberErrorMessage() }}</mat-error>\n                            </mat-form-field> \n                        </div>                \n        \n                        <mat-form-field>\n                            <mat-label>Organisation Email Address <span class=\"required-field\">required</span></mat-label>\n                            <input appRemoveSpaces matInput formControlName=\"EmailAddress\">\n                            <mat-error *ngIf=\"formGeneralInformation.get('EmailAddress').invalid\">{{ getEmailAddressErrorMessage() }}</mat-error>\n                        </mat-form-field>   \n                                \n                        <mat-form-field [hintLabel]=\"'Choose all that apply'\">\n                            <mat-label>Category <span class=\"required-field\">required</span></mat-label>\n                            <mat-select multiple formControlName=\"DPPActCategory\">\n                                <mat-option *ngFor=\"let cat of organisationCategories\" [value]=\"cat.OrganisationCategoryId\">\n                                    {{ cat.OrganisationCategoryName }}\n                                </mat-option>\n                            </mat-select>   \n                            <mat-error *ngIf=\"formGeneralInformation.get('DPPActCategory').invalid\">{{ getSelectErrorMessage() }}</mat-error> \n                        </mat-form-field>                             \n        \n                        <mat-form-field>\n                            <mat-label>Type of Organisation <span class=\"required-field\">required</span></mat-label>\n                            <mat-select formControlName=\"OrganizationTypeID\" #typeOfOrganisation>\n                                <mat-option *ngFor=\"let type of organisationTypes\" (click)=\"OrganizationType = type.OrganisationType\" [value]=\"type.OrganisationTypeID\">\n                                    {{ type.OrganisationType }}\n                                </mat-option>\n                            </mat-select>\n                            <mat-error *ngIf=\"formGeneralInformation.get('OrganizationTypeID').invalid\">{{ getSelectErrorMessage() }}</mat-error> \n                        </mat-form-field>                   \n        \n                        <mat-form-field *ngIf=\"typeOfOrganisation.value && typeOfOrganisation.value !== 4\">\n                            <mat-label>Country of Incorporation <span class=\"required-field\">required</span></mat-label>\n                            <mat-select formControlName=\"CountryOfIncorporation\">\n                                <mat-option *ngFor=\"let country of countries\" (click)=\"CountryOfIncorporation = country.Name\" [value]=\"country.CountryID\">\n                                    {{ country.Name }}\n                                </mat-option>\n                            </mat-select>\n                            <mat-error *ngIf=\"formGeneralInformation.get('CountryOfIncorporation').invalid\">{{ getSelectErrorMessage() }}</mat-error> \n                        </mat-form-field>        \n        \n                        <mat-form-field *ngIf=\"typeOfOrganisation.value && typeOfOrganisation.value !== 4\">\n                            <mat-label>Registration Number <span class=\"required-field\">required</span></mat-label>\n                            <input appUppercase appRemoveSpaces matInput maxlength=\"25\" formControlName=\"URSBNumber\"> \n                            <mat-error *ngIf=\"formGeneralInformation.get('URSBNumber').invalid\">{{ getURSBNumberErrorMessage() }}</mat-error>\n                        </mat-form-field>     \n                        \n                        <mat-form-field>\n                            <mat-label>Sector <span class=\"required-field\">required</span></mat-label>\n                            <mat-select formControlName=\"SectorID\" #Sector>\n                                <mat-option *ngFor=\"let sector of sectors\" (click)=\"SectorName = sector.Sector\" [value]=\"sector.SectorID\">\n                                    {{ sector.Sector }}\n                                </mat-option>\n                            </mat-select>\n                            <mat-error *ngIf=\"formGeneralInformation.get('SectorID').invalid\">{{ getSelectErrorMessage() }}</mat-error>\n                        </mat-form-field>        \n                        \n                        <mat-form-field hintLabel=\"If Other, Please specify the Sector.\" *ngIf=\"Sector.value === 14\">\n                            <mat-label>Specify Sector <span class=\"required-field\">required</span></mat-label>\n                            <input appUppercase matInput maxlength=\"50\" formControlName=\"OtherSector\">    \n                            <mat-error *ngIf=\"formGeneralInformation.get('OtherSector').invalid\">{{ getOtherSectorErrorMessage() }}</mat-error>\n                        </mat-form-field>                 \n        \n                        <mat-form-field>\n                            <mat-label>Physical Address <span class=\"required-field\">required</span></mat-label>\n                            <input appUppercase matInput maxlength=\"255\" formControlName=\"Location\">            \n                            <mat-error *ngIf=\"formGeneralInformation.get('Location').invalid\">{{ getLocationErrorMessage() }}</mat-error>                \n                        </mat-form-field>  \n        \n                        <mat-form-field>\n                            <mat-label>Nature of Business Categories<span class=\"required-field\">required</span></mat-label>\n                            <mat-select formControlName=\"NatureOfBusinessCat\">\n                                <mat-option *ngFor=\"let cat of natureOfBusinessCat\" (click)=\"NatureOfBusinessCat = cat.NatureOfBusinessCategoryName\" [value]=\"cat.NatureOfBusinessCatId\">\n                                    {{ cat.NatureOfBusinessCategoryName }}\n                                </mat-option>\n                            </mat-select>    \n                            <mat-error *ngIf=\"formGeneralInformation.get('NatureOfBusinessCat').invalid\">{{ getSelectErrorMessage() }}</mat-error>\n                        </mat-form-field>                   \n        \n                        <mat-form-field [hintLabel]=\"'Choose all that apply'\">\n                            <mat-label>Nature of Business Sub-Categories <span class=\"required-field\">required</span></mat-label>\n                            <mat-select multiple formControlName=\"NatureOfBusinessSubCat\">\n                                <mat-option *ngFor=\"let sub of natureOfBusinessSubCat\" [value]=\"sub.NatureOfBusinessSubCatId\" [matTooltip]=\"sub.NatureOfBusinessSubCategoryName\">\n                                    {{ sub.NatureOfBusinessSubCategoryName }}\n                                </mat-option>\n                            </mat-select> \n                            <mat-error *ngIf=\"formGeneralInformation.get('NatureOfBusinessSubCat').invalid\">{{ getSelectErrorMessage() }}</mat-error>   \n                        </mat-form-field>                   \n                    </form>\n        \n                    <div class=\"button-wrapper\">\n                               \n        \n                        <button \n                            [disabled]=\"formGeneralInformation.invalid\"\n                            mat-button \n                            class=\"next-btn\" \n                            color=\"primary\" \n                            matStepperNext>\n                            Next\n                        </button>\n                    </div>             \n                </mat-step>\n        \n                <mat-step [stepControl]=\"formOrganisationDetails\">\n                    <ng-template matStepLabel>\n                        <h3>Data Protection <br />Officer</h3>\n                    </ng-template>\n        \n                    <form [formGroup]=\"formOrganisationDetails\">     \n        \n                        <h1 class=\"full-width step-header\">Details of Data Protection Officer </h1>    \n        \n                        <div class=\"grouped-items\" [ngClass]=\"{'full-width': formOrganisationDetails.get('DPORequired').value !== 'Yes'}\">\n                            <h3>Do you have a designated data protection officer ? </h3>\n            \n                            <mat-radio-group \n                                color=\"primary\" \n                                formControlName=\"DPORequired\" \n                                aria-label=\"Pick one\">\n                                <mat-radio-button value=\"Yes\">Yes</mat-radio-button>\n                                <mat-radio-button value=\"No\">No</mat-radio-button>\n                            </mat-radio-group>        \n                        </div>                  \n                        \n                        <mat-form-field *ngIf=\"formOrganisationDetails.get('DPORequired').value === 'Yes'\">\n                            <mat-label>Name <span class=\"required-field\">required</span></mat-label>\n                            <input formControlName=\"DPOName\" matInput>\n                            <mat-error *ngIf=\"formOrganisationDetails.get('DPOName').invalid\">{{ getDPONameErrorMessage() }}</mat-error>\n                        </mat-form-field>\n                \n                        <mat-form-field *ngIf=\"formOrganisationDetails.get('DPORequired').value === 'Yes'\">\n                            <mat-label>Physical Address <span class=\"required-field\">required</span></mat-label>\n                            <input formControlName=\"DPOPhysicalAddress\" maxlength=\"255\" matInput>\n                            <mat-error *ngIf=\"formOrganisationDetails.get('DPOPhysicalAddress').invalid\">{{ getDPOPhysicalAddressErrorMessage() }}</mat-error>\n                        </mat-form-field>\n                        \n                        <div class=\"telephone-code-number-wrapper\" *ngIf=\"formOrganisationDetails.get('DPORequired').value === 'Yes'\">\n                            <mat-form-field class=\"fadeInUp _delay2ms\">\n                                <mat-label>Pick one </mat-label>\n                                <mat-select formControlName=\"PhoneNumberCode\">\n                                    <mat-option selected *ngIf=\"!DPOSelected\" value=\"256\">+256</mat-option>\n                                    <!-- <mat-option selected *ngIf=\"!selected\" value=\"256\">+256 - Uganda</mat-option> -->\n                                    <mat-option *ngFor=\"let code of countries\" [value]=\"code.PhoneCode\" (click)=\"DPOSelected = true\">\n                                        +{{ code.PhoneCode }}\n                                    </mat-option>\n                                </mat-select>\n                                <!-- <mat-error *ngIf=\"formGeneralInformation.get('PhoneNumberCode').invalid\">{{ getSelectInputErrorMessage() }}</mat-error>      -->\n                            </mat-form-field>\n        \n                            <!-- <mat-form-field class=\"fadeInUp _delay2ms\" [hintLabel]=\"'Organisation Telephone Number.'\"> -->\n                            <mat-form-field class=\"fadeInUp _delay2ms\">\n                                <mat-label>Telephone Number <span class=\"required-field\">required</span></mat-label>\n                                <input type=\"text\" maxlength=\"11\" matInput appTelephoneFormaterDirective formControlName=\"DPOPhoneNumber\" placeholder=\"Ex. 414 318 111\">\n                                <mat-error *ngIf=\"formOrganisationDetails.get('DPOPhoneNumber').invalid\">{{ getDPOPhoneNumberErrorMessage() }}</mat-error>\n                            </mat-form-field> \n                        </div>                  \n                \n                        <mat-form-field *ngIf=\"formOrganisationDetails.get('DPORequired').value === 'Yes'\">\n                            <mat-label>Email Address <span class=\"required-field\">required</span></mat-label>\n                            <input appRemoveSpaces formControlName=\"DPOEmailAddress\" matInput>\n                            <mat-error *ngIf=\"formOrganisationDetails.get('DPOEmailAddress').invalid\">{{ getDPOEmailAddressErrorMessage() }}</mat-error>\n                        </mat-form-field>       \n        \n                        <mat-form-field *ngIf=\"formOrganisationDetails.get('DPORequired').value === 'Yes'\" class=\"full-width\" hintLabel=\"Any other title held apart from DPO (Data Protection Officer).\">\n                            <mat-label>Title Held <span class=\"required-field\">required</span></mat-label>\n                            <textarea #PositionInput matInput formControlName=\"DPOPositionInOrganisation\" maxlength=\"1000\"></textarea>\n                            <mat-hint align=\"end\">{{ PositionInput.value.length }} / 1000</mat-hint>\n                            <mat-error *ngIf=\"formOrganisationDetails.get('DPOPositionInOrganisation').invalid\">{{ getDPOPositionInOrganisationErrorMessage() }}</mat-error>\n                        </mat-form-field>                  \n                    </form>\n        \n                    <div class=\"button-wrapper\">       \n                        <button mat-button class=\"back-btn\" matStepperPrevious>Back</button>   \n                        \n                        \n\n                        <button \n                            [disabled]=\"formOrganisationDetails.invalid\"\n                            mat-button \n                            class=\"next-btn\" \n                            color=\"primary\" \n                            matStepperNext>\n                            Next\n                        </button>\n                    </div>             \n                </mat-step>\n        \n                <mat-step [stepControl]=\"formPersonalDataHeld\">\n                    <ng-template matStepLabel>\n                        <h3>Data Collected <br /> or Processed</h3>\n                    </ng-template>\n        \n                    <form [formGroup]=\"formPersonalDataHeld\" class=\"personal-data-affected\">       \n                        \n                        <h1 class=\"full-width step-header\">Description of Data collected or processed </h1>\n        \n                        <mat-form-field hintLabel=\"Choose all that apply.\" class=\"full-width\">\n                            <mat-label>Source of Data <span class=\"required-field\">required</span></mat-label>\n                            <mat-select multiple formControlName=\"SourceOfDataID\">\n                                <mat-option *ngFor=\"let source of dataSources\" [value]=\"source.DataSourceID\">\n                                    {{ source.DataSource }}\n                                </mat-option>\n                            </mat-select>    \n                            <mat-error *ngIf=\"formPersonalDataHeld.get('SourceOfDataID').invalid\">{{ getSelectErrorMessage() }}</mat-error> \n                        </mat-form-field>        \n        \n                        <h1 class=\"full-width heading\">Personal Data Collected Or Processed</h1>\n                        \n                        <section *ngFor=\"let category of dataCategories; let i = index\" class=\"expand-section categories\">        \n                            <div>\n                                <h3 [innerHTML]=\"category.DataCategory\"></h3>\n                                <mat-icon matTooltipPosition=\"right\"  [matTooltip]=\"category.DataDescription\">info</mat-icon>\n                            </div>\n\n                            <mat-checkbox\n                                *ngFor=\"let SubCategory of category.SubCategories\" \n                                [ngClass]=\"{'full-width': category.SubCategories.length === 1}\"\n                                color=\"primary\"\n                                [checked]=\"SubCategory.IsChecked\"\n                                (change)=\"onChangeSubCategory($event,SubCategory)\"\n                                [required]=\"'false'\">\n                                {{ SubCategory.DataSubCategory }}\n                            </mat-checkbox>    \n                        </section>\n                    </form>\n        \n                    <div class=\"button-wrapper\">       \n                        <button mat-button class=\"back-btn\" matStepperPrevious>Back</button>\n        \n                     \n\n                        <button \n                            [disabled]=\"formPersonalDataHeld.invalid || selectedDataSubCategory.length === 0\"\n                            mat-button \n                            class=\"next-btn\" \n                            color=\"primary\" \n                            matStepperNext>\n                            Next\n                        </button>\n                    </div>             \n                </mat-step>\n        \n                <mat-step [stepControl]=\"formPurposeRetention\">\n                    <ng-template matStepLabel>\n                        <h3>Purpose & Retention</h3>\n                    </ng-template>\n        \n                    <form [formGroup]=\"formPurposeRetention\">       \n                        \n                        <h1 class=\"full-width step-header\">Description of Purpose for which data is collected or processed </h1>\n        \n                        <mat-form-field hintLabel=\"Why do you collect personal Data?\">\n                            <mat-label>For What Purpose ?<span class=\"required-field\">required</span></mat-label>\n                            <mat-select formControlName=\"Purpose\" multiple>\n                                <mat-option *ngFor=\"let purpose of dataPurposes\" [value]=\"purpose.DataPurposeID\">\n                                    {{ purpose.DataPurpose }}\n                                </mat-option>\n                            </mat-select>  \n                            <mat-error *ngIf=\"formPurposeRetention.get('Purpose').invalid\">{{ getSelectErrorMessage() }}</mat-error>   \n                        </mat-form-field>\n        \n                        <mat-form-field hintLabel=\"If the purpose is Collection / Processing is required by Law.\" *ngIf=\"SpecifyTheLaw\">\n                            <mat-label>Specify the Law <span class=\"required-field\">required</span></mat-label>\n                            <input matInput #SpecifyTheLawInput maxlength=\"1000\" formControlName=\"SpecifyTheLaw\">        \n                            <mat-hint align=\"end\">{{ SpecifyTheLawInput.value.length }} / 1000</mat-hint>    \n                            <mat-error *ngIf=\"formPurposeRetention.get('SpecifyTheLaw').invalid\">{{ getRequiredErrorMessage() }}</mat-error>\n                        </mat-form-field>  \n        \n                        <mat-form-field hintLabel=\"If the purpose is to provide services / products to Individuals.\" *ngIf=\"ServiceOrProductProvided\">\n                            <mat-label>Specify the Service / Product Provided<span class=\"required-field\">required</span></mat-label>\n                            <input matInput #ServiceOrProductProvidedInput maxlength=\"1000\" formControlName=\"ServiceOrProductProvided\">     \n                            <mat-hint align=\"end\">{{ ServiceOrProductProvidedInput.value.length }} / 1000</mat-hint>    \n                            <mat-error *ngIf=\"formPurposeRetention.get('ServiceOrProductProvided').invalid\">{{ getRequiredErrorMessage() }}</mat-error>\n                        </mat-form-field>  \n        \n                        <mat-form-field hintLabel=\"If the purpose is for Compliance with a Legal Obligation.\" *ngIf=\"SpecifyLegalObligation\">\n                            <mat-label>Specify the Legal Obligation<span class=\"required-field\">required</span></mat-label>\n                            <input matInput #SpecifyLegalObligationInput maxlength=\"1000\" formControlName=\"SpecifyLegalObligation\">  \n                            <mat-hint align=\"end\">{{ SpecifyLegalObligationInput.value.length }} / 1000</mat-hint>    \n                            <mat-error *ngIf=\"formPurposeRetention.get('SpecifyLegalObligation').invalid\">{{ getRequiredErrorMessage() }}</mat-error>\n                        </mat-form-field>  \n                        \n                        <mat-form-field hintLabel=\"Approximate number of Personal Data Records held.\">\n                            <mat-label>Total Records <span class=\"optional-field\">optional</span></mat-label>\n                            <input appCurrencyDirective matInput maxlength=\"14\" formControlName=\"TotalRecordsAtRegistration\">                            \n                            <mat-error *ngIf=\"formPurposeRetention.get('TotalRecordsAtRegistration').invalid\">{{ getPatternErrorMessage() }}</mat-error>\n                        </mat-form-field>  \n                        \n                        <mat-form-field hintLabel=\"The % annual growth of Personal Records held\">\n                            <mat-label>Percentage Annual Growth <span class=\"optional-field\">optional</span></mat-label>\n                            <input appCurrencyDirective matInput max=\"100\" maxlength=\"3\" formControlName=\"RecordPercentageGrowth\">                            \n                            <mat-error *ngIf=\"formPurposeRetention.get('RecordPercentageGrowth').invalid\">{{ getRecordPercentageGrowthErrorMessage() }}</mat-error>\n                            <mat-hint align=\"end\">Max. 100%</mat-hint>      \n                            <span matSuffix>%</span>\n                        </mat-form-field>   \n        \n                        <mat-form-field hintLabel=\"Duration for which personal data shall be kept (Years).\">\n                            <mat-label>Retention period <span class=\"required-field\">required</span></mat-label>\n                            <input appCurrencyDirective max=\"100\" matInput maxlength=\"3\" formControlName=\"RetentionPeriod\">                          \n                            <mat-error *ngIf=\"formPurposeRetention.get('RetentionPeriod').invalid\">{{ getRetentionPeriodErrorMessage() }}</mat-error>\n                            <mat-hint align=\"end\">Max. 100 years</mat-hint>      \n                            <span matSuffix>Year(s)</span>\n                        </mat-form-field>\n                    </form>\n        \n                    <div class=\"button-wrapper\">       \n                        <button mat-button class=\"back-btn\" matStepperPrevious>Back</button>\n        \n                      \n\n                        <button \n                            [disabled]=\"formPurposeRetention.invalid\"\n                            mat-button \n                            class=\"next-btn\" \n                            color=\"primary\" \n                            matStepperNext>\n                            Next\n                        </button>\n                    </div>             \n                </mat-step>\n        \n                <mat-step [stepControl]=\"formThirdParties\">\n                    <ng-template matStepLabel>\n                        <h3>Disclosure & Transfer</h3>\n                    </ng-template>\n        \n                    <form [formGroup]=\"formThirdParties\">\n        \n                        <h1 class=\"full-width step-header\">List of persons or Bodies to whom personal data may be disclosed</h1>\n                        \n                        <div class=\"grouped-items full-width\">\n                            <h3>Do you disclose Personal Data to other Persons or Bodies ?</h3>\n            \n                            <mat-radio-group color=\"primary\" aria-label=\"Pick one\" formControlName=\"PersonalDataIsForDisclosure\">\n                                <mat-radio-button value=\"Yes\">Yes</mat-radio-button>\n                                <mat-radio-button value=\"No\">No</mat-radio-button>\n                            </mat-radio-group>        \n                        </div>    \n\n                        <section \n                            *ngIf=\"formThirdParties.get('PersonalDataIsForDisclosure').value === 'Yes'\"\n                            class=\"expand-section reduced-properties table-wrapper fadeInUp _delay3ms\">\n                            <button \n                                mat-button\n                                color=\"primary\"\n                                [disabled]=\"processing\"\n                                class=\"add-item-button\"\n                                (click)=\"onAddAThirdParty()\">\n                                <div class=\"button-label\">\n                                    <mat-icon>add</mat-icon>                            \n                                    <span>Add Person / Body</span>\n                                </div>\n                            </button>\n                            \n                            <div class=\"table-wrapper\">\n                                <table \n                                    mat-table \n                                    #thirdPartyMatSort=\"matSort\"\n                                    matSortDisableClear=\"true\"\n                                    [dataSource]=\"thirdPartyDataSource\"\n                                    matSort>\n                    \n                                    <ng-container matColumnDef=\"Count\">\n                                        <th mat-header-cell *matHeaderCellDef> # </th>\n                                        <td mat-cell *matCellDef=\"let index = index\"> {{ index + 1 }} </td>\n                                    </ng-container>\n                    \n                                    <ng-container matColumnDef=\"NameOfThirdParty\">\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Person / Body </th>\n                                        <td mat-cell *matCellDef=\"let row\">{{ row.ThirdPartyName }}</td>\n                                    </ng-container>          \n                    \n                                    <ng-container matColumnDef=\"Purpose\">\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Purpose </th>\n                                        <td mat-cell *matCellDef=\"let row\">{{ row.Purpose }}</td>\n                                    </ng-container>                                 \n                    \n                                    <!-- Actions Column -->\n                                    <ng-container matColumnDef=\"Actions\">\n                                        <th mat-header-cell *matHeaderCellDef> Actions </th>\n                                        <td mat-cell *matCellDef=\"let row; let index = index\">\n                                            <button \n                                                mat-button \n                                                class=\"action-btn\"\n                                                [matMenuTriggerFor]=\"menu\" \n                                                (click)=\"$event.stopPropagation()\"\n                                                matTooltip=\"See more options\">\n                                                <mat-icon>more_vert</mat-icon>\n                                            </button>\n                    \n                                            <mat-menu yPosition=\"below\" #menu=\"matMenu\" class=\"more-options-mat-menu\">\n                    \n                                                <button \n                                                    mat-menu-item \n                                                    (click)=\"$event.stopPropagation();onEditThirdParty(row)\">\n                                                    <mat-icon>edit</mat-icon>\n                                                    <span>Make Changes</span>\n                                                </button>\n                                                      \n                                                <hr />\n                    \n                                                <button \n                                                    mat-menu-item \n                                                    (click)=\"$event.stopPropagation();onRemoveThirdParty(row)\">\n                                                    <mat-icon color=\"warn\">delete</mat-icon>\n                                                    <span>Remove</span>\n                                                </button>\n                    \n                                            </mat-menu>                                                  \n                                        </td>\n                                    </ng-container>\n                    \n                                    <tr mat-header-row *matHeaderRowDef=\"thirdPartyDisplayedColumns\"></tr>\n                                    <tr mat-row *matRowDef=\"let row; columns: thirdPartyDisplayedColumns;\" class=\"mat-data-row\"></tr>\n                                </table>\n        \n                                <mat-paginator \n                                    #thirdPartyPaginator\n                                    [pageSize]=\"10\"\n                                    [pageSizeOptions]=\"[5, 10]\">\n                                </mat-paginator>                    \n                            </div>                \n                        </section>    \n                        \n                        <hr class=\"full-width\" />\n        \n                        <div class=\"grouped-items full-width\">\n                            <h3>Do you Transfer personal data outside Uganda ?</h3>\n            \n                            <mat-radio-group color=\"primary\" aria-label=\"Pick one\" formControlName=\"StoreDataOutsideCountry\">\n                                <mat-radio-button value=\"Yes\">Yes</mat-radio-button>\n                                <mat-radio-button value=\"No\">No</mat-radio-button>\n                            </mat-radio-group>        \n                        </div> \n        \n                        <section \n                            *ngIf=\"formThirdParties.get('StoreDataOutsideCountry').value === 'Yes'\"\n                            class=\"expand-section reduced-properties table-wrapper\">\n                            <button \n                                mat-button\n                                color=\"primary\"\n                                [disabled]=\"processing\"\n                                class=\"add-item-button\"\n                                (click)=\"onAddACountry()\">\n                                <div class=\"button-label\">\n                                    <mat-icon>add</mat-icon>                            \n                                    <span>Add A Country</span>\n                                </div>\n                            </button>\n                            \n                            <div class=\"table-wrapper\">\n                                <table \n                                    mat-table \n                                    #countryOfTransferMatSort=\"matSort\"\n                                    matSortDisableClear=\"true\"\n                                    [dataSource]=\"countriesDataSource\"\n                                    matSort>\n                    \n                                    <ng-container matColumnDef=\"Count\">\n                                        <th mat-header-cell *matHeaderCellDef> # </th>\n                                        <td mat-cell *matCellDef=\"let index = index\"> {{ index + 1 }} </td>\n                                    </ng-container>\n                    \n                                    <ng-container matColumnDef=\"Country\">\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Country </th>\n                                        <td mat-cell *matCellDef=\"let row\">{{ row.Country }}</td>\n                                    </ng-container>          \n                    \n                                    <ng-container matColumnDef=\"Purpose\">\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Purpose </th>\n                                        <td mat-cell *matCellDef=\"let row\">{{ row.Purpose }}</td>\n                                    </ng-container>                                 \n                    \n                                    <ng-container matColumnDef=\"Description\">\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Description </th>\n                                        <td mat-cell *matCellDef=\"let row\">{{ row.Description }}</td>\n                                    </ng-container>                                 \n                    \n                                    <!-- Actions Column -->\n                                    <ng-container matColumnDef=\"Actions\">\n                                        <th mat-header-cell *matHeaderCellDef> Actions </th>\n                                        <td mat-cell *matCellDef=\"let row; let index = index\">\n                                            <button \n                                                mat-button \n                                                class=\"action-btn\"\n                                                [matMenuTriggerFor]=\"menu\" \n                                                (click)=\"$event.stopPropagation()\"\n                                                matTooltip=\"See more options\">\n                                                <mat-icon>more_vert</mat-icon>\n                                            </button>\n                    \n                                            <mat-menu yPosition=\"below\" #menu=\"matMenu\" class=\"more-options-mat-menu\">\n                    \n                                                <button \n                                                    mat-menu-item \n                                                    (click)=\"$event.stopPropagation();onEditCountry(row)\">\n                                                    <mat-icon>edit</mat-icon>\n                                                    <span>Make Changes</span>\n                                                </button>\n                                                      \n                                                <hr />\n                    \n                                                <button \n                                                    mat-menu-item \n                                                    (click)=\"$event.stopPropagation();onRemoveCountry(row)\">\n                                                    <mat-icon color=\"warn\">delete</mat-icon>\n                                                    <span>Remove</span>\n                                                </button>\n                    \n                                            </mat-menu>                                                  \n                                        </td>\n                                    </ng-container>\n                    \n                                    <tr mat-header-row *matHeaderRowDef=\"countryDisplayedColumns\"></tr>\n                                    <tr mat-row *matRowDef=\"let row; columns: countryDisplayedColumns;\" class=\"mat-data-row\"></tr>\n                                </table>\n        \n                                <mat-paginator \n                                    #countryOfTransferPaginator\n                                    [pageSize]=\"10\"\n                                    [pageSizeOptions]=\"[5, 10]\">\n                                </mat-paginator>                    \n                            </div>                \n                        </section>                   \n        \n                    </form>\n        \n                    <div class=\"button-wrapper\">\n                        <button mat-button class=\"back-btn\" matStepperPrevious>Back</button>\n                        \n                  \n\n                        <button \n                            mat-button \n                            [disabled]=\"formThirdParties.invalid \n                            || processing \n                            || ((formThirdParties.get('PersonalDataIsForDisclosure').value === 'Yes') && (thirdParties.length === 0)) \n                            || ((formThirdParties.get('StoreDataOutsideCountry').value === 'Yes') && (countries.length === 0))\" \n                            class=\"next-btn\" \n                            color=\"primary\" \n                            matStepperNext>\n                            Next\n                        </button>\n                    </div>\n                </mat-step>\n        \n                <mat-step [stepControl]=\"formSecurityMeasures\">\n                    <ng-template matStepLabel>\n                        <h3>Security Information</h3>\n                    </ng-template>\n        \n                    <form [formGroup]=\"formSecurityMeasures\">\n        \n                        <h1 class=\"full-width step-header\">State security measures in place to safeguard personal data collected or processed.</h1>\n        \n                        <section class=\"expand-section reduced-properties table-wrapper no-padding\">\n                            <button \n                                mat-button\n                                color=\"primary\"\n                                [disabled]=\"processing\"\n                                class=\"add-item-button\"\n                                (click)=\"onAddSecurityMeasure()\">\n                                <div class=\"button-label\">\n                                    <mat-icon>add</mat-icon>                            \n                                    <span>Add A Security Measure</span>\n                                </div>\n                            </button>\n                            \n                            <div class=\"table-wrapper\">\n                                <table \n                                    mat-table \n                                    #securityMeasureMatSort=\"matSort\"\n                                    matSortDisableClear=\"true\"\n                                    [dataSource]=\"securityMeasureDataSource\"\n                                    matSort>\n                    \n                                    <ng-container matColumnDef=\"Count\">\n                                        <th mat-header-cell *matHeaderCellDef> # </th>\n                                        <td mat-cell *matCellDef=\"let index = index\"> {{ index + 1 }} </td>\n                                    </ng-container>\n                    \n                                    <ng-container matColumnDef=\"SecurityMeasure\">\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Security Measure </th>\n                                        <td mat-cell *matCellDef=\"let row\">{{ row.SecurityMeasure }}</td>\n                                    </ng-container>                                  \n                    \n                                    <!-- Actions Column -->\n                                    <ng-container matColumnDef=\"Actions\">\n                                        <th mat-header-cell *matHeaderCellDef> Actions </th>\n                                        <td mat-cell *matCellDef=\"let row; let index = index\">\n                                            <button \n                                                mat-button \n                                                class=\"action-btn\"\n                                                [matMenuTriggerFor]=\"menu\" \n                                                (click)=\"$event.stopPropagation()\"\n                                                matTooltip=\"See more options\">\n                                                <mat-icon>more_vert</mat-icon>\n                                            </button>\n                    \n                                            <mat-menu yPosition=\"below\" #menu=\"matMenu\" class=\"more-options-mat-menu\">\n                \n                                                <button \n                                                    mat-menu-item \n                                                    (click)=\"$event.stopPropagation();onEditSecurityMeasure(row)\">\n                                                    <mat-icon>edit</mat-icon>\n                                                    <span>Make Changes</span>\n                                                </button>\n                                                      \n                                                <hr />\n                    \n                                                <button \n                                                    mat-menu-item \n                                                    (click)=\"$event.stopPropagation();onRemoveSecurityMeasure(row)\">\n                                                    <mat-icon color=\"warn\">delete</mat-icon>\n                                                    <span>Remove</span>\n                                                </button>                                        \n                    \n                                            </mat-menu>                                                  \n                                        </td>\n                                    </ng-container>\n                    \n                                    <tr mat-header-row *matHeaderRowDef=\"securityMeasuresDisplayedColumns\"></tr>\n                                    <tr mat-row *matRowDef=\"let row; columns: securityMeasuresDisplayedColumns;\" [ngClass]=\"{'selected-mat-data-row': selectedSpouse === row}\" class=\"mat-data-row\"></tr>\n                                </table>\n        \n                                <mat-paginator \n                                    #securityMeasurePaginator\n                                    [pageSize]=\"10\"\n                                    [pageSizeOptions]=\"[5, 10]\">\n                                </mat-paginator>                    \n                            </div>                \n                        </section>    \n                        \n                        <section class=\"expand-section reduced-properties table-wrapper margin documents\">\n                            <h1 class=\"full-width step-header\">Attach supporting documentation eg approved information security policy.</h1>\n        \n                            <div class=\"buttons\">\n                                <button \n                                    mat-button\n                                    color=\"primary\"\n                                    [disabled]=\"processing\"\n                                    class=\"add-item-button\"\n                                    (click)=\"onUploadAttachments()\">\n                                    <div class=\"button-label\">\n                                        <mat-icon>add</mat-icon>                            \n                                        <span> {{ document ? 'Replace Document' : 'Upload Attachment' }} </span>\n                                    </div>\n                                </button>\n            \n                                <button \n                                    mat-button\n                                    *ngIf=\"document\"\n                                    color=\"primary\"\n                                    [disabled]=\"processing\"\n                                    class=\"remove-button\"\n                                    (click)=\"onRemoveDocument()\">\n                                    <div class=\"button-label\">\n                                        <mat-icon>clear</mat-icon>\n                                        <span> Remove Document </span>\n                                    </div>\n                                </button>\n                            </div>\n        \n                            <div *ngIf=\"document\" class=\"uploaded-document\" matTooltip=\"Open Document\" (click)=\"onReadDocument(document)\">\n                                <img src=\"./assets/img/pdf.png\" alt=\"\">\n        \n                                <span>Document: {{ document.Name }} <span>  -  {{ document.Size }} Mbs</span></span>\n                            </div>\n        \n                        </section>\n        \n                        <hr class=\"full-width\" />\n        \n                        \n                        \n        \n                        <hr class=\"full-width\" />\n        \n                        <mat-checkbox\n                            class=\"full-width\"\n                            formControlName=\"RegistrationConsent\"\n                            color=\"primary\">\n                            I certify that the above information is correct and complete and here by apply to be registered as \n                            data collector/ data processor / data controller (This shall be based on th category selected) \n                            under the data Protection and Privacy Act.\n                            <mat-error *ngIf=\"formSecurityMeasures.get('RegistrationConsent').invalid\">{{ getCheckboxErrorMessage() }}</mat-error>   \n                        </mat-checkbox>       \n                        \n                        <mat-form-field class=\"full-width\" hintLabel=\"The person authorized to complete and submit this application on the behalf of the applicant organization\">\n                            <mat-label>Name and title of person submitting the application<span class=\"required-field\">required</span></mat-label>\n                            <input appUppercase #RegistrationDoneByInput matInput maxlength=\"50\" formControlName=\"RegistrationDoneBy\">  \n                            <mat-error *ngIf=\"formSecurityMeasures.get('RegistrationDoneBy').invalid\">{{ getRegistrationDoneByErrorMessage() }}</mat-error>                             \n                            <mat-hint align=\"end\">{{ RegistrationDoneByInput.value.length }} / 50</mat-hint>    \n                        </mat-form-field>                  \n        \n                    </form>\n        \n                    <div class=\"button-wrapper\">\n                        <button mat-button class=\"back-btn\" matStepperPrevious>Back</button>\n\n                                     \n\n                        <div class=\"buttons\">\n                            <button\n                                mat-button\n                                color=\"primary\" \n                                [disabled]=\"formGeneralInformation.invalid || formOrganisationDetails.invalid || formPersonalDataHeld.invalid || formPurposeRetention.invalid || formThirdParties.invalid || formSecurityMeasures.invalid || processing || securityMeasures.length === 0 || !documentForm3 || !proofOfPayment\" \n                                class=\"download\" \n                                matTooltip=\"Keep a copy of the information you have filled in\"\n                                (click)=\"onPreviewForm(true)\">\n                                <div class=\"button-label\">\n                                    <mat-icon>sim_card_download</mat-icon>\n                                    <span>Download</span>\n                                </div>\n                            </button>\n        \n                            <button\n                                mat-button\n                                color=\"primary\" \n                                [disabled]=\"formGeneralInformation.invalid || formOrganisationDetails.invalid || formPersonalDataHeld.invalid || formPurposeRetention.invalid || formThirdParties.invalid || formSecurityMeasures.invalid || processing || securityMeasures.length === 0 || !documentForm3 || !proofOfPayment\" \n                                class=\"preview\" \n                                matTooltip=\"Have a look at all the information you have filled in before sending.\"\n                                (click)=\"onPreviewForm(false)\">\n                                <div class=\"button-label\">\n                                    <mat-icon>visibility</mat-icon>\n                                    <span>Preview</span>\n                                </div>\n                            </button>\n        \n                        \n                            <button \n                                mat-button \n                                class=\"next-btn submit-btn\" \n                                [disabled]=\"formGeneralInformation.invalid || formOrganisationDetails.invalid || formPersonalDataHeld.invalid || formPurposeRetention.invalid || formThirdParties.invalid || formSecurityMeasures.invalid || processing || securityMeasures.length === 0 || !documentForm3 || !proofOfPayment\" \n                                [ngClass]=\"{'inline-processing-btn': processing}\" \n                                color=\"primary\" \n                                (click)=\"onSubmit()\">\n                                <app-inline-mat-spinner *ngIf=\"processing\"></app-inline-mat-spinner>                  \n                                <span>Submit Application</span>                    \n                            </button>                \n                        </div>\n                    </div>\n                </mat-step>\n        \n            </mat-horizontal-stepper>   \n        </main>\n    </fury-page-layout-content>\n</fury-page-layout>\n\n\n","'use strict';\n\n/******************************************************************************\n * Created 2008-08-19.\n *\n * Dijkstra path-finding functions. Adapted from the Dijkstar Python project.\n *\n * Copyright (C) 2008\n *   Wyatt Baldwin <self@wyattbaldwin.com>\n *   All rights reserved\n *\n * Licensed under the MIT license.\n *\n *   http://www.opensource.org/licenses/mit-license.php\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *****************************************************************************/\nvar dijkstra = {\n  single_source_shortest_paths: function(graph, s, d) {\n    // Predecessor map for each node that has been encountered.\n    // node ID => predecessor node ID\n    var predecessors = {};\n\n    // Costs of shortest paths from s to all nodes encountered.\n    // node ID => cost\n    var costs = {};\n    costs[s] = 0;\n\n    // Costs of shortest paths from s to all nodes encountered; differs from\n    // `costs` in that it provides easy access to the node that currently has\n    // the known shortest path from s.\n    // XXX: Do we actually need both `costs` and `open`?\n    var open = dijkstra.PriorityQueue.make();\n    open.push(s, 0);\n\n    var closest,\n        u, v,\n        cost_of_s_to_u,\n        adjacent_nodes,\n        cost_of_e,\n        cost_of_s_to_u_plus_cost_of_e,\n        cost_of_s_to_v,\n        first_visit;\n    while (!open.empty()) {\n      // In the nodes remaining in graph that have a known cost from s,\n      // find the node, u, that currently has the shortest path from s.\n      closest = open.pop();\n      u = closest.value;\n      cost_of_s_to_u = closest.cost;\n\n      // Get nodes adjacent to u...\n      adjacent_nodes = graph[u] || {};\n\n      // ...and explore the edges that connect u to those nodes, updating\n      // the cost of the shortest paths to any or all of those nodes as\n      // necessary. v is the node across the current edge from u.\n      for (v in adjacent_nodes) {\n        if (adjacent_nodes.hasOwnProperty(v)) {\n          // Get the cost of the edge running from u to v.\n          cost_of_e = adjacent_nodes[v];\n\n          // Cost of s to u plus the cost of u to v across e--this is *a*\n          // cost from s to v that may or may not be less than the current\n          // known cost to v.\n          cost_of_s_to_u_plus_cost_of_e = cost_of_s_to_u + cost_of_e;\n\n          // If we haven't visited v yet OR if the current known cost from s to\n          // v is greater than the new cost we just found (cost of s to u plus\n          // cost of u to v across e), update v's cost in the cost list and\n          // update v's predecessor in the predecessor list (it's now u).\n          cost_of_s_to_v = costs[v];\n          first_visit = (typeof costs[v] === 'undefined');\n          if (first_visit || cost_of_s_to_v > cost_of_s_to_u_plus_cost_of_e) {\n            costs[v] = cost_of_s_to_u_plus_cost_of_e;\n            open.push(v, cost_of_s_to_u_plus_cost_of_e);\n            predecessors[v] = u;\n          }\n        }\n      }\n    }\n\n    if (typeof d !== 'undefined' && typeof costs[d] === 'undefined') {\n      var msg = ['Could not find a path from ', s, ' to ', d, '.'].join('');\n      throw new Error(msg);\n    }\n\n    return predecessors;\n  },\n\n  extract_shortest_path_from_predecessor_list: function(predecessors, d) {\n    var nodes = [];\n    var u = d;\n    var predecessor;\n    while (u) {\n      nodes.push(u);\n      predecessor = predecessors[u];\n      u = predecessors[u];\n    }\n    nodes.reverse();\n    return nodes;\n  },\n\n  find_path: function(graph, s, d) {\n    var predecessors = dijkstra.single_source_shortest_paths(graph, s, d);\n    return dijkstra.extract_shortest_path_from_predecessor_list(\n      predecessors, d);\n  },\n\n  /**\n   * A very naive priority queue implementation.\n   */\n  PriorityQueue: {\n    make: function (opts) {\n      var T = dijkstra.PriorityQueue,\n          t = {},\n          key;\n      opts = opts || {};\n      for (key in T) {\n        if (T.hasOwnProperty(key)) {\n          t[key] = T[key];\n        }\n      }\n      t.queue = [];\n      t.sorter = opts.sorter || T.default_sorter;\n      return t;\n    },\n\n    default_sorter: function (a, b) {\n      return a.cost - b.cost;\n    },\n\n    /**\n     * Add a new item to the queue and ensure the highest priority element\n     * is at the front of the queue.\n     */\n    push: function (value, cost) {\n      var item = {value: value, cost: cost};\n      this.queue.push(item);\n      this.queue.sort(this.sorter);\n    },\n\n    /**\n     * Return the highest priority element in the queue.\n     */\n    pop: function () {\n      return this.queue.shift();\n    },\n\n    empty: function () {\n      return this.queue.length === 0;\n    }\n  }\n};\n\n\n// node.js module exports\nif (typeof module !== 'undefined') {\n  module.exports = dijkstra;\n}\n","import {HttpClient} from '@angular/common/http';\nimport {AfterContentInit, ChangeDetectorRef, Component, OnDestroy, OnInit, ViewChild} from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {MatDialog} from '@angular/material/dialog';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {forkJoin, Observable, Subscription} from 'rxjs';\n// tslint:disable-next-line:max-line-length\nimport {\n  ApiPayload,\n  Country,\n  CountryOfTransfer,\n  DataCategory,\n  DataProtectionOfficer,\n  DataPurposes,\n  DataSource,\n  DataSubCategory,\n  FileUpload,\n  MainActivity,\n  NatureOfBusinessCat,\n  NatureOfBusinessSubCat,\n  OrganisationCategory,\n  OrganisationType,\n  Sector,\n  SecurityMeasure,\n  ThirdParty,\n  ChildrenDataPurpose\n} from '../../../../../services/api.model';\nimport {catchError} from 'rxjs/operators';\nimport {MatCheckboxChange} from '@angular/material/checkbox';\nimport {ApiEndpointsService} from '../../../../../services/api-endpoints.service';\nimport {ApiService} from '../../../../../services/api.service';\nimport {OrgNoticeComponent} from '../../../../../layout/dialogs/org-registration/org-notice/org-notice.component';\nimport {OrgMainActivityComponent} from '../../../../../layout/dialogs/org-registration/org-main-activity/org-main-activity.component';\nimport {\n  OrgDataProtectionOfficerComponent\n} from '../../../../../layout/dialogs/org-registration/org-data-protection-officer/org-data-protection-officer.component';\nimport {\n  OrgSecurityMeasuresComponent\n} from '../../../../../layout/dialogs/org-registration/org-security-measures/org-security-measures.component';\nimport {OrgThirdPartyComponent} from '../../../../../layout/dialogs/org-registration/org-third-party/org-third-party.component';\nimport {OrgCountryComponent} from '../../../../../layout/dialogs/org-registration/org-country/org-country.component';\nimport {OrgUploadComponent} from '../../../../../layout/dialogs/org-upload/org-upload.component';\nimport {OrgForm3DialogComponent} from '../../../../../layout/dialogs/org-registration/org-form3-dialog/org-form3-dialog.component';\nimport {\n  OrgRegistrationPreviewDialogComponent\n} from '../../../../../layout/dialogs/org-registration/org-registration-preview-dialog/org-registration-preview-dialog.component';\nimport {SuccessfulMessageDialogComponent} from '../../../../../layout/dialogs/successful-message-dialog/successful-message-dialog.component';\nimport {BaseFuryForm} from '../../../../../../@fury/shared/base-fury-form';\nimport {KeycloakService} from 'keycloak-angular';\nimport {WorkflowServiceService} from '../../../../../services/workflow-service.service';\nimport {CompanyRegistrationService} from '../../../company-registration.service';\nimport {AuthenticationService} from '../../../../../authentication/authentication.service';\nimport {fadeInRightAnimation} from '../../../../../../@fury/animations/fade-in-right.animation';\nimport {fadeInUpAnimation} from '../../../../../../@fury/animations/fade-in-up.animation';\nimport { ViewPdfDocumentBottomsheetComponent } from '../../../../../layout/bottomsheets/view-pdf-document-bottomsheet/view-pdf-document-bottomsheet.component';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { NatureOfBusiness, NewCompanyRegistrationModel } from '../../company-registration.model';\nimport { Router } from '@angular/router';\nimport { KeycloakProfile } from 'keycloak-js';\nimport { environment } from '../../../../../../environments/environment';\nimport { ComplaintService } from '../../../../complaints/complaints.service';\nimport { DownloadPRNReceiptComponent } from '../../../../../layout/dialogs/download-prnreceipt/download-prnreceipt.component';\n\n@Component({\n  selector: 'fury-renewals',\n  templateUrl: './renewals.component.html',\n  styleUrls: ['./renewals.component.scss']\n})\nexport class RenewalsComponent extends BaseFuryForm implements OnInit, OnDestroy {\n\n    dialogRef;\n    bottomsheetRef;\n    processing = false;\n    formGeneralInformation: FormGroup;\n    formOrganisationDetails: FormGroup;\n    formPersonalDataHeld: FormGroup;\n    formPurposeRetention: FormGroup;\n    formSecurityMeasures: FormGroup;\n    formThirdParties: FormGroup;\n    formChildrenData: FormGroup;\n    // selectedIndex = 5;\n    selectedIndex = 0;\n    isLinear = true;\n    // isLinear = false;\n    today = new Date();\n    sectors: Sector[];\n    countries: Country[];\n    childDataPurposeResults:any = [];\n    selected = false;\n    OrganisationID:number;\n    DPOSelected = false;\n    natureOfbusinesses: any;\n    natureOfbusinesses_arr: any = [];\n    organisationCategories: OrganisationCategory[] = [];\n    selectedOrganisationCategories: OrganisationCategory[] = [];\n    organisationTypes: OrganisationType[];\n    dataSources: DataSource[];\n    selectedDataSources: DataSource[] = [];\n    httpSub: Subscription;\n    showChildrenDataFields = false;\n    showPRNDownload = false;\n    MainActivitiesDisplayedColumns: string[] = ['Count', 'MainActivity', 'Actions'];\n    dpoDisplayedColumns: string[] = ['Count', 'Name', 'Telephone', 'Email', 'PhysicalAddress', 'Actions'];\n    securityMeasuresDisplayedColumns: string[] = ['Count', 'SecurityMeasure', 'Actions'];\n    thirdPartyDisplayedColumns: string[] = ['Count', 'NameOfThirdParty', 'Purpose', 'Actions'];\n    countryDisplayedColumns: string[] = ['Count', 'Country', 'Purpose', 'Description', 'Actions'];\n    mainActivities: MainActivity[] = [];\n    childDataPurposes: ChildrenDataPurpose[] = [];\n    selectedChildDataPurposes: ChildrenDataPurpose[] = [];\n    mainActivitiesDataSource: MatTableDataSource<MainActivity>;\n    dataProtectionOfficers: DataProtectionOfficer[] = [];\n    dpoDataSource: MatTableDataSource<DataProtectionOfficer>;\n    securityMeasures: SecurityMeasure[] = [];\n    securityMeasureDataSource: MatTableDataSource<SecurityMeasure>;\n    thirdParties: ThirdParty[] = [];\n    thirdPartyDataSource: MatTableDataSource<ThirdParty>;\n    countriesOfTransfer: CountryOfTransfer[] = [];\n    countriesDataSource: MatTableDataSource<CountryOfTransfer>;\n    selectedDataCategory: DataCategory[] = [];\n    selectedDataSubCategory: DataSubCategory[] = [];\n    dataCategories: DataCategory[];\n    dataPurposes: DataPurposes[];\n    selectedDataPurposes: DataPurposes[] = [];\n    natureOfBusinessCat: NatureOfBusinessCat[] = [];\n    natureOfBusinessSubCat: NatureOfBusinessSubCat[] = [];\n    selectedNatureOfBusinessSubCat: NatureOfBusinessSubCat[] = [];\n    SpecifyTheLaw = false;\n    ServiceOrProductProvided = false;\n    SpecifyLegalObligation = false;\n    Organisation_User_ID;\n    document: FileUpload | null;\n    documentForm3: FileUpload | null;\n    proofOfPayment: FileUpload | null;\n    OrganizationType = null;\n    SectorName = null;\n    NatureOfBusinessCat = null;\n    CountryOfIncorporation = null;\n    application: NewCompanyRegistrationModel = new NewCompanyRegistrationModel();\n    public userProfile: KeycloakProfile | null = null;\n    regTrackingNo: any;\n  \n    dataCategory = new FormControl();\n  \n    @ViewChild('MainActivityPaginator', { static: false }) MainActivityPaginator: MatPaginator;\n    @ViewChild('MainActivityMatSort', { static: false }) MainActivityMatSort: MatSort;\n    @ViewChild('dpoPaginator', { static: false }) dpoPaginator: MatPaginator;\n    @ViewChild('dpoMatSort', { static: false }) dpoMatSort: MatSort;\n    @ViewChild('securityMeasurePaginator', { static: false }) securityMeasurePaginator: MatPaginator;\n    @ViewChild('securityMeasureMatSort', { static: false }) securityMeasureMatSort: MatSort;\n    @ViewChild('thirdPartyPaginator', { static: false }) thirdPartyPaginator: MatPaginator;\n    @ViewChild('thirdPartyMatSort', { static: false }) thirdPartyMatSort: MatSort;\n    @ViewChild('countryOfTransferPaginator', { static: false }) countryOfTransferPaginator: MatPaginator;\n    @ViewChild('countryOfTransferMatSort', { static: false }) countryOfTransferMatSort: MatSort;\n  \n\n  constructor(\n\n    private formBuilder: FormBuilder,\n    private service: ApiService,\n    private endpoints: ApiEndpointsService,\n    private dialog: MatDialog,\n    private bottomsheet: MatBottomSheet,\n    public authService: KeycloakService,\n    public _auth: AuthenticationService,\n    public _workflowService: WorkflowServiceService,\n    private http: HttpClient,\n    private changeDetector: ChangeDetectorRef,\n    public registrationService: CompanyRegistrationService,\n    public complaintService:ComplaintService,\n    private route: Router,\n\n  ) { \n\n    super(\n        authService,\n        _workflowService,\n        registrationService,\n        complaintService\n      );\n  \n      // this.regTrackingNo = this.route.getCurrentNavigation().extras.state.regTrackingNo;\n  \n      this.service.updatePageTitle(['Organisations', 'New Registration']);\n\n  }\n\n  ngOnInit(): void {\n\n    this.formGeneralInformation = this.formBuilder.group({\n        OrganizationName: [{value: this._auth.getOrganisationName(), disabled: false}],\n        DPPActCategory: new FormControl('', [Validators.required]),\n        OrganizationTypeID: new FormControl('', [Validators.required]),\n        CountryOfIncorporation: new FormControl('', [Validators.required]),\n        URSBNumber: new FormControl(''),\n        SectorID: new FormControl('', [Validators.required]),\n        OtherSector: new FormControl('', [Validators.maxLength(50)]),\n        Location: new FormControl('', [Validators.required]),\n        PhoneNumberCode: new FormControl({ value: '', disabled: false }, [Validators.required]),\n        PhoneNumber: new FormControl({ value: '', disabled: false }, [\n          Validators.required,\n          Validators.pattern(/^[0-9 ]+$/),\n        ]),\n        \n        EmailAddress: new FormControl({ value: '', disabled: false }, [\n          Validators.required,\n          Validators.email\n        ]),\n        // NatureOfBusiness: new FormControl('', [Validators.required]),\n        NatureOfBusinessCat: new FormControl('', [Validators.required]),\n        NatureOfBusinessSubCat: new FormControl('', [Validators.required]),\n      });\n  \n      this.formOrganisationDetails = this.formBuilder.group({\n        DPORequired: new FormControl(''),\n        DPOName: new FormControl(''),\n        DPOPhysicalAddress: new FormControl(''),\n        PhoneNumberCode: new FormControl(''),\n        DPOPhoneNumber: new FormControl(''),\n        DPOEmailAddress: new FormControl(''),\n        DPOPositionInOrganisation: new FormControl(''),\n      });\n  \n      this.formPersonalDataHeld = this.formBuilder.group({\n        SourceOfDataID: new FormControl('', [Validators.required]),\n      });\n\n      this.formChildrenData = this.formBuilder.group({\n        CollectChildrenData: new FormControl('', [Validators.required]),\n        PurposeForCollection: new FormControl(''),\n      });\n  \n      this.formPurposeRetention = this.formBuilder.group({\n        Purpose: new FormControl('', [Validators.required]),\n        SpecifyTheLaw: new FormControl(''),\n        ServiceOrProductProvided: new FormControl(''),\n        SpecifyLegalObligation: new FormControl(''),\n        TotalRecordsAtRegistration: new FormControl('', [Validators.pattern(/^[0-9,]+$/)]),\n        RecordPercentageGrowth: new FormControl('' , [\n          Validators.pattern(/^[0-9,]+$/),\n          Validators.max(100),\n        ]),\n        RetentionPeriod: new FormControl('', [\n          Validators.required,\n          Validators.pattern(/^[0-9,]+$/),\n          Validators.max(100),\n        ]),\n      });\n  \n      this.formSecurityMeasures = this.formBuilder.group({\n        RegistrationConsent: new FormControl('', [Validators.required]),\n        RegistrationDoneBy: new FormControl('', [Validators.required, Validators.pattern(/^[a-zA-Z ]+$/)]),\n      });\n  \n      this.formThirdParties = this.formBuilder.group({\n        PersonalDataIsForDisclosure: new FormControl('', [Validators.required]),\n        StoreDataOutsideCountry: new FormControl('', [Validators.required]),\n      });\n      this.Listeners();\n\n  }\n\n  ngAfterContentInit(): void {\n    this.httpSub = this.fetchMultiple()\n    .pipe(catchError(this.service.handleError))\n    .subscribe((responseList) => {\n      console.log(responseList)\n      this.countries = responseList[0];\n\n      this.organisationCategories = [\n        {\n          OrganisationCategoryId: 1,\n          OrganisationCategoryName: 'Data Controller'\n        },\n        {\n          OrganisationCategoryId: 2,\n          OrganisationCategoryName: 'Data Processor'\n        },\n        {\n          OrganisationCategoryId: 3,\n          OrganisationCategoryName: 'Data Collector'\n        },\n      ];\n\n      this.childDataPurposes = [\n        {\n          ChildDataID: 1,\n          ChildDataPurpose: 'Carried out with prior consent of the parent,guardian, or  any other person having authority to make decisions on behalf of the child '\n        },\n        {\n          ChildDataID: 2,\n          ChildDataPurpose: 'Necessary to comply with the law'\n        },\n        {\n          ChildDataID: 3,\n          ChildDataPurpose: 'For research or statistical purposes'\n        }\n      ]\n\n      this.formGeneralInformation.get('PhoneNumberCode').patchValue('256');\n      this.formOrganisationDetails.get('PhoneNumberCode').patchValue('256');\n\n      this.dataSources = responseList[1];\n\n      this.organisationTypes = responseList[2];\n\n      this.sectors = responseList[3];\n\n      this.dataCategories = responseList[4];\n\n      this.dataPurposes = responseList[5];\n\n      this.natureOfBusinessCat = responseList[6];\n\n      this._loadApplicationDraft(responseList[7]);\n\n      this.processing = false;\n    }, (error) => {\n      this.processing = false;\n      this.service.determineErrorResponse(error);\n    });\n  }\n\n  private Listeners(): void {\n    // STEP ONE\n    this.formGeneralInformation.get('DPPActCategory').valueChanges.subscribe((value) => {\n      const values: number[] = value;\n      this.selectedOrganisationCategories.length = 0;\n\n      this.organisationCategories.filter((item) => {\n        if (values.includes(item.OrganisationCategoryId)) {\n          this.selectedOrganisationCategories.push(item);\n        }\n      });\n    });\n\n    this.formGeneralInformation.get('OrganizationTypeID').valueChanges.subscribe((value) => {\n      if (value !== 4) {\n        this.formGeneralInformation.get('CountryOfIncorporation').setValidators([Validators.required]);\n        this.formGeneralInformation.get('URSBNumber').setValidators([Validators.required]);\n      } else {\n        this.formGeneralInformation.get('CountryOfIncorporation').clearValidators();\n        this.formGeneralInformation.get('CountryOfIncorporation').reset();\n        this.formGeneralInformation.get('URSBNumber').clearValidators();\n        this.formGeneralInformation.get('URSBNumber').reset();\n        this.CountryOfIncorporation = null;\n      }\n\n      this.formGeneralInformation.controls['CountryOfIncorporation'].updateValueAndValidity();\n      this.formGeneralInformation.controls['URSBNumber'].updateValueAndValidity();\n    });\n\n    this.formGeneralInformation.get('SectorID').valueChanges.subscribe((value) => {\n      if (value === 14) {\n        this.formGeneralInformation.get('OtherSector').setValidators([Validators.required]);\n      } else {\n        this.formGeneralInformation.get('OtherSector').clearValidators();\n        this.formGeneralInformation.get('OtherSector').reset();\n      }\n\n      this.formGeneralInformation.controls['OtherSector'].updateValueAndValidity();\n    });\n\n    this.formGeneralInformation.get('NatureOfBusinessCat').valueChanges.subscribe((value) => {\n      this.onNatureOfBusinessCatSelected(value);\n    });\n\n    this.formGeneralInformation.get('NatureOfBusinessSubCat').valueChanges.subscribe((value) => {\n      const values: number[] = value;\n      this.selectedNatureOfBusinessSubCat.length = 0;\n\n      this.natureOfBusinessSubCat.filter((item) => {\n        if (values.includes(item.NatureOfBusinessSubCatId)) {\n          this.selectedNatureOfBusinessSubCat.push(item);\n        }\n      });\n    });\n\n    // STEP TWO\n    this.formOrganisationDetails.get('DPORequired').valueChanges.subscribe((value) => {\n\n      if (value === 'Yes') {\n        this.formOrganisationDetails.get('DPOName').setValidators([Validators.required, Validators.pattern(/^[a-zA-Z ]+$/), ]);\n        this.formOrganisationDetails.get('DPOPhysicalAddress').setValidators([Validators.required]);\n        this.formOrganisationDetails.get('DPOPhoneNumber').setValidators([Validators.required, Validators.pattern(/^[0-9 ]+$/)]);\n        this.formOrganisationDetails.get('DPOEmailAddress').setValidators([Validators.required, Validators.email]);\n        this.formOrganisationDetails.get('DPOPositionInOrganisation').setValidators([Validators.required]);\n      } else {\n        this.formOrganisationDetails.get('DPOName').clearValidators();\n        this.formOrganisationDetails.get('DPOName').reset();\n        this.formOrganisationDetails.get('DPOPhysicalAddress').clearValidators();\n        this.formOrganisationDetails.get('DPOPhysicalAddress').reset();\n        this.formOrganisationDetails.get('DPOPhoneNumber').clearValidators();\n        this.formOrganisationDetails.get('DPOPhoneNumber').reset();\n        this.formOrganisationDetails.get('DPOEmailAddress').clearValidators();\n        this.formOrganisationDetails.get('DPOEmailAddress').reset();\n        this.formOrganisationDetails.get('DPOPositionInOrganisation').clearValidators();\n        this.formOrganisationDetails.get('DPOPositionInOrganisation').reset();\n      }\n\n      this.formOrganisationDetails.controls['DPOName'].updateValueAndValidity();\n      this.formOrganisationDetails.controls['DPOPhysicalAddress'].updateValueAndValidity();\n      this.formOrganisationDetails.controls['DPOPhoneNumber'].updateValueAndValidity();\n      this.formOrganisationDetails.controls['DPOEmailAddress'].updateValueAndValidity();\n      this.formOrganisationDetails.controls['DPOPositionInOrganisation'].updateValueAndValidity();\n    });\n\n    // STEP THREE\n    this.formPersonalDataHeld.get('SourceOfDataID').valueChanges.subscribe((value) => {\n      const values: number[] = value;\n      this.selectedDataSources.length = 0;\n\n      this.dataSources.filter((item) => {\n        if (values.includes(item.DataSourceID)) {\n          this.selectedDataSources.push(item);\n        }\n      });\n    });\n    ///CHILDREN DATA PURPOSES\n\n    this.formChildrenData.get('PurposeForCollection').valueChanges.subscribe((value) => {\n      const values: number[] = value;\n      this.selectedChildDataPurposes.length = 0;\n\n      this.childDataPurposes.filter((item) => {\n        if (values.includes(item.ChildDataID)) {\n          this.selectedChildDataPurposes.push(item);\n        }\n      });\n\n      console.log(this.selectedChildDataPurposes);\n    });\n\n    // STEP FOUR\n    this.formPurposeRetention.get('Purpose').valueChanges.subscribe((value) => {\n      const values: number[] = value;\n\n      this.selectedDataPurposes.length = 0;\n\n      // Reset all the fields first\n      this.SpecifyTheLaw = false;\n      this.ServiceOrProductProvided = false;\n      this.SpecifyLegalObligation = false;\n      this.formPurposeRetention.get('SpecifyTheLaw').clearValidators();\n      this.formPurposeRetention.get('SpecifyTheLaw').reset();\n      this.formPurposeRetention.get('ServiceOrProductProvided').clearValidators();\n      this.formPurposeRetention.get('ServiceOrProductProvided').reset();\n      this.formPurposeRetention.get('SpecifyLegalObligation').clearValidators();\n      this.formPurposeRetention.get('SpecifyLegalObligation').reset();\n\n      values.filter((item) => {\n        if (item === 1) {\n          this.SpecifyTheLaw = true;\n          this.formPurposeRetention.get('SpecifyTheLaw').setValidators([Validators.required]);\n        }\n\n        if (item === 3) {\n          this.ServiceOrProductProvided = true;\n          this.formPurposeRetention.get('ServiceOrProductProvided').setValidators([Validators.required]);\n        }\n\n        if (item === 6) {\n          this.SpecifyLegalObligation = true;\n          this.formPurposeRetention.get('SpecifyLegalObligation').setValidators([Validators.required]);\n        }\n      });\n\n      this.formPurposeRetention.controls['SpecifyTheLaw'].updateValueAndValidity();\n      this.formPurposeRetention.controls['ServiceOrProductProvided'].updateValueAndValidity();\n      this.formPurposeRetention.controls['SpecifyLegalObligation'].updateValueAndValidity();\n\n      this.dataPurposes.filter((item) => {\n        if (values.includes(item.DataPurposeID)) {\n          this.selectedDataPurposes.push(item);\n        }\n      });\n\n      this.changeDetector.detectChanges();\n    });\n\n    this.formPurposeRetention.get('RecordPercentageGrowth').valueChanges.subscribe((value) => {\n\n      if (value > 100) {\n        this.formPurposeRetention.get('RecordPercentageGrowth').patchValue(100);\n      }\n\n      this.changeDetector.detectChanges();\n    });\n\n    this.formPurposeRetention.get('RetentionPeriod').valueChanges.subscribe((value) => {\n\n      if (value > 100) {\n        this.formPurposeRetention.get('RetentionPeriod').patchValue(100);\n      }\n\n      this.changeDetector.detectChanges();\n    });\n\n    // STEP FIVE\n    this.formThirdParties.get('PersonalDataIsForDisclosure').valueChanges.subscribe((value) => {\n      this.thirdParties.length = 0;\n    });\n\n    this.formThirdParties.get('StoreDataOutsideCountry').valueChanges.subscribe((value) => {\n      this.countriesOfTransfer.length = 0;\n    });\n  }\n\n  private onShowNotice(): void {\n    this.dialogRef = this.dialog.open(OrgNoticeComponent, {\n      panelClass: ['organisation-data-protection-officer-dialog', 'dialogs'],\n      disableClose: true,\n    });\n\n    this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: DataProtectionOfficer }) => {\n\n    });\n  }\n\n  getOrganizationNameErrorMessage(): string {\n    return this.formGeneralInformation.get('OrganizationName').hasError('required') ? 'Please enter a value' : '';\n  }\n\n  getURSBNumberErrorMessage(): string {\n    return this.formGeneralInformation.get('URSBNumber').hasError('required') ? 'Please enter a value' : '';\n  }\n\n  getSelectErrorMessage(): string {\n    return this.formGeneralInformation.get('DPPActCategory').hasError('required')\n    || this.formGeneralInformation.get('OrganizationTypeID').hasError('required')\n    || this.formGeneralInformation.get('CountryOfIncorporation').hasError('required')\n    || this.formGeneralInformation.get('SectorID').hasError('required')\n    || this.formGeneralInformation.get('NatureOfBusinessCat').hasError('required')\n    || this.formGeneralInformation.get('NatureOfBusinessSubCat').hasError('required')\n    || this.formPersonalDataHeld.get('SourceOfDataID').hasError('required')\n    || this.formPurposeRetention.get('Purpose').hasError('required')\n    ? 'Please choose a value' : '';\n  }\n\n  getTelephoneNumberErrorMessage(): string {\n    return this.formGeneralInformation.get('PhoneNumber').hasError('required') ? 'Please enter a value' :\n    this.formGeneralInformation.get('PhoneNumber').hasError('pattern') ? 'Wrong Phone number' : '';\n  }\n\n  getEmailAddressErrorMessage(): string {\n    return this.formGeneralInformation.get('EmailAddress').hasError('required') ? 'Please enter a value' :\n    this.formGeneralInformation.get('EmailAddress').hasError('email') ? 'Wrong Email Address.' : '';\n  }\n\n  getOtherSectorErrorMessage(): string {\n    return this.formGeneralInformation.get('OtherSector').hasError('required') ? 'Please enter a value' : '';\n  }\n\n  getLocationErrorMessage(): string {\n    return this.formGeneralInformation.get('Location').hasError('required') ? 'Please enter a location' : '';\n  }\n\n  getDPONameErrorMessage(): string {\n    return this.formOrganisationDetails.get('DPOName').hasError('required') ? 'Please enter a value' :\n    this.formOrganisationDetails.get('DPOName').hasError('pattern') ? 'Please enter a correct name' : '';\n  }\n\n  getDPOPhysicalAddressErrorMessage(): string {\n    return this.formOrganisationDetails.get('DPOPhysicalAddress').hasError('required') ? 'Please enter a location' : '';\n  }\n\n  getDPOPhoneNumberErrorMessage(): string {\n    return this.formOrganisationDetails.get('DPOPhoneNumber').hasError('required') ? 'Please enter a value' :\n    this.formOrganisationDetails.get('DPOPhoneNumber').hasError('pattern') ? 'Wrong Phone number' : '';\n  }\n\n  getDPOEmailAddressErrorMessage(): string {\n    return this.formOrganisationDetails.get('DPOEmailAddress').hasError('required') ? 'Please enter a value' :\n    this.formOrganisationDetails.get('DPOEmailAddress').hasError('email') ? 'Wrong Email Address.' : '';\n  }\n\n  getDPOPositionInOrganisationErrorMessage(): string {\n    return this.formOrganisationDetails.get('DPOPositionInOrganisation').hasError('required') ? 'Please enter a value' : '';\n  }\n\n  getRequiredErrorMessage(): string {\n    return this.formPurposeRetention.get('SpecifyTheLaw').hasError('required')\n    || this.formPurposeRetention.get('ServiceOrProductProvided').hasError('required')\n    || this.formPurposeRetention.get('SpecifyLegalObligation').hasError('required')\n    ? 'Please enter a value' : '';\n  }\n\n  getPatternErrorMessage(): string {\n    return this.formPurposeRetention.get('TotalRecordsAtRegistration').hasError('pattern')\n    ? 'Please enter correct information' : '';\n  }\n\n  getRetentionPeriodErrorMessage(): string {\n    return this.formPurposeRetention.get('RetentionPeriod').hasError('required') ? 'Please enter a value' :\n    this.formPurposeRetention.get('RetentionPeriod').hasError('max') ? 'Maximum of 100' :\n    this.formPurposeRetention.get('RetentionPeriod').hasError('pattern') ? 'Not valid' : '';\n  }\n\n  getRecordPercentageGrowthErrorMessage(): string {\n    return this.formPurposeRetention.get('RecordPercentageGrowth').hasError('max') ? 'Maximum of 100' :\n    this.formPurposeRetention.get('RecordPercentageGrowth').hasError('pattern') ? 'Not valid' : '';\n  }\n\n  getCheckboxErrorMessage(): string {\n    return this.formSecurityMeasures.get('RegistrationConsent').hasError('max') ? 'This field is required' : '';\n  }\n\n  getRegistrationDoneByErrorMessage(): string {\n    return this.formSecurityMeasures.get('RegistrationDoneBy').hasError('required') ? 'Please enter a value' :\n    this.formSecurityMeasures.get('RegistrationDoneBy').hasError('pattern') ? 'Please enter a correct name' : '';\n  }\n\n  onAddMainActivity(): void {\n    this.dialogRef = this.dialog.open(OrgMainActivityComponent, {\n      panelClass: ['organisation-main-activity-dialog', 'dialogs'],\n      disableClose: true,\n    });\n\n    this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: MainActivity }) => {\n      if (result.status) {\n          let found = false;\n          this.mainActivities.filter((activity) => {\n            if (activity.Activity === result.row.Activity) {\n              found = true;\n            }\n          });\n\n          if (found) {\n            this.service.openSnackBar('Sorry, this record already exists', 'error-lg');\n          } else {\n            this.mainActivities.push(result.row);\n          }\n\n        this.mainActivitiesDataSource = new MatTableDataSource(this.mainActivities);\n\n        setTimeout(() => {\n          this.mainActivitiesDataSource.paginator = this.MainActivityPaginator;\n          this.mainActivitiesDataSource.sort = this.MainActivityMatSort;\n        });\n      }\n    });\n  }\n  updateCollecthildrenData(event){\n\n    console.log(event.value);\n\n    if(event.value == 'Yes'){\n      this.showChildrenDataFields = true;\n      this.formChildrenData.get('PurposeForCollection').setValidators([Validators.required]);\n\n      this.formChildrenData.controls['PurposeForCollection'].updateValueAndValidity();\n    }\n    else{\n      this.showChildrenDataFields = false;\n\n      this.formChildrenData.get('PurposeForCollection').setValidators([]);\n\n      this.formChildrenData.get('PurposeForCollection').reset();\n\n      this.formChildrenData.controls['PurposeForCollection'].updateValueAndValidity();\n    }\n  }\n\n\n  onEditMainActivity(row: MainActivity): void {\n    this.dialogRef = this.dialog.open(OrgMainActivityComponent, {\n      panelClass: ['organisation-main-activity-dialog', 'dialogs'],\n      disableClose: true,\n      data: { row }\n    });\n\n    this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: MainActivity }) => {\n      if (result.status) {\n\n        this.mainActivities[this.mainActivities.indexOf(row)] = {\n          Activity: result.row.Activity,\n        };\n\n        this.mainActivitiesDataSource = new MatTableDataSource(this.mainActivities);\n\n        setTimeout(() => {\n          this.mainActivitiesDataSource.paginator = this.MainActivityPaginator;\n          this.mainActivitiesDataSource.sort = this.MainActivityMatSort;\n        });\n      }\n    });\n  }\n\n  onRemoveMainActivity(row: MainActivity): void {\n    this.mainActivities.splice(this.mainActivities.indexOf(row), 1);\n\n    this.mainActivitiesDataSource = new MatTableDataSource(this.mainActivities);\n\n    setTimeout(() => {\n      this.mainActivitiesDataSource.paginator = this.MainActivityPaginator;\n      this.mainActivitiesDataSource.sort = this.MainActivityMatSort;\n    });\n  }\n\n  onAddADPO(): void {\n    this.dialogRef = this.dialog.open(OrgDataProtectionOfficerComponent, {\n      panelClass: ['organisation-data-protection-officer-dialog', 'dialogs'],\n      disableClose: true,\n    });\n\n    this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: DataProtectionOfficer }) => {\n      if (result.status) {\n        let found = false;\n        this.dataProtectionOfficers.filter((dpo) => {\n          if (dpo.EmailAddress === result.row.EmailAddress || dpo.PhoneNumber === result.row.PhoneNumber) {\n            found = true;\n          }\n        });\n\n        if (found) {\n          this.service.openSnackBar('Sorry, this record already exists', 'error-lg');\n        } else {\n          this.dataProtectionOfficers.push(result.row);\n        }\n\n        this.dpoDataSource = new MatTableDataSource(this.dataProtectionOfficers);\n\n        setTimeout(() => {\n          this.dpoDataSource.paginator = this.dpoPaginator;\n          this.dpoDataSource.sort = this.dpoMatSort;\n        });\n      }\n    });\n  }\n\n  onEditDPO(row: DataProtectionOfficer): void {\n    this.dialogRef = this.dialog.open(OrgDataProtectionOfficerComponent, {\n      panelClass: ['organisation-data-protection-officer-dialog', 'dialogs'],\n      disableClose: true,\n      data: { row }\n    });\n\n    this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: DataProtectionOfficer }) => {\n      if (result.status) {\n\n        this.dataProtectionOfficers[this.dataProtectionOfficers.indexOf(row)] = {\n          Name: result.row.Name,\n          EmailAddress: result.row.EmailAddress,\n          PhoneNumber: result.row.PhoneNumber,\n          PhysicalAddress: result.row.PhysicalAddress,\n          PositionInOrganisation: result.row.PositionInOrganisation,\n        };\n\n        this.dpoDataSource = new MatTableDataSource(this.dataProtectionOfficers);\n\n        setTimeout(() => {\n          this.dpoDataSource.paginator = this.dpoPaginator;\n          this.dpoDataSource.sort = this.dpoMatSort;\n        });\n      }\n    });\n  }\n\n  onRemoveDPO(row: DataProtectionOfficer): void {\n    this.dataProtectionOfficers.splice(this.dataProtectionOfficers.indexOf(row), 1);\n\n    this.dpoDataSource = new MatTableDataSource(this.dataProtectionOfficers);\n\n    setTimeout(() => {\n      this.dpoDataSource.paginator = this.dpoPaginator;\n      this.dpoDataSource.sort = this.dpoMatSort;\n    });\n  }\n\n  onAddSecurityMeasure(): void {\n    this.dialogRef = this.dialog.open(OrgSecurityMeasuresComponent, {\n      panelClass: ['organisation-security-measure-dialog', 'dialogs'],\n      disableClose: true,\n    });\n\n    this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: SecurityMeasure }) => {\n      if (result.status) {\n        let found = false;\n        this.securityMeasures.filter((item) => {\n          if (item.SecurityMeasure === result.row.SecurityMeasure) {\n            found = true;\n          }\n        });\n\n        if (found) {\n          this.service.openSnackBar('Sorry, this record already exists', 'error-lg');\n        } else {\n          this.securityMeasures.push(result.row);\n        }\n\n        this.securityMeasureDataSource = new MatTableDataSource(this.securityMeasures);\n\n        setTimeout(() => {\n          this.securityMeasureDataSource.paginator = this.securityMeasurePaginator;\n          this.securityMeasureDataSource.sort = this.securityMeasureMatSort;\n        });\n      }\n    });\n  }\n\n  onEditSecurityMeasure(row: SecurityMeasure): void {\n    this.dialogRef = this.dialog.open(OrgSecurityMeasuresComponent, {\n      panelClass: ['organisation-security-measure-dialog', 'dialogs'],\n      disableClose: true,\n      data: { row }\n    });\n\n    this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: SecurityMeasure }) => {\n      if (result.status) {\n\n        this.securityMeasures[this.securityMeasures.indexOf(row)] = {\n          SecurityMeasure: result.row.SecurityMeasure,\n        };\n\n        this.securityMeasureDataSource = new MatTableDataSource(this.securityMeasures);\n\n        setTimeout(() => {\n          this.securityMeasureDataSource.paginator = this.securityMeasurePaginator;\n          this.securityMeasureDataSource.sort = this.securityMeasureMatSort;\n        });\n      }\n    });\n  }\n\n  onRemoveSecurityMeasure(row: SecurityMeasure): void {\n    this.securityMeasures.splice(this.securityMeasures.indexOf(row), 1);\n\n    this.securityMeasureDataSource = new MatTableDataSource(this.securityMeasures);\n\n    setTimeout(() => {\n      this.securityMeasureDataSource.paginator = this.securityMeasurePaginator;\n      this.securityMeasureDataSource.sort = this.securityMeasureMatSort;\n    });\n  }\n\n  onAddAThirdParty(): void {\n    this.dialogRef = this.dialog.open(OrgThirdPartyComponent, {\n      panelClass: ['organisation-third-party-dialog', 'dialogs'],\n      disableClose: true,\n    });\n\n    this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: ThirdParty }) => {\n      if (result.status) {\n          let found = false;\n\n          this.thirdParties.filter((party) => {\n            if (party.ThirdPartyName === result.row.ThirdPartyName) {\n              found = true;\n            }\n          });\n\n          if (found) {\n            this.service.openSnackBar('Sorry, this record already exists', 'error-lg');\n          } else {\n            this.thirdParties.push(result.row);\n          }\n\n        this.thirdPartyDataSource = new MatTableDataSource(this.thirdParties);\n\n        setTimeout(() => {\n          this.thirdPartyDataSource.paginator = this.thirdPartyPaginator;\n          this.thirdPartyDataSource.sort = this.thirdPartyMatSort;\n        });\n      }\n    });\n  }\n\n  onEditThirdParty(row: ThirdParty): void {\n    this.dialogRef = this.dialog.open(OrgThirdPartyComponent, {\n      panelClass: ['organisation-third-party-dialog', 'dialogs'],\n      disableClose: true,\n      data: { row }\n    });\n\n    this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: ThirdParty }) => {\n      if (result.status) {\n\n        this.thirdParties[this.thirdParties.indexOf(row)] = {\n          ThirdPartyName: result.row.ThirdPartyName,\n          Purpose: result.row.Purpose,\n        };\n\n        this.thirdPartyDataSource = new MatTableDataSource(this.thirdParties);\n\n        setTimeout(() => {\n          this.thirdPartyDataSource.paginator = this.thirdPartyPaginator;\n          this.thirdPartyDataSource.sort = this.thirdPartyMatSort;\n        });\n      }\n    });\n  }\n\n  onRemoveThirdParty(row: ThirdParty): void {\n    this.thirdParties.splice(this.thirdParties.indexOf(row), 1);\n\n    this.thirdPartyDataSource = new MatTableDataSource(this.thirdParties);\n\n    setTimeout(() => {\n      this.thirdPartyDataSource.paginator = this.thirdPartyPaginator;\n      this.thirdPartyDataSource.sort = this.thirdPartyMatSort;\n    });\n  }\n\n  onAddACountry(): void {\n    this.dialogRef = this.dialog.open(OrgCountryComponent, {\n      panelClass: ['organisation-country-dialog', 'dialogs'],\n      disableClose: true,\n    });\n\n    this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: CountryOfTransfer }) => {\n      if (result.status) {\n          let found = false;\n          this.countriesOfTransfer.filter((party) => {\n            if (party.Country === result.row.Country) {\n              found = true;\n            }\n          });\n\n          if (found) {\n            this.service.openSnackBar('Sorry, this record already exists', 'error-lg');\n          } else {\n            this.countriesOfTransfer.push(result.row);\n          }\n\n        this.countriesDataSource = new MatTableDataSource(this.countriesOfTransfer);\n\n        setTimeout(() => {\n          this.countriesDataSource.paginator = this.countryOfTransferPaginator;\n          this.countriesDataSource.sort = this.countryOfTransferMatSort;\n        });\n      }\n    });\n  }\n\n  onEditCountry(row: CountryOfTransfer): void {\n    this.dialogRef = this.dialog.open(OrgCountryComponent, {\n      panelClass: ['organisation-country-dialog', 'dialogs'],\n      disableClose: true,\n      data: { row }\n    });\n\n    this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: CountryOfTransfer }) => {\n      if (result.status) {\n        this.countriesOfTransfer[this.countriesOfTransfer.indexOf(row)] = {\n          CountryID: result.row.CountryID,\n          Country: result.row.Country,\n          Purpose: result.row.Purpose,\n          Description: result.row.Description,\n        };\n\n        this.countriesDataSource = new MatTableDataSource(this.countriesOfTransfer);\n\n        setTimeout(() => {\n          this.countriesDataSource.paginator = this.countryOfTransferPaginator;\n          this.countriesDataSource.sort = this.countryOfTransferMatSort;\n        });\n      }\n    });\n  }\n\n  onRemoveCountry(row: CountryOfTransfer): void {\n    this.countriesOfTransfer.splice(this.countriesOfTransfer.indexOf(row), 1);\n\n    this.countriesDataSource = new MatTableDataSource(this.countriesOfTransfer);\n\n    setTimeout(() => {\n      this.countriesDataSource.paginator = this.countryOfTransferPaginator;\n      this.countriesDataSource.sort = this.countryOfTransferMatSort;\n    });\n  }\n\n  onUploadAttachments(): void {\n    this.dialogRef = this.dialog.open(OrgUploadComponent, {\n      panelClass: ['organisation-upload-dialog', 'dialogs'],\n      disableClose: true,\n      data: {\n        multiple: false\n      }\n    });\n\n    this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: FileUpload }) => {\n      console.log('row:', result.row);\n\n      if (result.status) {\n        this.document = result.row;\n      }\n    });\n  }\n\n  onRemoveDocument(): void {\n    this.document = null;\n  }\n\n  onDownloadForm3(): void {\n    this.dialogRef = this.dialog.open(OrgForm3DialogComponent, {\n      panelClass: ['organisation-form-3-dialog', 'dialogs'],\n      disableClose: true,\n      data: {\n        OrganisationName: this.formGeneralInformation.get('OrganizationName').value,\n        PhysicalAddress: this.formGeneralInformation.get('Location').value,\n        Date: new Date()\n      }\n    });\n  }\n\n  onUploadProofOfPayment(): void {\n    this.dialogRef = this.dialog.open(OrgUploadComponent, {\n      panelClass: ['organisation-upload-dialog', 'dialogs'],\n      disableClose: true,\n      data: {\n        multiple: false\n      }\n    });\n\n    this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: FileUpload }) => {\n\n      if (result.status) {\n        this.proofOfPayment = result.row;\n      }\n    });\n  }\n\n  onRemoveProofOfPaymen(): void {\n    this.proofOfPayment = null;\n  }\n\n  onUploadForm3Attachments(): void {\n    this.dialogRef = this.dialog.open(OrgUploadComponent, {\n      panelClass: ['organisation-upload-dialog', 'dialogs'],\n      disableClose: true,\n      data: {\n        multiple: false\n      }\n    });\n\n    this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: FileUpload }) => {\n      if (result.status) {\n        this.documentForm3 = result.row;\n      }\n    });\n  }\n\n  onRemoveForm3Document(): void {\n    this.documentForm3 = null;\n  }\n\n  onChangeSubCategory(event: MatCheckboxChange, SubCategory: DataSubCategory): void {\n    if (event.checked) {\n      this.selectedDataSubCategory.push(SubCategory);\n    } else {\n      this.selectedDataSubCategory.splice(this.selectedDataSubCategory.indexOf(SubCategory), 1);\n    }\n  }\n\n  private fetchMultiple(): Observable<any[]> {\n    this.processing = true;\n    const reqCountries = this.http.get<ApiPayload>(this.endpoints.countries);\n    const reqDataSources = this.http.get<ApiPayload>(this.endpoints.dataSources);\n    const reqOrganisationType = this.http.get<ApiPayload>(this.endpoints.organisationType);\n    const reqSector = this.http.get<ApiPayload>(this.endpoints.sector);\n    const reqDataSubcategories = this.http.get<ApiPayload>(this.endpoints.dataSubcategories);\n    const reqDataPurpose = this.http.get<ApiPayload>(this.endpoints.dataPurpose);\n    const reqNatureOfBusiness = this.http.get<ApiPayload>(this.endpoints.natureOfBusiness);\n    const reqOrgRegSaveDraft = this.http.get<ApiPayload>(this.endpoints.getOrgDetailsById, { params: { OrganizationID: this._auth.getOrganisationID() } });\n    // tslint:disable-next-line:max-line-length\n    return forkJoin([\n      reqCountries, \n      reqDataSources, \n      reqOrganisationType, \n      reqSector, \n      reqDataSubcategories, \n      reqDataPurpose, \n      reqNatureOfBusiness,\n      reqOrgRegSaveDraft,\n    ]);\n  }\n\n  private getFormData(): any {\n\n    return {\n      OrganisationUserID: +this._auth.getOrganisationID(),\n      OrganisationName: this.formGeneralInformation.get('OrganizationName').value,\n      OrganisationCategory: this.selectedOrganisationCategories ? this.selectedOrganisationCategories : [],\n      OrganizationTypeID: this.formGeneralInformation.get('OrganizationTypeID').value ? this.formGeneralInformation.get('OrganizationTypeID').value : 0,\n      CountryOfIncorporation: this.formGeneralInformation.get('CountryOfIncorporation').value ? this.formGeneralInformation.get('CountryOfIncorporation').value : 0,\n      URSBNumber: this.formGeneralInformation.get('URSBNumber').value ? this.formGeneralInformation.get('URSBNumber').value : '',\n      SectorID: this.formGeneralInformation.get('SectorID').value ? this.formGeneralInformation.get('SectorID').value : 0,\n      OtherSector: this.formGeneralInformation.get('OtherSector').value ? this.formGeneralInformation.get('OtherSector').value : '',\n      Location: this.formGeneralInformation.get('Location').value ? this.formGeneralInformation.get('Location').value : '',\n      // tslint:disable-next-line:max-line-length\n      // PhoneNumber: this.formGeneralInformation.get('PhoneNumberCode').value + (this.formGeneralInformation.get('PhoneNumber').value).replaceAll(' ', ''),\n      // EmailAddress: this.formGeneralInformation.get('EmailAddress').value,\n      RegTrackingNo: this.regTrackingNo,\n      OrganisationID: this.OrganisationID,\n      PhoneNumber: this.application.PhoneNumber,\n      EmailAddress: this.application.EmailAddress,\n      NatureOfBusinessCatID: this.formGeneralInformation.get('NatureOfBusinessCat').value ? this.formGeneralInformation.get('NatureOfBusinessCat').value : 0,\n      NatureOfBusiness: this.selectedNatureOfBusinessSubCat ? this.selectedNatureOfBusinessSubCat : [],\n      \n      DPORequired: this.formOrganisationDetails.get('DPORequired').value,\n      DPOName: this.formOrganisationDetails.get('DPORequired').value === 'Yes' ? this.formOrganisationDetails.get('DPOName').value : '',\n      DPOPhysicalAddress: this.formOrganisationDetails.get('DPORequired').value === 'Yes' ? this.formOrganisationDetails.get('DPOPhysicalAddress').value : '',\n      // tslint:disable-next-line:max-line-length\n      DPOPhoneNumber: this.formOrganisationDetails.get('DPOPhoneNumber').value ? this.formOrganisationDetails.get('PhoneNumberCode').value + (this.formOrganisationDetails.get('DPOPhoneNumber').value).replaceAll(' ', '') : '',\n      // tslint:disable-next-line:max-line-length\n      DPOEmailAddress: this.formOrganisationDetails.get('DPORequired').value === 'Yes' ? this.formOrganisationDetails.get('DPOEmailAddress').value : '',\n      DPOPositionInOrganisation: this.formOrganisationDetails.get('DPORequired').value === 'Yes' ? this.formOrganisationDetails.get('DPOPositionInOrganisation').value : '',\n      SourceOfDataID: this.selectedDataSources ? this.selectedDataSources : [],\n      PersonalDataCollected: this.selectedDataSubCategory ? this.selectedDataSubCategory : [],\n      Purpose: this.selectedDataPurposes ? this.selectedDataPurposes : [],\n      SpecifyTheLaw: this.formPurposeRetention.get('SpecifyTheLaw').value ? this.formPurposeRetention.get('SpecifyTheLaw').value : '',\n      ServiceOrProductProvided: this.formPurposeRetention.get('ServiceOrProductProvided').value ? this.formPurposeRetention.get('ServiceOrProductProvided').value : '',\n      SpecifyLegalObligation: this.formPurposeRetention.get('SpecifyLegalObligation').value ? this.formPurposeRetention.get('SpecifyLegalObligation').value : '',\n      // tslint:disable-next-line:max-line-length\n      TotalRecordsAtRegistration: this.formPurposeRetention.get('TotalRecordsAtRegistration').value ? parseInt(this.formPurposeRetention.get('TotalRecordsAtRegistration').value, 10) : 0,\n      RecordPercentageGrowth: this.formPurposeRetention.get('RecordPercentageGrowth').value ? parseInt(this.formPurposeRetention.get('RecordPercentageGrowth').value, 10) : 0,\n      // RetentionPeriod: this.formPurposeRetention.get('RetentionPeriod').value,\n      RetentionPeriod: this.formPurposeRetention.get('RetentionPeriod').value ? parseInt(this.formPurposeRetention.get('RetentionPeriod').value, 10) : 0,\n      PersonalDataIsForDisclosure: this.formThirdParties.get('PersonalDataIsForDisclosure').value ? this.formThirdParties.get('PersonalDataIsForDisclosure').value : '',\n      ThirdParties: this.thirdParties ? this.thirdParties : [],\n      StoreDataOutsideCountry: this.formThirdParties.get('StoreDataOutsideCountry').value ? this.formThirdParties.get('StoreDataOutsideCountry').value : '',\n      Countries: this.countriesOfTransfer ? this.countriesOfTransfer : [],\n      SecurityMeasures: this.securityMeasures ? this.securityMeasures : [],\n      Attachment: this.document ? this.document.Base64 : '',\n      Form3Attachment: this.documentForm3 ? this.documentForm3.Base64 : '',\n      CollectChildrenData: this.formChildrenData.get('CollectChildrenData').value ? this.formChildrenData.get('CollectChildrenData').value : '',\n      ChildrenDataPurpose: this.selectedChildDataPurposes ? this.selectedChildDataPurposes : [],\n      RegistrationConsent: this.formSecurityMeasures.get('RegistrationConsent').value ? true : false,\n      RegistrationDoneBy: this.formSecurityMeasures.get('RegistrationDoneBy').value ? this.formSecurityMeasures.get('RegistrationDoneBy').value : '',\n      ProofOfPayment: this.proofOfPayment ? this.proofOfPayment.Base64 : '',\n    };\n  }\n\n  onNatureOfBusinessCatSelected(NatureOfBusinessCatId): void {\n    // tslint:disable-next-line:max-line-length\n    this.httpSub = this.http.get<NatureOfBusinessSubCat[]>(this.endpoints.natureOfBusiness + '?NatureOfBusinessSubCat=' + NatureOfBusinessCatId)\n    .pipe(catchError(this.service.handleError))\n    .subscribe((response) => {\n\n      this.natureOfBusinessSubCat = response;\n\n    }, (error) => {\n      this.processing = false;\n      this.service.determineErrorResponse(error);\n    });\n  }\n\n  onPreviewForm(download: boolean): void {\n    this.dialogRef = this.dialog.open(OrgRegistrationPreviewDialogComponent, {\n      panelClass: ['organisation-registration-preview-form-3-dialog', 'dialogs'],\n      disableClose: true,\n      data: {\n        download: download,\n        row: this.getFormData(),\n        Attachment: this.document ? this.document : '',\n        Form3: this.documentForm3 ? this.documentForm3 : '',\n        ProofOfPayment: this.proofOfPayment ? this.proofOfPayment : '',\n        OrganizationType: this.OrganizationType,\n        // tslint:disable-next-line:max-line-length\n        Sector: this.formGeneralInformation.get('OtherSector').value ? this.formGeneralInformation.get('OtherSector').value : this.SectorName,\n        NatureOfBusinessCat: this.NatureOfBusinessCat,\n        CountryOfIncorporation: this.CountryOfIncorporation\n      }\n    });\n  }\n\n  onSubmit(): void {\n    this.processing = true;\n    console.log('save the registration information:', this.getFormData());\n\n    this.httpSub = this.http.post<ApiPayload>(this.endpoints.renewApplication, this.getFormData())\n    .pipe(catchError(this.service.handleError))\n    .subscribe((response) => {\n      this.dialogRef = this.dialog.open(SuccessfulMessageDialogComponent, {\n        panelClass: ['successful-message-dialog', 'dialogs'],\n        disableClose: true,\n        data: {\n          title: response.message['title'],\n          message: response.message['body'],\n          status: response.code === 200 ? true : false,\n        }\n      });\n\n      this.dialogRef.afterClosed().subscribe(() => {\n        this.route.navigate(['/company-registration/find']);\n      });\n\n      this.processing = false;\n    }, (error) => {\n      this.processing = false;\n\n      if (error.error.message) {\n        this.dialogRef = this.dialog.open(SuccessfulMessageDialogComponent, {\n          panelClass: ['successful-message-dialog', 'dialogs'],\n          disableClose: true,\n          data: {\n            title: error.error.message['title'] ? error.error.message['title'] : 'Operation Failed',\n            message: error.error.message['body'] ? error.error.message['body'] : environment.technicalErrorResponse,\n            status: false,\n          }\n        });\n      } else {\n        this.service.determineErrorResponse(error);\n      }\n    });\n  }\n\n  onReadDocument(document: FileUpload): void {\n    this.bottomsheetRef = this.bottomsheet.open(ViewPdfDocumentBottomsheetComponent, {\n      disableClose: true,\n      panelClass: ['view-pdf-document-bottomsheet', 'bottomsheets'],\n      data: {\n        url: document.Base64,\n        title: document.Name\n      }\n    });      \n  }\n\n  private _loadApplicationDraft(response): void {\n    console.log(response)\n    this.application = response[0];\n    this.processing = false;\n\n    this.regTrackingNo = response[0]['RegTrackingNo'];\n    this.OrganisationID = response[0]['OrganisationID'];\n    console.log(this.regTrackingNo);\n    console.log(this.application);\n    console.log(\"here\");\n\n    if (this.application.CurrentStepName !== 'Certificate Issued') {      \n      this.dialogRef = this.dialog.open(SuccessfulMessageDialogComponent, {\n        panelClass: ['successful-message-dialog', 'dialogs'],\n        disableClose: true,\n        data: {\n          title: 'No Previous Certificate',\n          message: 'Please complete your registration',\n          status: false,\n        }\n      });\n\n      this.dialogRef.afterClosed().subscribe(() => {\n        // console.log('regTrackingNo:', this.regTrackingNo);\n        this.route.navigate(\n          ['/company-registration/view'],\n          { state: { regTrackingNo: this.regTrackingNo }}\n        ).then();\n      });      \n\n    } else {\n\n      if (this.application.OrganisationCategory) {\n        let organisationCategories: any = this.application.OrganisationCategory;\n        let cat: number[] = [];\n    \n        organisationCategories.filter((item) => {\n          cat.push(item.OrganisationCategoryId);\n        });\n    \n        this.formGeneralInformation.get('DPPActCategory').patchValue(cat);\n      }\n  \n      this.formGeneralInformation.get('OrganizationTypeID').patchValue(this.application.OrganizationTypeID);\n      this.formGeneralInformation.get('OrganizationName').patchValue(this.application.OrganisationName);\n      this.formGeneralInformation.get('URSBNumber').patchValue(this.application.URSBNumber);\n      this.formGeneralInformation.get('SectorID').patchValue(this.application.SectorID);\n      this.formGeneralInformation.get('CountryOfIncorporation').patchValue(this.application['CountryOfIncorporation']);\n      this.formGeneralInformation.get('OtherSector').patchValue(this.application['OtherSector']);\n      this.formGeneralInformation.get('Location').patchValue(this.application.Location);\n      this.formGeneralInformation.get('PhoneNumberCode').patchValue(this.application.PhoneNumber.substring(0, 3));\n      this.formGeneralInformation.get('PhoneNumber').patchValue(this.application.PhoneNumber.substring(3, 13));\n      this.formGeneralInformation.get('EmailAddress').patchValue(this.application.EmailAddress);\n  \n      if (response[0]['NatureOfBusiness'].length) {\n        this.formGeneralInformation.get('NatureOfBusinessCat').patchValue(response[0]['NatureOfBusiness'][0]['NatureOfBusinessCatID']);\n        this.natureOfbusinesses = response[0]['NatureOfBusiness'];\n\n        this.onNatureOfBusinessCatSelected(response[0]['NatureOfBusiness'][0]['NatureOfBusinessCatID']);\n        \n        let _selectedNatureOfBusinessSubCat: NatureOfBusinessSubCat[] = [];\n        this.natureOfbusinesses.filter((item) => {\n            this.natureOfbusinesses_arr.push(item.NatureOfBusinessSubatID);\n\n            _selectedNatureOfBusinessSubCat.push({\n                NatureOfBusinessSubCatId: item.NatureOfBusinessSubatID,\n                NatureOfBusinessSubCategoryName: item.NatureOfBusinessSubCategoryName\n            });\n        });\n\n                  \n        this.formGeneralInformation.get('NatureOfBusinessSubCat').patchValue(this.natureOfbusinesses_arr);\n        this.selectedNatureOfBusinessSubCat = _selectedNatureOfBusinessSubCat;\n      }\n  \n      // STEP TWO\n      this.formOrganisationDetails.get('DPORequired').patchValue(this.application['DPORequired']);\n  \n      this.formOrganisationDetails.get('DPOName').patchValue(this.application['DPOName']);\n      this.formOrganisationDetails.get('DPOPhysicalAddress').patchValue(this.application['DPOPhysicalAddress']);\n      this.formOrganisationDetails.get('PhoneNumberCode').patchValue(this.application['DPOPhoneNumber'].substring(0, 3));\n      this.formOrganisationDetails.get('DPOPhoneNumber').patchValue(this.application['DPOPhoneNumber'].substring(3, 13));\n      this.formOrganisationDetails.get('DPOEmailAddress').patchValue(this.application['DPOEmailAddress']);\n      this.formOrganisationDetails.get('DPOPositionInOrganisation').patchValue(this.application['DPOPositionInOrganisation']);\n  \n      // STEP THREE\n      let sourceofdata = this.application['SourceOfDataID'];\n      let sourceofdata_arr: number [] = [];\n      \n      sourceofdata.filter((item) => {\n        sourceofdata_arr.push(item.DataSourceID);\n      });\n  \n      this.formPersonalDataHeld.get('SourceOfDataID').patchValue(sourceofdata_arr);\n  \n      if (this.application['PersonalDataCollected']) {\n        const personalDataCollected: any[] = this.application['PersonalDataCollected'];\n    \n        this.dataCategories.filter((category) => {\n          category.SubCategories.filter((subCat) => {\n            personalDataCollected.filter((selectedSubCat) => {            \n              if (subCat.DataSubCategoryID === selectedSubCat.DataSubCategoryID) {\n                subCat.IsChecked = true;\n                this.selectedDataSubCategory.push(subCat);\n              }\n            });\n          });\n        });\n      }\n\n      // CHILDREN'S DATA \n\n      if(this.application['CollectChildrenData']){\n\n        this.formChildrenData.get('CollectChildrenData').patchValue(this.application['CollectChildrenData']);\n      }\n\n     \n\n      if(this.application.CollectChildrenData == 'Yes'){\n\n        this.showChildrenDataFields = true;\n      \n        \n        this.childDataPurposes = this.application['ChildrenDataPurpose']\n        let _selectedChildrenDataPurposes: ChildrenDataPurpose[] = [];\n        this.childDataPurposes.filter((item) => {\n\n            this.childDataPurposeResults.push(item.ChildDataID);\n        })\n        this.formChildrenData.get('PurposeForCollection').patchValue(this.childDataPurposeResults);\n\n      }\n\n        \n      // STEP FOUR\n      const purpose: any = this.application['Purpose'];\n      let purpose_arr: any[] = [];\n      let _selectedDataPurposes: DataPurposes[]  = [];\n  \n      purpose.filter((item) => {\n        if (item.DataPurposeID === 1) {\n          this.SpecifyTheLaw = true;\n          this.formPurposeRetention.get('SpecifyTheLaw').setValidators([Validators.required]);\n        }\n  \n        if (item.DataPurposeID === 3) {\n          this.ServiceOrProductProvided = true;\n          this.formPurposeRetention.get('ServiceOrProductProvided').setValidators([Validators.required]);\n        }\n  \n        if (item.DataPurposeID === 6) {\n          this.SpecifyLegalObligation = true;\n          this.formPurposeRetention.get('SpecifyLegalObligation').setValidators([Validators.required]);\n        }\n  \n        purpose_arr.push(item.DataPurposeID);\n  \n        _selectedDataPurposes.push(item);\n      });\n      \n      this.formPurposeRetention.get('Purpose').patchValue(purpose_arr);\n      this.selectedDataPurposes = _selectedDataPurposes;\n  \n      this.formPurposeRetention.get('SpecifyTheLaw').patchValue(this.application['SpecifyTheLaw']);\n      this.formPurposeRetention.get('ServiceOrProductProvided').patchValue(this.application['ServiceOrProductProvided']);\n      this.formPurposeRetention.get('SpecifyLegalObligation').patchValue(this.application['SpecifyLegalObligation']);\n      this.formPurposeRetention.get('TotalRecordsAtRegistration').patchValue(this.application['TotalRecordsAtRegistration']);\n      this.formPurposeRetention.get('RecordPercentageGrowth').patchValue(this.application['RecordPercentageGrowth']);\n      this.formPurposeRetention.get('RetentionPeriod').patchValue(this.application['RetentionPeriod']);\n  \n      // STEP FIVE\n      this.formThirdParties.get('PersonalDataIsForDisclosure').patchValue(this.application['PersonalDataIsForDisclosure'].replace(/\\s/g, ''));\n      this.thirdParties = this.application['ThirdParties'];\n      this.thirdPartyDataSource = new MatTableDataSource(this.thirdParties);\n  \n      setTimeout(() => {\n        this.thirdPartyDataSource.paginator = this.thirdPartyPaginator;\n        this.thirdPartyDataSource.sort = this.thirdPartyMatSort;\n      });\n  \n      this.formThirdParties.get('StoreDataOutsideCountry').patchValue(this.application['StoreDataOutsideCountry']);\n      this.countriesOfTransfer = this.application['Countries'];\n      this.countriesDataSource = new MatTableDataSource(this.countriesOfTransfer);\n  \n      setTimeout(() => {\n        this.countriesDataSource.paginator = this.countryOfTransferPaginator;\n        this.countriesDataSource.sort = this.countryOfTransferMatSort;\n      });\n  \n      // STEP SIX\n      this.securityMeasures = this.application['SecurityMeasures'];\n      this.securityMeasureDataSource = new MatTableDataSource(this.securityMeasures);\n      setTimeout(() => {\n          this.securityMeasureDataSource.paginator = this.securityMeasurePaginator;\n          this.securityMeasureDataSource.sort = this.securityMeasureMatSort;\n      });\n  \n      if (this.application.Attachment) {\n        this.document = { \n          Document: null, \n          Name: 'Supporting Documentation.pdf', \n          Size: null, \n          Base64: this.application.Attachment \n        };\n      }\n\n      if (this.application.Form3Attachment) {\n        this.documentForm3 = { \n          Document: null, \n          Name: 'Form 3.pdf', \n          Size: null, \n          Base64: this.application.Form3Attachment \n        };\n      }\n\n      this.formSecurityMeasures.get('RegistrationConsent').patchValue(this.application['RegistrationConsent'] == true ? true : null);\n      this.formSecurityMeasures.get('RegistrationDoneBy').patchValue(this.application['RegistrationDoneBy']);    \n    }\n  }\n\n  onSaveDraft(): void {\n    this.processing = true;\n\n    this.httpSub = this.http.put<ApiPayload>(this.endpoints.orgRegSaveDraft, this.getFormData())\n    .pipe(catchError(this.service.handleError))\n    .subscribe((response) => {\n\n      this.dialogRef = this.dialog.open(SuccessfulMessageDialogComponent, {\n        panelClass: ['successful-message-dialog', 'dialogs'],\n        disableClose: true,\n        data: {\n          title: response.message['title'],\n          message: response.message['body'],\n          status: response.code === 200 ? true : false,\n        }\n      });\n\n      this.processing = false;\n    }, (error) => {\n      this.processing = false;\n\n      if (error.error.message) {\n        this.dialogRef = this.dialog.open(SuccessfulMessageDialogComponent, {\n          panelClass: ['successful-message-dialog', 'dialogs'],\n          disableClose: true,\n          data: {\n            title: error.error.message['title'] ? error.error.message['title'] : 'Operation Failed',\n            message: error.error.message['body'] ? error.error.message['body'] : environment.technicalErrorResponse,\n            status: false,\n          }\n        });\n      } else {\n        this.service.determineErrorResponse(error);\n      }\n    });    \n  }\n\n  ngOnDestroy(): void {\n    if (this.httpSub) { this.httpSub.unsubscribe(); }\n  }\n\n  generatePRN(){\n\n    this.Organisation_User_ID = this._auth.getOrganisationID();\n\n    console.log(this.getPRNRequestData()); \n    this.httpSub = this.http.post<ApiPayload>(this.endpoints.generatePRN, this.getPRNRequestData())\n    .pipe(catchError(this.service.handleError))\n    .subscribe((response) => {\n      console.log(response.data);\n      this.showPRNDownload = true;\n      \n      this.dialogRef = this.dialog.open(SuccessfulMessageDialogComponent, {\n        disableClose: true,\n        data: {\n          title: 'URA PRN',\n          message: 'PRN Generated successfully.Check the email and telephone number provided for more details.',\n          status: true,\n        }\n      });\n\n      this.formGeneralInformation.get('PRN').patchValue(response.data.PRN);\n\n      this.processing = false;\n    }, (error) => {\n      this.processing = false;\n\n      if (error.error.message) {\n        this.dialogRef = this.dialog.open( SuccessfulMessageDialogComponent, {\n          panelClass: ['forward-message-dialog', 'dialogs'],\n          disableClose: true,\n          data: {\n            title: error.error.message['title'] ? error.error.message['title'] : 'Operation Failed',\n            message: error.error.message['body'] ? error.error.message['body'] : environment.technicalErrorResponse,\n            status: false,\n          }\n        });\n      } else {\n        this.service.determineErrorResponse(error);\n      }\n    });\n\n  }\n\n  getPRNRequestData(){\n\n    const data =  {\n\n      phone_number: this.formGeneralInformation.get('PhoneNumberCode').value + '' + this.formGeneralInformation.get('PhoneNumber').value,\n      email: this.formGeneralInformation.get('EmailAddress').value,\n      organisation_name: this.formGeneralInformation.get('OrganizationName').value,\n      organisation_user_id : this._auth.getOrganisationID()\n\n    }\n\n    return data;\n  }\n\n\n  checkPRNStatus(){\n\n    this.Organisation_User_ID = this._auth.getOrganisationID();\n\n    console.log(this.getPRNRequestData()); \n    this.httpSub = this.http.post<ApiPayload>(this.endpoints.checkPRN, this.getPRN())\n    .pipe(catchError(this.service.handleError))\n    .subscribe((response) => {\n      console.log(response.data);\n\n      let message;\n      let status;\n\n      if(response.data.ErrorCode == 'A'){\n        message = 'The PRN is valid, however payment has not been made';\n        status = false;\n      }\n      else if(response.data.ErrorCode == 'R'){\n         message =  'The PRN is valid, however the cheque has not yet matured';\n         status = false;\n      }\n      else if(response.data.ErrorCode == 'T'){\n         message = 'Received and credited. The payment has been reconciled with the  bank';\n         status = true;\n      }\n      else if(response.data.ErrorCode == 'D'){\n         message = 'The PRN is valid, however the cheque was dishonoured';\n         status = false;\n      }\n      else if(response.data.ErrorCode == 'C'){\n         message = 'The PRN was cancelled';\n         status = false;\n      }\n      else if(response.data.ErrorCode == 'X'){\n         message = 'THe PRN has expired';\n         status = false;\n      }\n      else if(response.data.ErrorCode == 'APPOO1'){\n        message = response.data.ErrorDesc;\n        status =  false;\n      }\n      else{\n        message = 'An error occured';\n        status = false;\n      }\n      this.showPRNDownload = true;\n\n\n      \n      this.dialogRef = this.dialog.open(SuccessfulMessageDialogComponent, {\n        disableClose: true,\n        data: {\n          title: 'URA PRN',\n          message: message,\n          status: false,\n        }\n      });\n\n\n      this.processing = false;\n    }, (error) => {\n      this.processing = false;\n\n      if (error.error.message) {\n        this.dialogRef = this.dialog.open( SuccessfulMessageDialogComponent, {\n          panelClass: ['forward-message-dialog', 'dialogs'],\n          disableClose: true,\n          data: {\n            title: error.error.message['title'] ? error.error.message['title'] : 'Operation Failed',\n            message: error.error.message['body'] ? error.error.message['body'] : environment.technicalErrorResponse,\n            status: false,\n          }\n        });\n      } else {\n        this.service.determineErrorResponse(error);\n      }\n    });\n  }\n\n  getPRN(){\n\n    const data =  {\n\n      prn : this.formGeneralInformation.get('PRN').value\n\n    }\n\n    return data;\n  }\n\n\n  downloadPRNDownload(){\n\n\n    this.httpSub = this.http.post<ApiPayload>(this.endpoints.checkPRN, this.getPRN())\n    .pipe(catchError(this.service.handleError))\n    .subscribe((response) => {\n\n      console.log(response.data);\n      this.dialogRef = this.dialog.open(DownloadPRNReceiptComponent, {\n        disableClose: true,\n        data: {\n          download: true,\n          prn_data:response.data\n        }\n      \n      });\n\n      \n    }, (error) => {\n      this.processing = false;\n\n      if (error.error.message) {\n        this.dialogRef = this.dialog.open( SuccessfulMessageDialogComponent, {\n          panelClass: ['forward-message-dialog', 'dialogs'],\n          disableClose: true,\n          data: {\n            title: error.error.message['title'] ? error.error.message['title'] : 'Operation Failed',\n            message: error.error.message['body'] ? error.error.message['body'] : environment.technicalErrorResponse,\n            status: false,\n          }\n        });\n      } else {\n        this.service.determineErrorResponse(error);\n      }\n    });\n\n    \n  } \n\n\n}\n","\n<fury-page-layout mode=\"card\">\n    <fury-page-layout-header>\n        <fury-breadcrumbs [@fadeInRight] [crumbs]=\"['New Registration']\"\n                          current=\"New Application\"></fury-breadcrumbs>\n    </fury-page-layout-header>\n\n    <fury-page-layout-content [@fadeInUp]>\n        <main class=\"fadeInUp _delay4ms\">\n\n            <!-- <app-page-breadcrumb [title]=\"'Application for New Registration / Renewal'\"></app-page-breadcrumb> -->\n        \n            <mat-horizontal-stepper \n                [linear]=\"isLinear\"\n                [selectedIndex]=\"selectedIndex\"\n                labelPosition=\"bottom\" #stepper>\n        \n                <mat-step [stepControl]=\"formGeneralInformation\">\n                    <ng-template matStepLabel>\n                        <h3>Applicant</h3>\n                    </ng-template>\n        \n                    <form [formGroup]=\"formGeneralInformation\">\n                        <h1 class=\"full-width step-header\">Details of the applicant which could be an organisation or Individual that collects or processes Personal Data </h1>\n        \n                        <mat-form-field>\n                            <mat-label>Name of Organisation <span class=\"required-field\">required</span></mat-label>\n                            <input appUppercase matInput formControlName=\"OrganizationName\">       \n                            <mat-error *ngIf=\"formGeneralInformation.get('OrganizationName').invalid\">{{ getOrganizationNameErrorMessage() }}</mat-error>\n                        </mat-form-field>  \n        \n                        <div class=\"telephone-code-number-wrapper\">\n                            <mat-form-field class=\"fadeInUp _delay2ms\">\n                                <mat-label>Pick one </mat-label>\n                                <mat-select formControlName=\"PhoneNumberCode\">\n                                    <mat-option selected *ngIf=\"!selected\" value=\"256\">+256</mat-option>\n                                    <!-- <mat-option selected *ngIf=\"!selected\" value=\"256\">+256 - Uganda</mat-option> -->\n                                    <mat-option *ngFor=\"let code of countries\" [value]=\"code.PhoneCode\" (click)=\"selected = true\">\n                                        +{{ code.PhoneCode }}\n                                    </mat-option>\n                                </mat-select>\n                            </mat-form-field>\n        \n                            <!-- <mat-form-field class=\"fadeInUp _delay2ms\" [hintLabel]=\"'Organisation Telephone Number.'\"> -->\n                            <mat-form-field class=\"fadeInUp _delay2ms\">\n                                <mat-label>Organisation Telephone Number <span class=\"required-field\">required</span></mat-label>\n                                <input type=\"text\" maxlength=\"11\" matInput appTelephoneFormaterDirective formControlName=\"PhoneNumber\" placeholder=\"Ex. 414 318 111\">\n                                <mat-error *ngIf=\"formGeneralInformation.get('PhoneNumber').invalid\">{{ getTelephoneNumberErrorMessage() }}</mat-error>\n                            </mat-form-field> \n                        </div>                \n        \n                        <mat-form-field>\n                            <mat-label>Organisation Email Address <span class=\"required-field\">required</span></mat-label>\n                            <input appRemoveSpaces matInput formControlName=\"EmailAddress\">\n                            <mat-error *ngIf=\"formGeneralInformation.get('EmailAddress').invalid\">{{ getEmailAddressErrorMessage() }}</mat-error>\n                        </mat-form-field>   \n                                \n                        <mat-form-field [hintLabel]=\"'Choose all that apply'\">\n                            <mat-label>Category <span class=\"required-field\">required</span></mat-label>\n                            <mat-select multiple formControlName=\"DPPActCategory\">\n                                <mat-option *ngFor=\"let cat of organisationCategories\" [value]=\"cat.OrganisationCategoryId\">\n                                    {{ cat.OrganisationCategoryName }}\n                                </mat-option>\n                            </mat-select>   \n                            <mat-error *ngIf=\"formGeneralInformation.get('DPPActCategory').invalid\">{{ getSelectErrorMessage() }}</mat-error> \n                        </mat-form-field>                             \n        \n                        <mat-form-field>\n                            <mat-label>Type of Organisation <span class=\"required-field\">required</span></mat-label>\n                            <mat-select formControlName=\"OrganizationTypeID\" #typeOfOrganisation>\n                                <mat-option *ngFor=\"let type of organisationTypes\" (click)=\"OrganizationType = type.OrganisationType\" [value]=\"type.OrganisationTypeID\">\n                                    {{ type.OrganisationType }}\n                                </mat-option>\n                            </mat-select>\n                            <mat-error *ngIf=\"formGeneralInformation.get('OrganizationTypeID').invalid\">{{ getSelectErrorMessage() }}</mat-error> \n                        </mat-form-field>                   \n        \n                        <mat-form-field *ngIf=\"typeOfOrganisation.value && typeOfOrganisation.value !== 4\">\n                            <mat-label>Country of Incorporation <span class=\"required-field\">required</span></mat-label>\n                            <mat-select formControlName=\"CountryOfIncorporation\">\n                                <mat-option *ngFor=\"let country of countries\" (click)=\"CountryOfIncorporation = country.Name\" [value]=\"country.CountryID\">\n                                    {{ country.Name }}\n                                </mat-option>\n                            </mat-select>\n                            <mat-error *ngIf=\"formGeneralInformation.get('CountryOfIncorporation').invalid\">{{ getSelectErrorMessage() }}</mat-error> \n                        </mat-form-field>        \n        \n                        <mat-form-field *ngIf=\"typeOfOrganisation.value && typeOfOrganisation.value !== 4\">\n                            <mat-label>Registration Number <span class=\"required-field\">required</span></mat-label>\n                            <input appUppercase appRemoveSpaces matInput maxlength=\"25\" formControlName=\"URSBNumber\"> \n                            <mat-error *ngIf=\"formGeneralInformation.get('URSBNumber').invalid\">{{ getURSBNumberErrorMessage() }}</mat-error>\n                        </mat-form-field>     \n                        \n                        <mat-form-field>\n                            <mat-label>Sector <span class=\"required-field\">required</span></mat-label>\n                            <mat-select formControlName=\"SectorID\" #Sector>\n                                <mat-option *ngFor=\"let sector of sectors\" (click)=\"SectorName = sector.Sector\" [value]=\"sector.SectorID\">\n                                    {{ sector.Sector }}\n                                </mat-option>\n                            </mat-select>\n                            <mat-error *ngIf=\"formGeneralInformation.get('SectorID').invalid\">{{ getSelectErrorMessage() }}</mat-error>\n                        </mat-form-field>        \n                        \n                        <mat-form-field hintLabel=\"If Other, Please specify the Sector.\" *ngIf=\"Sector.value === 14\">\n                            <mat-label>Specify Sector <span class=\"required-field\">required</span></mat-label>\n                            <input appUppercase matInput maxlength=\"50\" formControlName=\"OtherSector\">    \n                            <mat-error *ngIf=\"formGeneralInformation.get('OtherSector').invalid\">{{ getOtherSectorErrorMessage() }}</mat-error>\n                        </mat-form-field>                 \n        \n                        <mat-form-field>\n                            <mat-label>Physical Address <span class=\"required-field\">required</span></mat-label>\n                            <input appUppercase matInput maxlength=\"255\" formControlName=\"Location\">            \n                            <mat-error *ngIf=\"formGeneralInformation.get('Location').invalid\">{{ getLocationErrorMessage() }}</mat-error>                \n                        </mat-form-field>  \n        \n                        <mat-form-field>\n                            <mat-label>Nature of Business Categories<span class=\"required-field\">required</span></mat-label>\n                            <mat-select formControlName=\"NatureOfBusinessCat\">\n                                <mat-option *ngFor=\"let cat of natureOfBusinessCat\" (click)=\"NatureOfBusinessCat = cat.NatureOfBusinessCategoryName\" [value]=\"cat.NatureOfBusinessCatId\">\n                                    {{ cat.NatureOfBusinessCategoryName }}\n                                </mat-option>\n                            </mat-select>    \n                            <mat-error *ngIf=\"formGeneralInformation.get('NatureOfBusinessCat').invalid\">{{ getSelectErrorMessage() }}</mat-error>\n                        </mat-form-field>                   \n        \n                        <mat-form-field [hintLabel]=\"'Choose all that apply'\">\n                            <mat-label>Nature of Business Sub-Categories <span class=\"required-field\">required</span></mat-label>\n                            <mat-select multiple formControlName=\"NatureOfBusinessSubCat\">\n                                <mat-option *ngFor=\"let sub of natureOfBusinessSubCat\" [value]=\"sub.NatureOfBusinessSubCatId\" [matTooltip]=\"sub.NatureOfBusinessSubCategoryName\">\n                                    {{ sub.NatureOfBusinessSubCategoryName }}\n                                </mat-option>\n                            </mat-select> \n                            <mat-error *ngIf=\"formGeneralInformation.get('NatureOfBusinessSubCat').invalid\">{{ getSelectErrorMessage() }}</mat-error>   \n                        </mat-form-field>      \n                        \n                        \n                                 \n                    </form>\n        \n                    <div class=\"button-wrapper\">\n                               \n        \n                        <button \n                            [disabled]=\"formGeneralInformation.invalid\"\n                            mat-button \n                            class=\"next-btn\" \n                            color=\"primary\" \n                            matStepperNext>\n                            Next\n                        </button>\n                    </div>             \n                </mat-step>\n        \n                <mat-step [stepControl]=\"formOrganisationDetails\">\n                    <ng-template matStepLabel>\n                        <h3>Data Protection <br />Officer</h3>\n                    </ng-template>\n        \n                    <form [formGroup]=\"formOrganisationDetails\">     \n        \n                        <h1 class=\"full-width step-header\">Details of Data Protection Officer </h1>    \n        \n                        <div class=\"grouped-items\" [ngClass]=\"{'full-width': formOrganisationDetails.get('DPORequired').value !== 'Yes'}\">\n                            <h3>Do you have a designated data protection officer ? </h3>\n            \n                            <mat-radio-group \n                                color=\"primary\" \n                                formControlName=\"DPORequired\" \n                                aria-label=\"Pick one\">\n                                <mat-radio-button value=\"Yes\">Yes</mat-radio-button>\n                                <mat-radio-button value=\"No\">No</mat-radio-button>\n                            </mat-radio-group>        \n                        </div>                  \n                        \n                        <mat-form-field *ngIf=\"formOrganisationDetails.get('DPORequired').value === 'Yes'\">\n                            <mat-label>Name <span class=\"required-field\">required</span></mat-label>\n                            <input formControlName=\"DPOName\" matInput>\n                            <mat-error *ngIf=\"formOrganisationDetails.get('DPOName').invalid\">{{ getDPONameErrorMessage() }}</mat-error>\n                        </mat-form-field>\n                \n                        <mat-form-field *ngIf=\"formOrganisationDetails.get('DPORequired').value === 'Yes'\">\n                            <mat-label>Physical Address <span class=\"required-field\">required</span></mat-label>\n                            <input formControlName=\"DPOPhysicalAddress\" maxlength=\"255\" matInput>\n                            <mat-error *ngIf=\"formOrganisationDetails.get('DPOPhysicalAddress').invalid\">{{ getDPOPhysicalAddressErrorMessage() }}</mat-error>\n                        </mat-form-field>\n                        \n                        <div class=\"telephone-code-number-wrapper\" *ngIf=\"formOrganisationDetails.get('DPORequired').value === 'Yes'\">\n                            <mat-form-field class=\"fadeInUp _delay2ms\">\n                                <mat-label>Pick one </mat-label>\n                                <mat-select formControlName=\"PhoneNumberCode\">\n                                    <mat-option selected *ngIf=\"!DPOSelected\" value=\"256\">+256</mat-option>\n                                    <!-- <mat-option selected *ngIf=\"!selected\" value=\"256\">+256 - Uganda</mat-option> -->\n                                    <mat-option *ngFor=\"let code of countries\" [value]=\"code.PhoneCode\" (click)=\"DPOSelected = true\">\n                                        +{{ code.PhoneCode }}\n                                    </mat-option>\n                                </mat-select>\n                                <!-- <mat-error *ngIf=\"formGeneralInformation.get('PhoneNumberCode').invalid\">{{ getSelectInputErrorMessage() }}</mat-error>      -->\n                            </mat-form-field>\n        \n                            <!-- <mat-form-field class=\"fadeInUp _delay2ms\" [hintLabel]=\"'Organisation Telephone Number.'\"> -->\n                            <mat-form-field class=\"fadeInUp _delay2ms\">\n                                <mat-label>Telephone Number <span class=\"required-field\">required</span></mat-label>\n                                <input type=\"text\" maxlength=\"11\" matInput appTelephoneFormaterDirective formControlName=\"DPOPhoneNumber\" placeholder=\"Ex. 414 318 111\">\n                                <mat-error *ngIf=\"formOrganisationDetails.get('DPOPhoneNumber').invalid\">{{ getDPOPhoneNumberErrorMessage() }}</mat-error>\n                            </mat-form-field> \n                        </div>                  \n                \n                        <mat-form-field *ngIf=\"formOrganisationDetails.get('DPORequired').value === 'Yes'\">\n                            <mat-label>Email Address <span class=\"required-field\">required</span></mat-label>\n                            <input appRemoveSpaces formControlName=\"DPOEmailAddress\" matInput>\n                            <mat-error *ngIf=\"formOrganisationDetails.get('DPOEmailAddress').invalid\">{{ getDPOEmailAddressErrorMessage() }}</mat-error>\n                        </mat-form-field>       \n        \n                        <mat-form-field *ngIf=\"formOrganisationDetails.get('DPORequired').value === 'Yes'\" class=\"full-width\" hintLabel=\"Any other title held apart from DPO (Data Protection Officer).\">\n                            <mat-label>Title Held <span class=\"required-field\">required</span></mat-label>\n                            <textarea #PositionInput matInput formControlName=\"DPOPositionInOrganisation\" maxlength=\"1000\"></textarea>\n                            <mat-hint align=\"end\">{{ PositionInput.value.length }} / 1000</mat-hint>\n                            <mat-error *ngIf=\"formOrganisationDetails.get('DPOPositionInOrganisation').invalid\">{{ getDPOPositionInOrganisationErrorMessage() }}</mat-error>\n                        </mat-form-field>                  \n                    </form>\n        \n                    <div class=\"button-wrapper\">       \n                        <button mat-button class=\"back-btn\" matStepperPrevious>Back</button>   \n                        \n                        \n\n                        <button \n                            [disabled]=\"formOrganisationDetails.invalid\"\n                            mat-button \n                            class=\"next-btn\" \n                            color=\"primary\" \n                            matStepperNext>\n                            Next\n                        </button>\n                    </div>             \n                </mat-step>\n        \n                <mat-step [stepControl]=\"formPersonalDataHeld\">\n                    <ng-template matStepLabel>\n                        <h3>Data Collected <br /> or Processed</h3>\n                    </ng-template>\n        \n                    <form [formGroup]=\"formPersonalDataHeld\" class=\"personal-data-affected\">       \n                        \n                        <h1 class=\"full-width step-header\">Description of Data collected or processed </h1>\n        \n                        <mat-form-field hintLabel=\"Choose all that apply.\" class=\"full-width\">\n                            <mat-label>Source of Data <span class=\"required-field\">required</span></mat-label>\n                            <mat-select multiple formControlName=\"SourceOfDataID\">\n                                <mat-option *ngFor=\"let source of dataSources\" [value]=\"source.DataSourceID\">\n                                    {{ source.DataSource }}\n                                </mat-option>\n                            </mat-select>    \n                            <mat-error *ngIf=\"formPersonalDataHeld.get('SourceOfDataID').invalid\">{{ getSelectErrorMessage() }}</mat-error> \n                        </mat-form-field>        \n        \n                        <h1 class=\"full-width heading\">Personal Data Collected Or Processed</h1>\n                        \n                        <section *ngFor=\"let category of dataCategories; let i = index\" class=\"expand-section categories\">        \n                            <div>\n                                <h3 [innerHTML]=\"category.DataCategory\"></h3>\n                                <mat-icon matTooltipPosition=\"right\"  [matTooltip]=\"category.DataDescription\">info</mat-icon>\n                            </div>\n\n                            <mat-checkbox\n                                *ngFor=\"let SubCategory of category.SubCategories\" \n                                [ngClass]=\"{'full-width': category.SubCategories.length === 1}\"\n                                color=\"primary\"\n                                [checked]=\"SubCategory.IsChecked\"\n                                (change)=\"onChangeSubCategory($event,SubCategory)\"\n                                [required]=\"'false'\">\n                                {{ SubCategory.DataSubCategory }}\n                            </mat-checkbox>    \n                        </section>\n                    </form>\n        \n                    <div class=\"button-wrapper\">       \n                        <button mat-button class=\"back-btn\" matStepperPrevious>Back</button>\n        \n                     \n\n                        <button \n                            [disabled]=\"formPersonalDataHeld.invalid || selectedDataSubCategory.length === 0\"\n                            mat-button \n                            class=\"next-btn\" \n                            color=\"primary\" \n                            matStepperNext>\n                            Next\n                        </button>\n                    </div>             \n                </mat-step>\n\n\n                <mat-step [stepControl]=\"formChildrenData\">\n                    <ng-template matStepLabel>\n                        <h3>Children's Data</h3>\n                    </ng-template>\n\n                    <form [formGroup]=\"formChildrenData\">\n                        \n                        <div class=\"grouped-items\">\n                            <h3>Do you collect personal data relating to Children?<span class=\"required-field\">required</span></h3>\n            \n                            <mat-radio-group color=\"primary\" aria-label=\"Pick one\" formControlName=\"CollectChildrenData\" (change)=\"updateCollecthildrenData($event)\">\n                                <mat-radio-button value=\"Yes\">Yes</mat-radio-button>\n                                <mat-radio-button value=\"No\">No</mat-radio-button>\n                            </mat-radio-group>        \n                        </div>  \n        \n                        <mat-form-field *ngIf=\"showChildrenDataFields == true\">\n                            <mat-label>Reason / Purpose for collecting children's data<span class=\"required-field\">required</span> </mat-label>\n                        \n                            <mat-select multiple formControlName=\"PurposeForCollection\">\n                                <mat-option *ngFor=\"let child of childDataPurposes\" [value]=\"child.ChildDataID\">\n                                    {{ child.ChildDataPurpose }}\n                                </mat-option>\n                            </mat-select>  \n                        </mat-form-field>                  \n                        \n                                    \n        \n                    </form>\n\n                    <div class=\"button-wrapper\">       \n                        <button mat-button class=\"back-btn\" matStepperPrevious>Back</button>\n\n                        <button \n                            [disabled]=\"formChildrenData.invalid\"\n                            mat-button \n                            class=\"next-btn\" \n                            color=\"primary\" \n                            matStepperNext>\n                            Next\n                        </button>\n                    </div>          \n\n                </mat-step>\n        \n                <mat-step [stepControl]=\"formPurposeRetention\">\n                    <ng-template matStepLabel>\n                        <h3>Purpose & Retention</h3>\n                    </ng-template>\n        \n                    <form [formGroup]=\"formPurposeRetention\">       \n                        \n                        <h1 class=\"full-width step-header\">Description of Purpose for which data is collected or processed </h1>\n        \n                        <mat-form-field hintLabel=\"Why do you collect personal Data?\">\n                            <mat-label>For What Purpose ?<span class=\"required-field\">required</span></mat-label>\n                            <mat-select formControlName=\"Purpose\" multiple>\n                                <mat-option *ngFor=\"let purpose of dataPurposes\" [value]=\"purpose.DataPurposeID\">\n                                    {{ purpose.DataPurpose }}\n                                </mat-option>\n                            </mat-select>  \n                            <mat-error *ngIf=\"formPurposeRetention.get('Purpose').invalid\">{{ getSelectErrorMessage() }}</mat-error>   \n                        </mat-form-field>\n        \n                        <mat-form-field hintLabel=\"If the purpose is Collection / Processing is required by Law.\" *ngIf=\"SpecifyTheLaw\">\n                            <mat-label>Specify the Law <span class=\"required-field\">required</span></mat-label>\n                            <input matInput #SpecifyTheLawInput maxlength=\"1000\" formControlName=\"SpecifyTheLaw\">        \n                            <mat-hint align=\"end\">{{ SpecifyTheLawInput.value.length }} / 1000</mat-hint>    \n                            <mat-error *ngIf=\"formPurposeRetention.get('SpecifyTheLaw').invalid\">{{ getRequiredErrorMessage() }}</mat-error>\n                        </mat-form-field>  \n        \n                        <mat-form-field hintLabel=\"If the purpose is to provide services / products to Individuals.\" *ngIf=\"ServiceOrProductProvided\">\n                            <mat-label>Specify the Service / Product Provided<span class=\"required-field\">required</span></mat-label>\n                            <input matInput #ServiceOrProductProvidedInput maxlength=\"1000\" formControlName=\"ServiceOrProductProvided\">     \n                            <mat-hint align=\"end\">{{ ServiceOrProductProvidedInput.value.length }} / 1000</mat-hint>    \n                            <mat-error *ngIf=\"formPurposeRetention.get('ServiceOrProductProvided').invalid\">{{ getRequiredErrorMessage() }}</mat-error>\n                        </mat-form-field>  \n        \n                        <mat-form-field hintLabel=\"If the purpose is for Compliance with a Legal Obligation.\" *ngIf=\"SpecifyLegalObligation\">\n                            <mat-label>Specify the Legal Obligation<span class=\"required-field\">required</span></mat-label>\n                            <input matInput #SpecifyLegalObligationInput maxlength=\"1000\" formControlName=\"SpecifyLegalObligation\">  \n                            <mat-hint align=\"end\">{{ SpecifyLegalObligationInput.value.length }} / 1000</mat-hint>    \n                            <mat-error *ngIf=\"formPurposeRetention.get('SpecifyLegalObligation').invalid\">{{ getRequiredErrorMessage() }}</mat-error>\n                        </mat-form-field>  \n                        \n                        <mat-form-field hintLabel=\"Approximate number of Personal Data Records held.\">\n                            <mat-label>Total Records <span class=\"optional-field\">optional</span></mat-label>\n                            <input appCurrencyDirective matInput maxlength=\"14\" formControlName=\"TotalRecordsAtRegistration\">                            \n                            <mat-error *ngIf=\"formPurposeRetention.get('TotalRecordsAtRegistration').invalid\">{{ getPatternErrorMessage() }}</mat-error>\n                        </mat-form-field>  \n                        \n                        <mat-form-field hintLabel=\"The % annual growth of Personal Records held\">\n                            <mat-label>Percentage Annual Growth <span class=\"optional-field\">optional</span></mat-label>\n                            <input appCurrencyDirective matInput max=\"100\" maxlength=\"3\" formControlName=\"RecordPercentageGrowth\">                            \n                            <mat-error *ngIf=\"formPurposeRetention.get('RecordPercentageGrowth').invalid\">{{ getRecordPercentageGrowthErrorMessage() }}</mat-error>\n                            <mat-hint align=\"end\">Max. 100%</mat-hint>      \n                            <span matSuffix>%</span>\n                        </mat-form-field>   \n        \n                        <mat-form-field hintLabel=\"Duration for which personal data shall be kept (Years).\">\n                            <mat-label>Retention period <span class=\"required-field\">required</span></mat-label>\n                            <input appCurrencyDirective max=\"100\" matInput maxlength=\"3\" formControlName=\"RetentionPeriod\">                          \n                            <mat-error *ngIf=\"formPurposeRetention.get('RetentionPeriod').invalid\">{{ getRetentionPeriodErrorMessage() }}</mat-error>\n                            <mat-hint align=\"end\">Max. 100 years</mat-hint>      \n                            <span matSuffix>Year(s)</span>\n                        </mat-form-field>\n                    </form>\n        \n                    <div class=\"button-wrapper\">       \n                        <button mat-button class=\"back-btn\" matStepperPrevious>Back</button>\n        \n                      \n\n                        <button \n                            [disabled]=\"formPurposeRetention.invalid\"\n                            mat-button \n                            class=\"next-btn\" \n                            color=\"primary\" \n                            matStepperNext>\n                            Next\n                        </button>\n                    </div>             \n                </mat-step>\n        \n                <mat-step [stepControl]=\"formThirdParties\">\n                    <ng-template matStepLabel>\n                        <h3>Disclosure & Transfer</h3>\n                    </ng-template>\n        \n                    <form [formGroup]=\"formThirdParties\">\n        \n                        <h1 class=\"full-width step-header\">List of persons or Bodies to whom personal data may be disclosed</h1>\n                        \n                        <div class=\"grouped-items full-width\">\n                            <h3>Do you disclose Personal Data to other Persons or Bodies ?</h3>\n            \n                            <mat-radio-group color=\"primary\" aria-label=\"Pick one\" formControlName=\"PersonalDataIsForDisclosure\">\n                                <mat-radio-button value=\"Yes\">Yes</mat-radio-button>\n                                <mat-radio-button value=\"No\">No</mat-radio-button>\n                            </mat-radio-group>        \n                        </div>    \n\n                        <section \n                            *ngIf=\"formThirdParties.get('PersonalDataIsForDisclosure').value === 'Yes'\"\n                            class=\"expand-section reduced-properties table-wrapper fadeInUp _delay3ms\">\n                            <button \n                                mat-button\n                                color=\"primary\"\n                                [disabled]=\"processing\"\n                                class=\"add-item-button\"\n                                (click)=\"onAddAThirdParty()\">\n                                <div class=\"button-label\">\n                                    <mat-icon>add</mat-icon>                            \n                                    <span>Add Person / Body</span>\n                                </div>\n                            </button>\n                            \n                            <div class=\"table-wrapper\">\n                                <table \n                                    mat-table \n                                    #thirdPartyMatSort=\"matSort\"\n                                    matSortDisableClear=\"true\"\n                                    [dataSource]=\"thirdPartyDataSource\"\n                                    matSort>\n                    \n                                    <ng-container matColumnDef=\"Count\">\n                                        <th mat-header-cell *matHeaderCellDef> # </th>\n                                        <td mat-cell *matCellDef=\"let index = index\"> {{ index + 1 }} </td>\n                                    </ng-container>\n                    \n                                    <ng-container matColumnDef=\"NameOfThirdParty\">\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Person / Body </th>\n                                        <td mat-cell *matCellDef=\"let row\">{{ row.ThirdPartyName }}</td>\n                                    </ng-container>          \n                    \n                                    <ng-container matColumnDef=\"Purpose\">\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Purpose </th>\n                                        <td mat-cell *matCellDef=\"let row\">{{ row.Purpose }}</td>\n                                    </ng-container>                                 \n                    \n                                    <!-- Actions Column -->\n                                    <ng-container matColumnDef=\"Actions\">\n                                        <th mat-header-cell *matHeaderCellDef> Actions </th>\n                                        <td mat-cell *matCellDef=\"let row; let index = index\">\n                                            <button \n                                                mat-button \n                                                class=\"action-btn\"\n                                                [matMenuTriggerFor]=\"menu\" \n                                                (click)=\"$event.stopPropagation()\"\n                                                matTooltip=\"See more options\">\n                                                <mat-icon>more_vert</mat-icon>\n                                            </button>\n                    \n                                            <mat-menu yPosition=\"below\" #menu=\"matMenu\" class=\"more-options-mat-menu\">\n                    \n                                                <button \n                                                    mat-menu-item \n                                                    (click)=\"$event.stopPropagation();onEditThirdParty(row)\">\n                                                    <mat-icon>edit</mat-icon>\n                                                    <span>Make Changes</span>\n                                                </button>\n                                                      \n                                                <hr />\n                    \n                                                <button \n                                                    mat-menu-item \n                                                    (click)=\"$event.stopPropagation();onRemoveThirdParty(row)\">\n                                                    <mat-icon color=\"warn\">delete</mat-icon>\n                                                    <span>Remove</span>\n                                                </button>\n                    \n                                            </mat-menu>                                                  \n                                        </td>\n                                    </ng-container>\n                    \n                                    <tr mat-header-row *matHeaderRowDef=\"thirdPartyDisplayedColumns\"></tr>\n                                    <tr mat-row *matRowDef=\"let row; columns: thirdPartyDisplayedColumns;\" class=\"mat-data-row\"></tr>\n                                </table>\n        \n                                <mat-paginator \n                                    #thirdPartyPaginator\n                                    [pageSize]=\"10\"\n                                    [pageSizeOptions]=\"[5, 10]\">\n                                </mat-paginator>                    \n                            </div>                \n                        </section>    \n                        \n                        <hr class=\"full-width\" />\n        \n                        <div class=\"grouped-items full-width\">\n                            <h3>Do you Transfer personal data outside Uganda ?</h3>\n            \n                            <mat-radio-group color=\"primary\" aria-label=\"Pick one\" formControlName=\"StoreDataOutsideCountry\">\n                                <mat-radio-button value=\"Yes\">Yes</mat-radio-button>\n                                <mat-radio-button value=\"No\">No</mat-radio-button>\n                            </mat-radio-group>        \n                        </div> \n        \n                        <section \n                            *ngIf=\"formThirdParties.get('StoreDataOutsideCountry').value === 'Yes'\"\n                            class=\"expand-section reduced-properties table-wrapper\">\n                            <button \n                                mat-button\n                                color=\"primary\"\n                                [disabled]=\"processing\"\n                                class=\"add-item-button\"\n                                (click)=\"onAddACountry()\">\n                                <div class=\"button-label\">\n                                    <mat-icon>add</mat-icon>                            \n                                    <span>Add A Country</span>\n                                </div>\n                            </button>\n                            \n                            <div class=\"table-wrapper\">\n                                <table \n                                    mat-table \n                                    #countryOfTransferMatSort=\"matSort\"\n                                    matSortDisableClear=\"true\"\n                                    [dataSource]=\"countriesDataSource\"\n                                    matSort>\n                    \n                                    <ng-container matColumnDef=\"Count\">\n                                        <th mat-header-cell *matHeaderCellDef> # </th>\n                                        <td mat-cell *matCellDef=\"let index = index\"> {{ index + 1 }} </td>\n                                    </ng-container>\n                    \n                                    <ng-container matColumnDef=\"Country\">\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Country </th>\n                                        <td mat-cell *matCellDef=\"let row\">{{ row.Country }}</td>\n                                    </ng-container>          \n                    \n                                    <ng-container matColumnDef=\"Purpose\">\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Purpose </th>\n                                        <td mat-cell *matCellDef=\"let row\">{{ row.Purpose }}</td>\n                                    </ng-container>                                 \n                    \n                                    <ng-container matColumnDef=\"Description\">\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Description </th>\n                                        <td mat-cell *matCellDef=\"let row\">{{ row.Description }}</td>\n                                    </ng-container>                                 \n                    \n                                    <!-- Actions Column -->\n                                    <ng-container matColumnDef=\"Actions\">\n                                        <th mat-header-cell *matHeaderCellDef> Actions </th>\n                                        <td mat-cell *matCellDef=\"let row; let index = index\">\n                                            <button \n                                                mat-button \n                                                class=\"action-btn\"\n                                                [matMenuTriggerFor]=\"menu\" \n                                                (click)=\"$event.stopPropagation()\"\n                                                matTooltip=\"See more options\">\n                                                <mat-icon>more_vert</mat-icon>\n                                            </button>\n                    \n                                            <mat-menu yPosition=\"below\" #menu=\"matMenu\" class=\"more-options-mat-menu\">\n                    \n                                                <button \n                                                    mat-menu-item \n                                                    (click)=\"$event.stopPropagation();onEditCountry(row)\">\n                                                    <mat-icon>edit</mat-icon>\n                                                    <span>Make Changes</span>\n                                                </button>\n                                                      \n                                                <hr />\n                    \n                                                <button \n                                                    mat-menu-item \n                                                    (click)=\"$event.stopPropagation();onRemoveCountry(row)\">\n                                                    <mat-icon color=\"warn\">delete</mat-icon>\n                                                    <span>Remove</span>\n                                                </button>\n                    \n                                            </mat-menu>                                                  \n                                        </td>\n                                    </ng-container>\n                    \n                                    <tr mat-header-row *matHeaderRowDef=\"countryDisplayedColumns\"></tr>\n                                    <tr mat-row *matRowDef=\"let row; columns: countryDisplayedColumns;\" class=\"mat-data-row\"></tr>\n                                </table>\n        \n                                <mat-paginator \n                                    #countryOfTransferPaginator\n                                    [pageSize]=\"10\"\n                                    [pageSizeOptions]=\"[5, 10]\">\n                                </mat-paginator>                    \n                            </div>                \n                        </section>                   \n        \n                    </form>\n        \n                    <div class=\"button-wrapper\">\n                        <button mat-button class=\"back-btn\" matStepperPrevious>Back</button>\n                        \n                  \n\n                        <button \n                            mat-button \n                            [disabled]=\"formThirdParties.invalid \n                            || processing \n                            || ((formThirdParties.get('PersonalDataIsForDisclosure').value === 'Yes') && (thirdParties.length === 0)) \n                            || ((formThirdParties.get('StoreDataOutsideCountry').value === 'Yes') && (countries.length === 0))\" \n                            class=\"next-btn\" \n                            color=\"primary\" \n                            matStepperNext>\n                            Next\n                        </button>\n                    </div>\n                </mat-step>\n        \n                <mat-step [stepControl]=\"formSecurityMeasures\">\n                    <ng-template matStepLabel>\n                        <h3>Security Information</h3>\n                    </ng-template>\n        \n                    <form [formGroup]=\"formSecurityMeasures\">\n        \n                        <h1 class=\"full-width step-header\">State security measures in place to safeguard personal data collected or processed.</h1>\n        \n                        <section class=\"expand-section reduced-properties table-wrapper no-padding\">\n                            <button \n                                mat-button\n                                color=\"primary\"\n                                [disabled]=\"processing\"\n                                class=\"add-item-button\"\n                                (click)=\"onAddSecurityMeasure()\">\n                                <div class=\"button-label\">\n                                    <mat-icon>add</mat-icon>                            \n                                    <span>Add A Security Measure</span>\n                                </div>\n                            </button>\n                            \n                            <div class=\"table-wrapper\">\n                                <table \n                                    mat-table \n                                    #securityMeasureMatSort=\"matSort\"\n                                    matSortDisableClear=\"true\"\n                                    [dataSource]=\"securityMeasureDataSource\"\n                                    matSort>\n                    \n                                    <ng-container matColumnDef=\"Count\">\n                                        <th mat-header-cell *matHeaderCellDef> # </th>\n                                        <td mat-cell *matCellDef=\"let index = index\"> {{ index + 1 }} </td>\n                                    </ng-container>\n                    \n                                    <ng-container matColumnDef=\"SecurityMeasure\">\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Security Measure </th>\n                                        <td mat-cell *matCellDef=\"let row\">{{ row.SecurityMeasure }}</td>\n                                    </ng-container>                                  \n                    \n                                    <!-- Actions Column -->\n                                    <ng-container matColumnDef=\"Actions\">\n                                        <th mat-header-cell *matHeaderCellDef> Actions </th>\n                                        <td mat-cell *matCellDef=\"let row; let index = index\">\n                                            <button \n                                                mat-button \n                                                class=\"action-btn\"\n                                                [matMenuTriggerFor]=\"menu\" \n                                                (click)=\"$event.stopPropagation()\"\n                                                matTooltip=\"See more options\">\n                                                <mat-icon>more_vert</mat-icon>\n                                            </button>\n                    \n                                            <mat-menu yPosition=\"below\" #menu=\"matMenu\" class=\"more-options-mat-menu\">\n                \n                                                <button \n                                                    mat-menu-item \n                                                    (click)=\"$event.stopPropagation();onEditSecurityMeasure(row)\">\n                                                    <mat-icon>edit</mat-icon>\n                                                    <span>Make Changes</span>\n                                                </button>\n                                                      \n                                                <hr />\n                    \n                                                <button \n                                                    mat-menu-item \n                                                    (click)=\"$event.stopPropagation();onRemoveSecurityMeasure(row)\">\n                                                    <mat-icon color=\"warn\">delete</mat-icon>\n                                                    <span>Remove</span>\n                                                </button>                                        \n                    \n                                            </mat-menu>                                                  \n                                        </td>\n                                    </ng-container>\n                    \n                                    <tr mat-header-row *matHeaderRowDef=\"securityMeasuresDisplayedColumns\"></tr>\n                                    <tr mat-row *matRowDef=\"let row; columns: securityMeasuresDisplayedColumns;\" [ngClass]=\"{'selected-mat-data-row': selectedSpouse === row}\" class=\"mat-data-row\"></tr>\n                                </table>\n        \n                                <mat-paginator \n                                    #securityMeasurePaginator\n                                    [pageSize]=\"10\"\n                                    [pageSizeOptions]=\"[5, 10]\">\n                                </mat-paginator>                    \n                            </div>                \n                        </section>    \n                        \n                        <section class=\"expand-section reduced-properties table-wrapper margin documents\">\n                            <h1 class=\"full-width step-header\">Attach supporting documentation eg approved information security policy.</h1>\n        \n                            <div class=\"buttons\">\n                                <button \n                                    mat-button\n                                    color=\"primary\"\n                                    [disabled]=\"processing\"\n                                    class=\"add-item-button\"\n                                    (click)=\"onUploadAttachments()\">\n                                    <div class=\"button-label\">\n                                        <mat-icon>add</mat-icon>                            \n                                        <span> {{ document ? 'Replace Document' : 'Upload Attachment' }} </span>\n                                    </div>\n                                </button>\n            \n                                <button \n                                    mat-button\n                                    *ngIf=\"document\"\n                                    color=\"primary\"\n                                    [disabled]=\"processing\"\n                                    class=\"remove-button\"\n                                    (click)=\"onRemoveDocument()\">\n                                    <div class=\"button-label\">\n                                        <mat-icon>clear</mat-icon>\n                                        <span> Remove Document </span>\n                                    </div>\n                                </button>\n                            </div>\n        \n                            <div *ngIf=\"document\" class=\"uploaded-document\" matTooltip=\"Open Document\" (click)=\"onReadDocument(document)\">\n                                <img src=\"./assets/img/pdf.png\" alt=\"\">\n        \n                                <span>Document: {{ document.Name }} <span>  -  {{ document.Size }} Mbs</span></span>\n                            </div>\n        \n                        </section>\n        \n                        <hr class=\"full-width\" />\n        \n                        <section class=\"expand-section reduced-properties table-wrapper margin documents\">\n                            <h1 class=\"full-width step-header\">Attach Form 3</h1>\n        \n                            <div class=\"buttons\">        \n                                <!-- <button\n                                    mat-button\n                                    color=\"accent\"\n                                    class=\"download-form\"                           \n                                    (click)=\"onDownloadForm3()\">\n                                    <div class=\"button-label\">\n                                        <mat-icon>sim_card_download</mat-icon>                            \n                                        <span>Download Form 3</span>\n                                    </div>                        \n                                </button> -->\n        \n                                <button \n                                    mat-button\n                                    color=\"primary\"\n                                    [disabled]=\"processing\"\n                                    class=\"add-item-button\"\n                                    (click)=\"onUploadForm3Attachments()\">\n                                    <div class=\"button-label\">\n                                        <mat-icon>add</mat-icon>                            \n                                        <span> {{ documentForm3 ? 'Replace Form 3' : 'Replace Form 3' }} </span>\n                                    </div>\n                                </button>\n            \n                                <button \n                                    mat-button\n                                    *ngIf=\"documentForm3\"\n                                    color=\"primary\"\n                                    [disabled]=\"processing\"\n                                    class=\"remove-button\"\n                                    (click)=\"onRemoveForm3Document()\">\n                                    <div class=\"button-label\">\n                                        <mat-icon>clear</mat-icon>\n                                        <span> Remove Document </span>\n                                    </div>\n                                </button>\n                            </div>\n        \n                            <div *ngIf=\"documentForm3\" class=\"uploaded-document\" matTooltip=\"Open Document\" (click)=\"onReadDocument(documentForm3)\">\n                                <img src=\"./assets/img/pdf.png\" alt=\"\">\n        \n                                <span>Document: {{ documentForm3.Name }} <span>  -  {{ documentForm3.Size }} Mbs</span> </span>\n                            </div>\n        \n                        </section>\n\n                        <section class=\"expand-section reduced-properties table-wrapper margin documents\">\n                            <h1 class=\"full-width step-header\">Attach Proof of Payment</h1>\n        \n                            <div class=\"buttons\">\n                                <button \n                                    mat-button\n                                    color=\"primary\"\n                                    [disabled]=\"processing\"\n                                    class=\"add-item-button\"\n                                    (click)=\"onUploadProofOfPayment()\">\n                                    <div class=\"button-label\">\n                                        <mat-icon>add</mat-icon>                            \n                                        <span> {{ proofOfPayment ? 'Replace Document' : 'Upload Proof of Payment' }} </span>\n                                    </div>\n                                </button>\n            \n                                <button \n                                    mat-button\n                                    *ngIf=\"proofOfPayment\"\n                                    color=\"primary\"\n                                    [disabled]=\"processing\"\n                                    class=\"remove-button\"\n                                    (click)=\"onRemoveProofOfPaymen()\">\n                                    <div class=\"button-label\">\n                                        <mat-icon>clear</mat-icon>\n                                        <span> Remove Document </span>\n                                    </div>\n                                </button>\n                            </div>\n        \n                            <div *ngIf=\"proofOfPayment\" class=\"uploaded-document\" matTooltip=\"Open Document\" (click)=\"onReadDocument(proofOfPayment)\">\n                                <img src=\"./assets/img/pdf.png\" alt=\"\">\n        \n                                <span>Document: {{ proofOfPayment.Name }} <span>  -  {{ proofOfPayment.Size }} Mbs</span> </span>\n                            </div>\n        \n                        </section>\n        \n                        <hr class=\"full-width\" />\n        \n                      \n        \n                        <hr class=\"full-width\" />\n        \n                        <mat-checkbox\n                            class=\"full-width\"\n                            formControlName=\"RegistrationConsent\"\n                            color=\"primary\">\n                            I certify that the above information is correct and complete and here by apply to be registered as \n                            data collector/ data processor / data controller (This shall be based on th category selected) \n                            under the data Protection and Privacy Act.\n                            <mat-error *ngIf=\"formSecurityMeasures.get('RegistrationConsent').invalid\">{{ getCheckboxErrorMessage() }}</mat-error>   \n                        </mat-checkbox>       \n                        \n                        <mat-form-field class=\"full-width\" hintLabel=\"The person authorized to complete and submit this application on the behalf of the applicant organization\">\n                            <mat-label>Name and title of person submitting the application<span class=\"required-field\">required</span></mat-label>\n                            <input appUppercase #RegistrationDoneByInput matInput maxlength=\"50\" formControlName=\"RegistrationDoneBy\">  \n                            <mat-error *ngIf=\"formSecurityMeasures.get('RegistrationDoneBy').invalid\">{{ getRegistrationDoneByErrorMessage() }}</mat-error>                             \n                            <mat-hint align=\"end\">{{ RegistrationDoneByInput.value.length }} / 50</mat-hint>    \n                        </mat-form-field>                  \n        \n                    </form>\n        \n                    <div class=\"button-wrapper\">\n                        <button mat-button class=\"back-btn\" matStepperPrevious>Back</button>\n\n                                     \n\n                        <div class=\"buttons\">\n                            <button\n                                mat-button\n                                color=\"primary\" \n                                [disabled]=\"formGeneralInformation.invalid || formOrganisationDetails.invalid || formPersonalDataHeld.invalid || formPurposeRetention.invalid || formThirdParties.invalid || formSecurityMeasures.invalid || processing || securityMeasures.length === 0 || !documentForm3 || !proofOfPayment\" \n                                class=\"download\" \n                                matTooltip=\"Keep a copy of the information you have filled in\"\n                                (click)=\"onPreviewForm(true)\">\n                                <div class=\"button-label\">\n                                    <mat-icon>sim_card_download</mat-icon>\n                                    <span>Download</span>\n                                </div>\n                            </button>\n        \n                            <button\n                                mat-button\n                                color=\"primary\" \n                                [disabled]=\"formGeneralInformation.invalid || formOrganisationDetails.invalid || formPersonalDataHeld.invalid || formPurposeRetention.invalid || formThirdParties.invalid || formSecurityMeasures.invalid || processing || securityMeasures.length === 0 || !documentForm3 || !proofOfPayment\" \n                                class=\"preview\" \n                                matTooltip=\"Have a look at all the information you have filled in before sending.\"\n                                (click)=\"onPreviewForm(false)\">\n                                <div class=\"button-label\">\n                                    <mat-icon>visibility</mat-icon>\n                                    <span>Preview</span>\n                                </div>\n                            </button>\n        \n                        \n                            <button \n                                mat-button \n                                class=\"next-btn submit-btn\" \n                                [disabled]=\"formGeneralInformation.invalid || formOrganisationDetails.invalid || formPersonalDataHeld.invalid || formPurposeRetention.invalid || formThirdParties.invalid || formSecurityMeasures.invalid || processing || securityMeasures.length === 0 || !documentForm3 || !proofOfPayment\" \n                                [ngClass]=\"{'inline-processing-btn': processing}\" \n                                color=\"primary\" \n                                (click)=\"onSubmit()\">\n                                <app-inline-mat-spinner *ngIf=\"processing\"></app-inline-mat-spinner>                  \n                                <span>Submit Application</span>                    \n                            </button>                \n                        </div>\n                    </div>\n                </mat-step>\n        \n            </mat-horizontal-stepper>   \n        </main>\n    </fury-page-layout-content>\n</fury-page-layout>\n\n\n","/**\n * Check if QR Code version is valid\n *\n * @param  {Number}  version QR Code version\n * @return {Boolean}         true if valid version, false otherwise\n */\nexports.isValid = function isValid (version) {\n  return !isNaN(version) && version >= 1 && version <= 40\n}\n","var Buffer = require('../utils/buffer')\nvar GF = require('./galois-field')\n\n/**\n * Multiplies two polynomials inside Galois Field\n *\n * @param  {Buffer} p1 Polynomial\n * @param  {Buffer} p2 Polynomial\n * @return {Buffer}    Product of p1 and p2\n */\nexports.mul = function mul (p1, p2) {\n  var coeff = new Buffer(p1.length + p2.length - 1)\n  coeff.fill(0)\n\n  for (var i = 0; i < p1.length; i++) {\n    for (var j = 0; j < p2.length; j++) {\n      coeff[i + j] ^= GF.mul(p1[i], p2[j])\n    }\n  }\n\n  return coeff\n}\n\n/**\n * Calculate the remainder of polynomials division\n *\n * @param  {Buffer} divident Polynomial\n * @param  {Buffer} divisor  Polynomial\n * @return {Buffer}          Remainder\n */\nexports.mod = function mod (divident, divisor) {\n  var result = new Buffer(divident)\n\n  while ((result.length - divisor.length) >= 0) {\n    var coeff = result[0]\n\n    for (var i = 0; i < divisor.length; i++) {\n      result[i] ^= GF.mul(divisor[i], coeff)\n    }\n\n    // remove all zeros from buffer head\n    var offset = 0\n    while (offset < result.length && result[offset] === 0) offset++\n    result = result.slice(offset)\n  }\n\n  return result\n}\n\n/**\n * Generate an irreducible generator polynomial of specified degree\n * (used by Reed-Solomon encoder)\n *\n * @param  {Number} degree Degree of the generator polynomial\n * @return {Buffer}        Buffer containing polynomial coefficients\n */\nexports.generateECPolynomial = function generateECPolynomial (degree) {\n  var poly = new Buffer([1])\n  for (var i = 0; i < degree; i++) {\n    poly = exports.mul(poly, [1, GF.exp(i)])\n  }\n\n  return poly\n}\n","var Mode = require('./mode')\nvar Utils = require('./utils')\n\nfunction KanjiData (data) {\n  this.mode = Mode.KANJI\n  this.data = data\n}\n\nKanjiData.getBitsLength = function getBitsLength (length) {\n  return length * 13\n}\n\nKanjiData.prototype.getLength = function getLength () {\n  return this.data.length\n}\n\nKanjiData.prototype.getBitsLength = function getBitsLength () {\n  return KanjiData.getBitsLength(this.data.length)\n}\n\nKanjiData.prototype.write = function (bitBuffer) {\n  var i\n\n  // In the Shift JIS system, Kanji characters are represented by a two byte combination.\n  // These byte values are shifted from the JIS X 0208 values.\n  // JIS X 0208 gives details of the shift coded representation.\n  for (i = 0; i < this.data.length; i++) {\n    var value = Utils.toSJIS(this.data[i])\n\n    // For characters with Shift JIS values from 0x8140 to 0x9FFC:\n    if (value >= 0x8140 && value <= 0x9FFC) {\n      // Subtract 0x8140 from Shift JIS value\n      value -= 0x8140\n\n    // For characters with Shift JIS values from 0xE040 to 0xEBBF\n    } else if (value >= 0xE040 && value <= 0xEBBF) {\n      // Subtract 0xC140 from Shift JIS value\n      value -= 0xC140\n    } else {\n      throw new Error(\n        'Invalid SJIS character: ' + this.data[i] + '\\n' +\n        'Make sure your charset is UTF-8')\n    }\n\n    // Multiply most significant byte of result by 0xC0\n    // and add least significant byte to product\n    value = (((value >>> 8) & 0xff) * 0xC0) + (value & 0xff)\n\n    // Convert result to a 13-bit binary string\n    bitBuffer.put(value, 13)\n  }\n}\n\nmodule.exports = KanjiData\n","import {HttpClient} from '@angular/common/http';\nimport {AfterContentInit, ChangeDetectorRef, Component, EventEmitter, Input, OnDestroy, OnInit, ViewChild} from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {MatDialog} from '@angular/material/dialog';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {forkJoin, Observable, Subscription} from 'rxjs';\nimport {\n    ApiPayload,\n    Country,\n    CountryOfTransfer,\n    DataCategory,\n    DataProtectionOfficer,\n    DataPurposes,\n    DataSource,\n    DataSubCategory,\n    FileUpload,\n    MainActivity,\n    NatureOfBusinessCat,\n    NatureOfBusinessSubCat,\n    OrganisationCategory,\n    OrganisationType,\n    Sector,\n    SecurityMeasure,\n    ThirdParty,\n    ChildrenDataPurpose\n} from '../../../../services/api.model';\nimport {catchError, filter, map, startWith} from 'rxjs/operators';\nimport {MatCheckboxChange} from '@angular/material/checkbox';\nimport {ApiEndpointsService} from '../../../../services/api-endpoints.service';\nimport {ApiService} from '../../../../services/api.service';\nimport {OrgNoticeComponent} from '../../../../layout/dialogs/org-registration/org-notice/org-notice.component';\nimport {OrgMainActivityComponent} from '../../../../layout/dialogs/org-registration/org-main-activity/org-main-activity.component';\nimport {\n    OrgDataProtectionOfficerComponent\n} from '../../../../layout/dialogs/org-registration/org-data-protection-officer/org-data-protection-officer.component';\nimport {\n    OrgSecurityMeasuresComponent\n} from '../../../../layout/dialogs/org-registration/org-security-measures/org-security-measures.component';\nimport {OrgThirdPartyComponent} from '../../../../layout/dialogs/org-registration/org-third-party/org-third-party.component';\nimport {OrgCountryComponent} from '../../../../layout/dialogs/org-registration/org-country/org-country.component';\nimport {OrgUploadComponent} from '../../../../layout/dialogs/org-upload/org-upload.component';\nimport {OrgForm3DialogComponent} from '../../../../layout/dialogs/org-registration/org-form3-dialog/org-form3-dialog.component';\nimport {\n    OrgRegistrationPreviewDialogComponent\n} from '../../../../layout/dialogs/org-registration/org-registration-preview-dialog/org-registration-preview-dialog.component';\nimport {SuccessfulMessageDialogComponent} from '../../../../layout/dialogs/successful-message-dialog/successful-message-dialog.component';\nimport {\n    Action,\n    ActionPerformed,\n    ActionPerformedRequestMoreInfo,\n    WorkFlowConstants,\n    WorkFlowStep,\n    WorkFlowTimeline\n} from '../../../models/document-workflow.model';\nimport {CertificateDetails, CertificateDetailsResponse, CheckListed, CompanyRegistrationModel} from '../company-registration.model';\nimport {BaseFuryForm} from '../../../../../@fury/shared/base-fury-form';\nimport {KeycloakService} from 'keycloak-angular';\nimport {WorkflowServiceService} from '../../../../services/workflow-service.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {$RequestMoreInfoField, Checked, Checklist, RequestMoreInfoField} from '../../../models/reference.model';\nimport {fadeInRightAnimation} from '../../../../../@fury/animations/fade-in-right.animation';\nimport {fadeInUpAnimation} from '../../../../../@fury/animations/fade-in-up.animation';\nimport {SnackBarService} from '../../../../pages/services/snack-bar.service';\nimport {CompanyRegistrationService} from '../../company-registration.service';\nimport {ReviewCommentsComponent} from '../../../../layout/review-comments/review-comments.component';\nimport {CertPreviewComponent} from '../cert-preview/cert-preview.component';\nimport {ApplicationTimelineComponent} from '../../../../layout/application-timeline/application-timeline.component';\nimport {ReferenceTableService} from '../../../../services/reference-table.service';\nimport {AuthenticationService} from '../../../../authentication/authentication.service';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { ViewPdfDocumentBottomsheetComponent } from '../../../../layout/bottomsheets/view-pdf-document-bottomsheet/view-pdf-document-bottomsheet.component';\nimport { environment } from '../../../../../environments/environment';\nimport { ComplaintService } from '../../../complaints/complaints.service';\nimport { CancellationCommentsComponent } from '../../../../layout/dialogs/cancellation-comments/cancellation-comments.component';\n\n\n\n@Component({\n  selector: 'fury-view-cancel-registration',\n  templateUrl: './view-cancel-registration.component.html',\n  styleUrls: ['./view-cancel-registration.component.scss'],\n  animations: [fadeInRightAnimation, fadeInUpAnimation]\n})\nexport class ViewCancelRegistrationComponent extends BaseFuryForm implements OnInit, OnDestroy, AfterContentInit {\n\n  \n  dialogRef;\n  bottomsheetRef;\n  processing = false;\n  formCancelRegistration: FormGroup;\n  selectedIndex = 0;\n  // selectedIndex = 3;\n  // isLinear = true;\n  isLinear = false;\n  today = new Date();\n  contactInformation = true;\n  sectors: Sector[];\n  countries: Country[];\n  selected = false;\n  DPOSelected = false;\n  organisationCategories: OrganisationCategory[] = [];\n  selectedOrganisationCategories: OrganisationCategory[] = [];\n  organisationTypes: OrganisationType[];\n  dataSources: DataSource[];\n  selectedDataSources: DataSource[] = [];\n  httpSub: Subscription;\n  MainActivitiesDisplayedColumns: string[] = ['Count', 'MainActivity', 'Actions'];\n  dpoDisplayedColumns: string[] = ['Count', 'Name', 'Telephone', 'Email', 'PhysicalAddress', 'Actions'];\n  securityMeasuresDisplayedColumns: string[] = ['Count', 'SecurityMeasure', 'Actions'];\n  thirdPartyDisplayedColumns: string[] = ['Count', 'NameOfThirdParty', 'Purpose', 'Actions'];\n  countryDisplayedColumns: string[] = ['Count', 'Country', 'Purpose', 'Description', 'Actions'];\n  mainActivities: MainActivity[] = [];\n  mainActivitiesDataSource: MatTableDataSource<MainActivity>;\n  dataProtectionOfficers: DataProtectionOfficer[] = [];\n  dpoDataSource: MatTableDataSource<DataProtectionOfficer>;\n  securityMeasures: SecurityMeasure[] = [];\n  securityMeasureDataSource: MatTableDataSource<SecurityMeasure>;\n  thirdParties: ThirdParty[] = [];\n  thirdPartyDataSource: MatTableDataSource<ThirdParty>;\n  countriesOfTransfer: CountryOfTransfer[] = [];\n  countriesDataSource: MatTableDataSource<CountryOfTransfer>;\n  selectedDataCategory: DataCategory[] = [];\n  selectedDataSubCategory: DataSubCategory[] = [];\n  dataCategories: DataCategory[];\n  dataPurposes: DataPurposes[];\n  childDataPurposes: ChildrenDataPurpose[] = [];\n  selectedChildDataPurposes: ChildrenDataPurpose[] = [];\n  selectedDataPurposes: DataPurposes[] = [];\n  natureOfBusinessCat: NatureOfBusinessCat[] = [];\n  natureOfBusinessSubCat: NatureOfBusinessSubCat[] = [];\n  selectedNatureOfBusinessSubCat: NatureOfBusinessSubCat[] = [];\n  SpecifyTheLaw = false;\n  ServiceOrProductProvided = false;\n  showChildrenDataFields = false;\n  SpecifyLegalObligation = false;\n  showApprovalButton = false;\n  documentNotice: FileUpload | null;\n  OrganizationType = null;\n  SectorName = null;\n  NatureOfBusinessCat = null;\n  CountryOfIncorporation = null;\n  \n  //\n  role: string;\n  workflowID = '1';\n  workflowTimeLine: WorkFlowTimeline;\n  currentStep: WorkFlowStep;\n  certificateResponse: CertificateDetailsResponse;\n  certificateDetails: CertificateDetails;\n  accesses: string[];\n  regTrackingNo: string;\n  timeLineAccess: string[] = ['data-protection-officer-director', 'data-protection-officer-nita', 'data-protection-officer-technical', 'data-protection-officer-legal'];\n  isOfficer: boolean;\n  isApplicant: boolean;\n  _hasRequestMoreInfo = false;\n  _StepRequestingForMoreInfo = 0;\n  requestMoreInfoFields: RequestMoreInfoField[] = [];\n  canDownloadCertificate = false;\n  $checklist: Checklist[];\n  // Main Object\n  application: CompanyRegistrationModel = new CompanyRegistrationModel();\n  permittedActions: Action[] = [];\n  // Subscriptions\n  subscriptions: Subscription[] = [];\n  $resultRefChecklistEvent: EventEmitter<any> = new EventEmitter();\n  formFieldSections: { SectionID: number; SectionName: string; Count: number }[] = []\n  personalDataCollectedCheckBoxEnabled = false;\n  dataCategory = new FormControl();\n\n\n  OrganizationID: number;\n\n\n\n  uploadedDocument = false\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private service: ApiService,\n    private endpoints: ApiEndpointsService,\n    private dialog: MatDialog,\n    private bottomsheet: MatBottomSheet,\n    private http: HttpClient,\n    private route: Router,\n    public snackBar: SnackBarService,\n    private activateRoute: ActivatedRoute,\n    private changeDetector: ChangeDetectorRef,\n    public authService: KeycloakService,\n    public _authService: AuthenticationService,\n    public _workflowService: WorkflowServiceService,\n    public registrationService: CompanyRegistrationService,\n    private referenceService: ReferenceTableService,\n    public complaintService: ComplaintService,\n  ) {\n    super(\n      authService,\n      _workflowService,\n      registrationService,\n      complaintService\n  );\n\n  this.accesses = authService.getKeycloakInstance().resourceAccess['dps-frontend'].roles;\n  this.operationType = activateRoute.routeConfig.data.action;\n  this.regTrackingNo = this.route.getCurrentNavigation().extras.state.regTrackingNo;\n   }\n\n  ngOnInit(): void {\n    console.log(this.regTrackingNo);\n\n    this.formCancelRegistration = this.formBuilder.group({\n      ReasonForCancellation: new FormControl('', [Validators.required]),\n    });\n  }\n\n  \n  ngAfterContentInit(): void {\n\n    this.OrganizationID = 156;\n    this.getCancelRegistration();\n\n  }\n     \n  ngOnDestroy(): void {\n    if (this.httpSub) { this.httpSub.unsubscribe(); }\n    if (this.bottomsheetRef) { this.bottomsheetRef.dismiss(); }\n}\n\n\n\n  getCancelRegistration(){\n\n    this.httpSub = this.http.get<ApiPayload>(this.endpoints.getCancelRegistration + '?RegTrackingNo='+ this.regTrackingNo)\n      .pipe(catchError(this.service.handleError))\n      .subscribe((response) => {\n        console.log(response.data);\n        this.formCancelRegistration.get('ReasonForCancellation').patchValue(response.data[0].ReasonForCancellation);\n\n        this.documentNotice = {\n          Document: null, \n          Name: 'Notice to cancel registration.pdf', \n          Size: null, \n          Base64: response.data[0].Attachment\n      };\n\n      if(response.data[0].CancellationApproval  == 0){\n\n        this.showApprovalButton =  true;\n      }\n        \n      \n      }, (error) => {\n        this.processing = false;\n  \n        if (error.error.message) {\n          this.dialogRef = this.dialog.open(SuccessfulMessageDialogComponent, {\n            panelClass: ['successful-message-dialog', 'dialogs'],\n            disableClose: true,\n            data: {\n              title: error.error.message['title'] ? error.error.message['title'] : 'Operation Failed',\n              message: error.error.message['body'] ? error.error.message['body'] : environment.technicalErrorResponse,\n              status: false,\n            }\n          });\n        } else {\n          this.service.determineErrorResponse(error);\n        }\n      });\n\n    }\n\n    onReadDocument(document: FileUpload): void {\n      // console.log('document:', document);\n      this.bottomsheetRef = this.bottomsheet.open(ViewPdfDocumentBottomsheetComponent, {\n          disableClose: true,\n          panelClass: ['view-pdf-document-bottomsheet', 'bottomsheets'],\n          data: {\n            url: document.Base64,\n            title: document.Name\n          }\n      });      \n  }\n\n\n  approveCancellation(){\n\n    this.dialog.open(CancellationCommentsComponent, {\n      width: '941px',\n      height: '595px',\n      data: this.regTrackingNo\n  });\n  }\n\n  }\n\n\n","<fury-page-layout>\n    <fury-page-layout-header>\n        <fury-breadcrumbs [@fadeInRight]  current=\"Cancel Registration\"></fury-breadcrumbs>\n    </fury-page-layout-header>\n    <fury-page-layout-content>\n        <div class=\"actions-button-padding\">\n            <mat-toolbar>\n                <mat-toolbar-row>\n                    <button *ngIf=\"showApprovalButton\" mat-raised-button matTooltip=\"View Timeline\" class=\"actions-button-padding\" \n                    color=\"primary\" (click)=\"approveCancellation()\">\n                        <mat-icon>Approve Request</mat-icon>\n                        <span>Approve Request</span>\n                    </button>\n                </mat-toolbar-row>\n            </mat-toolbar>\n        </div>\n        <main class=\"fadeInUp _delay4ms\">\n            <div\n\n                labelPosition=\"bottom\" #stepper>\n        \n                <div>\n                    <ng-template matStepLabel>\n                        <h3>Cancel Registration</h3>\n                    </ng-template>\n                    \n                    <form [formGroup]=\"formCancelRegistration\">\n                        <div>\n\n                            <div>\n                                <h1 style=\"text-align: center; font-weight: bold;\">CANCEL REGISTRATION</h1>\n                            </div>\n\n                            <div>\n                                <mat-form-field fxFlex=\"100\" [ngStyle]=\"{'margin-right': '20px'}\">\n                                    <mat-label>Reason for cancellation<span class=\"required-field\">required</span></mat-label>\n                                    <textarea matInput \n                                        cdkAutosizeMinRows=\"3\"\n                                        formControlName=\"ReasonForCancellation\">\n                                    </textarea>             \n                                </mat-form-field>\n                            </div>\n\n                        </div>\n\n                        <section class=\"expand-section reduced-properties table-wrapper margin documents\">\n                            <h3 class=\"full-width step-header\" style=\"font-weight: bold;\">Attachment</h3>\n        \n                            <div class=\"buttons\" *ngIf=\"documentNotice\">\n                                               \n                            </div>\n        \n                            <div  *ngIf=\"documentNotice && documentNotice.Base64\" class=\"uploaded-document\" matTooltip=\"Open Document\" (click)=\"onReadDocument(documentNotice)\">\n                                <img width=\"40\" height=\"40\" src=\"./assets/img/pdf.png\" alt=\"\">\n        \n                                <span>Document: {{ documentNotice.Name }} <span *ngIf=\"documentNotice.Size\">  -  {{ documentNotice.Size }} Mbs</span> </span>\n                            </div>\n\n                            <p class=\"no-document-found\" *ngIf=\"documentNotice && !documentNotice.Base64\">No document attached</p>\n        \n                        </section>\n                    </form>\n                                \n                </div>\n            </div>    \n        </main>\n    </fury-page-layout-content>   \n</fury-page-layout>\n","var ECLevel = require('./error-correction-level')\r\n\r\nvar EC_BLOCKS_TABLE = [\r\n// L  M  Q  H\r\n  1, 1, 1, 1,\r\n  1, 1, 1, 1,\r\n  1, 1, 2, 2,\r\n  1, 2, 2, 4,\r\n  1, 2, 4, 4,\r\n  2, 4, 4, 4,\r\n  2, 4, 6, 5,\r\n  2, 4, 6, 6,\r\n  2, 5, 8, 8,\r\n  4, 5, 8, 8,\r\n  4, 5, 8, 11,\r\n  4, 8, 10, 11,\r\n  4, 9, 12, 16,\r\n  4, 9, 16, 16,\r\n  6, 10, 12, 18,\r\n  6, 10, 17, 16,\r\n  6, 11, 16, 19,\r\n  6, 13, 18, 21,\r\n  7, 14, 21, 25,\r\n  8, 16, 20, 25,\r\n  8, 17, 23, 25,\r\n  9, 17, 23, 34,\r\n  9, 18, 25, 30,\r\n  10, 20, 27, 32,\r\n  12, 21, 29, 35,\r\n  12, 23, 34, 37,\r\n  12, 25, 34, 40,\r\n  13, 26, 35, 42,\r\n  14, 28, 38, 45,\r\n  15, 29, 40, 48,\r\n  16, 31, 43, 51,\r\n  17, 33, 45, 54,\r\n  18, 35, 48, 57,\r\n  19, 37, 51, 60,\r\n  19, 38, 53, 63,\r\n  20, 40, 56, 66,\r\n  21, 43, 59, 70,\r\n  22, 45, 62, 74,\r\n  24, 47, 65, 77,\r\n  25, 49, 68, 81\r\n]\r\n\r\nvar EC_CODEWORDS_TABLE = [\r\n// L  M  Q  H\r\n  7, 10, 13, 17,\r\n  10, 16, 22, 28,\r\n  15, 26, 36, 44,\r\n  20, 36, 52, 64,\r\n  26, 48, 72, 88,\r\n  36, 64, 96, 112,\r\n  40, 72, 108, 130,\r\n  48, 88, 132, 156,\r\n  60, 110, 160, 192,\r\n  72, 130, 192, 224,\r\n  80, 150, 224, 264,\r\n  96, 176, 260, 308,\r\n  104, 198, 288, 352,\r\n  120, 216, 320, 384,\r\n  132, 240, 360, 432,\r\n  144, 280, 408, 480,\r\n  168, 308, 448, 532,\r\n  180, 338, 504, 588,\r\n  196, 364, 546, 650,\r\n  224, 416, 600, 700,\r\n  224, 442, 644, 750,\r\n  252, 476, 690, 816,\r\n  270, 504, 750, 900,\r\n  300, 560, 810, 960,\r\n  312, 588, 870, 1050,\r\n  336, 644, 952, 1110,\r\n  360, 700, 1020, 1200,\r\n  390, 728, 1050, 1260,\r\n  420, 784, 1140, 1350,\r\n  450, 812, 1200, 1440,\r\n  480, 868, 1290, 1530,\r\n  510, 924, 1350, 1620,\r\n  540, 980, 1440, 1710,\r\n  570, 1036, 1530, 1800,\r\n  570, 1064, 1590, 1890,\r\n  600, 1120, 1680, 1980,\r\n  630, 1204, 1770, 2100,\r\n  660, 1260, 1860, 2220,\r\n  720, 1316, 1950, 2310,\r\n  750, 1372, 2040, 2430\r\n]\r\n\r\n/**\r\n * Returns the number of error correction block that the QR Code should contain\r\n * for the specified version and error correction level.\r\n *\r\n * @param  {Number} version              QR Code version\r\n * @param  {Number} errorCorrectionLevel Error correction level\r\n * @return {Number}                      Number of error correction blocks\r\n */\r\nexports.getBlocksCount = function getBlocksCount (version, errorCorrectionLevel) {\r\n  switch (errorCorrectionLevel) {\r\n    case ECLevel.L:\r\n      return EC_BLOCKS_TABLE[(version - 1) * 4 + 0]\r\n    case ECLevel.M:\r\n      return EC_BLOCKS_TABLE[(version - 1) * 4 + 1]\r\n    case ECLevel.Q:\r\n      return EC_BLOCKS_TABLE[(version - 1) * 4 + 2]\r\n    case ECLevel.H:\r\n      return EC_BLOCKS_TABLE[(version - 1) * 4 + 3]\r\n    default:\r\n      return undefined\r\n  }\r\n}\r\n\r\n/**\r\n * Returns the number of error correction codewords to use for the specified\r\n * version and error correction level.\r\n *\r\n * @param  {Number} version              QR Code version\r\n * @param  {Number} errorCorrectionLevel Error correction level\r\n * @return {Number}                      Number of error correction codewords\r\n */\r\nexports.getTotalCodewordsCount = function getTotalCodewordsCount (version, errorCorrectionLevel) {\r\n  switch (errorCorrectionLevel) {\r\n    case ECLevel.L:\r\n      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 0]\r\n    case ECLevel.M:\r\n      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 1]\r\n    case ECLevel.Q:\r\n      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 2]\r\n    case ECLevel.H:\r\n      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 3]\r\n    default:\r\n      return undefined\r\n  }\r\n}\r\n","import {HttpClient} from '@angular/common/http';\nimport {AfterContentInit, ChangeDetectorRef, Component, EventEmitter, Input, OnDestroy, OnInit, ViewChild} from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {MatDialog} from '@angular/material/dialog';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {forkJoin, Observable, Subscription} from 'rxjs';\nimport {\n    ApiPayload,\n    Country,\n    CountryOfTransfer,\n    DataCategory,\n    DataProtectionOfficer,\n    DataPurposes,\n    DataSource,\n    DataSubCategory,\n    FileUpload,\n    MainActivity,\n    NatureOfBusinessCat,\n    NatureOfBusinessSubCat,\n    OrganisationCategory,\n    OrganisationType,\n    Sector,\n    SecurityMeasure,\n    ThirdParty,\n    ChildrenDataPurpose\n} from '../../../../services/api.model';\nimport { NatureOfBusiness, NewCompanyRegistrationModel } from '../company-registration.model';\nimport {catchError, filter, map, startWith} from 'rxjs/operators';\nimport {MatCheckboxChange} from '@angular/material/checkbox';\nimport {ApiEndpointsService} from '../../../../services/api-endpoints.service';\nimport {ApiService} from '../../../../services/api.service';\nimport {OrgNoticeComponent} from '../../../../layout/dialogs/org-registration/org-notice/org-notice.component';\nimport {OrgMainActivityComponent} from '../../../../layout/dialogs/org-registration/org-main-activity/org-main-activity.component';\nimport {\n    OrgDataProtectionOfficerComponent\n} from '../../../../layout/dialogs/org-registration/org-data-protection-officer/org-data-protection-officer.component';\nimport {\n    OrgSecurityMeasuresComponent\n} from '../../../../layout/dialogs/org-registration/org-security-measures/org-security-measures.component';\nimport {OrgThirdPartyComponent} from '../../../../layout/dialogs/org-registration/org-third-party/org-third-party.component';\nimport {OrgCountryComponent} from '../../../../layout/dialogs/org-registration/org-country/org-country.component';\nimport {OrgUploadComponent} from '../../../../layout/dialogs/org-upload/org-upload.component';\nimport {OrgForm3DialogComponent} from '../../../../layout/dialogs/org-registration/org-form3-dialog/org-form3-dialog.component';\nimport {\n    OrgRegistrationPreviewDialogComponent\n} from '../../../../layout/dialogs/org-registration/org-registration-preview-dialog/org-registration-preview-dialog.component';\nimport {SuccessfulMessageDialogComponent} from '../../../../layout/dialogs/successful-message-dialog/successful-message-dialog.component';\nimport {\n    Action,\n    ActionPerformed,\n    ActionPerformedRequestMoreInfo,\n    WorkFlowConstants,\n    WorkFlowStep,\n    WorkFlowTimeline\n} from '../../../models/document-workflow.model';\nimport {CertificateDetails, CertificateDetailsResponse, CheckListed, CompanyRegistrationModel} from '../company-registration.model';\nimport {BaseFuryForm} from '../../../../../@fury/shared/base-fury-form';\nimport {KeycloakService} from 'keycloak-angular';\nimport {WorkflowServiceService} from '../../../../services/workflow-service.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {$RequestMoreInfoField, Checked, Checklist, RequestMoreInfoField} from '../../../models/reference.model';\nimport {fadeInRightAnimation} from '../../../../../@fury/animations/fade-in-right.animation';\nimport {fadeInUpAnimation} from '../../../../../@fury/animations/fade-in-up.animation';\nimport {SnackBarService} from '../../../../pages/services/snack-bar.service';\nimport {CompanyRegistrationService} from '../../company-registration.service';\nimport {ReviewCommentsComponent} from '../../../../layout/review-comments/review-comments.component';\nimport {CertPreviewComponent} from '../cert-preview/cert-preview.component';\nimport {ApplicationTimelineComponent} from '../../../../layout/application-timeline/application-timeline.component';\nimport {ReferenceTableService} from '../../../../services/reference-table.service';\nimport {AuthenticationService} from '../../../../authentication/authentication.service';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { ViewPdfDocumentBottomsheetComponent } from '../../../../layout/bottomsheets/view-pdf-document-bottomsheet/view-pdf-document-bottomsheet.component';\nimport { environment } from '../../../../../environments/environment';\nimport { ComplaintService } from '../../../complaints/complaints.service';\nimport { UpdateRegistrationComponent } from '../../../../layout/dialogs/update-message-dialog/update-registration/update-registration.component';\n\n@Component({\n  selector: 'fury-manage-registration-update',\n  templateUrl: './manage-registration-update.component.html',\n  styleUrls: ['./manage-registration-update.component.scss']\n})\nexport class ManageRegistrationUpdateComponent extends BaseFuryForm implements OnInit, AfterContentInit {\n\n  dialogRef;\n  bottomsheetRef;\n  processing = false;\n  formGeneralInformation: FormGroup;\n  formOrganisationDetails: FormGroup;\n  formPersonalDataHeld: FormGroup;\n  formPurposeRetention: FormGroup;\n  formSecurityMeasures: FormGroup;\n  formThirdParties: FormGroup;\n  formChildrenData: FormGroup;\n  selectedIndex = 0;\n  // selectedIndex = 3;\n  // isLinear = true;\n  isLinear = false;\n  today = new Date();\n  contactInformation = true;\n  sectors: Sector[];\n  countries: Country[];\n  selected = false;\n  thirdParties;\n  DPOSelected = false;\n  organisationCategories: OrganisationCategory[] = [];\n  selectedOrganisationCategories: OrganisationCategory[] = [];\n  organisationTypes: OrganisationType[];\n  dataSources: DataSource[];\n  selectedDataSources: DataSource[] = [];\n  httpSub: Subscription;\n  MainActivitiesDisplayedColumns: string[] = ['Count', 'MainActivity', 'Actions'];\n  dpoDisplayedColumns: string[] = ['Count', 'Name', 'Telephone', 'Email', 'PhysicalAddress', 'Actions'];\n  securityMeasuresDisplayedColumns: string[] = ['Count', 'SecurityMeasure', 'Actions'];\n  thirdPartyDisplayedColumns: string[] = ['Count', 'NameOfThirdParty', 'Purpose', 'Actions'];\n  countryDisplayedColumns: string[] = ['Count', 'Country', 'Purpose', 'Description', 'Actions'];\n  mainActivities: MainActivity[] = [];\n  mainActivitiesDataSource: MatTableDataSource<MainActivity>;\n  dataProtectionOfficers: DataProtectionOfficer[] = [];\n  dpoDataSource: MatTableDataSource<DataProtectionOfficer>;\n  securityMeasures: SecurityMeasure[] = [];\n  securityMeasureDataSource: MatTableDataSource<SecurityMeasure>;\n  thirdPartyDataSource: MatTableDataSource<ThirdParty>;\n  childDataPurposes: ChildrenDataPurpose[] = [];\n  selectedChildDataPurposes: ChildrenDataPurpose[] = [];\n  countriesOfTransfer: CountryOfTransfer[] = [];\n  countriesDataSource: MatTableDataSource<CountryOfTransfer>;\n  selectedDataCategory: DataCategory[] = [];\n  selectedDataSubCategory: DataSubCategory[] = [];\n  dataCategories: DataCategory[];\n  dataPurposes: DataPurposes[];\n  selectedDataPurposes: DataPurposes[] = [];\n  natureOfBusinessCat: NatureOfBusinessCat[] = [];\n  natureOfBusinessSubCat: NatureOfBusinessSubCat[] = [];\n  selectedNatureOfBusinessSubCat: NatureOfBusinessSubCat[] = [];\n  SpecifyTheLaw = false;\n  ServiceOrProductProvided = false;\n  SpecifyLegalObligation = false;\n  document: FileUpload | null;\n  documentForm3: FileUpload | null;\n  proofOfPayment: FileUpload | null;\n  OrganizationType = null;\n  SectorName = null;\n  NatureOfBusinessCat = null;\n  CountryOfIncorporation = null;\n  \n  //\n  role: string;\n  workflowID = '1';\n  workflowTimeLine: WorkFlowTimeline;\n  currentStep: WorkFlowStep;\n  certificateResponse: CertificateDetailsResponse;\n  certificateDetails: CertificateDetails;\n  accesses: string[];\n  regTrackingNo: string;\n  timeLineAccess: string[] = ['data-protection-officer-director', 'data-protection-officer-nita', 'data-protection-officer-technical', 'data-protection-officer-legal'];\n  isOfficer: boolean;\n  isApplicant: boolean;\n  _hasRequestMoreInfo = false;\n  _StepRequestingForMoreInfo = 0;\n  requestMoreInfoFields: RequestMoreInfoField[] = [];\n  canDownloadCertificate = false;\n  $checklist: Checklist[];\n  // Main Object\n  application: CompanyRegistrationModel = new CompanyRegistrationModel();\n  new_data: CompanyRegistrationModel = new CompanyRegistrationModel();\n  permittedActions: Action[] = [];\n  // Subscriptions\n  subscriptions: Subscription[] = [];\n  $resultRefChecklistEvent: EventEmitter<any> = new EventEmitter();\n  formFieldSections: { SectionID: number; SectionName: string; Count: number }[] = []\n  personalDataCollectedCheckBoxEnabled = false;\n  dataCategory = new FormControl();\n\n  @ViewChild('MainActivityPaginator', {static: false}) MainActivityPaginator: MatPaginator;\n  @ViewChild('MainActivityMatSort', {static: false}) MainActivityMatSort: MatSort;\n  @ViewChild('dpoPaginator', {static: false}) dpoPaginator: MatPaginator;\n  @ViewChild('dpoMatSort', {static: false}) dpoMatSort: MatSort;\n  @ViewChild('securityMeasurePaginator', {static: false}) securityMeasurePaginator: MatPaginator;\n  @ViewChild('securityMeasureMatSort', {static: false}) securityMeasureMatSort: MatSort;\n  @ViewChild('thirdPartyPaginator', {static: false}) thirdPartyPaginator: MatPaginator;\n  @ViewChild('thirdPartyMatSort', {static: false}) thirdPartyMatSort: MatSort;\n  @ViewChild('countryOfTransferPaginator', {static: false}) countryOfTransferPaginator: MatPaginator;\n  @ViewChild('countryOfTransferMatSort', {static: false}) countryOfTransferMatSort: MatSort;\n  @Input() checked: Boolean;\n\n  OrganizationID: number;\n  OrgID : number;\n  CurrentStepID: number;\n  cat: number[] = [];\n  organisationcategories: any;\n  natureOfbusinesses: any;\n  natureOfbusinesses_arr: any = [];\n  sourceofdata: any;\n  sourceofdata_arr: any = [];\n  purpose: any;\n  purpose_arr: any = [];\n\n  _updateAttachment = false;\n  _updateForm3Attachment = false;\n  _updateProofOfPayment = false;\n  securityMeasuresEnabled = false;\n  thirdPartiesEnabled = false;\n  countriesOfTransferEnabled = false;\n\n  constructor(\n      private formBuilder: FormBuilder,\n      private service: ApiService,\n      private endpoints: ApiEndpointsService,\n      private dialog: MatDialog,\n      private bottomsheet: MatBottomSheet,\n      private http: HttpClient,\n      private route: Router,\n      public snackBar: SnackBarService,\n      private activateRoute: ActivatedRoute,\n      private changeDetector: ChangeDetectorRef,\n      public authService: KeycloakService,\n      public _authService: AuthenticationService,\n      public _workflowService: WorkflowServiceService,\n      public registrationService: CompanyRegistrationService,\n      private referenceService: ReferenceTableService,\n      public complaintService: ComplaintService,\n  ) {\n      super(\n          authService,\n          _workflowService,\n          registrationService,\n          complaintService\n      );\n\n      this.accesses = authService.getKeycloakInstance().resourceAccess['dps-frontend'].roles;\n      this.operationType = activateRoute.routeConfig.data.action;\n      this.regTrackingNo = this.route.getCurrentNavigation().extras.state.regTrackingNo;\n      this.OrgID = this.route.getCurrentNavigation().extras.state.OrganisationID;\n      this.CurrentStepID = this.route.getCurrentNavigation().extras.state.CurrentStepID;\n\n      \n      if (this.operationType === 'EDIT') {\n          this.isEditMode = true;\n      } else if (this.operationType === 'CREATE') {\n          this.isEditMode = false;\n      } else if (this.operationType === 'VIEW') {\n          this.isEditMode = false;\n          this.isViewOnly = true;\n      } else if (this.operationType === 'MANAGE') {\n          this.isEditMode = false;\n          this.isViewOnly = true;\n      }\n\n      // console.log('isViewOnly:', this.isViewOnly);\n\n      this.pageTitle();\n\n      this.formFieldSections = [\n          {\n              SectionID: 1,\n              SectionName: 'Applicant',\n              Count: 0,\n          },\n          {\n              SectionID: 2,\n              SectionName: 'Data Protection Officer',\n              Count: 0,\n          },\n          {\n              SectionID: 3,\n              SectionName: 'Data Collected or Processed',\n              Count: 0,\n          },\n          {\n              SectionID: 4,\n              SectionName: 'Purpose & Retention',\n              Count: 0,\n          },\n          {\n              SectionID: 5,\n              SectionName: 'Disclosure & Transfer',\n              Count: 0,\n          },\n          {\n              SectionID: 6,\n              SectionName: 'Security Information',\n              Count: 0,\n          },\n      ]        \n  }\n\n  pageTitle() {\n      const pageTitle = this.isOfficer ? this.application.OrganisationName + 'Application' : ' My Application';\n      this.service.updatePageTitle(['Organisations', pageTitle]);\n  }\n\n  ngOnInit(): void {\n      this.formGeneralInformation = this.formBuilder.group({\n          OrganizationName: new FormControl('', [Validators.required]),\n          DPPActCategory: new FormControl('', [Validators.required]),\n          OrganizationTypeID: new FormControl('', [Validators.required]),\n          CountryOfIncorporation: new FormControl('', [Validators.required]),\n          URSBNumber: new FormControl(''),\n          SectorID: new FormControl('', [Validators.required]),\n          OtherSector: new FormControl('', [Validators.maxLength(50)]),\n          Location: new FormControl('', [Validators.required]),\n          PhoneNumberCode: new FormControl('', [Validators.required]),\n          PhoneNumber: new FormControl('', [\n              Validators.required,\n              Validators.pattern(/^[0-9 ]+$/),\n          ]),\n          EmailAddress: new FormControl('', [\n              Validators.required,\n              Validators.email\n          ]),\n          // NatureOfBusiness: new FormControl('', [Validators.required]),\n          NatureOfBusinessCat: new FormControl('', [Validators.required]),\n          NatureOfBusinessSubCat: new FormControl('', [Validators.required]),\n      });\n\n      this.formOrganisationDetails = this.formBuilder.group({\n          DPORequired: new FormControl(''),\n          DPOName: new FormControl(''),\n          DPOPhysicalAddress: new FormControl(''),\n          PhoneNumberCode: new FormControl(''),\n          DPOPhoneNumber: new FormControl(''),\n          DPOEmailAddress: new FormControl(''),\n          DPOPositionInOrganisation: new FormControl(''),\n      });\n\n      this.formPersonalDataHeld = this.formBuilder.group({\n          SourceOfDataID: new FormControl('', [Validators.required]),\n      });\n\n      this.formPurposeRetention = this.formBuilder.group({\n          Purpose: new FormControl('', [Validators.required]),\n          SpecifyTheLaw: new FormControl(''),\n          ServiceOrProductProvided: new FormControl(''),\n          SpecifyLegalObligation: new FormControl(''),\n          TotalRecordsAtRegistration: new FormControl('', [Validators.pattern(/^[0-9,]+$/)]),\n          RecordPercentageGrowth: new FormControl('', [\n              Validators.pattern(/^[0-9,]+$/),\n              Validators.max(100),\n          ]),\n          RetentionPeriod: new FormControl('', [\n              Validators.required,\n              Validators.pattern(/^[0-9,]+$/),\n              Validators.max(100),\n          ]),\n      });\n\n      this.formSecurityMeasures = this.formBuilder.group({\n          RegistrationConsent: new FormControl('', [Validators.required]),\n          RegistrationDoneBy: new FormControl('', [Validators.required, Validators.pattern(/^[a-zA-Z ]+$/)]),\n      });\n\n      this.formThirdParties = this.formBuilder.group({\n          PersonalDataIsForDisclosure: new FormControl('', [Validators.required]),\n          StoreDataOutsideCountry: new FormControl('', [Validators.required]),\n      });\n\n      // this.Listeners();\n      // console.log('operationType:', this.operationType);\n      if (this.operationType === 'CREATE' || this.operationType === 'MANAGE') {\n          this.Listeners();\n      }\n      \n      \n  \n      // Set OfficerRole\n      this.isOfficer = this.timeLineAccess.includes(this.realmRole);\n  \n      this.formGeneralInformation.valueChanges\n          .pipe(\n              filter(() => this.formGeneralInformation.valid)\n          ).subscribe(val => localStorage.setItem('STEP_1', JSON.stringify(val)));\n  }\n\n  ngAfterContentInit(): void {\n      this.OrganizationID = 156;\n      this.getDataFromMultipleRequests();\n  }\n\n  private getDataFromMultipleRequests(): void {\n      this.httpSub = this.fetchMultiple(this.OrgID)\n      .pipe(catchError(this.service.handleError))\n      .subscribe((responseList) => {\n          this.countries = responseList[0];\n\n          this.organisationCategories = [\n              {\n                  OrganisationCategoryId: 1,\n                  OrganisationCategoryName: 'Data Controller'\n              },\n              {\n                  OrganisationCategoryId: 2,\n                  OrganisationCategoryName: 'Data Processor'\n              },\n              {\n                  OrganisationCategoryId: 3,\n                  OrganisationCategoryName: 'Data Collector'\n              },\n          ];\n\n          this.formGeneralInformation.get('PhoneNumberCode').patchValue('256');\n          this.formOrganisationDetails.get('PhoneNumberCode').patchValue('256');\n\n          this.dataSources = responseList[1];\n\n          this.organisationTypes = responseList[2];\n\n          this.sectors = responseList[3];\n\n          this.dataCategories = responseList[4];\n\n          this.dataPurposes = responseList[5];\n\n          this.natureOfBusinessCat = responseList[6];\n          console.log(responseList[7]);\n\n          this.new_data = responseList[7].data;\n          console.log(this.new_data);\n\n\n          this.fetchSingleApplication(responseList[7]);\n\n          this.processing = false;\n      }, (error) => {\n          this.processing = false;\n          this.service.determineErrorResponse(error);\n      });        \n  }\n\n  private Listeners(): void {\n      // STEP ONE\n      this.formGeneralInformation.get('DPPActCategory').valueChanges.subscribe((value) => {\n          const values: number[] = value;\n          this.selectedOrganisationCategories.length = 0;\n\n          this.organisationCategories.filter((item) => {\n              if (values.includes(item.OrganisationCategoryId)) {\n                  this.selectedOrganisationCategories.push(item);\n              }\n          });\n      });\n\n      this.formGeneralInformation.get('OrganizationTypeID').valueChanges.subscribe((value) => {\n          if (value !== 4) {\n              this.formGeneralInformation.get('CountryOfIncorporation').setValidators([Validators.required]);\n              this.formGeneralInformation.get('URSBNumber').setValidators([Validators.required]);\n          } else {\n              this.formGeneralInformation.get('CountryOfIncorporation').clearValidators();\n              this.formGeneralInformation.get('CountryOfIncorporation').reset();\n              this.formGeneralInformation.get('URSBNumber').clearValidators();\n              this.formGeneralInformation.get('URSBNumber').reset();\n              this.CountryOfIncorporation = null;\n          }\n\n          this.formGeneralInformation.controls['CountryOfIncorporation'].updateValueAndValidity();\n          this.formGeneralInformation.controls['URSBNumber'].updateValueAndValidity();\n      });\n\n      this.formGeneralInformation.get('SectorID').valueChanges.subscribe((value) => {\n          if (value === 14) {\n              this.formGeneralInformation.get('OtherSector').setValidators([Validators.required]);\n          } else {\n              this.formGeneralInformation.get('OtherSector').clearValidators();\n              this.formGeneralInformation.get('OtherSector').reset();\n          }\n\n          this.formGeneralInformation.controls['OtherSector'].updateValueAndValidity();\n      });\n\n      this.formGeneralInformation.get('NatureOfBusinessCat').valueChanges.subscribe((value) => {\n          if (value) { \n              this.onNatureOfBusinessCatSelected(value);\n          }\n      });\n\n      this.formGeneralInformation.get('NatureOfBusinessSubCat').valueChanges.subscribe((value) => {\n          const values: number[] = value;\n          this.selectedNatureOfBusinessSubCat.length = 0;\n\n          this.natureOfBusinessSubCat.filter((item) => {\n              if (values.includes(item.NatureOfBusinessSubCatId)) {\n                  this.selectedNatureOfBusinessSubCat.push(item);\n              }\n          });\n      });\n\n      // STEP TWO\n      this.formOrganisationDetails.get('DPORequired').valueChanges.subscribe((value) => {\n\n          if (value === 'Yes') {\n              this.formOrganisationDetails.get('DPOName').setValidators([Validators.required, Validators.pattern(/^[a-zA-Z ]+$/), ]);\n              this.formOrganisationDetails.get('DPOPhysicalAddress').setValidators([Validators.required]);\n              this.formOrganisationDetails.get('DPOPhoneNumber').setValidators([Validators.required, Validators.pattern(/^[0-9 ]+$/)]);\n              this.formOrganisationDetails.get('DPOEmailAddress').setValidators([Validators.required, Validators.email]);\n              this.formOrganisationDetails.get('DPOPositionInOrganisation').setValidators([Validators.required]);\n          } else {\n              this.formOrganisationDetails.get('DPOName').clearValidators();\n              this.formOrganisationDetails.get('DPOName').reset();\n              this.formOrganisationDetails.get('DPOPhysicalAddress').clearValidators();\n              this.formOrganisationDetails.get('DPOPhysicalAddress').reset();\n              this.formOrganisationDetails.get('DPOPhoneNumber').clearValidators();\n              this.formOrganisationDetails.get('DPOPhoneNumber').reset();\n              this.formOrganisationDetails.get('DPOEmailAddress').clearValidators();\n              this.formOrganisationDetails.get('DPOEmailAddress').reset();\n              this.formOrganisationDetails.get('DPOPositionInOrganisation').clearValidators();\n              this.formOrganisationDetails.get('DPOPositionInOrganisation').reset();\n          }\n\n          this.formOrganisationDetails.controls['DPOName'].updateValueAndValidity();\n          this.formOrganisationDetails.controls['DPOPhysicalAddress'].updateValueAndValidity();\n          this.formOrganisationDetails.controls['DPOPhoneNumber'].updateValueAndValidity();\n          this.formOrganisationDetails.controls['DPOEmailAddress'].updateValueAndValidity();\n          this.formOrganisationDetails.controls['DPOPositionInOrganisation'].updateValueAndValidity();\n      });\n\n      // STEP THREE\n      this.formPersonalDataHeld.get('SourceOfDataID').valueChanges.subscribe((value) => {\n          const values: number[] = value;\n          this.selectedDataSources.length = 0;\n\n          this.dataSources?.filter((item) => {\n              if (values.includes(item.DataSourceID)) {\n                  this.selectedDataSources.push(item);\n              }\n          });\n      });\n\n       ///CHILDREN DATA PURPOSES\n\n    this.formChildrenData.get('PurposeForCollection').valueChanges.subscribe((value) => {\n        const values: number[] = value;\n        this.selectedChildDataPurposes.length = 0;\n  \n        this.childDataPurposes.filter((item) => {\n          if (values.includes(item.ChildDataID)) {\n            this.selectedChildDataPurposes.push(item);\n          }\n        });\n  \n        console.log(this.selectedChildDataPurposes);\n      });\n\n      // STEP FOUR\n      this.formPurposeRetention.get('Purpose').valueChanges.subscribe((value) => {\n          const values: number[] = value;\n\n          this.selectedDataPurposes.length = 0;\n\n          // Reset all the fields first\n          this.SpecifyTheLaw = false;\n          this.ServiceOrProductProvided = false;\n          this.SpecifyLegalObligation = false;\n          this.formPurposeRetention.get('SpecifyTheLaw').clearValidators();\n          this.formPurposeRetention.get('SpecifyTheLaw').reset();\n          this.formPurposeRetention.get('ServiceOrProductProvided').clearValidators();\n          this.formPurposeRetention.get('ServiceOrProductProvided').reset();\n          this.formPurposeRetention.get('SpecifyLegalObligation').clearValidators();\n          this.formPurposeRetention.get('SpecifyLegalObligation').reset();\n\n          values?.filter((item) => {\n              if (item === 1) {\n                  this.SpecifyTheLaw = true;\n                  this.formPurposeRetention.get('SpecifyTheLaw').setValidators([Validators.required]);\n              }\n\n              if (item === 3) {\n                  this.ServiceOrProductProvided = true;\n                  this.formPurposeRetention.get('ServiceOrProductProvided').setValidators([Validators.required]);\n              }\n\n              if (item === 6) {\n                  this.SpecifyLegalObligation = true;\n                  this.formPurposeRetention.get('SpecifyLegalObligation').setValidators([Validators.required]);\n              }\n          });\n\n          this.formPurposeRetention.controls['SpecifyTheLaw'].updateValueAndValidity();\n          this.formPurposeRetention.controls['ServiceOrProductProvided'].updateValueAndValidity();\n          this.formPurposeRetention.controls['SpecifyLegalObligation'].updateValueAndValidity();\n\n          this.dataPurposes.filter((item) => {\n              if (values.includes(item.DataPurposeID)) {\n                  this.selectedDataPurposes.push(item);\n              }\n          });\n\n          this.changeDetector.detectChanges();\n      });\n\n      this.formPurposeRetention.get('RecordPercentageGrowth').valueChanges.subscribe((value) => {\n\n          if (value > 100) {\n              this.formPurposeRetention.get('RecordPercentageGrowth').patchValue(100);\n          }\n\n          this.changeDetector.detectChanges();\n      });\n\n      this.formPurposeRetention.get('RetentionPeriod').valueChanges.subscribe((value) => {\n\n          if (value > 100) {\n              this.formPurposeRetention.get('RetentionPeriod').patchValue(100);\n          }\n\n          this.changeDetector.detectChanges();\n      });\n\n      // STEP FIVE\n      this.formThirdParties.get('PersonalDataIsForDisclosure').valueChanges.subscribe((value) => {        \n          if (value === 'No') {\n              this.thirdParties.length = 0;\n  \n              this.thirdPartyDataSource = new MatTableDataSource(this.thirdParties);\n  \n              setTimeout(() => {\n                  this.thirdPartyDataSource.paginator = this.thirdPartyPaginator;\n                  this.thirdPartyDataSource.sort = this.thirdPartyMatSort;\n              });\n          }\n      });\n\n      this.formThirdParties.get('StoreDataOutsideCountry').valueChanges.subscribe((value) => {\n          if (value === 'No') {\n              this.countriesOfTransfer.length = 0;\n  \n              this.countriesDataSource = new MatTableDataSource(this.countriesOfTransfer);\n  \n              setTimeout(() => {\n                  this.countriesDataSource.paginator = this.countryOfTransferPaginator;\n                  this.countriesDataSource.sort = this.countryOfTransferMatSort;\n              });            \n          }\n      });\n  }\n\n  private onShowNotice(): void {\n      this.dialogRef = this.dialog.open(OrgNoticeComponent, {\n          panelClass: ['organisation-data-protection-officer-dialog', 'dialogs'],\n          disableClose: true,\n      });\n\n      this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: DataProtectionOfficer }) => {\n\n      });\n  }\n\n  getOrganizationNameErrorMessage(): string {\n      return this.formGeneralInformation.get('OrganizationName').hasError('required') ? 'Please enter a value' : '';\n  }\n\n  getURSBNumberErrorMessage(): string {\n      return this.formGeneralInformation.get('URSBNumber').hasError('required') ? 'Please enter a value' : '';\n  }\n\n  getSelectErrorMessage(): string {\n      return this.formGeneralInformation.get('DPPActCategory').hasError('required')\n      || this.formGeneralInformation.get('OrganizationTypeID').hasError('required')\n      || this.formGeneralInformation.get('CountryOfIncorporation').hasError('required')\n      || this.formGeneralInformation.get('SectorID').hasError('required')\n      || this.formGeneralInformation.get('NatureOfBusinessCat').hasError('required')\n      || this.formGeneralInformation.get('NatureOfBusinessSubCat').hasError('required')\n      || this.formPersonalDataHeld.get('SourceOfDataID').hasError('required')\n      || this.formPurposeRetention.get('Purpose').hasError('required')\n          ? 'Please choose a value' : '';\n  }\n\n  getTelephoneNumberErrorMessage(): string {\n      return this.formGeneralInformation.get('PhoneNumber').hasError('required') ? 'Please enter a value' :\n          this.formGeneralInformation.get('PhoneNumber').hasError('pattern') ? 'Wrong Phone number' : '';\n  }\n\n  getEmailAddressErrorMessage(): string {\n      return this.formGeneralInformation.get('EmailAddress').hasError('required') ? 'Please enter a value' :\n          this.formGeneralInformation.get('EmailAddress').hasError('email') ? 'Wrong Email Address.' : '';\n  }\n\n  getOtherSectorErrorMessage(): string {\n      return this.formGeneralInformation.get('OtherSector').hasError('required') ? 'Please enter a value' : '';\n  }\n\n  getLocationErrorMessage(): string {\n      return this.formGeneralInformation.get('Location').hasError('required') ? 'Please enter a location' : '';\n  }\n\n  getDPONameErrorMessage(): string {\n      return this.formOrganisationDetails.get('DPOName').hasError('required') ? 'Please enter a value' :\n          this.formOrganisationDetails.get('DPOName').hasError('pattern') ? 'Please enter a correct name' : '';\n  }\n\n  getDPOPhysicalAddressErrorMessage(): string {\n      return this.formOrganisationDetails.get('DPOPhysicalAddress').hasError('required') ? 'Please enter a location' : '';\n  }\n\n  getDPOPhoneNumberErrorMessage(): string {\n      return this.formOrganisationDetails.get('DPOPhoneNumber').hasError('required') ? 'Please enter a value' :\n          this.formOrganisationDetails.get('DPOPhoneNumber').hasError('pattern') ? 'Wrong Phone number' : '';\n  }\n\n  getDPOEmailAddressErrorMessage(): string {\n      return this.formOrganisationDetails.get('DPOEmailAddress').hasError('required') ? 'Please enter a value' :\n          this.formOrganisationDetails.get('DPOEmailAddress').hasError('email') ? 'Wrong Email Address.' : '';\n  }\n\n  getDPOPositionInOrganisationErrorMessage(): string {\n      return this.formOrganisationDetails.get('DPOPositionInOrganisation').hasError('required') ? 'Please enter a value' : '';\n  }\n\n  getRequiredErrorMessage(): string {\n      return this.formPurposeRetention.get('SpecifyTheLaw').hasError('required')\n      || this.formPurposeRetention.get('ServiceOrProductProvided').hasError('required')\n      || this.formPurposeRetention.get('SpecifyLegalObligation').hasError('required')\n          ? 'Please enter a value' : '';\n  }\n\n  getPatternErrorMessage(): string {\n      return this.formPurposeRetention.get('TotalRecordsAtRegistration').hasError('pattern')\n          ? 'Please enter correct information' : '';\n  }\n\n  getRetentionPeriodErrorMessage(): string {\n      return this.formPurposeRetention.get('RetentionPeriod').hasError('required') ? 'Please enter a value' :\n          this.formPurposeRetention.get('RetentionPeriod').hasError('max') ? 'Maximum of 100' :\n              this.formPurposeRetention.get('RetentionPeriod').hasError('pattern') ? 'Not valid' : '';\n  }\n\n  getRecordPercentageGrowthErrorMessage(): string {\n      return this.formPurposeRetention.get('RecordPercentageGrowth').hasError('max') ? 'Maximum of 100' :\n          this.formPurposeRetention.get('RecordPercentageGrowth').hasError('pattern') ? 'Not valid' : '';\n  }\n\n  getCheckboxErrorMessage(): string {\n      return this.formSecurityMeasures.get('RegistrationConsent').hasError('max') ? 'This field is required' : '';\n  }\n\n  getRegistrationDoneByErrorMessage(): string {\n      return this.formSecurityMeasures.get('RegistrationDoneBy').hasError('required') ? 'Please enter a value' :\n          this.formSecurityMeasures.get('RegistrationDoneBy').hasError('pattern') ? 'Please enter a correct name' : '';\n  }\n\n  onAddMainActivity(): void {\n      this.dialogRef = this.dialog.open(OrgMainActivityComponent, {\n          panelClass: ['organisation-main-activity-dialog', 'dialogs'],\n          disableClose: true,\n      });\n\n      this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: MainActivity }) => {\n          if (result.status) {\n              let found = false;\n              this.mainActivities.filter((activity) => {\n                  if (activity.Activity === result.row.Activity) {\n                      found = true;\n                  }\n              });\n\n              if (found) {\n                  this.service.openSnackBar('Sorry, this record already exists', 'error-lg');\n              } else {\n                  this.mainActivities.push(result.row);\n              }\n\n              this.mainActivitiesDataSource = new MatTableDataSource(this.mainActivities);\n\n              setTimeout(() => {\n                  this.mainActivitiesDataSource.paginator = this.MainActivityPaginator;\n                  this.mainActivitiesDataSource.sort = this.MainActivityMatSort;\n              });\n          }\n      });\n  }\n\n  onEditMainActivity(row: MainActivity): void {\n      this.dialogRef = this.dialog.open(OrgMainActivityComponent, {\n          panelClass: ['organisation-main-activity-dialog', 'dialogs'],\n          disableClose: true,\n          data: {row}\n      });\n\n      this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: MainActivity }) => {\n          if (result.status) {\n\n              this.mainActivities[this.mainActivities.indexOf(row)] = {\n                  Activity: result.row.Activity,\n              };\n\n              this.mainActivitiesDataSource = new MatTableDataSource(this.mainActivities);\n\n              setTimeout(() => {\n                  this.mainActivitiesDataSource.paginator = this.MainActivityPaginator;\n                  this.mainActivitiesDataSource.sort = this.MainActivityMatSort;\n              });\n          }\n      });\n  }\n\n  onRemoveMainActivity(row: MainActivity): void {\n      this.mainActivities.splice(this.mainActivities.indexOf(row), 1);\n\n      this.mainActivitiesDataSource = new MatTableDataSource(this.mainActivities);\n\n      setTimeout(() => {\n          this.mainActivitiesDataSource.paginator = this.MainActivityPaginator;\n          this.mainActivitiesDataSource.sort = this.MainActivityMatSort;\n      });\n  }\n\n  onAddADPO(): void {\n      this.dialogRef = this.dialog.open(OrgDataProtectionOfficerComponent, {\n          panelClass: ['organisation-data-protection-officer-dialog', 'dialogs'],\n          disableClose: true,\n      });\n\n      this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: DataProtectionOfficer }) => {\n          if (result.status) {\n              let found = false;\n              this.dataProtectionOfficers.filter((dpo) => {\n                  if (dpo.EmailAddress === result.row.EmailAddress || dpo.PhoneNumber === result.row.PhoneNumber) {\n                      found = true;\n                  }\n              });\n\n              if (found) {\n                  this.service.openSnackBar('Sorry, this record already exists', 'error-lg');\n              } else {\n                  this.dataProtectionOfficers.push(result.row);\n              }\n\n              this.dpoDataSource = new MatTableDataSource(this.dataProtectionOfficers);\n\n              setTimeout(() => {\n                  this.dpoDataSource.paginator = this.dpoPaginator;\n                  this.dpoDataSource.sort = this.dpoMatSort;\n              });\n          }\n      });\n  }\n\n  onEditDPO(row: DataProtectionOfficer): void {\n      this.dialogRef = this.dialog.open(OrgDataProtectionOfficerComponent, {\n          panelClass: ['organisation-data-protection-officer-dialog', 'dialogs'],\n          disableClose: true,\n          data: {row}\n      });\n\n      this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: DataProtectionOfficer }) => {\n          if (result.status) {\n\n              this.dataProtectionOfficers[this.dataProtectionOfficers.indexOf(row)] = {\n                  Name: result.row.Name,\n                  EmailAddress: result.row.EmailAddress,\n                  PhoneNumber: result.row.PhoneNumber,\n                  PhysicalAddress: result.row.PhysicalAddress,\n                  PositionInOrganisation: result.row.PositionInOrganisation,\n              };\n\n              this.dpoDataSource = new MatTableDataSource(this.dataProtectionOfficers);\n\n              setTimeout(() => {\n                  this.dpoDataSource.paginator = this.dpoPaginator;\n                  this.dpoDataSource.sort = this.dpoMatSort;\n              });\n          }\n      });\n  }\n\n  onRemoveDPO(row: DataProtectionOfficer): void {\n      this.dataProtectionOfficers.splice(this.dataProtectionOfficers.indexOf(row), 1);\n\n      this.dpoDataSource = new MatTableDataSource(this.dataProtectionOfficers);\n\n      setTimeout(() => {\n          this.dpoDataSource.paginator = this.dpoPaginator;\n          this.dpoDataSource.sort = this.dpoMatSort;\n      });\n  }\n\n  onAddSecurityMeasure(): void {\n      this.dialogRef = this.dialog.open(OrgSecurityMeasuresComponent, {\n          panelClass: ['organisation-security-measure-dialog', 'dialogs'],\n          disableClose: true,\n      });\n\n      this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: SecurityMeasure }) => {\n          if (result.status) {\n              let found = false;\n              this.securityMeasures.filter((item) => {\n                  if (item.SecurityMeasure === result.row.SecurityMeasure) {\n                      found = true;\n                  }\n              });\n\n              if (found) {\n                  this.service.openSnackBar('Sorry, this record already exists', 'error-lg');\n              } else {\n                  this.securityMeasures.push(result.row);\n              }\n\n              this.securityMeasureDataSource = new MatTableDataSource(this.securityMeasures);\n\n              setTimeout(() => {\n                  this.securityMeasureDataSource.paginator = this.securityMeasurePaginator;\n                  this.securityMeasureDataSource.sort = this.securityMeasureMatSort;\n              });\n          }\n      });\n  }\n\n  onEditSecurityMeasure(row: SecurityMeasure): void {\n      this.dialogRef = this.dialog.open(OrgSecurityMeasuresComponent, {\n          panelClass: ['organisation-security-measure-dialog', 'dialogs'],\n          disableClose: true,\n          data: {row}\n      });\n\n      this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: SecurityMeasure }) => {\n          if (result.status) {\n\n              this.securityMeasures[this.securityMeasures.indexOf(row)] = {\n                  SecurityMeasure: result.row.SecurityMeasure,\n              };\n\n              this.securityMeasureDataSource = new MatTableDataSource(this.securityMeasures);\n\n              setTimeout(() => {\n                  this.securityMeasureDataSource.paginator = this.securityMeasurePaginator;\n                  this.securityMeasureDataSource.sort = this.securityMeasureMatSort;\n              });\n          }\n      });\n  }\n\n  onRemoveSecurityMeasure(row: SecurityMeasure): void {\n      this.securityMeasures.splice(this.securityMeasures.indexOf(row), 1);\n\n      this.securityMeasureDataSource = new MatTableDataSource(this.securityMeasures);\n\n      setTimeout(() => {\n          this.securityMeasureDataSource.paginator = this.securityMeasurePaginator;\n          this.securityMeasureDataSource.sort = this.securityMeasureMatSort;\n      });\n  }\n\n  onAddAThirdParty(): void {\n      this.dialogRef = this.dialog.open(OrgThirdPartyComponent, {\n          panelClass: ['organisation-third-party-dialog', 'dialogs'],\n          disableClose: true,\n      });\n\n      this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: ThirdParty }) => {\n          if (result.status) {\n              let found = false;\n\n              this.thirdParties.filter((party) => {\n                  if (party.ThirdPartyName === result.row.ThirdPartyName) {\n                      found = true;\n                  }\n              });\n\n              if (found) {\n                  this.service.openSnackBar('Sorry, this record already exists', 'error-lg');\n              } else {\n                  this.thirdParties.push(result.row);\n              }\n\n              this.thirdPartyDataSource = new MatTableDataSource(this.thirdParties);\n\n              setTimeout(() => {\n                  this.thirdPartyDataSource.paginator = this.thirdPartyPaginator;\n                  this.thirdPartyDataSource.sort = this.thirdPartyMatSort;\n              });\n          }\n      });\n  }\n\n  onEditThirdParty(row: ThirdParty): void {\n      this.dialogRef = this.dialog.open(OrgThirdPartyComponent, {\n          panelClass: ['organisation-third-party-dialog', 'dialogs'],\n          disableClose: true,\n          data: {row}\n      });\n\n      this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: ThirdParty }) => {\n          if (result.status) {\n\n              this.thirdParties[this.thirdParties.indexOf(row)] = {\n                  ThirdPartyName: result.row.ThirdPartyName,\n                  Purpose: result.row.Purpose,\n              };\n\n              this.thirdPartyDataSource = new MatTableDataSource(this.thirdParties);\n\n              setTimeout(() => {\n                  this.thirdPartyDataSource.paginator = this.thirdPartyPaginator;\n                  this.thirdPartyDataSource.sort = this.thirdPartyMatSort;\n              });\n          }\n      });\n  }\n\n  onRemoveThirdParty(row: ThirdParty): void {\n      this.thirdParties.splice(this.thirdParties.indexOf(row), 1);\n\n      this.thirdPartyDataSource = new MatTableDataSource(this.thirdParties);\n\n      setTimeout(() => {\n          this.thirdPartyDataSource.paginator = this.thirdPartyPaginator;\n          this.thirdPartyDataSource.sort = this.thirdPartyMatSort;\n      });\n  }\n\n  onAddACountry(): void {\n      this.dialogRef = this.dialog.open(OrgCountryComponent, {\n          panelClass: ['organisation-country-dialog', 'dialogs'],\n          disableClose: true,\n      });\n\n      this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: CountryOfTransfer }) => {\n          if (result.status) {\n              let found = false;\n              this.countriesOfTransfer.filter((party) => {\n                  if (party.Country === result.row.Country) {\n                      found = true;\n                  }\n              });\n\n              if (found) {\n                  this.service.openSnackBar('Sorry, this record already exists', 'error-lg');\n              } else {\n                  this.countriesOfTransfer.push(result.row);\n              }\n\n              this.countriesDataSource = new MatTableDataSource(this.countriesOfTransfer);\n\n              setTimeout(() => {\n                  this.countriesDataSource.paginator = this.countryOfTransferPaginator;\n                  this.countriesDataSource.sort = this.countryOfTransferMatSort;\n              });\n          }\n      });\n  }\n\n  onEditCountry(row: CountryOfTransfer): void {\n      this.dialogRef = this.dialog.open(OrgCountryComponent, {\n          panelClass: ['organisation-country-dialog', 'dialogs'],\n          disableClose: true,\n          data: {row}\n      });\n\n      this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: CountryOfTransfer }) => {\n          if (result.status) {\n              this.countriesOfTransfer[this.countriesOfTransfer.indexOf(row)] = {\n                  CountryID: result.row.CountryID,\n                  Country: result.row.Country,\n                  Purpose: result.row.Purpose,\n                  Description: result.row.Description,\n              };\n\n              this.countriesDataSource = new MatTableDataSource(this.countriesOfTransfer);\n\n              setTimeout(() => {\n                  this.countriesDataSource.paginator = this.countryOfTransferPaginator;\n                  this.countriesDataSource.sort = this.countryOfTransferMatSort;\n              });\n          }\n      });\n  }\n\n  onRemoveCountry(row: CountryOfTransfer): void {\n      this.countriesOfTransfer.splice(this.countriesOfTransfer.indexOf(row), 1);\n\n      this.countriesDataSource = new MatTableDataSource(this.countriesOfTransfer);\n\n      setTimeout(() => {\n          this.countriesDataSource.paginator = this.countryOfTransferPaginator;\n          this.countriesDataSource.sort = this.countryOfTransferMatSort;\n      });\n  }\n\n  onUploadAttachments(): void {\n      this.dialogRef = this.dialog.open(OrgUploadComponent, {\n          panelClass: ['organisation-upload-dialog', 'dialogs'],\n          disableClose: true,\n          data: {\n              multiple: false\n          }\n      });\n\n      this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: FileUpload }) => {\n          // console.log('row:', result.row);\n\n          if (result.status) {\n              this.document = result.row;\n          }\n      });\n  }\n\n  onRemoveDocument(): void {\n      this.document = null;\n  }\n\n  onDownloadForm3(): void {\n      // this.formGeneralInformation.get('OrganizationName').patchValue('Applied Principles Consulting');\n      // this.formGeneralInformation.get('Location').patchValue('Bukoto street 764');\n\n      this.dialogRef = this.dialog.open(OrgForm3DialogComponent, {\n          panelClass: ['organisation-form-3-dialog', 'dialogs'],\n          disableClose: true,\n          data: {\n              OrganisationName: this.formGeneralInformation.get('OrganizationName').value,\n              PhysicalAddress: this.formGeneralInformation.get('Location').value,\n              Date: new Date()\n          }\n      });\n  }\n\n  onUploadProofOfPayment(): void {\n      this.dialogRef = this.dialog.open(OrgUploadComponent, {\n          panelClass: ['organisation-upload-dialog', 'dialogs'],\n          disableClose: true,\n          data: {\n              multiple: false\n          }\n      });\n\n      this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: FileUpload }) => {\n\n          if (result.status) {\n              this.proofOfPayment = result.row;\n          }\n      });\n  }\n\n  onRemoveProofOfPaymen(): void {\n      this.proofOfPayment = null;\n  }\n\n  onUploadForm3Attachments(): void {\n      this.dialogRef = this.dialog.open(OrgUploadComponent, {\n          panelClass: ['organisation-upload-dialog', 'dialogs'],\n          disableClose: true,\n          data: {\n              multiple: false\n          }\n      });\n\n      this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: FileUpload }) => {\n          if (result.status) {\n              this.documentForm3 = result.row;\n          }\n      });\n  }\n\n  onRemoveForm3Document(): void {\n      this.documentForm3 = null;\n  }\n\n  onChangeSubCategory(event: MatCheckboxChange, SubCategory: DataSubCategory): void {\n      if (event.checked) {\n          this.selectedDataSubCategory.push(SubCategory);\n      } else {\n          this.selectedDataSubCategory.splice(this.selectedDataSubCategory.indexOf(SubCategory), 1);\n      }\n  }\n\n  private fetchMultiple(OrgID: any): Observable<any[]> {\n      this.processing = true;\n      const reqCountries = this.http.get<ApiPayload>(this.endpoints.countries);\n      const reqDataSources = this.http.get<ApiPayload>(this.endpoints.dataSources);\n      const reqOrganisationType = this.http.get<ApiPayload>(this.endpoints.organisationType);\n      const reqSector = this.http.get<ApiPayload>(this.endpoints.sector);\n      const reqDataSubcategories = this.http.get<ApiPayload>(this.endpoints.dataSubcategories);\n      const reqDataPurpose = this.http.get<ApiPayload>(this.endpoints.dataPurpose);\n      const reqNatureOfBusiness = this.http.get<ApiPayload>(this.endpoints.natureOfBusiness);\n      const reqFetchOrganisatioDetails = this.http.get<ApiPayload>(this.endpoints.getUpdatedRegistrationDetails, {params: {RegTrackingNo: OrgID}});\n\n      // tslint:disable-next-line:max-line-length\n      return forkJoin([reqCountries, reqDataSources, reqOrganisationType, reqSector, reqDataSubcategories, reqDataPurpose, reqNatureOfBusiness, reqFetchOrganisatioDetails]);\n  }\n\n  private getFormData(): any {\n      const data = {\n          OrganisationID: this.application && this.application.OrganisationID ? String(this.application.OrganisationID) : '',\n          RegTrackingNo: this.application && this.application.RegTrackingNo ? this.application.RegTrackingNo : '',\n          OrganisationName: this.formGeneralInformation.get('OrganizationName').value,\n          OrganisationCategory: this.selectedOrganisationCategories,\n          OrganizationTypeID: this.formGeneralInformation.get('OrganizationTypeID').value,\n          CountryOfIncorporation: this.formGeneralInformation.get('CountryOfIncorporation').value ? this.formGeneralInformation.get('CountryOfIncorporation').value : 0,\n          URSBNumber: this.formGeneralInformation.get('URSBNumber').value ? this.formGeneralInformation.get('URSBNumber').value : '',\n          SectorID: this.formGeneralInformation.get('SectorID').value,\n          OtherSector: this.formGeneralInformation.get('OtherSector').value ? this.formGeneralInformation.get('OtherSector').value : '',\n          Location: this.formGeneralInformation.get('Location').value,\n          // tslint:disable-next-line:max-line-length\n          PhoneNumber: this.formGeneralInformation.get('PhoneNumberCode').value + (this.formGeneralInformation.get('PhoneNumber').value).replaceAll(' ', ''),\n          EmailAddress: this.formGeneralInformation.get('EmailAddress').value,\n          NatureOfBusinessCatID: this.formGeneralInformation.get('NatureOfBusinessCat').value ? this.formGeneralInformation.get('NatureOfBusinessCat').value : 0,\n          NatureOfBusiness: this.selectedNatureOfBusinessSubCat,\n          DPORequired: this.formOrganisationDetails.get('DPORequired').value,\n          DPOName: this.formOrganisationDetails.get('DPORequired').value === 'Yes' ? this.formOrganisationDetails.get('DPOName').value : '',\n          DPOPhysicalAddress: this.formOrganisationDetails.get('DPORequired').value === 'Yes' ? this.formOrganisationDetails.get('DPOPhysicalAddress').value : '',\n          // tslint:disable-next-line:max-line-length\n          DPOPhoneNumber: this.formOrganisationDetails.get('DPOPhoneNumber').value ? this.formOrganisationDetails.get('PhoneNumberCode').value + (this.formOrganisationDetails.get('DPOPhoneNumber').value).replaceAll(' ', '') : '',\n          DPOEmailAddress: this.formOrganisationDetails.get('DPORequired').value === 'Yes' ? this.formOrganisationDetails.get('DPOEmailAddress').value : '',\n          DPOPositionInOrganisation: this.formOrganisationDetails.get('DPORequired').value === 'Yes' ? this.formOrganisationDetails.get('DPOPositionInOrganisation').value : '',\n          SourceOfDataID: this.selectedDataSources,\n          PersonalDataCollected: this.selectedDataSubCategory,\n          Purpose: this.selectedDataPurposes,\n          SpecifyTheLaw: this.formPurposeRetention.get('SpecifyTheLaw').value ? this.formPurposeRetention.get('SpecifyTheLaw').value : '',\n          ServiceOrProductProvided: this.formPurposeRetention.get('ServiceOrProductProvided').value ? this.formPurposeRetention.get('ServiceOrProductProvided').value : '',\n          SpecifyLegalObligation: this.formPurposeRetention.get('SpecifyLegalObligation').value ? this.formPurposeRetention.get('SpecifyLegalObligation').value : '',\n          // tslint:disable-next-line:max-line-length\n          TotalRecordsAtRegistration: this.formPurposeRetention.get('TotalRecordsAtRegistration').value ? parseInt(this.formPurposeRetention.get('TotalRecordsAtRegistration').value, 10) : 0,\n          RecordPercentageGrowth: this.formPurposeRetention.get('RecordPercentageGrowth').value ? parseInt(this.formPurposeRetention.get('RecordPercentageGrowth').value, 10) : 0,\n          RetentionPeriod: this.formPurposeRetention.get('RetentionPeriod').value ? parseInt(this.formPurposeRetention.get('RetentionPeriod').value, 10) : 0,\n          PersonalDataIsForDisclosure: this.formThirdParties.get('PersonalDataIsForDisclosure').value,\n          ThirdParties: this.thirdParties,\n          StoreDataOutsideCountry: this.formThirdParties.get('StoreDataOutsideCountry').value,\n          Countries: this.countriesOfTransfer,\n          SecurityMeasures: this.securityMeasures,\n          Attachment: this.document && this.document.Base64 ? this.document.Base64 : '',\n          Form3Attachment: this.documentForm3 && this.documentForm3.Base64 ? this.documentForm3.Base64 : '',\n          RegistrationConsent: this.formSecurityMeasures.get('RegistrationConsent').value ? true : false,\n          RegistrationDoneBy: this.formSecurityMeasures.get('RegistrationDoneBy').value ? this.formSecurityMeasures.get('RegistrationDoneBy').value : '',\n          ProofOfPayment: this.proofOfPayment && this.proofOfPayment.Base64 ? this.proofOfPayment.Base64 : '',\n          ChildrenDataPurpose: this.selectedChildDataPurposes ? this.selectedChildDataPurposes : [],\n          CollectChildrenData: this.formChildrenData.get('CollectChildrenData').value ? this.formChildrenData.get('CollectChildrenData').value : '',\n      };\n\n      return data;\n  }\n\n  onNatureOfBusinessCatSelected(NatureOfBusinessCatId): void {\n      // console.log('here:', NatureOfBusinessCatId);\n      // tslint:disable-next-line:max-line-length\n      this.httpSub = this.http.get<NatureOfBusinessSubCat[]>(this.endpoints.natureOfBusiness + '?NatureOfBusinessSubCat=' + NatureOfBusinessCatId)\n      .pipe(catchError(this.service.handleError))\n      .subscribe((response) => {\n          \n          this.natureOfBusinessSubCat = response;\n          // console.log('natureOfBusinessSubCat:', this.natureOfBusinessSubCat);\n\n          }, (error) => {\n              this.processing = false;\n              this.service.determineErrorResponse(error);\n          });\n  }\n\n  onPreviewForm(download: boolean): void {\n      this.dialogRef = this.dialog.open(OrgRegistrationPreviewDialogComponent, {\n          panelClass: ['organisation-registration-preview-form-3-dialog', 'dialogs'],\n          disableClose: true,\n          data: {\n              download: download,\n              row: this.getFormData(),\n              Attachment: this.document ? this.document : '',\n              Form3: this.documentForm3 ? this.documentForm3 : '',\n              ProofOfPayment: this.proofOfPayment ? this.proofOfPayment : '',\n              OrganizationType: this.OrganizationType,\n              // tslint:disable-next-line:max-line-length\n              Sector: this.formGeneralInformation.get('OtherSector').value ? this.formGeneralInformation.get('OtherSector').value : this.SectorName,\n              NatureOfBusinessCat: this.NatureOfBusinessCat,\n              CountryOfIncorporation: this.CountryOfIncorporation\n          }\n      });\n  }\n\n  fetchSingleApplication(response): void {\n      this.application = response.data;\n\n      response = response.data;\n      console.log(this.application)\n\n      // console.log('application:', this.application);\n      // console.log('_StepRequestingForMoreInfo:', this._StepRequestingForMoreInfo);\n\n      this.hasRequestForMoreInfo(this.application.RegTrackingNo);\n      this.findDocumentActions(1, this.application.CurrentStepID);\n      this.getDocumentWorkflow(this.application.RegTrackingNo, this.workflowID);\n\n     \n\n      if (this.application.OrganisationCategory) {\n        let organisationCategories: any = this.application.OrganisationCategory;\n        let cat: number[] = [];\n    \n        organisationCategories.filter((item) => {\n          cat.push(item.OrganisationCategoryId);\n        });\n    \n        this.formGeneralInformation.get('DPPActCategory').patchValue(cat);\n      }\n  \n      this.formGeneralInformation.get('OrganizationTypeID').patchValue(this.application.OrganizationTypeID);\n      this.formGeneralInformation.get('OrganizationName').patchValue(this.application.OrganisationName);\n      this.formGeneralInformation.get('URSBNumber').patchValue(this.application.URSBNumber);\n      this.formGeneralInformation.get('SectorID').patchValue(this.application.SectorID);\n      this.formGeneralInformation.get('CountryOfIncorporation').patchValue(this.application['CountryOfIncorporation']);\n      this.formGeneralInformation.get('OtherSector').patchValue(this.application['OtherSector']);\n      this.formGeneralInformation.get('Location').patchValue(this.application.Location);\n      this.formGeneralInformation.get('PhoneNumberCode').patchValue(this.application.PhoneNumber.substring(0, 3));\n      this.formGeneralInformation.get('PhoneNumber').patchValue(this.application.PhoneNumber.substring(3, 13));\n      this.formGeneralInformation.get('EmailAddress').patchValue(this.application.EmailAddress);\n  \n      if (this.application['NatureOfBusiness'].length) {\n        this.formGeneralInformation.get('NatureOfBusinessCat').patchValue(this.application['NatureOfBusinessCatID']);\n        \n        let natureOfbusinesses: NatureOfBusiness[] = this.application['NatureOfBusiness'];\n        let natureOfbusinesses_arr: any[] = [];\n  \n        let _selectedNatureOfBusinessSubCat: NatureOfBusinessSubCat[] = [];\n        natureOfbusinesses.filter((item) => {\n          natureOfbusinesses_arr.push(item['NatureOfBusinessSubCatId']);\n  \n          _selectedNatureOfBusinessSubCat.push({\n            NatureOfBusinessSubCatId: item['NatureOfBusinessSubCatId'],\n            NatureOfBusinessSubCategoryName: item.NatureOfBusinessSubCategoryName\n          });\n        });\n        \n        this.formGeneralInformation.get('NatureOfBusinessSubCat').patchValue(natureOfbusinesses_arr);\n        this.selectedNatureOfBusinessSubCat = _selectedNatureOfBusinessSubCat;\n      }\n  \n      // STEP TWO\n      this.formOrganisationDetails.get('DPORequired').patchValue(this.application['DPORequired']);\n  \n      this.formOrganisationDetails.get('DPOName').patchValue(this.application['DPOName']);\n      this.formOrganisationDetails.get('DPOPhysicalAddress').patchValue(this.application['DPOPhysicalAddress']);\n      this.formOrganisationDetails.get('PhoneNumberCode').patchValue(this.application['DPOPhoneNumber'].substring(0, 3));\n      this.formOrganisationDetails.get('DPOPhoneNumber').patchValue(this.application['DPOPhoneNumber'].substring(3, 13));\n      this.formOrganisationDetails.get('DPOEmailAddress').patchValue(this.application['DPOEmailAddress']);\n      this.formOrganisationDetails.get('DPOPositionInOrganisation').patchValue(this.application['DPOPositionInOrganisation']);\n  \n      // STEP THREE\n      let sourceofdata = this.application['SourceOfDataID'];\n      let sourceofdata_arr: number [] = [];\n      \n      sourceofdata.filter((item) => {\n        sourceofdata_arr.push(item.DataSourceID);\n      });\n  \n      this.formPersonalDataHeld.get('SourceOfDataID').patchValue(sourceofdata_arr);\n  \n      if (this.application['PersonalDataCollected']) {\n        const personalDataCollected: any[] = this.application['PersonalDataCollected'];\n    \n        this.dataCategories.filter((category) => {\n          category.SubCategories.filter((subCat) => {\n            personalDataCollected.filter((selectedSubCat) => {            \n              if (subCat.DataSubCategoryID === selectedSubCat.DataSubCategoryID) {\n                subCat.IsChecked = true;\n                this.selectedDataSubCategory.push(subCat);\n              }\n            });\n          });\n        });\n      }\n  \n      // STEP FOUR\n      const purpose: any = this.application['Purpose'];\n      let purpose_arr: any[] = [];\n      let _selectedDataPurposes: DataPurposes[]  = [];\n  \n      purpose.filter((item) => {\n        if (item.DataPurposeID === 1) {\n          this.SpecifyTheLaw = true;\n          this.formPurposeRetention.get('SpecifyTheLaw').setValidators([Validators.required]);\n        }\n  \n        if (item.DataPurposeID === 3) {\n          this.ServiceOrProductProvided = true;\n          this.formPurposeRetention.get('ServiceOrProductProvided').setValidators([Validators.required]);\n        }\n  \n        if (item.DataPurposeID === 6) {\n          this.SpecifyLegalObligation = true;\n          this.formPurposeRetention.get('SpecifyLegalObligation').setValidators([Validators.required]);\n        }\n  \n        purpose_arr.push(item.DataPurposeID);\n  \n        _selectedDataPurposes.push(item);\n      });\n      \n      this.formPurposeRetention.get('Purpose').patchValue(purpose_arr);\n      this.selectedDataPurposes = _selectedDataPurposes;\n  \n      this.formPurposeRetention.get('SpecifyTheLaw').patchValue(this.application['SpecifyTheLaw']);\n      this.formPurposeRetention.get('ServiceOrProductProvided').patchValue(this.application['ServiceOrProductProvided']);\n      this.formPurposeRetention.get('SpecifyLegalObligation').patchValue(this.application['SpecifyLegalObligation']);\n      this.formPurposeRetention.get('TotalRecordsAtRegistration').patchValue(this.application['TotalRecordsAtRegistration']);\n      this.formPurposeRetention.get('RecordPercentageGrowth').patchValue(this.application['RecordPercentageGrowth']);\n      this.formPurposeRetention.get('RetentionPeriod').patchValue(this.application['RetentionPeriod']);\n  \n      // STEP FIVE\n      this.formThirdParties.get('PersonalDataIsForDisclosure').patchValue(this.application['PersonalDataIsForDisclosure'].replace(/\\s/g, ''));\n      this.thirdParties = this.application['ThirdParties'];\n      this.thirdPartyDataSource = new MatTableDataSource(this.thirdParties);\n  \n      setTimeout(() => {\n        this.thirdPartyDataSource.paginator = this.thirdPartyPaginator;\n        this.thirdPartyDataSource.sort = this.thirdPartyMatSort;\n      });\n  \n      this.formThirdParties.get('StoreDataOutsideCountry').patchValue(this.application['StoreDataOutsideCountry']);\n      this.countriesOfTransfer = this.application['Countries'];\n      this.countriesDataSource = new MatTableDataSource(this.countriesOfTransfer);\n  \n      setTimeout(() => {\n        this.countriesDataSource.paginator = this.countryOfTransferPaginator;\n        this.countriesDataSource.sort = this.countryOfTransferMatSort;\n      });\n  \n      // STEP SIX\n      this.securityMeasures = this.application['SecurityMeasures'];\n      this.securityMeasureDataSource = new MatTableDataSource(this.securityMeasures);\n      setTimeout(() => {\n          this.securityMeasureDataSource.paginator = this.securityMeasurePaginator;\n          this.securityMeasureDataSource.sort = this.securityMeasureMatSort;\n      });\n  \n      if (this.application.Attachment) {\n        this.document = { \n          Document: null, \n          Name: 'Supporting Documentation.pdf', \n          Size: null, \n          Base64: this.application.Attachment \n        };\n      }\n  \n      if (this.application.Form3Attachment) {\n        this.documentForm3 = { \n          Document: null, \n          Name: 'Form 3.pdf', \n          Size: null, \n          Base64: this.application.Form3Attachment \n        };\n      }\n  \n      if (this.application.ProofOfPayment) {\n        this.proofOfPayment = {\n            Document: null, \n            Name: 'Proof of Payment.pdf', \n            Size: null, \n            Base64: this.application.ProofOfPayment \n        };\n      }\n  \n      this.formSecurityMeasures.get('RegistrationConsent').patchValue(this.application['RegistrationConsent'] == true ? true : null);\n      this.formSecurityMeasures.get('RegistrationDoneBy').patchValue(this.application['RegistrationDoneBy']);    \n    \n  }\n\n  onSubmit(): void {\n      this.processing = true;\n      // console.log('save the registration information:', this.getFormData());\n\n      this.httpSub = this.http.post<ApiPayload>(this.endpoints.orgRegistration, this.getFormData())\n          .pipe(catchError(this.service.handleError))\n          .subscribe((response) => {\n\n              // console.log('response:', response);\n\n              // Clear all the form Data\n\n              // console.log('response:', response);\n              // Show the dialog window for processing payment.\n\n              this.dialogRef = this.dialog.open(SuccessfulMessageDialogComponent, {\n                  panelClass: ['successful-message-dialog', 'dialogs'],\n                  disableClose: true,\n                  data: {\n                      title: response.message['title'],\n                      message: response.message['body'],\n                      status: response.code === 200 ? true : false,\n                  }\n              });\n\n              this.dialogRef.afterClosed().subscribe(() => {\n                  window.location.reload();\n              });\n\n              this.processing = false;\n          }, (error) => {\n              this.processing = false;\n\n              if (error.error.message) {\n                  this.dialogRef = this.dialog.open(SuccessfulMessageDialogComponent, {\n                      panelClass: ['successful-message-dialog', 'dialogs'],\n                      disableClose: true,\n                      data: {\n                          title: error.error.message['title'],\n                          message: error.error.message['body'],\n                          status: false,\n                      }\n                  });\n              } else {\n                  this.service.determineErrorResponse(error);\n              }\n          });\n  }\n\n  onSubmitRequestedInfor(): void {\n      this.processing = true;\n      // console.log('save the registration information:', this.getFormData());\n\n      this.httpSub = this.http.put<ApiPayload>(this.endpoints.orgRegistration, this.getFormData())\n          .pipe(catchError(this.service.handleError))\n          .subscribe((response) => {\n\n              this.dialogRef = this.dialog.open(SuccessfulMessageDialogComponent, {\n                  panelClass: ['successful-message-dialog', 'dialogs'],\n                  disableClose: true,\n                  data: {\n                      title: response.message['title'],\n                      message: response.message['body'],\n                      status: response.code === 200 ? true : false,\n                  }\n              });\n\n              this.dialogRef.afterClosed().subscribe(() => {\n                  // window.location.reload();\n                  // this.getDataFromMultipleRequests();\n                  this.route.navigate(['/company-registration/find']);\n              });\n\n              this.processing = false;\n          }, (error) => {\n              this.processing = false;\n\n              if (error.error.message) {\n                  this.dialogRef = this.dialog.open(SuccessfulMessageDialogComponent, {\n                      panelClass: ['successful-message-dialog', 'dialogs'],\n                      disableClose: true,\n                      data: {\n                          title: error.error.message['title'] ? error.error.message['title'] : 'Operation Failed',\n                          message: error.error.message['body'] ? error.error.message['body'] : environment.technicalErrorResponse,\n                          status: false,\n                      }\n                  });\n              } else {\n                  this.service.determineErrorResponse(error);\n              }\n          });\n  }\n\n  ngOnDestroy(): void {\n      if (this.httpSub) { this.httpSub.unsubscribe(); }\n      if (this.bottomsheetRef) { this.bottomsheetRef.dismiss(); }\n  }\n\n  // DisableByStatus\n  disableByStatus() {\n      if ((this.isApplicant && this.application &&\n              this.application.CurrentStepName !== 'Application Review - Legal' &&\n              this.application.CurrentStepName !== 'Application Review - Legal' &&\n              this.application.CurrentStepName !== 'Final Approver' &&\n              this.application.CurrentStepName !== 'Application Review - Technical' &&\n              this.application.CurrentStepName !== 'Certificate Issued') ||\n          (!this.isApplicant)) {\n          this.disableAllControls();\n      }\n  }\n\n  disableAllControls() {\n      this.formSecurityMeasures.disable();\n      this.formGeneralInformation.disable();\n      this.formOrganisationDetails.disable();\n      this.formPersonalDataHeld.disable();\n      this.formPurposeRetention.disable();\n      this.formThirdParties.disable();\n  }\n\n \n\n  \n\n \n\n\n\n  viewApplicationTimeLine() {\n      this.dialog.open(ApplicationTimelineComponent, {\n          width: '941px',\n          height: '595px',\n          data: this.workflowTimeLine\n      });\n  }\n\n \n\n  onReadDocument(document: FileUpload): void {\n      // console.log('document:', document);\n      this.bottomsheetRef = this.bottomsheet.open(ViewPdfDocumentBottomsheetComponent, {\n          disableClose: true,\n          panelClass: ['view-pdf-document-bottomsheet', 'bottomsheets'],\n          data: {\n            url: document.Base64,\n            title: document.Name\n          }\n      });      \n  }\n\n  getSelectedPurpose(): string {\n      let _purpose = '';\n      this.selectedDataPurposes.filter((item, index: number) => {\n          _purpose += (index > 0 ? ', ' : '') +  item.DataPurpose \n      });\n\n      return _purpose;\n  }\n\n  getSelectedNatureOfBusinessSubCat(): string {\n      let _subcategories = '';\n      this.selectedNatureOfBusinessSubCat.filter((item, index: number) => {\n          _subcategories += (index > 0 ? ', ' : '') +  item.NatureOfBusinessSubCategoryName \n      });\n\n      return _subcategories;\n  }\n\n\n  forwardToLegal(){\n\n    const dialogRef = this.dialog.open(UpdateRegistrationComponent, {\n      width: '500px',\n      height: '200px',\n      data: {\n          Status: 8,   \n          OrganisationID : this.OrgID\n          \n      }     \n  });\n\n    \n  }\n\n  approveRegistrationDetailsUpdate(){\n\n    const dialogRef = this.dialog.open(UpdateRegistrationComponent, {\n      width: '500px',\n      height: '200px',\n      data: {\n          Status: 'approved',   \n          OrganisationID : this.OrgID,\n          data : this.new_data\n\n          \n      }     \n  });\n  }\n\n}\n","\n<fury-page-layout mode=\"card\">\n    <fury-page-layout-header>\n        <fury-breadcrumbs \n            [@fadeInRight] \n            [crumbs]=\"[application ? application.OrganisationName : 'New Application']\"\n            [current]=\" application ? application.RegTrackingNo : 'New Application' \">\n        </fury-breadcrumbs>\n    </fury-page-layout-header>\n\n    <fury-page-layout-content [@fadeInUp]>\n        \n        <div class=\"actions-button-padding\">\n            <mat-toolbar>    \n                <mat-toolbar-row>\n                    \n\n                    <span class=\"example-spacer\"></span>\n\n                    <button *ngIf=\"CurrentStepID === 7\"\n                    mat-raised-button \n                    matTooltip=\"Forward to legal\" \n                    class=\"actions-button-padding\" \n                    color=\"primary\" \n                    (click)=\"forwardToLegal()\">\n                    <span>Forward to legal</span>\n                    </button>\n\n                    <button *ngIf=\"CurrentStepID === 8\"\n                    mat-raised-button \n                    matTooltip=\"Approve Update\" \n                    class=\"actions-button-padding\" \n                    color=\"primary\" \n                    (click)=\"approveRegistrationDetailsUpdate()\">\n                    <span>Approve Changes</span>\n                    </button>\n\n                </mat-toolbar-row>\n            </mat-toolbar>\n        </div>\n\n        <main class=\"fadeInUp _delay4ms\">\n\n            <!-- <app-page-breadcrumb [title]=\"'Application for New Registration / Renewal'\"></app-page-breadcrumb> -->\n        \n            <mat-horizontal-stepper \n                [linear]=\"isLinear\"\n                [selectedIndex]=\"selectedIndex\"\n                labelPosition=\"bottom\" #stepper>\n        \n                <mat-step [stepControl]=\"formGeneralInformation\">\n                    <ng-template matStepLabel>\n                        <h3>Applicant</h3>\n\n                        <span class=\"request-for-more-info-count\" *ngIf=\"formFieldSections[0].Count\">{{ formFieldSections[0].Count }}</span>\n                    </ng-template>\n        \n                    <form [formGroup]=\"formGeneralInformation\">\n                        <h1 class=\"full-width step-header\">Details of the applicant which could be an organisation or Individual that collects or processes Personal Data </h1>\n        \n                        <mat-form-field>\n                            <mat-label>Name of Organisation <span class=\"required-field\">required</span></mat-label>\n                            <input appUppercase matInput formControlName=\"OrganizationName\">       \n                            <mat-error *ngIf=\"formGeneralInformation.get('OrganizationName').invalid\">{{ getOrganizationNameErrorMessage() }}</mat-error>\n                        </mat-form-field>  \n        \n                        <!-- <mat-form-field [hintLabel]=\"'Data Protection & Privacy Act Categories'\"> -->\n                        <!-- <mat-form-field [hintLabel]=\"'Are you a Data Collector/ Data Processor / Data Controller ?'\"> -->\n                        <mat-form-field [hintLabel]=\"'Choose all that apply'\">\n                            <mat-label>Category <span class=\"required-field\">required</span></mat-label>\n                            <mat-select multiple formControlName=\"DPPActCategory\">\n                                <mat-option *ngFor=\"let cat of organisationCategories\" [value]=\"cat.OrganisationCategoryId\">\n                                    {{ cat.OrganisationCategoryName }}\n                                </mat-option>\n                            </mat-select>   \n                            <mat-error *ngIf=\"formGeneralInformation.get('DPPActCategory').invalid\">{{ getSelectErrorMessage() }}</mat-error> \n                        </mat-form-field>                             \n        \n                        <mat-form-field>\n                            <mat-label>Type of Organisation <span class=\"required-field\">required</span></mat-label>\n                            <mat-select formControlName=\"OrganizationTypeID\" #typeOfOrganisation>\n                                <mat-option *ngFor=\"let type of organisationTypes\" (click)=\"OrganizationType = type.OrganisationType\" [value]=\"type.OrganisationTypeID\">\n                                    {{ type.OrganisationType }}\n                                </mat-option>\n                            </mat-select>\n                            <mat-error *ngIf=\"formGeneralInformation.get('OrganizationTypeID').invalid\">{{ getSelectErrorMessage() }}</mat-error> \n                        </mat-form-field>                   \n        \n                        <mat-form-field *ngIf=\"typeOfOrganisation.value && typeOfOrganisation.value !== 4\">\n                            <mat-label>Country of Incorporation <span class=\"required-field\">required</span></mat-label>\n                            <mat-select formControlName=\"CountryOfIncorporation\">\n                                <mat-option *ngFor=\"let country of countries\" (click)=\"CountryOfIncorporation = country.Name\" [value]=\"country.CountryID\">\n                                    {{ country.Name }}\n                                </mat-option>\n                            </mat-select>\n                            <mat-error *ngIf=\"formGeneralInformation.get('CountryOfIncorporation').invalid\">{{ getSelectErrorMessage() }}</mat-error> \n                        </mat-form-field>        \n        \n                        <mat-form-field *ngIf=\"typeOfOrganisation.value && typeOfOrganisation.value !== 4\">\n                            <mat-label>Registration Number <span class=\"required-field\">required</span></mat-label>\n                            <input appUppercase appRemoveSpaces matInput maxlength=\"25\" formControlName=\"URSBNumber\"> \n                            <mat-error *ngIf=\"formGeneralInformation.get('URSBNumber').invalid\">{{ getURSBNumberErrorMessage() }}</mat-error>\n                        </mat-form-field>     \n                        \n                        <mat-form-field>\n                            <mat-label>Sector <span class=\"required-field\">required</span></mat-label>\n                            <mat-select formControlName=\"SectorID\" #Sector>\n                                <mat-option *ngFor=\"let sector of sectors\" (click)=\"SectorName = sector.Sector\" [value]=\"sector.SectorID\">\n                                    {{ sector.Sector }}\n                                </mat-option>\n                            </mat-select>\n                            <mat-error *ngIf=\"formGeneralInformation.get('SectorID').invalid\">{{ getSelectErrorMessage() }}</mat-error>\n                        </mat-form-field>        \n                        \n                        <mat-form-field hintLabel=\"If Other, Please specify the Sector.\" *ngIf=\"Sector.value === 14\">\n                            <mat-label>Specify Sector <span class=\"required-field\">required</span></mat-label>\n                            <input appUppercase matInput maxlength=\"50\" formControlName=\"OtherSector\">    \n                            <mat-error *ngIf=\"formGeneralInformation.get('OtherSector').invalid\">{{ getOtherSectorErrorMessage() }}</mat-error>\n                        </mat-form-field>                 \n        \n                        <!-- <mat-form-field *ngIf=\"formGeneralInformation.get('PublicBodyTypeID').value === '6'\">\n                            <mat-label>Type of Local Government <span class=\"required-field\">required</span></mat-label>\n                            <mat-select formControlName=\"LocalGovernmentType\">\n                                <mat-option value=\"1\">Body Corporate or otherwise established by Act of Parliament</mat-option>\n                                <mat-option value=\"2\">Cabinet</mat-option>\n                                <mat-option value=\"3\">Court</mat-option>\n                                <mat-option value=\"4\">Commission established by Act of Parliament</mat-option>\n                                <mat-option value=\"5\">Government Department</mat-option>\n                                <mat-option value=\"6\">Local Government Adminstration</mat-option>\n                            </mat-select>\n                        </mat-form-field>                    -->\n                        \n                        <!-- <mat-form-field *ngIf=\"formGeneralInformation.get('PublicBodyTypeID').value === '6'\">\n                            <mat-label>Statute <span class=\"required-field\">required</span></mat-label>\n                            <input appUppercase appRemoveSpaces matInput maxlength=\"255\" formControlName=\"Statute\">                            \n                        </mat-form-field>    \n                         -->\n                        <mat-form-field>\n                            <mat-label>Physical Address <span class=\"required-field\">required</span></mat-label>\n                            <input appUppercase matInput maxlength=\"255\" formControlName=\"Location\">            \n                            <mat-error *ngIf=\"formGeneralInformation.get('Location').invalid\">{{ getLocationErrorMessage() }}</mat-error>                \n                        </mat-form-field>  \n        \n                        <!-- <mat-form-field>\n                            <mat-label>Name of Head of Organisation <span class=\"required-field\">required</span></mat-label>\n                            <input appUppercase appRemoveSpaces matInput maxlength=\"255\" formControlName=\"HeadOfOrganization\">                            \n                        </mat-form-field>    \n        \n                        <mat-form-field>\n                            <mat-label>Title of Head of Organisation <span class=\"required-field\">required</span></mat-label>\n                            <input appUppercase appRemoveSpaces matInput maxlength=\"255\" formControlName=\"TitleOfOrganizationHead\">                            \n                        </mat-form-field>     -->\n        \n                        <!-- <mat-form-field>\n                            <mat-label>Postal Address <span class=\"optional-field\">optional</span></mat-label>\n                            <input appUppercase appRemoveSpaces matInput maxlength=\"255\" formControlName=\"PostalAddress\">                            \n                        </mat-form-field>     -->\n        \n                        <!-- Improve the country code to be dynamic -->\n                        <!-- <mat-form-field>\n                            <span matPrefix>+256 &nbsp;</span>\n                            <mat-label>Organisation Telephone Number <span class=\"required-field\">required</span></mat-label>\n                            <input appTelephoneFormaterDirective maxlength=\"11\" matInput formControlName=\"PhoneNumber\">           \n                        </mat-form-field>    -->\n        \n                        <div class=\"telephone-code-number-wrapper\">\n                            <mat-form-field class=\"fadeInUp _delay2ms\">\n                                <mat-label>Pick one </mat-label>\n                                <mat-select formControlName=\"PhoneNumberCode\">\n                                    <mat-option selected *ngIf=\"!selected\" value=\"256\">+256</mat-option>\n                                    <!-- <mat-option selected *ngIf=\"!selected\" value=\"256\">+256 - Uganda</mat-option> -->\n                                    <mat-option *ngFor=\"let code of countries\" [value]=\"code.PhoneCode\" (click)=\"selected = true\">\n                                        +{{ code.PhoneCode }}\n                                    </mat-option>\n                                </mat-select>\n                            </mat-form-field>\n        \n                            <!-- <mat-form-field class=\"fadeInUp _delay2ms\" [hintLabel]=\"'Organisation Telephone Number.'\"> -->\n                            <mat-form-field class=\"fadeInUp _delay2ms\">\n                                <mat-label>Organisation Telephone Number <span class=\"required-field\">required</span></mat-label>\n                                <input type=\"text\" maxlength=\"11\" matInput appTelephoneFormaterDirective formControlName=\"PhoneNumber\" placeholder=\"Ex. 414 318 111\">\n                                <mat-error *ngIf=\"formGeneralInformation.get('PhoneNumber').invalid\">{{ getTelephoneNumberErrorMessage() }}</mat-error>\n                            </mat-form-field> \n                        </div>                \n        \n                        <!-- <mat-form-field>\n                            <span matPrefix>+256 &nbsp;</span>\n                            <mat-label>Land Line <span class=\"optional-field\">optional</span></mat-label>\n                            <input appTelephoneFormaterDirective maxlength=\"11\" matInput formControlName=\"Landline\">           \n                        </mat-form-field>    -->\n        \n                        <mat-form-field>\n                            <mat-label>Organisation Email Address <span class=\"required-field\">required</span></mat-label>\n                            <input appRemoveSpaces matInput formControlName=\"EmailAddress\">\n                            <mat-error *ngIf=\"formGeneralInformation.get('EmailAddress').invalid\">{{ getEmailAddressErrorMessage() }}</mat-error>\n                        </mat-form-field>   \n        \n                        <!-- <mat-form-field hintLabel=\"Select all the roles performed\">\n                            <mat-label>Nature of Business <span class=\"required-field\">required</span></mat-label>\n                            <mat-select multiple formControlName=\"RolesPerformedID\">\n                                <mat-option value=\"1\">Protection of National Security</mat-option>\n                                <mat-option value=\"2\">Public revenue collection</mat-option>\n                                <mat-option value=\"3\">Enforcement of law which imposes a pecuniary penalty</mat-option>\n                                <mat-option value=\"4\">Conduct proceedings before any court</mat-option>\n                            </mat-select>    \n                        </mat-form-field>     -->\n        \n                        <mat-form-field>\n                            <mat-label>Nature of Business Categories<span class=\"required-field\">required</span></mat-label>\n                            <mat-select formControlName=\"NatureOfBusinessCat\">\n                                <mat-option *ngFor=\"let cat of natureOfBusinessCat\" (click)=\"NatureOfBusinessCat = cat.NatureOfBusinessCategoryName\" [value]=\"cat.NatureOfBusinessCatId\">\n                                    {{ cat.NatureOfBusinessCategoryName }}\n                                </mat-option>\n                            </mat-select>    \n                            <mat-error *ngIf=\"formGeneralInformation.get('NatureOfBusinessCat').invalid\">{{ getSelectErrorMessage() }}</mat-error>\n                        </mat-form-field>                   \n        \n                        <mat-form-field [hintLabel]=\"'Choose all that apply'\" *ngIf=\"_hasRequestMoreInfo && !isOfficer && formGeneralInformation.get('NatureOfBusinessSubCat').enabled\">\n                            <mat-label>Nature of Business Sub-Categories <span class=\"required-field\">required</span></mat-label>\n                            <mat-select multiple formControlName=\"NatureOfBusinessSubCat\">\n                                <mat-option *ngFor=\"let sub of natureOfBusinessSubCat\" [value]=\"sub.NatureOfBusinessSubCatId\" [matTooltip]=\"sub.NatureOfBusinessSubCategoryName\">\n                                    {{ sub.NatureOfBusinessSubCategoryName }}\n                                </mat-option>\n                            </mat-select> \n                            <mat-error *ngIf=\"formGeneralInformation.get('NatureOfBusinessSubCat').invalid\">{{ getSelectErrorMessage() }}</mat-error>   \n                        </mat-form-field>      \n                        \n                        <!-- For viewing purposes only -->\n                        <mat-form-field class=\"span-2-columns\" [hintLabel]=\"'Choose all that apply'\" *ngIf=\"!_hasRequestMoreInfo || (_hasRequestMoreInfo && formGeneralInformation.get('NatureOfBusinessSubCat').disabled) || isOfficer\">\n                            <mat-label>Nature of Business Sub-Categories ?<span class=\"required-field\">required</span></mat-label>\n                            <textarea matInput [value]=\"getSelectedNatureOfBusinessSubCat()\" disabled class=\"textarea-small\"></textarea>\n                        </mat-form-field>                          \n        \n                        <!-- <mat-form-field class=\"full-width\" hintLabel=\"What are the main activities of the organisation ?\">\n                            <mat-label>Nature of Business<span class=\"required-field\">required</span></mat-label>\n                            <textarea #CaseTitleInput matInput maxlength=\"1000\" formControlName=\"NatureOfBusiness\" placeholder=\"\"></textarea>\n                            <mat-hint align=\"end\">{{ CaseTitleInput.value.length }} / 1000</mat-hint>\n                        </mat-form-field>                      -->\n                        \n                        <!-- <section class=\"expand-section reduced-properties table-wrapper\">\n                            <button \n                                mat-button\n                                color=\"primary\"\n                                [disabled]=\"processing\"\n                                class=\"add-item-button\"\n                                (click)=\"onAddMainActivity()\">\n                                <div class=\"button-label\">\n                                    <mat-icon>add</mat-icon>                            \n                                    <span>Add A Main Activity</span>\n                                </div>\n                            </button>\n        \n                            <p class=\"description\">What are the main activities of the organisation ?</p>\n                            \n                            <div class=\"table-wrapper\">\n                                <table \n                                    mat-table \n                                    #dpoMatSort=\"matSort\"\n                                    matSortDisableClear=\"true\"\n                                    [dataSource]=\"mainActivitiesDataSource\"\n                                    matSort>\n                    \n                                    <ng-container matColumnDef=\"Count\">\n                                        <th mat-header-cell *matHeaderCellDef> # </th>\n                                        <td mat-cell *matCellDef=\"let index = index\"> {{ index + 1 }} </td>\n                                    </ng-container>\n                    \n                                    <ng-container matColumnDef=\"MainActivity\">\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Main Activities </th>\n                                        <td mat-cell *matCellDef=\"let row\">{{ row.Activity }}</td>\n                                    </ng-container>                      \n                    \n                                    <ng-container matColumnDef=\"Actions\">\n                                        <th mat-header-cell *matHeaderCellDef> Actions </th>\n                                        <td mat-cell *matCellDef=\"let row; let index = index\">\n                                            <button \n                                                mat-button \n                                                class=\"action-btn\"\n                                                [matMenuTriggerFor]=\"menu\" \n                                                (click)=\"$event.stopPropagation()\"\n                                                matTooltip=\"See more options\">\n                                                <mat-icon>more_vert</mat-icon>\n                                            </button>\n                    \n                                            <mat-menu yPosition=\"below\" #menu=\"matMenu\" class=\"more-options-mat-menu\">\n                    \n                                                <button \n                                                    mat-menu-item \n                                                    (click)=\"$event.stopPropagation();onEditMainActivity(row)\">\n                                                    <mat-icon>edit</mat-icon>\n                                                    <span>Make Changes</span>\n                                                </button>\n                                                      \n                                                <hr />\n                    \n                                                <button \n                                                    mat-menu-item \n                                                    (click)=\"$event.stopPropagation();onRemoveMainActivity(row)\">\n                                                    <mat-icon color=\"warn\">delete</mat-icon>\n                                                    <span>Remove</span>\n                                                </button>\n                    \n                                            </mat-menu>                                                  \n                                        </td>\n                                    </ng-container>\n                    \n                                    <tr mat-header-row *matHeaderRowDef=\"MainActivitiesDisplayedColumns\"></tr>\n                                    <tr mat-row *matRowDef=\"let row; columns: MainActivitiesDisplayedColumns;\" class=\"mat-data-row\"></tr>\n                                </table>\n        \n                                <mat-paginator \n                                    #dpoPaginator\n                                    [pageSize]=\"10\"\n                                    [pageSizeOptions]=\"[5, 10]\">\n                                </mat-paginator>                    \n                            </div>                \n                        </section>                      -->\n                        \n                    </form>\n        \n                    <div class=\"button-wrapper single-button\">\n                        <button  *ngIf=\"!isViewOnly\"\n                            mat-button \n                            color=\"primary\" >\n                            Save as Draft\n                        </button>       \n        \n                        <button \n                            [disabled]=\"formGeneralInformation.invalid\"\n                            mat-button \n                            class=\"next-btn\" \n                            color=\"primary\" \n                            matStepperNext>\n                            Next\n                        </button>\n                    </div>             \n                </mat-step>\n        \n                <mat-step [stepControl]=\"formOrganisationDetails\">\n                    <ng-template matStepLabel>\n                        <h3>Data Protection <br />Officer</h3>\n\n                        <span class=\"request-for-more-info-count\" *ngIf=\"formFieldSections[1].Count\">{{ formFieldSections[1].Count }}</span>\n                    </ng-template>\n        \n                    <form [formGroup]=\"formOrganisationDetails\">     \n        \n                        <h1 class=\"full-width step-header\">Details of Data Protection Officer </h1>    \n                        \n                        <!-- If yes... all the fields should be required. -->\n        \n                        <div class=\"grouped-items\" [ngClass]=\"{'full-width': formOrganisationDetails.get('DPORequired').value !== 'Yes'}\">\n                            <h3>Do you have a designated data protection officer ? </h3>\n        \n                            <mat-radio-group \n                                color=\"primary\" \n                                formControlName=\"DPORequired\" \n                                aria-label=\"Pick one\">\n                                <mat-radio-button [ngClass]=\"{'selected-radio-btn': formOrganisationDetails.get('DPORequired').value === 'Yes' }\" value=\"Yes\">Yes</mat-radio-button>\n                                <mat-radio-button [ngClass]=\"{'selected-radio-btn': formOrganisationDetails.get('DPORequired').value === 'No' }\" value=\"No\">No</mat-radio-button>\n                            </mat-radio-group>        \n                        </div>                  \n                        \n                        <mat-form-field *ngIf=\"formOrganisationDetails.get('DPORequired').value === 'Yes'\">\n                            <mat-label>Name <span class=\"required-field\">required</span></mat-label>\n                            <input formControlName=\"DPOName\" matInput>\n                            <mat-error *ngIf=\"formOrganisationDetails.get('DPOName').invalid\">{{ getDPONameErrorMessage() }}</mat-error>\n                        </mat-form-field>\n                \n                        <mat-form-field *ngIf=\"formOrganisationDetails.get('DPORequired').value === 'Yes'\">\n                            <mat-label>Physical Address <span class=\"required-field\">required</span></mat-label>\n                            <input formControlName=\"DPOPhysicalAddress\" maxlength=\"255\" matInput>\n                            <mat-error *ngIf=\"formOrganisationDetails.get('DPOPhysicalAddress').invalid\">{{ getDPOPhysicalAddressErrorMessage() }}</mat-error>\n                        </mat-form-field>\n        \n                        <!-- <mat-form-field >\n                            <span matPrefix>+256 &nbsp;</span>\n                            <mat-label>Telephone Number <span class=\"required-field\">required</span></mat-label>\n                            <input appTelephoneFormaterDirective maxlength=\"11\" matInput formControlName=\"DPOPhoneNumber\">           \n                        </mat-form-field>  -->\n                        \n                        <div class=\"telephone-code-number-wrapper\" *ngIf=\"formOrganisationDetails.get('DPORequired').value === 'Yes'\">\n                            <mat-form-field class=\"fadeInUp _delay2ms\">\n                                <mat-label>Pick one </mat-label>\n                                <mat-select formControlName=\"PhoneNumberCode\">\n                                    <mat-option selected *ngIf=\"!DPOSelected\" value=\"256\">+256</mat-option>\n                                    <!-- <mat-option selected *ngIf=\"!selected\" value=\"256\">+256 - Uganda</mat-option> -->\n                                    <mat-option *ngFor=\"let code of countries\" [value]=\"code.PhoneCode\" (click)=\"DPOSelected = true\">\n                                        +{{ code.PhoneCode }}\n                                    </mat-option>\n                                </mat-select>\n                                <!-- <mat-error *ngIf=\"formGeneralInformation.get('PhoneNumberCode').invalid\">{{ getSelectInputErrorMessage() }}</mat-error>      -->\n                            </mat-form-field>\n        \n                            <!-- <mat-form-field class=\"fadeInUp _delay2ms\" [hintLabel]=\"'Organisation Telephone Number.'\"> -->\n                            <mat-form-field class=\"fadeInUp _delay2ms\">\n                                <mat-label>Telephone Number <span class=\"required-field\">required</span></mat-label>\n                                <input type=\"text\" maxlength=\"11\" matInput appTelephoneFormaterDirective formControlName=\"DPOPhoneNumber\" placeholder=\"Ex. 414 318 111\">\n                                <mat-error *ngIf=\"formOrganisationDetails.get('DPOPhoneNumber').invalid\">{{ getDPOPhoneNumberErrorMessage() }}</mat-error>\n                            </mat-form-field> \n                        </div>                  \n                \n                        <mat-form-field *ngIf=\"formOrganisationDetails.get('DPORequired').value === 'Yes'\">\n                            <mat-label>Email Address <span class=\"required-field\">required</span></mat-label>\n                            <input appRemoveSpaces formControlName=\"DPOEmailAddress\" matInput>\n                            <mat-error *ngIf=\"formOrganisationDetails.get('DPOEmailAddress').invalid\">{{ getDPOEmailAddressErrorMessage() }}</mat-error>\n                        </mat-form-field>       \n        \n                        <mat-form-field *ngIf=\"formOrganisationDetails.get('DPORequired').value === 'Yes'\" class=\"full-width\" hintLabel=\"Any other title held apart from DPO (Data Protection Officer).\">\n                            <mat-label>Title Held <span class=\"required-field\">required</span></mat-label>\n                            <textarea #PositionInput matInput formControlName=\"DPOPositionInOrganisation\" maxlength=\"1000\"></textarea>\n                            <mat-hint align=\"end\">{{ PositionInput.value.length }} / 1000</mat-hint>\n                            <mat-error *ngIf=\"formOrganisationDetails.get('DPOPositionInOrganisation').invalid\">{{ getDPOPositionInOrganisationErrorMessage() }}</mat-error>\n                        </mat-form-field>                  \n                    </form>\n        \n                    <div class=\"button-wrapper\">       \n                        <button mat-button class=\"back-btn\" matStepperPrevious>Back</button>   \n                        <button  *ngIf=\"!isViewOnly\"\n                            mat-button \n                            color=\"primary\" >\n                            Save as Draft\n                        </button>  \n                        <button \n                            [disabled]=\"formOrganisationDetails.invalid\"\n                            mat-button \n                            class=\"next-btn\" \n                            color=\"primary\" \n                            matStepperNext>\n                            Next\n                        </button>\n                    </div>             \n                </mat-step>\n        \n                <mat-step [stepControl]=\"formPersonalDataHeld\">\n                    <ng-template matStepLabel>\n                        <h3>Data Collected <br /> or Processed</h3>\n\n                        <span class=\"request-for-more-info-count\" *ngIf=\"formFieldSections[2].Count\">{{ formFieldSections[2].Count }}</span>\n                    </ng-template>\n        \n                    <form [formGroup]=\"formPersonalDataHeld\" class=\"personal-data-affected\">       \n                        \n                        <h1 class=\"full-width step-header\">Description of Data collected or processed </h1>\n        \n                        <mat-form-field hintLabel=\"Choose all that apply.\" class=\"full-width\">\n                            <mat-label>Source of Data <span class=\"required-field\">required</span></mat-label>\n                            <mat-select multiple formControlName=\"SourceOfDataID\">\n                                <mat-option *ngFor=\"let source of dataSources\" [value]=\"source.DataSourceID\">\n                                    {{ source.DataSource }}\n                                </mat-option>\n                            </mat-select>    \n                            <mat-error *ngIf=\"formPersonalDataHeld.get('SourceOfDataID').invalid\">{{ getSelectErrorMessage() }}</mat-error> \n                        </mat-form-field>        \n                        \n                        <!-- <div class=\"grouped-items\" class=\"span-2-columns\">\n                            <h3>Do you collect personal data relating to Children?</h3>\n            \n                            <mat-radio-group color=\"primary\" aria-label=\"Pick one\" formControlName=\"CollectChildrenData\">\n                                <mat-radio-button value=\"Yes\">Yes</mat-radio-button>\n                                <mat-radio-button value=\"No\">No</mat-radio-button>\n                            </mat-radio-group>        \n                        </div>   -->\n        \n                        <!-- <mat-form-field class=\"full-width personal-data-affected-field\" hintLabel=\"Choose all that apply\">\n                            <mat-label>Personal Data Collected Or Processed <span class=\"required-field\">required</span></mat-label>\n                            <mat-select [formControl]=\"dataCategory\" multiple>\n                                <mat-option \n                                    *ngFor=\"let category of dataCategories\" \n                                    [value]=\"category.Name\">\n                                    {{ category.Name }}\n                            </mat-option>\n                            </mat-select>\n                        </mat-form-field> -->\n        \n                        <h1 class=\"full-width heading\">Personal Data Collected Or Processed</h1>\n                        \n                        <section \n                            *ngFor=\"let category of dataCategories; let i = index\" \n                            class=\"expand-section categories\">        \n\n                            <div>\n                                <h3 [innerHTML]=\"category.DataCategory\"></h3>\n                                <mat-icon matTooltipPosition=\"right\"  [matTooltip]=\"category.DataDescription\">info</mat-icon>\n                            </div>\n\n                            <mat-checkbox [disabled]=\"isViewOnly && !personalDataCollectedCheckBoxEnabled\"\n                                *ngFor=\"let SubCategory of category.SubCategories\" \n                                [ngClass]=\"{'full-width': category.SubCategories.length === 1, 'selected-checkbox': SubCategory.IsChecked}\"\n                                color=\"primary\"\n                                [checked]=\"SubCategory.IsChecked\"\n                                (change)=\"onChangeSubCategory($event,SubCategory)\"\n                                [required]=\"'false'\">\n                                {{ SubCategory.DataSubCategory }}\n                            </mat-checkbox>\n                            \n                        </section>                            \n                    </form>\n        \n                    <div class=\"button-wrapper\">       \n                        <button mat-button class=\"back-btn\" matStepperPrevious>Back</button>\n        \n                        <button *ngIf=\"!isViewOnly\"\n                            mat-button \n                            color=\"primary\" >\n                            Save as Draft\n                        </button> \n\n                        <button \n                            [disabled]=\"formPersonalDataHeld.invalid || selectedDataSubCategory.length === 0\"\n                            mat-button \n                            class=\"next-btn\" \n                            color=\"primary\" \n                            matStepperNext>\n                            Next\n                        </button>\n                    </div>             \n                </mat-step>\n        \n                <mat-step [stepControl]=\"formPurposeRetention\">\n                    <ng-template matStepLabel>\n                        <h3>Purpose & Retention</h3>\n\n                        <span class=\"request-for-more-info-count\" *ngIf=\"formFieldSections[3].Count\">{{ formFieldSections[3].Count }}</span>\n                    </ng-template>\n        \n                    <form [formGroup]=\"formPurposeRetention\">       \n                        \n                        <h1 class=\"full-width step-header\">Description of Purpose for which data is collected or processed </h1>\n        \n                        <!-- <mat-form-field hintLabel=\"Why do you collect personal Data?\">\n                            <mat-label>For What Purpose ?<span class=\"required-field\">required</span></mat-label>\n                            <mat-select formControlName=\"Purpose\" multiple>\n                                <mat-option *ngFor=\"let purpose of dataPurposes\" [value]=\"purpose.DataPurposeID\">\n                                    {{ purpose.DataPurpose }}\n                                </mat-option>\n                            </mat-select>  \n                            <mat-error *ngIf=\"formPurposeRetention.get('Purpose').invalid\">{{ getSelectErrorMessage() }}</mat-error>   \n                        </mat-form-field> -->\n        \n                        <!-- For editing purposes only -->\n                        <mat-form-field *ngIf=\"_hasRequestMoreInfo && !isOfficer && formPurposeRetention.get('Purpose').enabled\" hintLabel=\"Why do you collect personal Data?\">\n                            <mat-label>For What Purpose ?<span class=\"required-field\">required</span></mat-label>\n                            <mat-select formControlName=\"Purpose\" multiple>\n                                <mat-option *ngFor=\"let purpose of dataPurposes\" [value]=\"purpose.DataPurposeID\">\n                                    {{ purpose.DataPurpose }}\n                                </mat-option>\n                            </mat-select>  \n                            <mat-error *ngIf=\"formPurposeRetention.get('Purpose').invalid\">{{ getSelectErrorMessage() }}</mat-error>   \n                        </mat-form-field>\n\n                        <!-- For viewing purposes only -->\n                        <mat-form-field class=\"full-width\" *ngIf=\"!_hasRequestMoreInfo || (_hasRequestMoreInfo && formPurposeRetention.get('Purpose').disabled) || isOfficer\" hintLabel=\"Why do you collect personal Data?\">\n                            <mat-label>For What Purpose ?<span class=\"required-field\">required</span></mat-label>\n                            <textarea matInput [value]=\"getSelectedPurpose()\" disabled class=\"textarea-small\"></textarea>\n                        </mat-form-field>   \n\n        \n                        <!-- For Edits -->\n                        <mat-form-field hintLabel=\"If the purpose is Collection / Processing is required by Law.\" *ngIf=\"SpecifyTheLaw && _hasRequestMoreInfo && !isOfficer && formPurposeRetention.get('SpecifyTheLaw').enabled\">\n                            <mat-label>Specify the Law <span class=\"required-field\">required</span></mat-label>\n                            <input matInput #SpecifyTheLawInput maxlength=\"1000\" formControlName=\"SpecifyTheLaw\">        \n                            <mat-hint align=\"end\">{{ SpecifyTheLawInput.value.length }} / 1000</mat-hint>    \n                            <mat-error *ngIf=\"formPurposeRetention.get('SpecifyTheLaw').invalid\">{{ getRequiredErrorMessage() }}</mat-error>\n                        </mat-form-field>  \n        \n                        <!-- For viewing only -->\n                        <mat-form-field class=\"full-width\" *ngIf=\"SpecifyTheLaw && (!_hasRequestMoreInfo || (_hasRequestMoreInfo && formPurposeRetention.get('SpecifyTheLaw').disabled) || isOfficer)\" hintLabel=\"If the purpose is Collection / Processing is required by Law.\">\n                            <mat-label>Specify the Law<span class=\"required-field\">required</span></mat-label>\n                            <textarea matInput formControlName=\"SpecifyTheLaw\" disabled class=\"textarea-small\"></textarea>\n                        </mat-form-field>                             \n        \n\n                        <!-- For Edits -->\n                        <mat-form-field hintLabel=\"If the purpose is to provide services / products to Individuals.\" *ngIf=\"ServiceOrProductProvided && _hasRequestMoreInfo && !isOfficer && formPurposeRetention.get('ServiceOrProductProvided').enabled\">\n                            <mat-label>Specify the Service / Product Provided<span class=\"required-field\">required</span></mat-label>\n                            <input matInput #ServiceOrProductProvidedInput maxlength=\"1000\" formControlName=\"ServiceOrProductProvided\">     \n                            <mat-hint align=\"end\">{{ ServiceOrProductProvidedInput.value.length }} / 1000</mat-hint>    \n                            <mat-error *ngIf=\"formPurposeRetention.get('ServiceOrProductProvided').invalid\">{{ getRequiredErrorMessage() }}</mat-error>\n                        </mat-form-field>  \n                        \n                        <!-- For viewing only -->\n                        <mat-form-field class=\"full-width\" *ngIf=\"ServiceOrProductProvided && (!_hasRequestMoreInfo || (_hasRequestMoreInfo && formPurposeRetention.get('ServiceOrProductProvided').disabled) || isOfficer)\" hintLabel=\"If the purpose is to provide services / products to Individuals.\">\n                            <mat-label>Specify the Service / Product Provided<span class=\"required-field\">required</span></mat-label>\n                            <textarea matInput formControlName=\"ServiceOrProductProvided\" disabled class=\"textarea-small\"></textarea>\n                        </mat-form-field>                              \n\n                        <!-- For Edits -->\n                        <mat-form-field hintLabel=\"If the purpose is for Compliance with a Legal Obligation.\" *ngIf=\"SpecifyLegalObligation && _hasRequestMoreInfo && !isOfficer && formPurposeRetention.get('SpecifyLegalObligation').enabled\">\n                            <mat-label>Specify the Legal Obligation<span class=\"required-field\">required</span></mat-label>\n                            <input matInput #SpecifyLegalObligationInput maxlength=\"50\" formControlName=\"SpecifyLegalObligation\">  \n                            <mat-hint align=\"end\">{{ SpecifyLegalObligationInput.value.length }} / 50</mat-hint>    \n                            <mat-error *ngIf=\"formPurposeRetention.get('SpecifyLegalObligation').invalid\">{{ getRequiredErrorMessage() }}</mat-error>\n                        </mat-form-field>  \n\n                        <!-- For viewing only -->\n                        <mat-form-field class=\"full-width\" *ngIf=\"SpecifyLegalObligation && (!_hasRequestMoreInfo || (_hasRequestMoreInfo && formPurposeRetention.get('SpecifyLegalObligation').disabled) || isOfficer)\" hintLabel=\"If the purpose is Collection / Processing is required by Law.\">\n                            <mat-label>Specify the Legal Obligation<span class=\"required-field\">required</span></mat-label>\n                            <textarea matInput formControlName=\"SpecifyLegalObligation\" disabled class=\"textarea-small\"></textarea>\n                        </mat-form-field>                              \n                        \n                        <mat-form-field hintLabel=\"Approximate number of Personal Data Records held.\">\n                            <mat-label>Total Records <span class=\"optional-field\">optional</span></mat-label>\n                            <input appCurrencyDirective matInput maxlength=\"14\" formControlName=\"TotalRecordsAtRegistration\">                            \n                            <mat-error *ngIf=\"formPurposeRetention.get('TotalRecordsAtRegistration').invalid\">{{ getPatternErrorMessage() }}</mat-error>\n                        </mat-form-field>  \n                        \n                        <mat-form-field hintLabel=\"The % annual growth of Personal Records held\">\n                            <mat-label>Percentage Annual Growth <span class=\"optional-field\">optional</span></mat-label>\n                            <input appCurrencyDirective matInput max=\"100\" maxlength=\"3\" formControlName=\"RecordPercentageGrowth\">                            \n                            <mat-error *ngIf=\"formPurposeRetention.get('RecordPercentageGrowth').invalid\">{{ getRecordPercentageGrowthErrorMessage() }}</mat-error>\n                            <mat-hint align=\"end\">Max. 100%</mat-hint>      \n                            <span matSuffix>%</span>\n                        </mat-form-field>   \n        \n                        <mat-form-field hintLabel=\"Duration for which personal data shall be kept (Years).\">\n                            <mat-label>Retention period <span class=\"required-field\">required</span></mat-label>\n                            <input appCurrencyDirective max=\"100\" matInput maxlength=\"3\" formControlName=\"RetentionPeriod\">                          \n                            <mat-error *ngIf=\"formPurposeRetention.get('RetentionPeriod').invalid\">{{ getRetentionPeriodErrorMessage() }}</mat-error>\n                            <mat-hint align=\"end\">Max. 100 years</mat-hint>      \n                            <span matSuffix>Year(s)</span>\n                        </mat-form-field>                            \n        \n                        <!-- <div class=\"grouped-items\">\n                            <h3>Did you get consent from the Data Subject ?</h3>\n            \n                            <mat-radio-group color=\"primary\" aria-label=\"Pick one\" formControlName=\"GetConsent\">\n                                <mat-radio-button value=\"Yes\">Yes</mat-radio-button>\n                                <mat-radio-button value=\"No\">No</mat-radio-button>\n                            </mat-radio-group>        \n                        </div>                 -->\n        \n                        <!-- <mat-form-field hintLabel=\"The nature of processing carried out on the personal data.\">\n                            <mat-label>Nature of Processing <span class=\"optional-field\">optional</span></mat-label>\n                            <mat-select multiple formControlName=\"NatureOfProcessing\">\n                                <mat-option value=\"\">Organized, adapted or altered for use in fulfilling organizations mandate and role</mat-option>\n                                <mat-option value=\"\">Data is stored and retrieved and used for internal consultation or verification</mat-option>\n                                <mat-option value=\"\">Data is disseminated or disclosed</mat-option>\n                            </mat-select>    \n                        </mat-form-field>     -->\n        \n                        <!-- <div class=\"grouped-items\">\n                            <h3>Do you process or store personal data outside Uganda ?</h3>\n            \n                            <mat-radio-group color=\"primary\" aria-label=\"Pick one\" formControlName=\"StoreDataOutsideCountry\">\n                                <mat-radio-button value=\"Yes\">Yes</mat-radio-button>\n                                <mat-radio-button value=\"No\">No</mat-radio-button>\n                            </mat-radio-group>        \n                        </div>    \n        \n                        <mat-form-field hintLabel=\"Where the personal data was obtained from.\">\n                            <mat-label>Countries <span class=\"required-field\">required</span></mat-label>\n                            <mat-select multiple formControlName=\"CountriesStoringYourData\">\n                                <mat-option value=\"1\">Kenya</mat-option>\n                                <mat-option value=\"2\">Tanzania</mat-option>\n                                <mat-option value=\"3\">United States</mat-option>\n                            </mat-select>    \n                        </mat-form-field>                     -->\n        <!--                 \n                        <section class=\"expand-section reduced-properties table-wrapper\">\n                            <h1>Identifiers</h1>\n        \n                            <mat-checkbox\n                                color=\"primary\"\n                                [required]=\"'false'\">\n                                Name\n                            </mat-checkbox>    \n        \n                            <mat-checkbox\n                                color=\"primary\"\n                                [required]=\"'false'\">\n                                Nationality\n                            </mat-checkbox>    \n        \n                            <mat-checkbox\n                                color=\"primary\"\n                                [required]=\"'false'\">\n                                Age\n                            </mat-checkbox>      \n        \n                        </section>    \n                         -->\n                        <!-- <section class=\"expand-section reduced-properties table-wrapper\">\n                            <h1>Individual Commercial Information</h1>\n        \n                            <mat-checkbox\n                                color=\"primary\"\n                                [required]=\"'false'\">\n                                Name\n                            </mat-checkbox>    \n        \n                            <mat-checkbox\n                                color=\"primary\"\n                                [required]=\"'false'\">\n                                Nationality\n                            </mat-checkbox>    \n        \n                            <mat-checkbox\n                                color=\"primary\"\n                                [required]=\"'false'\">\n                                Age\n                            </mat-checkbox>      \n        \n                        </section>     -->\n        \n                    </form>\n        \n                    <div class=\"button-wrapper\">       \n                        <button mat-button class=\"back-btn\" matStepperPrevious>Back</button>\n        \n                        <!-- <button  *ngIf=\"!isViewOnly\"\n                            mat-button \n                            color=\"primary\" >\n                            Save as Draft\n                        </button>  -->\n\n                        <button \n                            [disabled]=\"formPurposeRetention.invalid\"\n                            mat-button \n                            class=\"next-btn\" \n                            color=\"primary\" \n                            matStepperNext>\n                            Next\n                        </button>\n                    </div>             \n                </mat-step>\n                <!-- <mat-step [stepControl]=\"form\">\n                    <ng-template matStepLabel>\n                        <h3>Profile <br /></h3>\n                    </ng-template>\n        \n                    <form [formGroup]=\"form\">\n                        \n                    </form>\n        \n                    <div class=\"button-wrapper\">\n                        <button mat-button class=\"back-btn\" matStepperPrevious>Back</button>\n        \n                        <button \n                            mat-button \n                            [disabled]=\"form.invalid || processing\" \n                            class=\"next-btn\" \n                            color=\"primary\" \n                            matStepperNext>\n                            Next\n                        </button>\n                    </div>\n                </mat-step> -->\n        \n                <mat-step [stepControl]=\"formThirdParties\">\n                    <ng-template matStepLabel>\n                        <h3>Disclosure & Transfer</h3>\n\n                        <span class=\"request-for-more-info-count\" *ngIf=\"formFieldSections[4].Count\">{{ formFieldSections[4].Count }}</span>\n                    </ng-template>\n        \n                    <form [formGroup]=\"formThirdParties\">\n        \n                        <h1 class=\"full-width step-header\">List of persons or Bodies to whom personal data may be disclosed</h1>\n                        \n                        <div class=\"grouped-items full-width\">\n                            <h3>Do you disclose Personal Data to other Persons or Bodies ?</h3>\n            \n                            <mat-radio-group \n                                color=\"primary\" \n                                aria-label=\"Pick one\" \n                                formControlName=\"PersonalDataIsForDisclosure\">\n                                <mat-radio-button [ngClass]=\"{'selected-radio-btn': formThirdParties.get('PersonalDataIsForDisclosure').value === 'Yes' }\" value=\"Yes\">Yes</mat-radio-button>\n                                <mat-radio-button [ngClass]=\"{'selected-radio-btn': formThirdParties.get('PersonalDataIsForDisclosure').value === 'No' }\" value=\"No\">No</mat-radio-button>\n                            </mat-radio-group>        \n                        </div>    \n        \n                        <section \n                            *ngIf=\"formThirdParties.get('PersonalDataIsForDisclosure').value === 'Yes'\"\n                            class=\"expand-section reduced-properties table-wrapper fadeInUp _delay3ms\">\n                            <button *ngIf=\"!isViewOnly || (!isOfficer && _hasRequestMoreInfo && thirdPartiesEnabled)\"\n                                mat-button\n                                color=\"primary\"\n                                [disabled]=\"processing\"\n                                class=\"add-item-button\"\n                                (click)=\"onAddAThirdParty()\">\n                                <div class=\"button-label\">\n                                    <mat-icon>add</mat-icon>                            \n                                    <span>Add Person / Body</span>\n                                </div>\n                            </button>\n                            \n                            <div class=\"table-wrapper\">\n                                <table \n                                    mat-table \n                                    #thirdPartyMatSort=\"matSort\"\n                                    matSortDisableClear=\"true\"\n                                    [dataSource]=\"thirdPartyDataSource\"\n                                    matSort>\n                    \n                                    <ng-container matColumnDef=\"Count\">\n                                        <th mat-header-cell *matHeaderCellDef> # </th>\n                                        <td mat-cell *matCellDef=\"let index = index\"> {{ index + 1 }} </td>\n                                    </ng-container>\n                    \n                                    <ng-container matColumnDef=\"NameOfThirdParty\">\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Person / Body </th>\n                                        <td mat-cell *matCellDef=\"let row\">{{ row.ThirdPartyName }}</td>\n                                    </ng-container>          \n                    \n                                    <ng-container matColumnDef=\"Purpose\">\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Purpose </th>\n                                        <td mat-cell *matCellDef=\"let row\">{{ row.Purpose }}</td>\n                                    </ng-container>                                 \n                    \n                                    <!-- Actions Column -->\n                                    <ng-container matColumnDef=\"Actions\">\n                                        <th mat-header-cell *matHeaderCellDef> Actions </th>\n                                        <td mat-cell *matCellDef=\"let row; let index = index\">\n                                            <button \n                                                mat-button \n                                                class=\"action-btn\"\n                                                [disabled]=\"!_hasRequestMoreInfo || isOfficer || (_hasRequestMoreInfo && !thirdPartiesEnabled)\"\n                                                [matMenuTriggerFor]=\"menu\" \n                                                (click)=\"$event.stopPropagation()\"\n                                                matTooltip=\"See more options\">\n                                                <mat-icon>more_vert</mat-icon>\n                                            </button>\n                    \n                                            <mat-menu yPosition=\"below\" #menu=\"matMenu\" class=\"more-options-mat-menu\">\n                    \n                                                <button \n                                                    mat-menu-item \n                                                    (click)=\"$event.stopPropagation();onEditThirdParty(row)\">\n                                                    <mat-icon>edit</mat-icon>\n                                                    <span>Make Changes</span>\n                                                </button>\n                                                      \n                                                <hr />\n                    \n                                                <button \n                                                    mat-menu-item \n                                                    (click)=\"$event.stopPropagation();onRemoveThirdParty(row)\">\n                                                    <mat-icon color=\"warn\">delete</mat-icon>\n                                                    <span>Remove</span>\n                                                </button>\n                    \n                                            </mat-menu>                                                  \n                                        </td>\n                                    </ng-container>\n                    \n                                    <tr mat-header-row *matHeaderRowDef=\"thirdPartyDisplayedColumns\"></tr>\n                                    <tr mat-row *matRowDef=\"let row; columns: thirdPartyDisplayedColumns;\" class=\"mat-data-row\"></tr>\n                                </table>\n        \n                                <mat-paginator \n                                    #thirdPartyPaginator\n                                    [pageSize]=\"10\"\n                                    [pageSizeOptions]=\"[5, 10]\">\n                                </mat-paginator>                    \n                            </div>                \n                        </section>    \n                        \n                        <hr class=\"full-width\" />\n        \n                        <div class=\"grouped-items full-width\">\n                            <h3>Do you Transfer personal data outside Uganda ?</h3>\n            \n                            <mat-radio-group color=\"primary\" aria-label=\"Pick one\" formControlName=\"StoreDataOutsideCountry\">\n                                <mat-radio-button [ngClass]=\"{'selected-radio-btn': formThirdParties.get('StoreDataOutsideCountry').value === 'Yes' }\" value=\"Yes\">Yes</mat-radio-button>\n                                <mat-radio-button [ngClass]=\"{'selected-radio-btn': formThirdParties.get('StoreDataOutsideCountry').value === 'No' }\" value=\"No\">No</mat-radio-button>\n                            </mat-radio-group>        \n                        </div> \n        \n                        <section \n                            *ngIf=\"formThirdParties.get('StoreDataOutsideCountry').value === 'Yes'\"\n                            class=\"expand-section reduced-properties table-wrapper\">\n                            <button *ngIf=\"!isViewOnly || (!isOfficer && _hasRequestMoreInfo && countriesOfTransferEnabled)\"\n                                mat-button\n                                color=\"primary\"\n                                [disabled]=\"processing\"\n                                class=\"add-item-button\"\n                                (click)=\"onAddACountry()\">\n                                <div class=\"button-label\">\n                                    <mat-icon>add</mat-icon>                            \n                                    <span>Add A Country</span>\n                                </div>\n                            </button>\n                            \n                            <div class=\"table-wrapper\">\n                                <table \n                                    mat-table \n                                    #countryOfTransferMatSort=\"matSort\"\n                                    matSortDisableClear=\"true\"\n                                    [dataSource]=\"countriesDataSource\"\n                                    matSort>\n                    \n                                    <ng-container matColumnDef=\"Count\">\n                                        <th mat-header-cell *matHeaderCellDef> # </th>\n                                        <td mat-cell *matCellDef=\"let index = index\"> {{ index + 1 }} </td>\n                                    </ng-container>\n                    \n                                    <ng-container matColumnDef=\"Country\">\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Country </th>\n                                        <td mat-cell *matCellDef=\"let row\">{{ row.Country }}</td>\n                                    </ng-container>          \n                    \n                                    <ng-container matColumnDef=\"Purpose\">\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Purpose </th>\n                                        <td mat-cell *matCellDef=\"let row\">{{ row.Purpose }}</td>\n                                    </ng-container>                                 \n                    \n                                    <ng-container matColumnDef=\"Description\">\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Description </th>\n                                        <td mat-cell *matCellDef=\"let row\">{{ row.Description }}</td>\n                                    </ng-container>                                 \n                    \n                                    <!-- Actions Column -->\n                                    <ng-container matColumnDef=\"Actions\">\n                                        <th mat-header-cell *matHeaderCellDef> Actions </th>\n                                        <td mat-cell *matCellDef=\"let row; let index = index\">\n                                            <button \n                                                mat-button \n                                                class=\"action-btn\"\n                                                [disabled]=\"!_hasRequestMoreInfo || isOfficer || (_hasRequestMoreInfo && !countriesOfTransferEnabled)\"\n                                                [matMenuTriggerFor]=\"menu\" \n                                                (click)=\"$event.stopPropagation()\"\n                                                matTooltip=\"See more options\">\n                                                <mat-icon>more_vert</mat-icon>\n                                            </button>\n                    \n                                            <mat-menu yPosition=\"below\" #menu=\"matMenu\" class=\"more-options-mat-menu\">\n                    \n                                                <button \n                                                    mat-menu-item \n                                                    (click)=\"$event.stopPropagation();onEditCountry(row)\">\n                                                    <mat-icon>edit</mat-icon>\n                                                    <span>Make Changes</span>\n                                                </button>\n                                                      \n                                                <hr />\n                    \n                                                <button \n                                                    mat-menu-item \n                                                    (click)=\"$event.stopPropagation();onRemoveCountry(row)\">\n                                                    <mat-icon color=\"warn\">delete</mat-icon>\n                                                    <span>Remove</span>\n                                                </button>\n                    \n                                            </mat-menu>                                                  \n                                        </td>\n                                    </ng-container>\n                    \n                                    <tr mat-header-row *matHeaderRowDef=\"countryDisplayedColumns\"></tr>\n                                    <tr mat-row *matRowDef=\"let row; columns: countryDisplayedColumns;\" class=\"mat-data-row\"></tr>\n                                </table>\n        \n                                <mat-paginator \n                                    #countryOfTransferPaginator\n                                    [pageSize]=\"10\"\n                                    [pageSizeOptions]=\"[5, 10]\">\n                                </mat-paginator>                    \n                            </div>                \n                        </section>                   \n        \n                    </form>\n        \n                    <div class=\"button-wrapper\">\n                        <button mat-button class=\"back-btn\" matStepperPrevious>Back</button>\n                        <button  *ngIf=\"!isViewOnly\"\n                            mat-button \n                            color=\"primary\" >\n                            Save as Draft\n                        </button> \n                        <button \n                            mat-button \n                            [disabled]=\"formThirdParties.invalid \n                            || processing \n                            || ((formThirdParties.get('PersonalDataIsForDisclosure').value === 'Yes') && (thirdParties.length === 0)) \n                            || ((formThirdParties.get('StoreDataOutsideCountry').value === 'Yes') && (countries.length === 0))\" \n                            class=\"next-btn\" \n                            color=\"primary\" \n                            matStepperNext>\n                            Next\n                        </button>\n                    </div>\n                </mat-step>\n        \n                <mat-step [stepControl]=\"formSecurityMeasures\">\n                    <ng-template matStepLabel>\n                        <h3>Security Information</h3>\n\n                        <span class=\"request-for-more-info-count\" *ngIf=\"formFieldSections[5].Count\">{{ formFieldSections[5].Count }}</span>\n                    </ng-template>\n        \n                    <form [formGroup]=\"formSecurityMeasures\">\n        \n                        <h1 class=\"full-width step-header\">State security measures in place to safeguard personal data collected or processed.</h1>\n        \n                        <section class=\"expand-section reduced-properties table-wrapper no-padding\">\n                            <button *ngIf=\"!isViewOnly || securityMeasuresEnabled\"\n                                mat-button\n                                color=\"primary\"\n                                [disabled]=\"processing\"\n                                class=\"add-item-button\"\n                                (click)=\"onAddSecurityMeasure()\">\n                                <div class=\"button-label\">\n                                    <mat-icon>add</mat-icon>                            \n                                    <span>Add A Security Measure</span>\n                                </div>\n                            </button>\n                            \n                            <div class=\"table-wrapper\">\n                                <table \n                                    mat-table \n                                    #securityMeasureMatSort=\"matSort\"\n                                    matSortDisableClear=\"true\"\n                                    [dataSource]=\"securityMeasureDataSource\"\n                                    matSort>\n                    \n                                    <ng-container matColumnDef=\"Count\">\n                                        <th mat-header-cell *matHeaderCellDef> # </th>\n                                        <td mat-cell *matCellDef=\"let index = index\"> {{ index + 1 }} </td>\n                                    </ng-container>\n                    \n                                    <ng-container matColumnDef=\"SecurityMeasure\">\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Security Measure </th>\n                                        <td mat-cell *matCellDef=\"let row\">{{ row.SecurityMeasure }}</td>\n                                    </ng-container>                                  \n                    \n                                    <!-- Actions Column -->\n                                    <ng-container matColumnDef=\"Actions\">\n                                        <th mat-header-cell *matHeaderCellDef> Actions </th>\n                                        <td mat-cell *matCellDef=\"let row; let index = index\">\n                                            <button \n                                                mat-button \n                                                class=\"action-btn\"\n                                                [disabled]=\"!_hasRequestMoreInfo || isOfficer || (_hasRequestMoreInfo && !securityMeasuresEnabled)\"\n                                                [matMenuTriggerFor]=\"menu\" \n                                                (click)=\"$event.stopPropagation()\"\n                                                matTooltip=\"See more options\">\n                                                <mat-icon>more_vert</mat-icon>\n                                            </button>\n                    \n                                            <mat-menu yPosition=\"below\" #menu=\"matMenu\" class=\"more-options-mat-menu\">\n                \n                                                <button \n                                                    mat-menu-item \n                                                    (click)=\"$event.stopPropagation();onEditSecurityMeasure(row)\">\n                                                    <mat-icon>edit</mat-icon>\n                                                    <span>Make Changes</span>\n                                                </button>\n                                                      \n                                                <hr />\n                    \n                                                <button \n                                                    mat-menu-item \n                                                    (click)=\"$event.stopPropagation();onRemoveSecurityMeasure(row)\">\n                                                    <mat-icon color=\"warn\">delete</mat-icon>\n                                                    <span>Remove</span>\n                                                </button>                                        \n                    \n                                            </mat-menu>                                                  \n                                        </td>\n                                    </ng-container>\n                    \n                                    <tr mat-header-row *matHeaderRowDef=\"securityMeasuresDisplayedColumns\"></tr>\n                                    <tr mat-row *matRowDef=\"let row; columns: securityMeasuresDisplayedColumns;\" [ngClass]=\"{'selected-mat-data-row': selectedSpouse === row}\" class=\"mat-data-row\"></tr>\n                                </table>\n        \n                                <mat-paginator \n                                    #securityMeasurePaginator\n                                    [pageSize]=\"10\"\n                                    [pageSizeOptions]=\"[5, 10]\">\n                                </mat-paginator>                    \n                            </div>                \n                        </section>    \n                        \n                        <section class=\"expand-section reduced-properties table-wrapper margin documents\">\n                            <h1 class=\"full-width step-header\">Attach supporting documentation eg approved information security policy.</h1>\n        \n                            <div class=\"buttons\" *ngIf=\"!isViewOnly || (_hasRequestMoreInfo && _updateAttachment)\">\n                                <button *ngIf=\"!isViewOnly || (_hasRequestMoreInfo && _updateAttachment)\"\n                                    mat-button\n                                    color=\"primary\"\n                                    [disabled]=\"processing\"\n                                    class=\"add-item-button\"\n                                    (click)=\"onUploadAttachments()\">\n                                    <div class=\"button-label\">\n                                        <mat-icon>add</mat-icon>                            \n                                        <span> {{ document ? 'Replace Document' : 'Upload Attachment' }} </span>\n                                    </div>\n                                </button>\n            \n                                <button \n                                    mat-button\n                                    *ngIf=\"document && (!isViewOnly || (_hasRequestMoreInfo && _updateAttachment))\"\n                                    color=\"primary\"\n                                    [disabled]=\"processing\"\n                                    class=\"remove-button\"\n                                    (click)=\"onRemoveDocument()\">\n                                    <div class=\"button-label\">\n                                        <mat-icon>clear</mat-icon>\n                                        <span> Remove Document </span>\n                                    </div>\n                                </button>\n                            </div>\n        \n                            <div *ngIf=\"document && document.Base64\" class=\"uploaded-document\" matTooltip=\"Open Document\" (click)=\"onReadDocument(document)\">\n                                <img src=\"./assets/img/pdf.png\" alt=\"\">\n        \n                                <span>Document: {{ document.Name }} <span *ngIf=\"document.Size\">  -  {{ document.Size }} Mbs</span></span>\n                            </div>\n\n                            <p class=\"no-document-found\" *ngIf=\"document && !document.Base64\">No document found. Please attach</p>\n        \n                        </section>\n        \n                        <hr class=\"full-width\" />\n        \n                        <section class=\"expand-section reduced-properties table-wrapper margin documents\">\n                            <h1 class=\"full-width step-header\">Attach Form 3</h1>\n        \n                            <div class=\"buttons\" *ngIf=\"!isViewOnly || (_hasRequestMoreInfo && _updateForm3Attachment)\">\n                                <!-- <a \n                                    mat-button\n                                    color=\"accent\"\n                                    [disabled]=\"processing\"\n                                    target=\"_blank\"\n                                    download=\"Form 3 -  Undertaking Not to Process or Store Personal Data\"\n                                    class=\"add-item-button\"\n                                    href=\"./assets/docs/Form 3 -  Undertaking Not to Process or Store Personal Data.pdf\">\n                                    <div class=\"button-label\">\n                                        <mat-icon>sim_card_download</mat-icon>                            \n                                        <span>Download Form 3</span>\n                                    </div>\n                                </a> -->\n        \n                                <button\n                                    mat-button\n                                    *ngIf=\"!isViewOnly || (_hasRequestMoreInfo && _updateForm3Attachment)\"\n                                    color=\"accent\"\n                                    class=\"download-form\"                           \n                                    (click)=\"onDownloadForm3()\">\n                                    <div class=\"button-label\">\n                                        <mat-icon>sim_card_download</mat-icon>                            \n                                        <span>Download Form 3</span>\n                                    </div>                        \n                                </button>\n        \n                                <button *ngIf=\"!isViewOnly || (_hasRequestMoreInfo && _updateForm3Attachment)\"\n                                    mat-button\n                                    color=\"primary\"\n                                    [disabled]=\"processing\"\n                                    class=\"add-item-button\"\n                                    (click)=\"onUploadForm3Attachments()\">\n                                    <div class=\"button-label\">\n                                        <mat-icon>add</mat-icon>                            \n                                        <span> {{ documentForm3 ? 'Replace Form 3' : 'Upload Form 3' }} </span>\n                                    </div>\n                                </button>\n            \n                                <button *ngIf=\"documentForm3 && (!isViewOnly || (_hasRequestMoreInfo && _updateForm3Attachment))\"\n                                    mat-button\n                                    color=\"primary\"\n                                    [disabled]=\"processing\"\n                                    class=\"remove-button\"\n                                    (click)=\"onRemoveForm3Document()\">\n                                    <div class=\"button-label\">\n                                        <mat-icon>clear</mat-icon>\n                                        <span> Remove Document </span>\n                                    </div>\n                                </button>\n                            </div>\n        \n                            <div  *ngIf=\"documentForm3 && documentForm3.Base64\" class=\"uploaded-document\" matTooltip=\"Open Document\" (click)=\"onReadDocument(documentForm3)\">\n                                <img src=\"./assets/img/pdf.png\" alt=\"\">\n        \n                                <span>Document: {{ documentForm3.Name }} <span *ngIf=\"documentForm3.Size\">  -  {{ documentForm3.Size }} Mbs</span> </span>\n                            </div>\n\n                            <p class=\"no-document-found\" *ngIf=\"documentForm3 && !documentForm3.Base64\">No document found. Please attach</p>\n        \n                        </section>\n        \n                        <hr class=\"full-width\" />\n        \n                        <section class=\"expand-section reduced-properties table-wrapper margin documents\">\n                            <h1 class=\"full-width step-header\">Attach Proof of Payment</h1>\n        \n                            <div class=\"buttons\" *ngIf=\"!isViewOnly || (_hasRequestMoreInfo && _updateProofOfPayment)\">\n                                <button *ngIf=\"!isViewOnly || (_hasRequestMoreInfo && _updateProofOfPayment)\"\n                                    mat-button\n                                    color=\"primary\"\n                                    [disabled]=\"processing\"\n                                    class=\"add-item-button\"\n                                    (click)=\"onUploadProofOfPayment()\">\n                                    <div class=\"button-label\">\n                                        <mat-icon>add</mat-icon>                            \n                                        <span> {{ proofOfPayment ? 'Replace Document' : 'Upload Proof of Payment' }} </span>\n                                    </div>\n                                </button>\n            \n                                <button \n                                    mat-button\n                                    *ngIf=\"proofOfPayment && (!isViewOnly || (_hasRequestMoreInfo && _updateProofOfPayment))\"\n                                    color=\"primary\"\n                                    [disabled]=\"processing\"\n                                    class=\"remove-button\"\n                                    (click)=\"onRemoveProofOfPaymen()\">\n                                    <div class=\"button-label\">\n                                        <mat-icon>clear</mat-icon>\n                                        <span> Remove Document </span>\n                                    </div>\n                                </button>\n                            </div>\n        \n                            <div *ngIf=\"proofOfPayment && proofOfPayment.Base64\" class=\"uploaded-document\" matTooltip=\"Open Document\" (click)=\"onReadDocument(proofOfPayment)\">\n                                <img src=\"./assets/img/pdf.png\" alt=\"\">\n        \n                                <span>Document: {{ proofOfPayment.Name }} <span *ngIf=\"proofOfPayment.Size\">  -  {{ proofOfPayment.Size }} Mbs</span> </span>\n                            </div>\n\n                            <p class=\"no-document-found\" *ngIf=\"proofOfPayment && !proofOfPayment.Base64\">No document found. Please attach</p>\n        \n                        </section>\n        \n                        <hr class=\"full-width\" />\n        \n                        <mat-checkbox\n                            class=\"full-width selected-checkbox\"\n                            color=\"primary\"\n                            [checked]=\"true\"                            \n                            formControlName=\"RegistrationConsent\"\n                            color=\"primary\">\n                            I certify that the above information is correct and complete and here by apply to be registered as \n                            data collector/ data processor / data controller (This shall be based on th category selected) \n                            under the data Protection and Privacy Act.\n                            <mat-error *ngIf=\"formSecurityMeasures.get('RegistrationConsent').invalid\">{{ getCheckboxErrorMessage() }}</mat-error>   \n                        </mat-checkbox>       \n                        \n                        <mat-form-field class=\"full-width\" hintLabel=\"The person authorized to complete and submit this application on the behalf of the applicant organization\">\n                            <mat-label>Name and title of person submitting the application<span class=\"required-field\">required</span></mat-label>\n                            <input appUppercase #RegistrationDoneByInput matInput maxlength=\"50\" formControlName=\"RegistrationDoneBy\">  \n                            <mat-error *ngIf=\"formSecurityMeasures.get('RegistrationDoneBy').invalid\">{{ getRegistrationDoneByErrorMessage() }}</mat-error>                             \n                            <mat-hint align=\"end\">{{ RegistrationDoneByInput.value.length }} / 50</mat-hint>    \n                        </mat-form-field>                  \n        \n                    </form>\n        \n                    <div class=\"button-wrapper\">\n                        <button mat-button class=\"back-btn\" matStepperPrevious>Back</button>\n\n                        <!-- <button *ngIf=\"!isViewOnly\"\n                            mat-button \n                            color=\"primary\" >\n                            Save as Draft\n                        </button>  -->\n\n                        <div class=\"buttons\">\n                            <button  *ngIf=\"!isViewOnly\"\n                                mat-button\n                                color=\"primary\" \n                                [disabled]=\"formGeneralInformation.invalid || formOrganisationDetails.invalid || formPersonalDataHeld.invalid || formPurposeRetention.invalid || formThirdParties.invalid || formSecurityMeasures.invalid || processing || securityMeasures.length === 0 || !documentForm3 || !proofOfPayment\" \n                                class=\"download\" \n                                matTooltip=\"Keep a copy of the information you have filled in\"\n                                (click)=\"onPreviewForm(true)\">\n                                <div class=\"button-label\">\n                                    <mat-icon>sim_card_download</mat-icon>\n                                    <span>Download Form</span>\n                                </div>\n                            </button>\n        \n                            <button\n                                mat-button  *ngIf=\" !isViewOnly\"\n                                color=\"primary\" \n                                [disabled]=\"formGeneralInformation.invalid || formOrganisationDetails.invalid || formPersonalDataHeld.invalid || formPurposeRetention.invalid || formThirdParties.invalid || formSecurityMeasures.invalid || processing || securityMeasures.length === 0 || !documentForm3 || !proofOfPayment\" \n                                class=\"preview\" \n                                matTooltip=\"Have a look at all the information you have filled in before sending.\"\n                                (click)=\"onPreviewForm(false)\">\n                                <div class=\"button-label\">\n                                    <mat-icon>visibility</mat-icon>\n                                    <span>Preview Form</span>\n                                </div>\n                            </button>\n        \n                        \n                            <button  *ngIf=\"!isViewOnly\"\n                                mat-button \n                                class=\"next-btn submit-btn\" \n                                [disabled]=\"formGeneralInformation.invalid || formOrganisationDetails.invalid || formPersonalDataHeld.invalid || formPurposeRetention.invalid || formThirdParties.invalid || formSecurityMeasures.invalid || processing || securityMeasures.length === 0 || !documentForm3 || !proofOfPayment\" \n                                [ngClass]=\"{'inline-processing-btn': processing}\" \n                                color=\"primary\" \n                                (click)=\"onSubmit()\">\n                                <app-inline-mat-spinner *ngIf=\"processing\"></app-inline-mat-spinner>                  \n                                <span>Send Application</span>                    \n                            </button>                \n                        \n                            <!-- For submitting Request for more information -->\n                            <!-- <button *ngIf=\"_hasRequestMoreInfo\"\n                                mat-button \n                                class=\"next-btn submit-btn\" \n                                [disabled]=\"formGeneralInformation.invalid || formOrganisationDetails.invalid || formPersonalDataHeld.invalid || formPurposeRetention.invalid || formThirdParties.invalid || formSecurityMeasures.invalid || securityMeasures.length === 0\" \n                                color=\"primary\" \n                                (click)=\"onSubmitRequestedInfor()\">\n                                <span>Submit Changes Application</span>                    \n                            </button>                 -->\n\n                            <button *ngIf=\"_hasRequestMoreInfo && !isOfficer\"\n                                mat-button \n                                class=\"next-btn submit-btn\" \n                                color=\"primary\" \n                                (click)=\"onSubmitRequestedInfor()\">\n                                <span>Submit Changes Application</span>                    \n                            </button>                \n                        </div>\n                    </div>\n                </mat-step>\n        \n                <!-- <mat-step [stepControl]=\"form\">\n                    <ng-template matStepLabel>\n                        <h3>Legal <br /> Details</h3>\n                    </ng-template>\n        \n                    <form [formGroup]=\"form\">\n                        \n                    </form>\n        \n                    <div class=\"button-wrapper\">\n                        <button mat-button class=\"back-btn\" matStepperPrevious>Back</button>\n        \n                        <button \n                            mat-button \n                            [disabled]=\"form.invalid || processing\" \n                            class=\"next-btn\" \n                            color=\"primary\" \n                            matStepperNext>\n                            Next\n                        </button>\n                    </div>\n                </mat-step> -->\n        \n                <!-- <mat-step [stepControl]=\"formChildrenData\">\n                    <ng-template matStepLabel>\n                        <h3>Children <br /> Data</h3>\n                    </ng-template>\n        \n                    <form [formGroup]=\"formChildrenData\">\n                        \n                        <div class=\"grouped-items\">\n                            <h3>Do you collect personal data relating to Children?</h3>\n            \n                            <mat-radio-group color=\"primary\" aria-label=\"Pick one\" formControlName=\"CollectChildrenData\">\n                                <mat-radio-button value=\"Yes\">Yes</mat-radio-button>\n                                <mat-radio-button value=\"No\">No</mat-radio-button>\n                            </mat-radio-group>        \n                        </div>  \n        \n                        <mat-form-field>\n                            <mat-label>Please indicate who gave the consent <span class=\"required-field\">required</span></mat-label>\n                            <mat-select formControlName=\"ChildDataConsentor\">\n                                <mat-option value=\"1\">Parents / Guardian</mat-option>\n                                <mat-option value=\"2\">Relevant Authority</mat-option>\n                            </mat-select>    \n                        </mat-form-field>                  \n        \n                        <mat-form-field>\n                            <mat-label>Purpose for collection <span class=\"required-field\">required</span></mat-label>\n                            <mat-select formControlName=\"PurposeForCollectingChildData\">\n                                <mat-option value=\"1\">Comply with the Law</mat-option>\n                                <mat-option value=\"2\">Research or Statistical Purposes</mat-option>\n                            </mat-select>    \n                        </mat-form-field>      \n                        \n                        <mat-form-field>\n                            <mat-label>Indicate the law being complied with <span class=\"required-field\">required</span></mat-label>\n                            <mat-select formControlName=\"ChildLawPurpose\">\n                                <mat-option value=\"1\">Child Law</mat-option>\n                            </mat-select>    \n                        </mat-form-field>                   \n                        \n                        <mat-form-field>\n                            <mat-label>Indicate the research beign carried out.<span class=\"required-field\">required</span></mat-label>\n                            <textarea #CaseTitleInput matInput maxlength=\"1000\" formControlName=\"ChildResearchPurpose\"></textarea>\n                            <mat-hint align=\"end\">{{ CaseTitleInput.value.length }} / 1000</mat-hint>\n                        </mat-form-field>                     \n        \n                    </form>\n        \n                    <div class=\"button-wrapper\">\n                        <button mat-button class=\"back-btn\" matStepperPrevious>Back</button>\n        \n                        <button \n                            mat-button \n                            [disabled]=\"formChildrenData.invalid || processing\" \n                            class=\"next-btn\" \n                            color=\"primary\" \n                            (click)=\"onSubmit()\"\n                            matStepperNext>\n                            Submit\n                        </button>\n                    </div>\n                </mat-step> -->\n        \n                <!-- <mat-step>\n                    <ng-template matStepLabel>\n                        <h3>Payment</h3>          \n                    </ng-template>\n        \n                    <form>\n                        <h1 class=\"full-width step-header\">Show payment options.</h1>  \n                    </form>\n        \n                    <div class=\"button-wrapper single-button-start\">\n                        <button mat-button class=\"back-btn\" matStepperPrevious>Back</button>\n        \n                        <button \n                            mat-raised-button \n                            color=\"primary\" \n                            [ngClass]=\"{'inline-processing-btn': processing }\" \n                            [disabled]=\"processing\"                      \n                            (click)=\"onSubmit()\">\n                                <div class=\"btn-label\">\n                                    <app-inline-mat-spinner *ngIf=\"processing\"></app-inline-mat-spinner>                        \n                                    <span>Submit</span>\n                                </div>\n                        </button>\n                    </div>              \n                </mat-step> -->\n            </mat-horizontal-stepper>   \n        </main>\n    </fury-page-layout-content>\n</fury-page-layout>\n\n\n\n","import {HttpClient} from '@angular/common/http';\nimport {AfterContentInit, ChangeDetectorRef, Component, EventEmitter, Input, OnDestroy, OnInit, ViewChild} from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {MatDialog} from '@angular/material/dialog';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {forkJoin, Observable, Subscription} from 'rxjs';\nimport {\n    ApiPayload,\n    Country,\n    CountryOfTransfer,\n    DataCategory,\n    DataProtectionOfficer,\n    DataPurposes,\n    DataSource,\n    DataSubCategory,\n    FileUpload,\n    MainActivity,\n    NatureOfBusinessCat,\n    NatureOfBusinessSubCat,\n    OrganisationCategory,\n    OrganisationType,\n    Sector,\n    SecurityMeasure,\n    ThirdParty,\n    ChildrenDataPurpose\n} from '../../../../services/api.model';\nimport {catchError, filter, map, startWith} from 'rxjs/operators';\nimport {MatCheckboxChange} from '@angular/material/checkbox';\nimport {ApiEndpointsService} from '../../../../services/api-endpoints.service';\nimport {ApiService} from '../../../../services/api.service';\nimport {OrgNoticeComponent} from '../../../../layout/dialogs/org-registration/org-notice/org-notice.component';\nimport {OrgMainActivityComponent} from '../../../../layout/dialogs/org-registration/org-main-activity/org-main-activity.component';\nimport {\n    OrgDataProtectionOfficerComponent\n} from '../../../../layout/dialogs/org-registration/org-data-protection-officer/org-data-protection-officer.component';\nimport {\n    OrgSecurityMeasuresComponent\n} from '../../../../layout/dialogs/org-registration/org-security-measures/org-security-measures.component';\nimport {OrgThirdPartyComponent} from '../../../../layout/dialogs/org-registration/org-third-party/org-third-party.component';\nimport {OrgCountryComponent} from '../../../../layout/dialogs/org-registration/org-country/org-country.component';\nimport {OrgUploadComponent} from '../../../../layout/dialogs/org-upload/org-upload.component';\nimport {OrgForm3DialogComponent} from '../../../../layout/dialogs/org-registration/org-form3-dialog/org-form3-dialog.component';\nimport {\n    OrgRegistrationPreviewDialogComponent\n} from '../../../../layout/dialogs/org-registration/org-registration-preview-dialog/org-registration-preview-dialog.component';\nimport {SuccessfulMessageDialogComponent} from '../../../../layout/dialogs/successful-message-dialog/successful-message-dialog.component';\nimport {\n    Action,\n    ActionPerformed,\n    ActionPerformedRequestMoreInfo,\n    WorkFlowConstants,\n    WorkFlowStep,\n    WorkFlowTimeline\n} from '../../../models/document-workflow.model';\nimport {CertificateDetails, CertificateDetailsResponse, CheckListed, CompanyRegistrationModel} from '../company-registration.model';\nimport {BaseFuryForm} from '../../../../../@fury/shared/base-fury-form';\nimport {KeycloakService} from 'keycloak-angular';\nimport {WorkflowServiceService} from '../../../../services/workflow-service.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {$RequestMoreInfoField, Checked, Checklist, RequestMoreInfoField} from '../../../models/reference.model';\nimport {fadeInRightAnimation} from '../../../../../@fury/animations/fade-in-right.animation';\nimport {fadeInUpAnimation} from '../../../../../@fury/animations/fade-in-up.animation';\nimport {SnackBarService} from '../../../../pages/services/snack-bar.service';\nimport {CompanyRegistrationService} from '../../company-registration.service';\nimport {ReviewCommentsComponent} from '../../../../layout/review-comments/review-comments.component';\nimport {CertPreviewComponent} from '../cert-preview/cert-preview.component';\nimport {ApplicationTimelineComponent} from '../../../../layout/application-timeline/application-timeline.component';\nimport {ReferenceTableService} from '../../../../services/reference-table.service';\nimport {AuthenticationService} from '../../../../authentication/authentication.service';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { ViewPdfDocumentBottomsheetComponent } from '../../../../layout/bottomsheets/view-pdf-document-bottomsheet/view-pdf-document-bottomsheet.component';\nimport { environment } from '../../../../../environments/environment';\nimport { ComplaintService } from '../../../complaints/complaints.service';\n\n\n@Component({\n    selector: 'fury-app-update-registration',\n    templateUrl: './update-registration.component.html',\n    styleUrls: ['./update-registration.component.scss'],\n    animations: [fadeInRightAnimation, fadeInUpAnimation]\n})\nexport class UpdateRegistrationComponent extends BaseFuryForm implements OnInit, OnDestroy, AfterContentInit {\n\n    dialogRef;\n    bottomsheetRef;\n    processing = false;\n    formGeneralInformation: FormGroup;\n    formOrganisationDetails: FormGroup;\n    formPersonalDataHeld: FormGroup;\n    formPurposeRetention: FormGroup;\n    formSecurityMeasures: FormGroup;\n    formThirdParties: FormGroup;\n    formChildrenData: FormGroup;\n    selectedIndex = 0;\n    // selectedIndex = 3;\n    // isLinear = true;\n    isLinear = false;\n    today = new Date();\n    contactInformation = true;\n    sectors: Sector[];\n    countries: Country[];\n    selected = false;\n    DPOSelected = false;\n    organisationCategories: OrganisationCategory[] = [];\n    selectedOrganisationCategories: OrganisationCategory[] = [];\n    organisationTypes: OrganisationType[];\n    dataSources: DataSource[];\n    selectedDataSources: DataSource[] = [];\n    httpSub: Subscription;\n    MainActivitiesDisplayedColumns: string[] = ['Count', 'MainActivity', 'Actions'];\n    dpoDisplayedColumns: string[] = ['Count', 'Name', 'Telephone', 'Email', 'PhysicalAddress', 'Actions'];\n    securityMeasuresDisplayedColumns: string[] = ['Count', 'SecurityMeasure', 'Actions'];\n    thirdPartyDisplayedColumns: string[] = ['Count', 'NameOfThirdParty', 'Purpose', 'Actions'];\n    countryDisplayedColumns: string[] = ['Count', 'Country', 'Purpose', 'Description', 'Actions'];\n    mainActivities: MainActivity[] = [];\n    mainActivitiesDataSource: MatTableDataSource<MainActivity>;\n    dataProtectionOfficers: DataProtectionOfficer[] = [];\n    dpoDataSource: MatTableDataSource<DataProtectionOfficer>;\n    securityMeasures: SecurityMeasure[] = [];\n    securityMeasureDataSource: MatTableDataSource<SecurityMeasure>;\n    thirdParties: ThirdParty[] = [];\n    thirdPartyDataSource: MatTableDataSource<ThirdParty>;\n    countriesOfTransfer: CountryOfTransfer[] = [];\n    countriesDataSource: MatTableDataSource<CountryOfTransfer>;\n    selectedDataCategory: DataCategory[] = [];\n    selectedDataSubCategory: DataSubCategory[] = [];\n    dataCategories: DataCategory[];\n    dataPurposes: DataPurposes[];\n    childDataPurposes: ChildrenDataPurpose[] = [];\n    selectedChildDataPurposes: ChildrenDataPurpose[] = [];\n    selectedDataPurposes: DataPurposes[] = [];\n    natureOfBusinessCat: NatureOfBusinessCat[] = [];\n    natureOfBusinessSubCat: NatureOfBusinessSubCat[] = [];\n    selectedNatureOfBusinessSubCat: NatureOfBusinessSubCat[] = [];\n    SpecifyTheLaw = false;\n    ServiceOrProductProvided = false;\n    showChildrenDataFields = false;\n    SpecifyLegalObligation = false;\n    document: FileUpload | null;\n    documentForm3: FileUpload | null;\n    proofOfPayment: FileUpload | null;\n    OrganizationType = null;\n    SectorName = null;\n    NatureOfBusinessCat = null;\n    CountryOfIncorporation = null;\n    \n    //\n    role: string;\n    workflowID = '1';\n    workflowTimeLine: WorkFlowTimeline;\n    currentStep: WorkFlowStep;\n    certificateResponse: CertificateDetailsResponse;\n    certificateDetails: CertificateDetails;\n    accesses: string[];\n    regTrackingNo: string;\n    timeLineAccess: string[] = ['data-protection-officer-director', 'data-protection-officer-nita', 'data-protection-officer-technical', 'data-protection-officer-legal'];\n    isOfficer: boolean;\n    isApplicant: boolean;\n    _hasRequestMoreInfo = false;\n    _StepRequestingForMoreInfo = 0;\n    requestMoreInfoFields: RequestMoreInfoField[] = [];\n    canDownloadCertificate = false;\n    $checklist: Checklist[];\n    // Main Object\n    application: CompanyRegistrationModel = new CompanyRegistrationModel();\n    permittedActions: Action[] = [];\n    // Subscriptions\n    subscriptions: Subscription[] = [];\n    $resultRefChecklistEvent: EventEmitter<any> = new EventEmitter();\n    formFieldSections: { SectionID: number; SectionName: string; Count: number }[] = []\n    personalDataCollectedCheckBoxEnabled = false;\n    dataCategory = new FormControl();\n\n    @ViewChild('MainActivityPaginator', {static: false}) MainActivityPaginator: MatPaginator;\n    @ViewChild('MainActivityMatSort', {static: false}) MainActivityMatSort: MatSort;\n    @ViewChild('dpoPaginator', {static: false}) dpoPaginator: MatPaginator;\n    @ViewChild('dpoMatSort', {static: false}) dpoMatSort: MatSort;\n    @ViewChild('securityMeasurePaginator', {static: false}) securityMeasurePaginator: MatPaginator;\n    @ViewChild('securityMeasureMatSort', {static: false}) securityMeasureMatSort: MatSort;\n    @ViewChild('thirdPartyPaginator', {static: false}) thirdPartyPaginator: MatPaginator;\n    @ViewChild('thirdPartyMatSort', {static: false}) thirdPartyMatSort: MatSort;\n    @ViewChild('countryOfTransferPaginator', {static: false}) countryOfTransferPaginator: MatPaginator;\n    @ViewChild('countryOfTransferMatSort', {static: false}) countryOfTransferMatSort: MatSort;\n    @Input() checked: Boolean;\n\n    OrganizationID: number;\n    cat: number[] = [];\n    organisationcategories: any;\n    natureOfbusinesses: any;\n    natureOfbusinesses_arr: any = [];\n    sourceofdata: any;\n    sourceofdata_arr: any = [];\n    childDataPurposeResults:any = [];\n    purpose: any;\n    purpose_arr: any = [];\n\n    _updateAttachment = false;\n    _updateForm3Attachment = false;\n    _updateProofOfPayment = false;\n    securityMeasuresEnabled = false;\n    thirdPartiesEnabled = false;\n    countriesOfTransferEnabled = false;\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private service: ApiService,\n        private endpoints: ApiEndpointsService,\n        private dialog: MatDialog,\n        private bottomsheet: MatBottomSheet,\n        private http: HttpClient,\n        private route: Router,\n        public snackBar: SnackBarService,\n        private activateRoute: ActivatedRoute,\n        private changeDetector: ChangeDetectorRef,\n        public authService: KeycloakService,\n        public _authService: AuthenticationService,\n        public _workflowService: WorkflowServiceService,\n        public registrationService: CompanyRegistrationService,\n        private referenceService: ReferenceTableService,\n        public complaintService: ComplaintService,\n    ) {\n        super(\n            authService,\n            _workflowService,\n            registrationService,\n            complaintService\n        );\n\n        this.accesses = authService.getKeycloakInstance().resourceAccess['dps-frontend'].roles;\n        this.operationType = activateRoute.routeConfig.data.action;\n        this.regTrackingNo = this.route.getCurrentNavigation().extras.state.regTrackingNo;\n        \n        if (this.operationType === 'EDIT') {\n            this.isEditMode = true;\n        } else if (this.operationType === 'CREATE') {\n            this.isEditMode = false;\n        } else if (this.operationType === 'VIEW') {\n            this.isEditMode = false;\n            this.isViewOnly = true;\n        } else if (this.operationType === 'MANAGE') {\n            this.isEditMode = false;\n            this.isViewOnly = true;\n        }\n\n        // console.log('isViewOnly:', this.isViewOnly);\n\n        this.pageTitle();\n\n        this.formFieldSections = [\n            {\n                SectionID: 1,\n                SectionName: 'Applicant',\n                Count: 0,\n            },\n            {\n                SectionID: 2,\n                SectionName: 'Data Protection Officer',\n                Count: 0,\n            },\n            {\n                SectionID: 3,\n                SectionName: 'Data Collected or Processed',\n                Count: 0,\n            },\n            {\n                SectionID: 4,\n                SectionName: 'Purpose & Retention',\n                Count: 0,\n            },\n            {\n                SectionID: 5,\n                SectionName: 'Disclosure & Transfer',\n                Count: 0,\n            },\n            {\n                SectionID: 6,\n                SectionName: 'Security Information',\n                Count: 0,\n            },\n        ]        \n    }\n\n    pageTitle() {\n        const pageTitle = this.isOfficer ? this.application.OrganisationName + 'Application' : ' My Application';\n        this.service.updatePageTitle(['Organisations', pageTitle]);\n    }\n\n    ngOnInit(): void {\n        this.formGeneralInformation = this.formBuilder.group({\n            OrganizationName: new FormControl('', [Validators.required]),\n            DPPActCategory: new FormControl('', [Validators.required]),\n            OrganizationTypeID: new FormControl('', [Validators.required]),\n            CountryOfIncorporation: new FormControl('', [Validators.required]),\n            URSBNumber: new FormControl(''),\n            SectorID: new FormControl('', [Validators.required]),\n            OtherSector: new FormControl('', [Validators.maxLength(50)]),\n            Location: new FormControl('', [Validators.required]),\n            PhoneNumberCode: new FormControl('', [Validators.required]),\n            PhoneNumber: new FormControl('', [\n                Validators.required,\n                Validators.pattern(/^[0-9 ]+$/),\n            ]),\n            EmailAddress: new FormControl('', [\n                Validators.required,\n                Validators.email\n            ]),\n            // NatureOfBusiness: new FormControl('', [Validators.required]),\n            NatureOfBusinessCat: new FormControl('', [Validators.required]),\n            NatureOfBusinessSubCat: new FormControl('', [Validators.required]),\n        });\n\n        this.formOrganisationDetails = this.formBuilder.group({\n            DPORequired: new FormControl(''),\n            DPOName: new FormControl(''),\n            DPOPhysicalAddress: new FormControl(''),\n            PhoneNumberCode: new FormControl(''),\n            DPOPhoneNumber: new FormControl(''),\n            DPOEmailAddress: new FormControl(''),\n            DPOPositionInOrganisation: new FormControl(''),\n        });\n\n        this.formPersonalDataHeld = this.formBuilder.group({\n            SourceOfDataID: new FormControl('', [Validators.required]),\n        });\n\n        this.formPurposeRetention = this.formBuilder.group({\n            Purpose: new FormControl('', [Validators.required]),\n            SpecifyTheLaw: new FormControl(''),\n            ServiceOrProductProvided: new FormControl(''),\n            SpecifyLegalObligation: new FormControl(''),\n            TotalRecordsAtRegistration: new FormControl('', [Validators.pattern(/^[0-9,]+$/)]),\n            RecordPercentageGrowth: new FormControl('', [\n                Validators.pattern(/^[0-9,]+$/),\n                Validators.max(100),\n            ]),\n            RetentionPeriod: new FormControl('', [\n                Validators.required,\n                Validators.pattern(/^[0-9,]+$/),\n                Validators.max(100),\n            ]),\n        });\n\n        this.formSecurityMeasures = this.formBuilder.group({\n            RegistrationConsent: new FormControl('', [Validators.required]),\n            RegistrationDoneBy: new FormControl('', [Validators.required, Validators.pattern(/^[a-zA-Z ]+$/)]),\n            TechnicalComments: new FormControl(),\n            LegalComments: new FormControl(),\n            DirectorComments: new FormControl(),\n        });\n\n        this.formChildrenData = this.formBuilder.group({\n            CollectChildrenData: new FormControl('', [Validators.required]),\n            PurposeForCollection: new FormControl(''),\n          });\n\n        this.formThirdParties = this.formBuilder.group({\n            PersonalDataIsForDisclosure: new FormControl('', [Validators.required]),\n            StoreDataOutsideCountry: new FormControl('', [Validators.required]),\n        });\n\n        // this.Listeners();\n        // console.log('operationType:', this.operationType);\n        if (this.operationType === 'CREATE' || this.operationType === 'MANAGE') {\n            this.Listeners();\n        }\n        \n        // Disable Form By ApplicationStatus\n        this.disableByStatus();\n        // WorkFlow Call\n        this.workflowSubscriptions();\n        // Set OfficerRole\n        this.isOfficer = this.timeLineAccess.includes(this.realmRole);\n        // Fetch Checklist\n        this.referenceService.getChecklist(this.$processingEvent, this.$resultRefChecklistEvent, this.$errorsEvent);\n\n        this.formGeneralInformation.valueChanges\n            .pipe(\n                filter(() => this.formGeneralInformation.valid)\n            ).subscribe(val => localStorage.setItem('STEP_1', JSON.stringify(val)));\n    }\n\n    ngAfterContentInit(): void {\n        this.OrganizationID = 156;\n        this.getDataFromMultipleRequests();\n    }\n\n    private getDataFromMultipleRequests(): void {\n        this.httpSub = this.fetchMultiple(this.regTrackingNo)\n        .pipe(catchError(this.service.handleError))\n        .subscribe((responseList) => {\n            this.countries = responseList[0];\n\n            this.organisationCategories = [\n                {\n                    OrganisationCategoryId: 1,\n                    OrganisationCategoryName: 'Data Controller'\n                },\n                {\n                    OrganisationCategoryId: 2,\n                    OrganisationCategoryName: 'Data Processor'\n                },\n                {\n                    OrganisationCategoryId: 3,\n                    OrganisationCategoryName: 'Data Collector'\n                },\n            ];\n\n            this.childDataPurposes = [\n                {\n                  ChildDataID: 1,\n                  ChildDataPurpose: 'Carried out with prior consent of the parent,guardian, or  any other person having authority to make decisions on behalf of the child '\n                },\n                {\n                  ChildDataID: 2,\n                  ChildDataPurpose: 'Necessary to comply with the law'\n                },\n                {\n                  ChildDataID: 3,\n                  ChildDataPurpose: 'For research or statistical purposes'\n                }\n              ]\n\n\n            this.formGeneralInformation.get('PhoneNumberCode').patchValue('256');\n            this.formOrganisationDetails.get('PhoneNumberCode').patchValue('256');\n\n            this.dataSources = responseList[1];\n\n            this.organisationTypes = responseList[2];\n\n            this.sectors = responseList[3];\n\n            this.dataCategories = responseList[4];\n\n            this.dataPurposes = responseList[5];\n\n            this.natureOfBusinessCat = responseList[6];\n\n            this.fetchSingleApplication(responseList[7], responseList[8]);\n\n            this.processing = false;\n        }, (error) => {\n            this.processing = false;\n            this.service.determineErrorResponse(error);\n        });        \n    }\n\n    private Listeners(): void {\n        // STEP ONE\n        this.formGeneralInformation.get('DPPActCategory').valueChanges.subscribe((value) => {\n            const values: number[] = value;\n            this.selectedOrganisationCategories.length = 0;\n\n            this.organisationCategories.filter((item) => {\n                if (values.includes(item.OrganisationCategoryId)) {\n                    this.selectedOrganisationCategories.push(item);\n                }\n            });\n        });\n\n        this.formGeneralInformation.get('OrganizationTypeID').valueChanges.subscribe((value) => {\n            if (value !== 4) {\n                this.formGeneralInformation.get('CountryOfIncorporation').setValidators([Validators.required]);\n                this.formGeneralInformation.get('URSBNumber').setValidators([Validators.required]);\n            } else {\n                this.formGeneralInformation.get('CountryOfIncorporation').clearValidators();\n                this.formGeneralInformation.get('CountryOfIncorporation').reset();\n                this.formGeneralInformation.get('URSBNumber').clearValidators();\n                this.formGeneralInformation.get('URSBNumber').reset();\n                this.CountryOfIncorporation = null;\n            }\n\n            this.formGeneralInformation.controls['CountryOfIncorporation'].updateValueAndValidity();\n            this.formGeneralInformation.controls['URSBNumber'].updateValueAndValidity();\n        });\n\n        this.formGeneralInformation.get('SectorID').valueChanges.subscribe((value) => {\n            if (value === 14) {\n                this.formGeneralInformation.get('OtherSector').setValidators([Validators.required]);\n            } else {\n                this.formGeneralInformation.get('OtherSector').clearValidators();\n                this.formGeneralInformation.get('OtherSector').reset();\n            }\n\n            this.formGeneralInformation.controls['OtherSector'].updateValueAndValidity();\n        });\n\n        this.formGeneralInformation.get('NatureOfBusinessCat').valueChanges.subscribe((value) => {\n            if (value) { \n                this.onNatureOfBusinessCatSelected(value);\n            }\n        });\n\n        this.formGeneralInformation.get('NatureOfBusinessSubCat').valueChanges.subscribe((value) => {\n            const values: number[] = value;\n            this.selectedNatureOfBusinessSubCat.length = 0;\n\n            this.natureOfBusinessSubCat.filter((item) => {\n                if (values.includes(item.NatureOfBusinessSubCatId)) {\n                    this.selectedNatureOfBusinessSubCat.push(item);\n                }\n            });\n        });\n\n        // STEP TWO\n        this.formOrganisationDetails.get('DPORequired').valueChanges.subscribe((value) => {\n\n            if (value === 'Yes') {\n                this.formOrganisationDetails.get('DPOName').setValidators([Validators.required, Validators.pattern(/^[a-zA-Z ]+$/), ]);\n                this.formOrganisationDetails.get('DPOPhysicalAddress').setValidators([Validators.required]);\n                this.formOrganisationDetails.get('DPOPhoneNumber').setValidators([Validators.required, Validators.pattern(/^[0-9 ]+$/)]);\n                this.formOrganisationDetails.get('DPOEmailAddress').setValidators([Validators.required, Validators.email]);\n                this.formOrganisationDetails.get('DPOPositionInOrganisation').setValidators([Validators.required]);\n            } else {\n                this.formOrganisationDetails.get('DPOName').clearValidators();\n                this.formOrganisationDetails.get('DPOName').reset();\n                this.formOrganisationDetails.get('DPOPhysicalAddress').clearValidators();\n                this.formOrganisationDetails.get('DPOPhysicalAddress').reset();\n                this.formOrganisationDetails.get('DPOPhoneNumber').clearValidators();\n                this.formOrganisationDetails.get('DPOPhoneNumber').reset();\n                this.formOrganisationDetails.get('DPOEmailAddress').clearValidators();\n                this.formOrganisationDetails.get('DPOEmailAddress').reset();\n                this.formOrganisationDetails.get('DPOPositionInOrganisation').clearValidators();\n                this.formOrganisationDetails.get('DPOPositionInOrganisation').reset();\n            }\n\n            this.formOrganisationDetails.controls['DPOName'].updateValueAndValidity();\n            this.formOrganisationDetails.controls['DPOPhysicalAddress'].updateValueAndValidity();\n            this.formOrganisationDetails.controls['DPOPhoneNumber'].updateValueAndValidity();\n            this.formOrganisationDetails.controls['DPOEmailAddress'].updateValueAndValidity();\n            this.formOrganisationDetails.controls['DPOPositionInOrganisation'].updateValueAndValidity();\n        });\n\n        // STEP THREE\n        this.formPersonalDataHeld.get('SourceOfDataID').valueChanges.subscribe((value) => {\n            const values: number[] = value;\n            this.selectedDataSources.length = 0;\n\n            this.dataSources?.filter((item) => {\n                if (values.includes(item.DataSourceID)) {\n                    this.selectedDataSources.push(item);\n                }\n            });\n        });\n\n        // STEP FOUR\n        this.formPurposeRetention.get('Purpose').valueChanges.subscribe((value) => {\n            const values: number[] = value;\n\n            this.selectedDataPurposes.length = 0;\n\n            // Reset all the fields first\n            this.SpecifyTheLaw = false;\n            this.ServiceOrProductProvided = false;\n            this.SpecifyLegalObligation = false;\n            this.formPurposeRetention.get('SpecifyTheLaw').clearValidators();\n            this.formPurposeRetention.get('SpecifyTheLaw').reset();\n            this.formPurposeRetention.get('ServiceOrProductProvided').clearValidators();\n            this.formPurposeRetention.get('ServiceOrProductProvided').reset();\n            this.formPurposeRetention.get('SpecifyLegalObligation').clearValidators();\n            this.formPurposeRetention.get('SpecifyLegalObligation').reset();\n\n            values?.filter((item) => {\n                if (item === 1) {\n                    this.SpecifyTheLaw = true;\n                    this.formPurposeRetention.get('SpecifyTheLaw').setValidators([Validators.required]);\n                }\n\n                if (item === 3) {\n                    this.ServiceOrProductProvided = true;\n                    this.formPurposeRetention.get('ServiceOrProductProvided').setValidators([Validators.required]);\n                }\n\n                if (item === 6) {\n                    this.SpecifyLegalObligation = true;\n                    this.formPurposeRetention.get('SpecifyLegalObligation').setValidators([Validators.required]);\n                }\n            });\n\n            this.formPurposeRetention.controls['SpecifyTheLaw'].updateValueAndValidity();\n            this.formPurposeRetention.controls['ServiceOrProductProvided'].updateValueAndValidity();\n            this.formPurposeRetention.controls['SpecifyLegalObligation'].updateValueAndValidity();\n\n            this.dataPurposes.filter((item) => {\n                if (values.includes(item.DataPurposeID)) {\n                    this.selectedDataPurposes.push(item);\n                }\n            });\n\n            this.changeDetector.detectChanges();\n        });\n\n        this.formPurposeRetention.get('RecordPercentageGrowth').valueChanges.subscribe((value) => {\n\n            if (value > 100) {\n                this.formPurposeRetention.get('RecordPercentageGrowth').patchValue(100);\n            }\n\n            this.changeDetector.detectChanges();\n        });\n\n        this.formPurposeRetention.get('RetentionPeriod').valueChanges.subscribe((value) => {\n\n            if (value > 100) {\n                this.formPurposeRetention.get('RetentionPeriod').patchValue(100);\n            }\n\n            this.changeDetector.detectChanges();\n        });\n\n        // STEP FIVE\n        this.formThirdParties.get('PersonalDataIsForDisclosure').valueChanges.subscribe((value) => {        \n            if (value === 'No') {\n                this.thirdParties.length = 0;\n    \n                this.thirdPartyDataSource = new MatTableDataSource(this.thirdParties);\n    \n                setTimeout(() => {\n                    this.thirdPartyDataSource.paginator = this.thirdPartyPaginator;\n                    this.thirdPartyDataSource.sort = this.thirdPartyMatSort;\n                });\n            }\n        });\n\n        this.formThirdParties.get('StoreDataOutsideCountry').valueChanges.subscribe((value) => {\n            if (value === 'No') {\n                this.countriesOfTransfer.length = 0;\n    \n                this.countriesDataSource = new MatTableDataSource(this.countriesOfTransfer);\n    \n                setTimeout(() => {\n                    this.countriesDataSource.paginator = this.countryOfTransferPaginator;\n                    this.countriesDataSource.sort = this.countryOfTransferMatSort;\n                });            \n            }\n        });\n    }\n\n    private onShowNotice(): void {\n        this.dialogRef = this.dialog.open(OrgNoticeComponent, {\n            panelClass: ['organisation-data-protection-officer-dialog', 'dialogs'],\n            disableClose: true,\n        });\n\n        this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: DataProtectionOfficer }) => {\n\n        });\n    }\n\n    getOrganizationNameErrorMessage(): string {\n        return this.formGeneralInformation.get('OrganizationName').hasError('required') ? 'Please enter a value' : '';\n    }\n\n    getURSBNumberErrorMessage(): string {\n        return this.formGeneralInformation.get('URSBNumber').hasError('required') ? 'Please enter a value' : '';\n    }\n\n    getSelectErrorMessage(): string {\n        return this.formGeneralInformation.get('DPPActCategory').hasError('required')\n        || this.formGeneralInformation.get('OrganizationTypeID').hasError('required')\n        || this.formGeneralInformation.get('CountryOfIncorporation').hasError('required')\n        || this.formGeneralInformation.get('SectorID').hasError('required')\n        || this.formGeneralInformation.get('NatureOfBusinessCat').hasError('required')\n        || this.formGeneralInformation.get('NatureOfBusinessSubCat').hasError('required')\n        || this.formPersonalDataHeld.get('SourceOfDataID').hasError('required')\n        || this.formPurposeRetention.get('Purpose').hasError('required')\n            ? 'Please choose a value' : '';\n    }\n\n    getTelephoneNumberErrorMessage(): string {\n        return this.formGeneralInformation.get('PhoneNumber').hasError('required') ? 'Please enter a value' :\n            this.formGeneralInformation.get('PhoneNumber').hasError('pattern') ? 'Wrong Phone number' : '';\n    }\n\n    getEmailAddressErrorMessage(): string {\n        return this.formGeneralInformation.get('EmailAddress').hasError('required') ? 'Please enter a value' :\n            this.formGeneralInformation.get('EmailAddress').hasError('email') ? 'Wrong Email Address.' : '';\n    }\n\n    getOtherSectorErrorMessage(): string {\n        return this.formGeneralInformation.get('OtherSector').hasError('required') ? 'Please enter a value' : '';\n    }\n\n    getLocationErrorMessage(): string {\n        return this.formGeneralInformation.get('Location').hasError('required') ? 'Please enter a location' : '';\n    }\n\n    getDPONameErrorMessage(): string {\n        return this.formOrganisationDetails.get('DPOName').hasError('required') ? 'Please enter a value' :\n            this.formOrganisationDetails.get('DPOName').hasError('pattern') ? 'Please enter a correct name' : '';\n    }\n\n    getDPOPhysicalAddressErrorMessage(): string {\n        return this.formOrganisationDetails.get('DPOPhysicalAddress').hasError('required') ? 'Please enter a location' : '';\n    }\n\n    getDPOPhoneNumberErrorMessage(): string {\n        return this.formOrganisationDetails.get('DPOPhoneNumber').hasError('required') ? 'Please enter a value' :\n            this.formOrganisationDetails.get('DPOPhoneNumber').hasError('pattern') ? 'Wrong Phone number' : '';\n    }\n\n    getDPOEmailAddressErrorMessage(): string {\n        return this.formOrganisationDetails.get('DPOEmailAddress').hasError('required') ? 'Please enter a value' :\n            this.formOrganisationDetails.get('DPOEmailAddress').hasError('email') ? 'Wrong Email Address.' : '';\n    }\n\n    getDPOPositionInOrganisationErrorMessage(): string {\n        return this.formOrganisationDetails.get('DPOPositionInOrganisation').hasError('required') ? 'Please enter a value' : '';\n    }\n\n    getRequiredErrorMessage(): string {\n        return this.formPurposeRetention.get('SpecifyTheLaw').hasError('required')\n        || this.formPurposeRetention.get('ServiceOrProductProvided').hasError('required')\n        || this.formPurposeRetention.get('SpecifyLegalObligation').hasError('required')\n            ? 'Please enter a value' : '';\n    }\n\n    getPatternErrorMessage(): string {\n        return this.formPurposeRetention.get('TotalRecordsAtRegistration').hasError('pattern')\n            ? 'Please enter correct information' : '';\n    }\n\n    getRetentionPeriodErrorMessage(): string {\n        return this.formPurposeRetention.get('RetentionPeriod').hasError('required') ? 'Please enter a value' :\n            this.formPurposeRetention.get('RetentionPeriod').hasError('max') ? 'Maximum of 100' :\n                this.formPurposeRetention.get('RetentionPeriod').hasError('pattern') ? 'Not valid' : '';\n    }\n\n    getRecordPercentageGrowthErrorMessage(): string {\n        return this.formPurposeRetention.get('RecordPercentageGrowth').hasError('max') ? 'Maximum of 100' :\n            this.formPurposeRetention.get('RecordPercentageGrowth').hasError('pattern') ? 'Not valid' : '';\n    }\n\n    getCheckboxErrorMessage(): string {\n        return this.formSecurityMeasures.get('RegistrationConsent').hasError('max') ? 'This field is required' : '';\n    }\n\n    getRegistrationDoneByErrorMessage(): string {\n        return this.formSecurityMeasures.get('RegistrationDoneBy').hasError('required') ? 'Please enter a value' :\n            this.formSecurityMeasures.get('RegistrationDoneBy').hasError('pattern') ? 'Please enter a correct name' : '';\n    }\n\n    updateCollecthildrenData(event){\n\n        console.log(event.value);\n    \n        if(event.value == 'Yes'){\n          this.showChildrenDataFields = true;\n          this.formChildrenData.get('PurposeForCollection').setValidators([Validators.required]);\n    \n          this.formChildrenData.controls['PurposeForCollection'].updateValueAndValidity();\n        }\n        else{\n          this.showChildrenDataFields = false;\n    \n          this.formChildrenData.get('PurposeForCollection').setValidators([]);\n    \n          this.formChildrenData.get('PurposeForCollection').reset();\n    \n          this.formChildrenData.controls['PurposeForCollection'].updateValueAndValidity();\n        }\n      }\n\n    onAddMainActivity(): void {\n        this.dialogRef = this.dialog.open(OrgMainActivityComponent, {\n            panelClass: ['organisation-main-activity-dialog', 'dialogs'],\n            disableClose: true,\n        });\n\n        this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: MainActivity }) => {\n            if (result.status) {\n                let found = false;\n                this.mainActivities.filter((activity) => {\n                    if (activity.Activity === result.row.Activity) {\n                        found = true;\n                    }\n                });\n\n                if (found) {\n                    this.service.openSnackBar('Sorry, this record already exists', 'error-lg');\n                } else {\n                    this.mainActivities.push(result.row);\n                }\n\n                this.mainActivitiesDataSource = new MatTableDataSource(this.mainActivities);\n\n                setTimeout(() => {\n                    this.mainActivitiesDataSource.paginator = this.MainActivityPaginator;\n                    this.mainActivitiesDataSource.sort = this.MainActivityMatSort;\n                });\n            }\n        });\n    }\n\n    onEditMainActivity(row: MainActivity): void {\n        this.dialogRef = this.dialog.open(OrgMainActivityComponent, {\n            panelClass: ['organisation-main-activity-dialog', 'dialogs'],\n            disableClose: true,\n            data: {row}\n        });\n\n        this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: MainActivity }) => {\n            if (result.status) {\n\n                this.mainActivities[this.mainActivities.indexOf(row)] = {\n                    Activity: result.row.Activity,\n                };\n\n                this.mainActivitiesDataSource = new MatTableDataSource(this.mainActivities);\n\n                setTimeout(() => {\n                    this.mainActivitiesDataSource.paginator = this.MainActivityPaginator;\n                    this.mainActivitiesDataSource.sort = this.MainActivityMatSort;\n                });\n            }\n        });\n    }\n\n    onRemoveMainActivity(row: MainActivity): void {\n        this.mainActivities.splice(this.mainActivities.indexOf(row), 1);\n\n        this.mainActivitiesDataSource = new MatTableDataSource(this.mainActivities);\n\n        setTimeout(() => {\n            this.mainActivitiesDataSource.paginator = this.MainActivityPaginator;\n            this.mainActivitiesDataSource.sort = this.MainActivityMatSort;\n        });\n    }\n\n    onAddADPO(): void {\n        this.dialogRef = this.dialog.open(OrgDataProtectionOfficerComponent, {\n            panelClass: ['organisation-data-protection-officer-dialog', 'dialogs'],\n            disableClose: true,\n        });\n\n        this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: DataProtectionOfficer }) => {\n            if (result.status) {\n                let found = false;\n                this.dataProtectionOfficers.filter((dpo) => {\n                    if (dpo.EmailAddress === result.row.EmailAddress || dpo.PhoneNumber === result.row.PhoneNumber) {\n                        found = true;\n                    }\n                });\n\n                if (found) {\n                    this.service.openSnackBar('Sorry, this record already exists', 'error-lg');\n                } else {\n                    this.dataProtectionOfficers.push(result.row);\n                }\n\n                this.dpoDataSource = new MatTableDataSource(this.dataProtectionOfficers);\n\n                setTimeout(() => {\n                    this.dpoDataSource.paginator = this.dpoPaginator;\n                    this.dpoDataSource.sort = this.dpoMatSort;\n                });\n            }\n        });\n    }\n\n    onEditDPO(row: DataProtectionOfficer): void {\n        this.dialogRef = this.dialog.open(OrgDataProtectionOfficerComponent, {\n            panelClass: ['organisation-data-protection-officer-dialog', 'dialogs'],\n            disableClose: true,\n            data: {row}\n        });\n\n        this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: DataProtectionOfficer }) => {\n            if (result.status) {\n\n                this.dataProtectionOfficers[this.dataProtectionOfficers.indexOf(row)] = {\n                    Name: result.row.Name,\n                    EmailAddress: result.row.EmailAddress,\n                    PhoneNumber: result.row.PhoneNumber,\n                    PhysicalAddress: result.row.PhysicalAddress,\n                    PositionInOrganisation: result.row.PositionInOrganisation,\n                };\n\n                this.dpoDataSource = new MatTableDataSource(this.dataProtectionOfficers);\n\n                setTimeout(() => {\n                    this.dpoDataSource.paginator = this.dpoPaginator;\n                    this.dpoDataSource.sort = this.dpoMatSort;\n                });\n            }\n        });\n    }\n\n    onRemoveDPO(row: DataProtectionOfficer): void {\n        this.dataProtectionOfficers.splice(this.dataProtectionOfficers.indexOf(row), 1);\n\n        this.dpoDataSource = new MatTableDataSource(this.dataProtectionOfficers);\n\n        setTimeout(() => {\n            this.dpoDataSource.paginator = this.dpoPaginator;\n            this.dpoDataSource.sort = this.dpoMatSort;\n        });\n    }\n\n    onAddSecurityMeasure(): void {\n        this.dialogRef = this.dialog.open(OrgSecurityMeasuresComponent, {\n            panelClass: ['organisation-security-measure-dialog', 'dialogs'],\n            disableClose: true,\n        });\n\n        this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: SecurityMeasure }) => {\n            if (result.status) {\n                let found = false;\n                this.securityMeasures.filter((item) => {\n                    if (item.SecurityMeasure === result.row.SecurityMeasure) {\n                        found = true;\n                    }\n                });\n\n                if (found) {\n                    this.service.openSnackBar('Sorry, this record already exists', 'error-lg');\n                } else {\n                    this.securityMeasures.push(result.row);\n                }\n\n                this.securityMeasureDataSource = new MatTableDataSource(this.securityMeasures);\n\n                setTimeout(() => {\n                    this.securityMeasureDataSource.paginator = this.securityMeasurePaginator;\n                    this.securityMeasureDataSource.sort = this.securityMeasureMatSort;\n                });\n            }\n        });\n    }\n\n    onEditSecurityMeasure(row: SecurityMeasure): void {\n        this.dialogRef = this.dialog.open(OrgSecurityMeasuresComponent, {\n            panelClass: ['organisation-security-measure-dialog', 'dialogs'],\n            disableClose: true,\n            data: {row}\n        });\n\n        this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: SecurityMeasure }) => {\n            if (result.status) {\n\n                this.securityMeasures[this.securityMeasures.indexOf(row)] = {\n                    SecurityMeasure: result.row.SecurityMeasure,\n                };\n\n                this.securityMeasureDataSource = new MatTableDataSource(this.securityMeasures);\n\n                setTimeout(() => {\n                    this.securityMeasureDataSource.paginator = this.securityMeasurePaginator;\n                    this.securityMeasureDataSource.sort = this.securityMeasureMatSort;\n                });\n            }\n        });\n    }\n\n    onRemoveSecurityMeasure(row: SecurityMeasure): void {\n        this.securityMeasures.splice(this.securityMeasures.indexOf(row), 1);\n\n        this.securityMeasureDataSource = new MatTableDataSource(this.securityMeasures);\n\n        setTimeout(() => {\n            this.securityMeasureDataSource.paginator = this.securityMeasurePaginator;\n            this.securityMeasureDataSource.sort = this.securityMeasureMatSort;\n        });\n    }\n\n    onAddAThirdParty(): void {\n        this.dialogRef = this.dialog.open(OrgThirdPartyComponent, {\n            panelClass: ['organisation-third-party-dialog', 'dialogs'],\n            disableClose: true,\n        });\n\n        this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: ThirdParty }) => {\n            if (result.status) {\n                let found = false;\n\n                this.thirdParties.filter((party) => {\n                    if (party.ThirdPartyName === result.row.ThirdPartyName) {\n                        found = true;\n                    }\n                });\n\n                if (found) {\n                    this.service.openSnackBar('Sorry, this record already exists', 'error-lg');\n                } else {\n                    this.thirdParties.push(result.row);\n                }\n\n                this.thirdPartyDataSource = new MatTableDataSource(this.thirdParties);\n\n                setTimeout(() => {\n                    this.thirdPartyDataSource.paginator = this.thirdPartyPaginator;\n                    this.thirdPartyDataSource.sort = this.thirdPartyMatSort;\n                });\n            }\n        });\n    }\n\n    onEditThirdParty(row: ThirdParty): void {\n        this.dialogRef = this.dialog.open(OrgThirdPartyComponent, {\n            panelClass: ['organisation-third-party-dialog', 'dialogs'],\n            disableClose: true,\n            data: {row}\n        });\n\n        this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: ThirdParty }) => {\n            if (result.status) {\n\n                this.thirdParties[this.thirdParties.indexOf(row)] = {\n                    ThirdPartyName: result.row.ThirdPartyName,\n                    Purpose: result.row.Purpose,\n                };\n\n                this.thirdPartyDataSource = new MatTableDataSource(this.thirdParties);\n\n                setTimeout(() => {\n                    this.thirdPartyDataSource.paginator = this.thirdPartyPaginator;\n                    this.thirdPartyDataSource.sort = this.thirdPartyMatSort;\n                });\n            }\n        });\n    }\n\n    onRemoveThirdParty(row: ThirdParty): void {\n        this.thirdParties.splice(this.thirdParties.indexOf(row), 1);\n\n        this.thirdPartyDataSource = new MatTableDataSource(this.thirdParties);\n\n        setTimeout(() => {\n            this.thirdPartyDataSource.paginator = this.thirdPartyPaginator;\n            this.thirdPartyDataSource.sort = this.thirdPartyMatSort;\n        });\n    }\n\n    onAddACountry(): void {\n        this.dialogRef = this.dialog.open(OrgCountryComponent, {\n            panelClass: ['organisation-country-dialog', 'dialogs'],\n            disableClose: true,\n        });\n\n        this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: CountryOfTransfer }) => {\n            if (result.status) {\n                let found = false;\n                this.countriesOfTransfer.filter((party) => {\n                    if (party.Country === result.row.Country) {\n                        found = true;\n                    }\n                });\n\n                if (found) {\n                    this.service.openSnackBar('Sorry, this record already exists', 'error-lg');\n                } else {\n                    this.countriesOfTransfer.push(result.row);\n                }\n\n                this.countriesDataSource = new MatTableDataSource(this.countriesOfTransfer);\n\n                setTimeout(() => {\n                    this.countriesDataSource.paginator = this.countryOfTransferPaginator;\n                    this.countriesDataSource.sort = this.countryOfTransferMatSort;\n                });\n            }\n        });\n    }\n\n    onEditCountry(row: CountryOfTransfer): void {\n        this.dialogRef = this.dialog.open(OrgCountryComponent, {\n            panelClass: ['organisation-country-dialog', 'dialogs'],\n            disableClose: true,\n            data: {row}\n        });\n\n        this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: CountryOfTransfer }) => {\n            if (result.status) {\n                this.countriesOfTransfer[this.countriesOfTransfer.indexOf(row)] = {\n                    CountryID: result.row.CountryID,\n                    Country: result.row.Country,\n                    Purpose: result.row.Purpose,\n                    Description: result.row.Description,\n                };\n\n                this.countriesDataSource = new MatTableDataSource(this.countriesOfTransfer);\n\n                setTimeout(() => {\n                    this.countriesDataSource.paginator = this.countryOfTransferPaginator;\n                    this.countriesDataSource.sort = this.countryOfTransferMatSort;\n                });\n            }\n        });\n    }\n\n    onRemoveCountry(row: CountryOfTransfer): void {\n        this.countriesOfTransfer.splice(this.countriesOfTransfer.indexOf(row), 1);\n\n        this.countriesDataSource = new MatTableDataSource(this.countriesOfTransfer);\n\n        setTimeout(() => {\n            this.countriesDataSource.paginator = this.countryOfTransferPaginator;\n            this.countriesDataSource.sort = this.countryOfTransferMatSort;\n        });\n    }\n\n    onUploadAttachments(): void {\n        this.dialogRef = this.dialog.open(OrgUploadComponent, {\n            panelClass: ['organisation-upload-dialog', 'dialogs'],\n            disableClose: true,\n            data: {\n                multiple: false\n            }\n        });\n\n        this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: FileUpload }) => {\n            // console.log('row:', result.row);\n\n            if (result.status) {\n                this.document = result.row;\n            }\n        });\n    }\n\n    onRemoveDocument(): void {\n        this.document = null;\n    }\n\n    onDownloadForm3(): void {\n        // this.formGeneralInformation.get('OrganizationName').patchValue('Applied Principles Consulting');\n        // this.formGeneralInformation.get('Location').patchValue('Bukoto street 764');\n\n        this.dialogRef = this.dialog.open(OrgForm3DialogComponent, {\n            panelClass: ['organisation-form-3-dialog', 'dialogs'],\n            disableClose: true,\n            data: {\n                OrganisationName: this.formGeneralInformation.get('OrganizationName').value,\n                PhysicalAddress: this.formGeneralInformation.get('Location').value,\n                Date: new Date()\n            }\n        });\n    }\n\n    onUploadProofOfPayment(): void {\n        this.dialogRef = this.dialog.open(OrgUploadComponent, {\n            panelClass: ['organisation-upload-dialog', 'dialogs'],\n            disableClose: true,\n            data: {\n                multiple: false\n            }\n        });\n\n        this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: FileUpload }) => {\n\n            if (result.status) {\n                this.proofOfPayment = result.row;\n            }\n        });\n    }\n\n    onRemoveProofOfPaymen(): void {\n        this.proofOfPayment = null;\n    }\n\n    onUploadForm3Attachments(): void {\n        this.dialogRef = this.dialog.open(OrgUploadComponent, {\n            panelClass: ['organisation-upload-dialog', 'dialogs'],\n            disableClose: true,\n            data: {\n                multiple: false\n            }\n        });\n\n        this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: FileUpload }) => {\n            if (result.status) {\n                this.documentForm3 = result.row;\n            }\n        });\n    }\n\n    onRemoveForm3Document(): void {\n        this.documentForm3 = null;\n    }\n\n    onChangeSubCategory(event: MatCheckboxChange, SubCategory: DataSubCategory): void {\n        if (event.checked) {\n            this.selectedDataSubCategory.push(SubCategory);\n        } else {\n            this.selectedDataSubCategory.splice(this.selectedDataSubCategory.indexOf(SubCategory), 1);\n        }\n    }\n\n    private fetchMultiple(OrgID: any): Observable<any[]> {\n        this.processing = true;\n        const reqCountries = this.http.get<ApiPayload>(this.endpoints.countries);\n        const reqDataSources = this.http.get<ApiPayload>(this.endpoints.dataSources);\n        const reqOrganisationType = this.http.get<ApiPayload>(this.endpoints.organisationType);\n        const reqSector = this.http.get<ApiPayload>(this.endpoints.sector);\n        const reqDataSubcategories = this.http.get<ApiPayload>(this.endpoints.dataSubcategories);\n        const reqDataPurpose = this.http.get<ApiPayload>(this.endpoints.dataPurpose);\n        const reqNatureOfBusiness = this.http.get<ApiPayload>(this.endpoints.natureOfBusiness);\n        const reqFetchOrganisatioDetails = this.http.get<ApiPayload>(this.endpoints.getOrgRegDetails, {params: {RegTrackingNo: OrgID}});\n        const reviewComments = this.http.get<ApiPayload>(this.endpoints.getReviewComments, {params: {RegTrackingNo: OrgID}});\n\n        // tslint:disable-next-line:max-line-length\n        return forkJoin([reqCountries, reqDataSources, reqOrganisationType, reqSector, reqDataSubcategories, reqDataPurpose, reqNatureOfBusiness, reqFetchOrganisatioDetails, reviewComments]);\n    }\n\n    private getFormData(): any {\n        const data = {\n            OrganisationID: this.application && this.application.OrganisationID ? String(this.application.OrganisationID) : '',\n            RegTrackingNo: this.application && this.application.RegTrackingNo ? this.application.RegTrackingNo : '',\n            OrganisationName: this.formGeneralInformation.get('OrganizationName').value,\n            OrganisationCategory: this.selectedOrganisationCategories,\n            OrganizationTypeID: this.formGeneralInformation.get('OrganizationTypeID').value,\n            CountryOfIncorporation: this.formGeneralInformation.get('CountryOfIncorporation').value ? this.formGeneralInformation.get('CountryOfIncorporation').value : 0,\n            URSBNumber: this.formGeneralInformation.get('URSBNumber').value ? this.formGeneralInformation.get('URSBNumber').value : '',\n            SectorID: this.formGeneralInformation.get('SectorID').value,\n            OtherSector: this.formGeneralInformation.get('OtherSector').value ? this.formGeneralInformation.get('OtherSector').value : '',\n            Location: this.formGeneralInformation.get('Location').value,\n            // tslint:disable-next-line:max-line-length\n            PhoneNumber: this.formGeneralInformation.get('PhoneNumberCode').value + (this.formGeneralInformation.get('PhoneNumber').value).replaceAll(' ', ''),\n            EmailAddress: this.formGeneralInformation.get('EmailAddress').value,\n            NatureOfBusinessCatID: this.formGeneralInformation.get('NatureOfBusinessCat').value ? this.formGeneralInformation.get('NatureOfBusinessCat').value : 0,\n            NatureOfBusiness: this.selectedNatureOfBusinessSubCat,\n            DPORequired: this.formOrganisationDetails.get('DPORequired').value,\n            DPOName: this.formOrganisationDetails.get('DPORequired').value === 'Yes' ? this.formOrganisationDetails.get('DPOName').value : '',\n            DPOPhysicalAddress: this.formOrganisationDetails.get('DPORequired').value === 'Yes' ? this.formOrganisationDetails.get('DPOPhysicalAddress').value : '',\n            // tslint:disable-next-line:max-line-length\n            DPOPhoneNumber: this.formOrganisationDetails.get('DPOPhoneNumber').value ? this.formOrganisationDetails.get('PhoneNumberCode').value + (this.formOrganisationDetails.get('DPOPhoneNumber').value).replaceAll(' ', '') : '',\n            DPOEmailAddress: this.formOrganisationDetails.get('DPORequired').value === 'Yes' ? this.formOrganisationDetails.get('DPOEmailAddress').value : '',\n            DPOPositionInOrganisation: this.formOrganisationDetails.get('DPORequired').value === 'Yes' ? this.formOrganisationDetails.get('DPOPositionInOrganisation').value : '',\n            SourceOfDataID: this.selectedDataSources,\n            PersonalDataCollected: this.selectedDataSubCategory,\n            Purpose: this.selectedDataPurposes,\n            SpecifyTheLaw: this.formPurposeRetention.get('SpecifyTheLaw').value ? this.formPurposeRetention.get('SpecifyTheLaw').value : '',\n            ServiceOrProductProvided: this.formPurposeRetention.get('ServiceOrProductProvided').value ? this.formPurposeRetention.get('ServiceOrProductProvided').value : '',\n            SpecifyLegalObligation: this.formPurposeRetention.get('SpecifyLegalObligation').value ? this.formPurposeRetention.get('SpecifyLegalObligation').value : '',\n            // tslint:disable-next-line:max-line-length\n            TotalRecordsAtRegistration: this.formPurposeRetention.get('TotalRecordsAtRegistration').value ? parseInt(this.formPurposeRetention.get('TotalRecordsAtRegistration').value, 10) : 0,\n            RecordPercentageGrowth: this.formPurposeRetention.get('RecordPercentageGrowth').value ? parseInt(this.formPurposeRetention.get('RecordPercentageGrowth').value, 10) : 0,\n            RetentionPeriod: this.formPurposeRetention.get('RetentionPeriod').value ? parseInt(this.formPurposeRetention.get('RetentionPeriod').value, 10) : 0,\n            PersonalDataIsForDisclosure: this.formThirdParties.get('PersonalDataIsForDisclosure').value,\n            ThirdParties: this.thirdParties,\n            StoreDataOutsideCountry: this.formThirdParties.get('StoreDataOutsideCountry').value,\n            Countries: this.countriesOfTransfer,\n            SecurityMeasures: this.securityMeasures,\n            Attachment: this.document && this.document.Base64 ? this.document.Base64 : '',\n            Form3Attachment: this.documentForm3 && this.documentForm3.Base64 ? this.documentForm3.Base64 : '',\n            RegistrationConsent: this.formSecurityMeasures.get('RegistrationConsent').value ? true : false,\n            RegistrationDoneBy: this.formSecurityMeasures.get('RegistrationDoneBy').value ? this.formSecurityMeasures.get('RegistrationDoneBy').value : '',\n            ProofOfPayment: this.proofOfPayment && this.proofOfPayment.Base64 ? this.proofOfPayment.Base64 : '',\n            ChildrenDataPurpose: this.selectedChildDataPurposes ? this.selectedChildDataPurposes : [],\n            CollectChildrenData: this.formChildrenData.get('CollectChildrenData').value ? this.formChildrenData.get('CollectChildrenData').value : '',\n        };\n\n        return data;\n    }\n\n    onNatureOfBusinessCatSelected(NatureOfBusinessCatId): void {\n        // console.log('here:', NatureOfBusinessCatId);\n        // tslint:disable-next-line:max-line-length\n        this.httpSub = this.http.get<NatureOfBusinessSubCat[]>(this.endpoints.natureOfBusiness + '?NatureOfBusinessSubCat=' + NatureOfBusinessCatId)\n        .pipe(catchError(this.service.handleError))\n        .subscribe((response) => {\n            \n            this.natureOfBusinessSubCat = response;\n            // console.log('natureOfBusinessSubCat:', this.natureOfBusinessSubCat);\n\n            }, (error) => {\n                this.processing = false;\n                this.service.determineErrorResponse(error);\n            });\n    }\n\n    onPreviewForm(download: boolean): void {\n        this.dialogRef = this.dialog.open(OrgRegistrationPreviewDialogComponent, {\n            panelClass: ['organisation-registration-preview-form-3-dialog', 'dialogs'],\n            disableClose: true,\n            data: {\n                download: download,\n                row: this.getFormData(),\n                Attachment: this.document ? this.document : '',\n                Form3: this.documentForm3 ? this.documentForm3 : '',\n                ProofOfPayment: this.proofOfPayment ? this.proofOfPayment : '',\n                OrganizationType: this.OrganizationType,\n                // tslint:disable-next-line:max-line-length\n                Sector: this.formGeneralInformation.get('OtherSector').value ? this.formGeneralInformation.get('OtherSector').value : this.SectorName,\n                NatureOfBusinessCat: this.NatureOfBusinessCat,\n                CountryOfIncorporation: this.CountryOfIncorporation\n            }\n        });\n    }\n\n    fetchSingleApplication(response, comments): void {\n        this.application = response;\n\n        console.log(comments.data.data.length);\n        console.log(comments.data.data);\n\n        if(comments.data.data.length < 1){\n\n        }\n        else if(comments.data.data.length == 1){\n\n        this.formSecurityMeasures.get('TechnicalComments').patchValue(comments.data.data[0][2]);\n        }\n        else if(comments.data.data.length == 2){\n            this.formSecurityMeasures.get('TechnicalComments').patchValue(comments.data.data[0][2]);\n            this.formSecurityMeasures.get('LegalComments').patchValue(comments.data.data[1][2]);\n        }\n        else if(comments.data.data.length == 3){\n            this.formSecurityMeasures.get('TechnicalComments').patchValue(comments.data.data[0][2]);\n            this.formSecurityMeasures.get('LegalComments').patchValue(comments.data.data[1][2]);\n            this.formSecurityMeasures.get('DirectorComments').patchValue(comments.data.data[2][2]);\n      \n        }\n        else{\n            \n        }\n\n        // console.log('application:', this.application);\n        // console.log('_StepRequestingForMoreInfo:', this._StepRequestingForMoreInfo);\n\n        this.hasRequestForMoreInfo(this.application.RegTrackingNo);\n        this.findDocumentActions(1, this.application.CurrentStepID);\n        this.getDocumentWorkflow(this.application.RegTrackingNo, this.workflowID);\n\n        // console.log('object:', this.application);\n\n        if (this.application.CurrentStepName === 'Certificate Issued') {\n            if (this.isOfficer) {\n                this.getIssuedCertDetails(+this.application.OrganisationID);\n            } else {\n                this.getIssuedCertDetails(parseInt(this.application.OrganisationID, 10));\n            }\n        }\n\n        this.formGeneralInformation.get('OrganizationName').patchValue(this.application.OrganisationName);\n        this.organisationcategories = this.application.OrganisationCategory;\n\n        this.organisationcategories.filter((item) => {\n            this.cat.push(item.OrganisationCategoryId);\n        });\n\n        this.formGeneralInformation.get('DPPActCategory').patchValue(this.cat);\n\n        this.formGeneralInformation.get('OrganizationTypeID').patchValue(this.application.OrganizationTypeID);\n        this.formGeneralInformation.get('URSBNumber').patchValue(this.application.URSBNumber);\n        this.formGeneralInformation.get('SectorID').patchValue(this.application.SectorID);\n        this.formGeneralInformation.get('CountryOfIncorporation').patchValue(response['CountryOfIncorporation']);\n        this.formGeneralInformation.get('OtherSector').patchValue(response['OtherSector']);\n        this.formGeneralInformation.get('Location').patchValue(this.application.Location);\n        this.formGeneralInformation.get('PhoneNumberCode').patchValue(this.application.PhoneNumber.substring(0, 3));\n        this.formGeneralInformation.get('PhoneNumber').patchValue(this.application.PhoneNumber.substring(3, 13));\n        this.formGeneralInformation.get('EmailAddress').patchValue(this.application.EmailAddress);\n\n        if (response['NatureOfBusiness'].length) {\n            this.formGeneralInformation.get('NatureOfBusinessCat').patchValue(response['NatureOfBusiness'][0]['NatureOfBusinessCatID']);\n            this.natureOfbusinesses = response['NatureOfBusiness'];\n\n            this.onNatureOfBusinessCatSelected(response['NatureOfBusiness'][0]['NatureOfBusinessCatID']);\n            \n            let _selectedNatureOfBusinessSubCat: NatureOfBusinessSubCat[] = [];\n            this.natureOfbusinesses.filter((item) => {\n                this.natureOfbusinesses_arr.push(item.NatureOfBusinessSubatID);\n\n                _selectedNatureOfBusinessSubCat.push({\n                    NatureOfBusinessSubCatId: item.NatureOfBusinessSubatID,\n                    NatureOfBusinessSubCategoryName: item.NatureOfBusinessSubCategoryName\n                });\n            });\n            \n            this.formGeneralInformation.get('NatureOfBusinessSubCat').patchValue(this.natureOfbusinesses_arr);\n            this.selectedNatureOfBusinessSubCat = _selectedNatureOfBusinessSubCat;\n        }\n\n\n        // STEP TWO\n        this.formOrganisationDetails.get('DPORequired').patchValue(response['DPORequired']);\n\n        this.formOrganisationDetails.get('DPOName').patchValue(response['DPOName']);\n        this.formOrganisationDetails.get('DPOPhysicalAddress').patchValue(response['DPOPhysicalAddress']);\n        this.formOrganisationDetails.get('PhoneNumberCode').patchValue(response['DPOPhoneNumber'].substring(0, 3));\n        this.formOrganisationDetails.get('DPOPhoneNumber').patchValue(response['DPOPhoneNumber'].substring(3, 13));\n        this.formOrganisationDetails.get('DPOEmailAddress').patchValue(response['DPOEmailAddress']);\n        this.formOrganisationDetails.get('DPOPositionInOrganisation').patchValue(response['DPOPositionInOrganisation']);\n\n        // STEP THREE\n        this.sourceofdata = response['SourceOfDataID'];\n        this.sourceofdata.filter((item) => {\n            this.sourceofdata_arr.push(item.DataSourceID);\n        });\n\n        /// CHILDREN DATA \n\n        this.formChildrenData.get('CollectChildrenData').patchValue(response['CollectChildrenData']);\n        if(response['CollectChildrenData'] == 'Yes'){\n            this.showChildrenDataFields = true;\n            this.childDataPurposes = response['ChildrenDataPurpose']\n            let _selectedChildrenDataPurposes: ChildrenDataPurpose[] = [];\n            this.childDataPurposes.filter((item) => {\n    \n                this.childDataPurposeResults.push(item.ChildDataID);\n            })\n    \n    \n            this.formChildrenData.get('PurposeForCollection').patchValue(this.childDataPurposeResults);\n        }\n\n       \n\n        const personalDataCollected: DataSubCategory[] = response['PersonalDataCollected'];\n\n        this.dataCategories.filter((category) => {\n            personalDataCollected.filter((selectedCat) => {\n                if (category.DataCategoryID === selectedCat.DataCategoryID) {\n                    category.SubCategories.filter((subCat) => {\n                        personalDataCollected.filter((selectedSubCat) => {\n                            if (subCat.DataSubCategoryID === selectedSubCat.DataSubCategoryID) {\n                                subCat.IsChecked = true;\n                                this.selectedDataSubCategory.push(subCat);\n                            }\n                        });\n                    });\n                }\n            });\n        });\n\n        // STEP FOUR\n        this.formPersonalDataHeld.get('SourceOfDataID').patchValue(this.sourceofdata_arr);\n\n        this.purpose = response['Purpose'];\n        let _selectedDataPurposes: DataPurposes[]  = []\n\n        this.purpose.filter((item) => {\n            if (item.DataPurposeID === 1) {\n                this.SpecifyTheLaw = true;\n                this.formPurposeRetention.get('SpecifyTheLaw').setValidators([Validators.required]);\n            }\n\n            if (item.DataPurposeID === 3) {\n                this.ServiceOrProductProvided = true;\n                this.formPurposeRetention.get('ServiceOrProductProvided').setValidators([Validators.required]);\n            }\n\n            if (item.DataPurposeID === 6) {\n                this.SpecifyLegalObligation = true;\n                this.formPurposeRetention.get('SpecifyLegalObligation').setValidators([Validators.required]);\n            }\n\n            this.purpose_arr.push(item.DataPurposeID);\n\n            _selectedDataPurposes.push(item);\n        });\n        \n        this.formPurposeRetention.get('Purpose').patchValue(this.purpose_arr);\n        this.selectedDataPurposes = _selectedDataPurposes;\n\n        this.formPurposeRetention.get('SpecifyTheLaw').patchValue(response['SpecifyTheLaw']);\n        this.formPurposeRetention.get('ServiceOrProductProvided').patchValue(response['ServiceOrProductProvided']);\n        this.formPurposeRetention.get('SpecifyLegalObligation').patchValue(response['SpecifyLegalObligation']);\n        this.formPurposeRetention.get('TotalRecordsAtRegistration').patchValue(response['TotalRecordsAtRegistration']);\n        this.formPurposeRetention.get('RecordPercentageGrowth').patchValue(response['RecordPercentageGrowth']);\n        this.formPurposeRetention.get('RetentionPeriod').patchValue(response['RetentionPeriod']);\n\n        // this.formPurposeRetention.get('RegistrationConsent').patchValue('');\n\n        // STEP FIVE\n        this.formThirdParties.get('PersonalDataIsForDisclosure').patchValue(response['PersonalDataIsForDisclosure'].replace(/\\s/g, ''));\n        this.thirdParties = response['ThirdParties'];\n        this.thirdPartyDataSource = new MatTableDataSource(this.thirdParties);\n\n        setTimeout(() => {\n            this.thirdPartyDataSource.paginator = this.thirdPartyPaginator;\n            this.thirdPartyDataSource.sort = this.thirdPartyMatSort;\n        });\n        this.thirdPartyDataSource = new MatTableDataSource(response['ThirdParties']);\n\n        this.formThirdParties.get('StoreDataOutsideCountry').patchValue(response['StoreDataOutsideCountry']);\n        this.countriesOfTransfer = response['Countries'];\n        this.countriesDataSource = new MatTableDataSource(this.countriesOfTransfer);\n\n        setTimeout(() => {\n            this.countriesDataSource.paginator = this.countryOfTransferPaginator;\n            this.countriesDataSource.sort = this.countryOfTransferMatSort;\n        });\n\n        // STEP SIX\n        this.securityMeasures = response['SecurityMeasures'];\n        this.securityMeasureDataSource = new MatTableDataSource(this.securityMeasures);\n        setTimeout(() => {\n            this.securityMeasureDataSource.paginator = this.securityMeasurePaginator;\n            this.securityMeasureDataSource.sort = this.securityMeasureMatSort;\n        });\n\n        // Supporting Documents.\n        this.document = { \n            Document: null, \n            Name: 'Supporting Documentation.pdf', \n            Size: null, \n            Base64: this.application.Attachment \n        };\n\n        this.documentForm3 = { \n            Document: null, \n            Name: 'Form 3.pdf', \n            Size: null, \n            Base64: this.application.Form3Attachment \n        };\n\n        this.proofOfPayment = {\n            Document: null, \n            Name: 'Proof of Payment.pdf', \n            Size: null, \n            Base64: this.application.ProofOfPayment \n        };\n\n        // console.log('document:', this.document);\n        // console.log('documentForm3:', this.documentForm3);\n        // console.log('proofOfPayment:', this.proofOfPayment);\n\n        this.formSecurityMeasures.get('RegistrationConsent').patchValue('true');\n        this.formSecurityMeasures.get('RegistrationDoneBy').patchValue(this.application.RegistrationDoneBy);\n    }\n\n    onSubmit(): void {\n        this.processing = true;\n        // console.log('save the registration information:', this.getFormData());\n\n        this.httpSub = this.http.post<ApiPayload>(this.endpoints.orgRegistration, this.getFormData())\n            .pipe(catchError(this.service.handleError))\n            .subscribe((response) => {\n\n                // console.log('response:', response);\n\n                // Clear all the form Data\n\n                // console.log('response:', response);\n                // Show the dialog window for processing payment.\n\n                this.dialogRef = this.dialog.open(SuccessfulMessageDialogComponent, {\n                    panelClass: ['successful-message-dialog', 'dialogs'],\n                    disableClose: true,\n                    data: {\n                        title: response.message['title'],\n                        message: response.message['body'],\n                        status: response.code === 200 ? true : false,\n                    }\n                });\n\n                this.dialogRef.afterClosed().subscribe(() => {\n                    window.location.reload();\n                });\n\n                this.processing = false;\n            }, (error) => {\n                this.processing = false;\n\n                if (error.error.message) {\n                    this.dialogRef = this.dialog.open(SuccessfulMessageDialogComponent, {\n                        panelClass: ['successful-message-dialog', 'dialogs'],\n                        disableClose: true,\n                        data: {\n                            title: error.error.message['title'],\n                            message: error.error.message['body'],\n                            status: false,\n                        }\n                    });\n                } else {\n                    this.service.determineErrorResponse(error);\n                }\n            });\n    }\n\n    onSubmitRequestedInfor(): void {\n        this.processing = true;\n        // console.log('save the registration information:', this.getFormData());\n\n        this.httpSub = this.http.put<ApiPayload>(this.endpoints.orgRegistration, this.getFormData())\n            .pipe(catchError(this.service.handleError))\n            .subscribe((response) => {\n\n                this.dialogRef = this.dialog.open(SuccessfulMessageDialogComponent, {\n                    panelClass: ['successful-message-dialog', 'dialogs'],\n                    disableClose: true,\n                    data: {\n                        title: response.message['title'],\n                        message: response.message['body'],\n                        status: response.code === 200 ? true : false,\n                    }\n                });\n\n                this.dialogRef.afterClosed().subscribe(() => {\n                    // window.location.reload();\n                    // this.getDataFromMultipleRequests();\n                    this.route.navigate(['/company-registration/find']);\n                });\n\n                this.processing = false;\n            }, (error) => {\n                this.processing = false;\n\n                if (error.error.message) {\n                    this.dialogRef = this.dialog.open(SuccessfulMessageDialogComponent, {\n                        panelClass: ['successful-message-dialog', 'dialogs'],\n                        disableClose: true,\n                        data: {\n                            title: error.error.message['title'] ? error.error.message['title'] : 'Operation Failed',\n                            message: error.error.message['body'] ? error.error.message['body'] : environment.technicalErrorResponse,\n                            status: false,\n                        }\n                    });\n                } else {\n                    this.service.determineErrorResponse(error);\n                }\n            });\n    }\n\n    ngOnDestroy(): void {\n        if (this.httpSub) { this.httpSub.unsubscribe(); }\n        if (this.bottomsheetRef) { this.bottomsheetRef.dismiss(); }\n    }\n\n    // DisableByStatus\n    disableByStatus() {\n        if ((this.isApplicant && this.application &&\n                this.application.CurrentStepName !== 'Application Review - Legal' &&\n                this.application.CurrentStepName !== 'Application Review - Legal' &&\n                this.application.CurrentStepName !== 'Final Approver' &&\n                this.application.CurrentStepName !== 'Application Review - Technical' &&\n                this.application.CurrentStepName !== 'Certificate Issued') ||\n            (!this.isApplicant)) {\n            this.disableAllControls();\n        }\n    }\n\n    disableAllControls() {\n        this.formSecurityMeasures.disable();\n        this.formGeneralInformation.disable();\n        this.formOrganisationDetails.disable();\n        this.formPersonalDataHeld.disable();\n        this.formPurposeRetention.disable();\n        this.formThirdParties.disable();\n        this.formChildrenData.disable();\n    }\n\n    workflowSubscriptions() {\n        // Document Actions\n        if (this.operationType === 'MANAGE') {\n            this.subscriptions['$resultWorkFlowActionsEvent'] = this.$resultWorkFlowActionsEvent.subscribe(result => {\n                this.errors = [];\n                if (result) {\n\n                    this.isOfficer = this.timeLineAccess.includes(this.realmRole);\n                    \n                    console.log(this.realmRole);\n\n                    this.workFlowActions = result;\n                    console.log('this.workFlowActions:', this.workFlowActions);\n\n                    this.hasStepAccess = this.workFlowActions.StepAccess;\n                    console.log('this.hasStepAccess:', this.hasStepAccess);\n\n                    if (this.isOfficer) {\n                        console.log('This is an Officer');\n\n                        if (this.hasStepAccess) {\n                            console.log('this.workFlowActions.Actions:', this.workFlowActions.Actions);\n                            this.permittedActions = this.workFlowActions.Actions.filter(access => this.accesses.includes(access.ActionRole));\n                            console.log('permittedActions:', this.permittedActions);\n    \n                            if (this.permittedActions.length === 0) {\n                                this.snackBar.snackBarAlert(\n                                    'ERROR', 'Unauthorized To Perform Action On This Document ', {\n                                        duration: 5000\n                                    }\n                                );\n                            }\n                        }\n                    } else  {\n                        // console.log('This is an Organisation... Allow the DPO to provide feedback');\n                    }                 \n\n                    this.isLoaded = true;\n                }\n            });\n        }\n\n        // HasRequest For More info check\n        this.subscriptions['$resultRequestMoreInfo'] = this.$resultRequestMoreInfo.subscribe(result => {\n            this.errors = [];\n            // console.log('result:', result);\n\n            if (result) {\n                // this.hasRequestMoreInfo = result.HasRequest !== 'No';\n                this._hasRequestMoreInfo = result.HasRequest === 'Yes' ? true : false;\n                this.requestMoreInfoFields = result.Fields;\n                this._StepRequestingForMoreInfo = Number(result.StepID);\n\n                // console.log('hasRequestMoreInfo Result  ' + JSON.stringify(result));\n                // console.log('requestMoreInfoFields  ' + this.requestMoreInfoFields);\n                // console.log('hasRequestMoreInfo  ' + this._hasRequestMoreInfo);\n                // console.log('hasRequestMoreInfo type of ' + typeof this._hasRequestMoreInfo);\n                // console.log('_StepRequestingForMoreInfo  ' + this._StepRequestingForMoreInfo);\n\n                // console.log('this.application.CurrentStepID:', this.application.CurrentStepID);\n                // console.log('this._hasRequestMoreInfo:', this._hasRequestMoreInfo);\n\n                this._hasRequestMoreInfo = this.application.CurrentStepID == this._StepRequestingForMoreInfo ? true : false;\n                // console.log('this._hasRequestMoreInfo:', this._hasRequestMoreInfo);\n\n                if(this._hasRequestMoreInfo === true) {\n                    // console.log('enable request for more infor ---- ');\n                    this.EnableRequestForMoreInformationFields();\n                }\n            }\n        });\n\n        // Action Performed\n        this.subscriptions['$resultPerformActionEvent'] = this.$resultPerformActionEvent.subscribe(result => {\n            this.errors = [];\n\n            if (result.message === 'Success') {\n                \n                // this.fetchMultiple(this.regTrackingNo);\n                this.getDataFromMultipleRequests();\n\n                // this.snackBar.snackBarAlert(\n                //     'SUCCESS', 'Action Was Successfully, Registration Moved To Next Step', {\n                //         duration: 10000\n                //     }\n                // );\n\n                this.snackBar.openSnackBar(\n                    'Action Was Successfully, Registration Moved To Next Step',\n                    'success'\n                );\n\n                // Check if the user can print the certificate\n                this.getIssuedCertDetails(+this.application.OrganisationID);\n\n                this.permittedActions = [];\n            }\n        });\n\n        // Action Performed\n        this.subscriptions['$resultDocumentWorkflowTimelineEvent'] = this.$resultDocWorkFlowTimelineEvent.subscribe(result => {\n            this.errors = [];\n            if (result) {\n                this.workflowTimeLine = result;\n\n                this.currentStep = this.workflowTimeLine.data.find(\n                    step => +step.StepID === this.application.CurrentStepID\n                );\n\n                this.application.Status = this.currentStep.StepName;\n                // this.applicantDetails.get('status').setValue(this.application.Status);\n            }\n        });\n\n        // GetCertificate\n        this.subscriptions['$resultDocumentCertificate'] = this.$resultDocumentCertificate.subscribe(result => {\n            if (result) {\n                this.certificateDetails = result;\n\n                this.isOfficer = this.timeLineAccess.includes(this.realmRole);\n                \n                if (this.isOfficer) {\n                    this.canDownloadCertificate = true;\n                } else {\n                    if (this.certificateDetails.DownloadCount < 1) {\n                        this.canDownloadCertificate = true;\n                    } else {\n                        this.canDownloadCertificate = false;\n                    }\n                }\n                // console.log('CanPrint' + this.canDownloadCertificate);\n                this.certificateDetails.OrganizationID = this.application.OrganisationName;\n            }\n        });\n\n        this.subscriptions['$resultRefChecklistEvent'] = this.$resultRefChecklistEvent.subscribe(result => {\n            if (result) {\n                this.$checklist = result.filter(\n                    e => {\n                        if (this.realmRole === 'data-protection-officer-technical') {\n                            return e.ChecklistSection === 'Technical';\n                        } else {\n                            return e.ChecklistSection === 'Legal';\n                        }\n                    }\n                );\n            }\n        });\n    }\n\n    // Perform Document Action\n    performAction(action: Action) {\n        this.dialog.open(ReviewCommentsComponent, {\n            width: '1391px',\n            height: '595px',\n            data: {\n                checklist: (action.ActionName === WorkFlowConstants.TECHNICAL_REVIEW_ACTION ||\n                    action.ActionName === WorkFlowConstants.LEGAL_REVIEW_ACTION) ? this.$checklist : [],\n                action: action,\n                directorChecklist: this.application.CheckList,\n                isRequestForMoreInfo: true\n            }\n        }).afterClosed().subscribe((dialogResult) => {\n            if (dialogResult !== null && dialogResult !== '') {\n                if (action.ActionName === WorkFlowConstants.REQUEST_MORE_INFO_ACTION) {\n                    this.performActionRMI(action, dialogResult.requestedMoreFields);\n                    this.getDataFromMultipleRequests();\n                } else {\n                    this.performActionFinal(action, dialogResult.checklist, dialogResult.comment);\n                }\n            }\n        });\n    }\n\n    // Performing Final Action i.e Technical / Legal Review\n    performActionFinal(action: Action, checklist: Checked[], comment: string) {\n        const performedAction = new ActionPerformed();\n        performedAction.WorkFlowID = this.workflowID;\n        performedAction.ActionID = action.ActionID.toString();\n        performedAction.RecordTrackingNo = this.application.RegTrackingNo;\n        performedAction.CurrentStepID = this.application.CurrentStepID.toString();\n        performedAction.Comment = comment;\n        performedAction.ActionIsFinal = action.ActionIsFinal;\n        performedAction.CheckList = checklist;\n\n        this.performingAction(performedAction);\n\n        if (action.ActionName === 'Approve / Issue Certificate') {\n            this.generateCert(+this.application.OrganisationID, 'New');\n        }\n    }\n\n    // Perform Action Request More Info\n    performActionRMI(action: Action, fields: $RequestMoreInfoField[]) {\n        const rqMoreInfo = new ActionPerformedRequestMoreInfo();\n        rqMoreInfo.Comment = 'REQUESTED MORE INFO';\n        rqMoreInfo.ActionID = action.ActionID.toString();\n        rqMoreInfo.CurrentStepID = this.application.CurrentStepID.toString();\n        rqMoreInfo.RecordTrackingNo = this.application.RegTrackingNo;\n        rqMoreInfo.Email = this.application.EmailAddress;\n        rqMoreInfo.NextStepID = '3';\n        rqMoreInfo.Fields = fields;\n        this.performActionRequestMoreInfo(rqMoreInfo);\n    }\n\n    // Certificate Preview\n    previewCert() {\n        this.dialog.open(CertPreviewComponent, {\n            panelClass: ['organisation-certificate-dialog', 'dialogs'],\n            data: this.certificateDetails\n        }).afterClosed().subscribe((_) => {\n            this.getIssuedCertDetails(+this.application.OrganisationID);\n        });\n    }\n\n    viewApplicationTimeLine() {\n        this.dialog.open(ApplicationTimelineComponent, {\n            width: '941px',\n            height: '595px',\n            data: this.workflowTimeLine\n        });\n    }\n\n    private EnableRequestForMoreInformationFields(): void {\n        this.isOfficer = this.timeLineAccess.includes(this.realmRole);\n\n        // console.log('this.isOfficer:', this.isOfficer);\n        // console.log('this.requestMoreInfoFields:', this.requestMoreInfoFields);\n\n        if (!this.isOfficer) {\n            this.requestMoreInfoFields.filter((field) => {\n                // console.log('item:', field);\n    \n                // Break them up into sections...\n                // Then for each... check if the field is the one being inspected.\n                this.formFieldSections.filter((section) => {\n                    if (section.SectionID === field.SectionID) {\n                        section.Count += 1; \n                    }\n                });\n    \n                // Step One\n                if (field.SectionID === 1) {\n                    \n                    this.formGeneralInformation.get(field.FieldName).enable();\n                    \n                    if (field.FieldName === 'NatureOfBusinessCat') {\n                        this.formGeneralInformation.get('NatureOfBusinessSubCat').enable();\n                        this.formFieldSections[0].Count = this.formFieldSections[0].Count + 1;\n                    } else if (field.FieldName === 'SectorID') {\n                        this.formGeneralInformation.get('OtherSector').enable();\n                        this.formFieldSections[0].Count = this.formFieldSections[0].Count + 1;\n                    }\n                    \n                // Step Two\n                } else if (field.SectionID === 2) {\n                    \n                    this.formOrganisationDetails.get(field.FieldName).enable();\n                \n                // Step Three\n                } else if (field.SectionID === 3) {\n                \n                    if (field.FieldName === 'PersonalDataCollected') {\n                        this.personalDataCollectedCheckBoxEnabled = true;\n                    } else {\n                        this.formPersonalDataHeld.get(field.FieldName).enable();\n                    }\n                    \n                // Step Four\n                } else if (field.SectionID === 4) {\n                    \n                    if (field.FieldName === 'Purpose') {\n                        \n                        this.formPurposeRetention.get('SpecifyTheLaw').enable();\n                        this.formPurposeRetention.get('ServiceOrProductProvided').enable();\n                        this.formPurposeRetention.get('SpecifyLegalObligation').enable();\n\n                        this.formFieldSections[3].Count = this.formFieldSections[0].Count + 4;\n                    }\n\n                    this.formPurposeRetention.get(field.FieldName).enable();\n    \n                // Step Five\n                } else if (field.SectionID === 5) {\n                    if (field.FieldName === 'PersonalDataIsForDisclosure') {\n                        this.thirdPartiesEnabled = true;\n                        this.formFieldSections[4].Count = this.formFieldSections[0].Count + 1;\n                    } else if (field.FieldName === 'StoreDataOutsideCountry') {\n                        this.formFieldSections[4].Count = this.formFieldSections[0].Count + 1;\n                        this.countriesOfTransferEnabled = true;\n                    } \n\n                    this.formThirdParties.get(field.FieldName).enable();\n    \n                // Step Six\n                } else if (field.SectionID === 6) {\n                    \n                    if (field.FieldName === 'SecurityMeasures') {\n                        this.securityMeasuresEnabled = true;\n                    } else if (field.FieldName === 'Attachment') {\n                        this._updateAttachment = true;\n                    } else if (field.FieldName === 'Form3Attachment') {\n                        this._updateForm3Attachment = true;\n                    } else if (field.FieldName === 'ProofOfPayment') {\n                        this._updateProofOfPayment = true;\n                    } else {\n                        this.formSecurityMeasures.get(field.FieldName).enable();\n                    }\n    \n                }\n            });\n\n            // Register Listeners\n            this.Listeners();            \n        }\n    }\n\n    onReadDocument(document: FileUpload): void {\n        // console.log('document:', document);\n        this.bottomsheetRef = this.bottomsheet.open(ViewPdfDocumentBottomsheetComponent, {\n            disableClose: true,\n            panelClass: ['view-pdf-document-bottomsheet', 'bottomsheets'],\n            data: {\n              url: document.Base64,\n              title: document.Name\n            }\n        });      \n    }\n\n    getSelectedPurpose(): string {\n        let _purpose = '';\n        this.selectedDataPurposes.filter((item, index: number) => {\n            _purpose += (index > 0 ? ', ' : '') +  item.DataPurpose \n        });\n\n        return _purpose;\n    }\n\n    getSelectedNatureOfBusinessSubCat(): string {\n        let _subcategories = '';\n        this.selectedNatureOfBusinessSubCat.filter((item, index: number) => {\n            _subcategories += (index > 0 ? ', ' : '') +  item.NatureOfBusinessSubCategoryName \n        });\n\n        return _subcategories;\n    }\n\n}\n","\n<fury-page-layout mode=\"card\">\n    <fury-page-layout-header>\n        <fury-breadcrumbs \n            [@fadeInRight] \n            [crumbs]=\"[application ? application.OrganisationName : 'New Application']\"\n            [current]=\" application ? application.RegTrackingNo : 'New Application' \">\n        </fury-breadcrumbs>\n    </fury-page-layout-header>\n\n    <fury-page-layout-content [@fadeInUp]>\n        \n        <div class=\"actions-button-padding\">\n            <mat-toolbar\n                    *ngIf=\"permittedActions.length > 0 || application.CurrentStepName === 'Certificate Issued' || isOfficer \">\n                <mat-toolbar-row>\n                    <ng-container *ngFor=\"let operation of permittedActions\">\n                        <button \n                            [disabled]=\"application.CurrentStepID == _StepRequestingForMoreInfo\"\n                            mat-raised-button [color]=\"operation.ActionColor\" class=\"actions-button-padding\"\n                                (click)=\"performAction(operation)\">\n                            <mat-icon>{{operation.ActionIcon}}</mat-icon>\n                            <span> {{operation.ActionName}}</span>\n                        </button>\n                    </ng-container>\n\n                    <span class=\"example-spacer\"></span>\n\n                    <button mat-raised-button matTooltip=\"Print Certificate\" [disabled]=\"!canDownloadCertificate\"\n                        *ngIf=\"application.CurrentStepName === 'Certificate Issued'\" color=\"primary\"\n                        (click)=\"previewCert()\">\n                        <mat-icon>print</mat-icon>\n                        <span> Print Certificate </span>\n                    </button>\n\n                    <button mat-raised-button matTooltip=\"View Timeline\" class=\"actions-button-padding\" \n                    color=\"primary\" (click)=\"viewApplicationTimeLine()\">\n                        <mat-icon>view_timeline</mat-icon>\n                        <span>Application Timeline</span>\n                    </button>\n\n                    <!-- <button mat-raised-button matTooltip=\"View Timeline\" class=\"actions-button-padding\"\n                            *ngIf=\"isOfficer\" color=\"primary\" (click)=\"viewApplicationTimeLine()\">\n                        <mat-icon>view_timeline</mat-icon>\n                        <span>Application Timeline</span>\n                    </button> -->\n                </mat-toolbar-row>\n            </mat-toolbar>\n        </div>\n\n        <main class=\"fadeInUp _delay4ms\">\n\n            <!-- <app-page-breadcrumb [title]=\"'Application for New Registration / Renewal'\"></app-page-breadcrumb> -->\n        \n            <mat-horizontal-stepper \n                [linear]=\"isLinear\"\n                [selectedIndex]=\"selectedIndex\"\n                labelPosition=\"bottom\" #stepper>\n        \n                <mat-step [stepControl]=\"formGeneralInformation\">\n                    <ng-template matStepLabel>\n                        <h3>Applicant</h3>\n\n                        <span class=\"request-for-more-info-count\" *ngIf=\"formFieldSections[0].Count\">{{ formFieldSections[0].Count }}</span>\n                    </ng-template>\n        \n                    <form [formGroup]=\"formGeneralInformation\">\n                        <h1 class=\"full-width step-header\">Details of the applicant which could be an organisation or Individual that collects or processes Personal Data </h1>\n        \n                        <mat-form-field>\n                            <mat-label>Name of Organisation <span class=\"required-field\">required</span></mat-label>\n                            <input appUppercase matInput formControlName=\"OrganizationName\">       \n                            <mat-error *ngIf=\"formGeneralInformation.get('OrganizationName').invalid\">{{ getOrganizationNameErrorMessage() }}</mat-error>\n                        </mat-form-field>  \n        \n                        <!-- <mat-form-field [hintLabel]=\"'Data Protection & Privacy Act Categories'\"> -->\n                        <!-- <mat-form-field [hintLabel]=\"'Are you a Data Collector/ Data Processor / Data Controller ?'\"> -->\n                        <mat-form-field [hintLabel]=\"'Choose all that apply'\">\n                            <mat-label>Category <span class=\"required-field\">required</span></mat-label>\n                            <mat-select multiple formControlName=\"DPPActCategory\">\n                                <mat-option *ngFor=\"let cat of organisationCategories\" [value]=\"cat.OrganisationCategoryId\">\n                                    {{ cat.OrganisationCategoryName }}\n                                </mat-option>\n                            </mat-select>   \n                            <mat-error *ngIf=\"formGeneralInformation.get('DPPActCategory').invalid\">{{ getSelectErrorMessage() }}</mat-error> \n                        </mat-form-field>                             \n        \n                        <mat-form-field>\n                            <mat-label>Type of Organisation <span class=\"required-field\">required</span></mat-label>\n                            <mat-select formControlName=\"OrganizationTypeID\" #typeOfOrganisation>\n                                <mat-option *ngFor=\"let type of organisationTypes\" (click)=\"OrganizationType = type.OrganisationType\" [value]=\"type.OrganisationTypeID\">\n                                    {{ type.OrganisationType }}\n                                </mat-option>\n                            </mat-select>\n                            <mat-error *ngIf=\"formGeneralInformation.get('OrganizationTypeID').invalid\">{{ getSelectErrorMessage() }}</mat-error> \n                        </mat-form-field>                   \n        \n                        <mat-form-field *ngIf=\"typeOfOrganisation.value && typeOfOrganisation.value !== 4\">\n                            <mat-label>Country of Incorporation <span class=\"required-field\">required</span></mat-label>\n                            <mat-select formControlName=\"CountryOfIncorporation\">\n                                <mat-option *ngFor=\"let country of countries\" (click)=\"CountryOfIncorporation = country.Name\" [value]=\"country.CountryID\">\n                                    {{ country.Name }}\n                                </mat-option>\n                            </mat-select>\n                            <mat-error *ngIf=\"formGeneralInformation.get('CountryOfIncorporation').invalid\">{{ getSelectErrorMessage() }}</mat-error> \n                        </mat-form-field>        \n        \n                        <mat-form-field *ngIf=\"typeOfOrganisation.value && typeOfOrganisation.value !== 4\">\n                            <mat-label>Registration Number <span class=\"required-field\">required</span></mat-label>\n                            <input appUppercase appRemoveSpaces matInput maxlength=\"25\" formControlName=\"URSBNumber\"> \n                            <mat-error *ngIf=\"formGeneralInformation.get('URSBNumber').invalid\">{{ getURSBNumberErrorMessage() }}</mat-error>\n                        </mat-form-field>     \n                        \n                        <mat-form-field>\n                            <mat-label>Sector <span class=\"required-field\">required</span></mat-label>\n                            <mat-select formControlName=\"SectorID\" #Sector>\n                                <mat-option *ngFor=\"let sector of sectors\" (click)=\"SectorName = sector.Sector\" [value]=\"sector.SectorID\">\n                                    {{ sector.Sector }}\n                                </mat-option>\n                            </mat-select>\n                            <mat-error *ngIf=\"formGeneralInformation.get('SectorID').invalid\">{{ getSelectErrorMessage() }}</mat-error>\n                        </mat-form-field>        \n                        \n                        <mat-form-field hintLabel=\"If Other, Please specify the Sector.\" *ngIf=\"Sector.value === 14\">\n                            <mat-label>Specify Sector <span class=\"required-field\">required</span></mat-label>\n                            <input appUppercase matInput maxlength=\"50\" formControlName=\"OtherSector\">    \n                            <mat-error *ngIf=\"formGeneralInformation.get('OtherSector').invalid\">{{ getOtherSectorErrorMessage() }}</mat-error>\n                        </mat-form-field>                 \n        \n                        <!-- <mat-form-field *ngIf=\"formGeneralInformation.get('PublicBodyTypeID').value === '6'\">\n                            <mat-label>Type of Local Government <span class=\"required-field\">required</span></mat-label>\n                            <mat-select formControlName=\"LocalGovernmentType\">\n                                <mat-option value=\"1\">Body Corporate or otherwise established by Act of Parliament</mat-option>\n                                <mat-option value=\"2\">Cabinet</mat-option>\n                                <mat-option value=\"3\">Court</mat-option>\n                                <mat-option value=\"4\">Commission established by Act of Parliament</mat-option>\n                                <mat-option value=\"5\">Government Department</mat-option>\n                                <mat-option value=\"6\">Local Government Adminstration</mat-option>\n                            </mat-select>\n                        </mat-form-field>                    -->\n                        \n                        <!-- <mat-form-field *ngIf=\"formGeneralInformation.get('PublicBodyTypeID').value === '6'\">\n                            <mat-label>Statute <span class=\"required-field\">required</span></mat-label>\n                            <input appUppercase appRemoveSpaces matInput maxlength=\"255\" formControlName=\"Statute\">                            \n                        </mat-form-field>    \n                         -->\n                        <mat-form-field>\n                            <mat-label>Physical Address <span class=\"required-field\">required</span></mat-label>\n                            <input appUppercase matInput maxlength=\"255\" formControlName=\"Location\">            \n                            <mat-error *ngIf=\"formGeneralInformation.get('Location').invalid\">{{ getLocationErrorMessage() }}</mat-error>                \n                        </mat-form-field>  \n        \n                        <!-- <mat-form-field>\n                            <mat-label>Name of Head of Organisation <span class=\"required-field\">required</span></mat-label>\n                            <input appUppercase appRemoveSpaces matInput maxlength=\"255\" formControlName=\"HeadOfOrganization\">                            \n                        </mat-form-field>    \n        \n                        <mat-form-field>\n                            <mat-label>Title of Head of Organisation <span class=\"required-field\">required</span></mat-label>\n                            <input appUppercase appRemoveSpaces matInput maxlength=\"255\" formControlName=\"TitleOfOrganizationHead\">                            \n                        </mat-form-field>     -->\n        \n                        <!-- <mat-form-field>\n                            <mat-label>Postal Address <span class=\"optional-field\">optional</span></mat-label>\n                            <input appUppercase appRemoveSpaces matInput maxlength=\"255\" formControlName=\"PostalAddress\">                            \n                        </mat-form-field>     -->\n        \n                        <!-- Improve the country code to be dynamic -->\n                        <!-- <mat-form-field>\n                            <span matPrefix>+256 &nbsp;</span>\n                            <mat-label>Organisation Telephone Number <span class=\"required-field\">required</span></mat-label>\n                            <input appTelephoneFormaterDirective maxlength=\"11\" matInput formControlName=\"PhoneNumber\">           \n                        </mat-form-field>    -->\n        \n                        <div class=\"telephone-code-number-wrapper\">\n                            <mat-form-field class=\"fadeInUp _delay2ms\">\n                                <mat-label>Pick one </mat-label>\n                                <mat-select formControlName=\"PhoneNumberCode\">\n                                    <mat-option selected *ngIf=\"!selected\" value=\"256\">+256</mat-option>\n                                    <!-- <mat-option selected *ngIf=\"!selected\" value=\"256\">+256 - Uganda</mat-option> -->\n                                    <mat-option *ngFor=\"let code of countries\" [value]=\"code.PhoneCode\" (click)=\"selected = true\">\n                                        +{{ code.PhoneCode }}\n                                    </mat-option>\n                                </mat-select>\n                            </mat-form-field>\n        \n                            <!-- <mat-form-field class=\"fadeInUp _delay2ms\" [hintLabel]=\"'Organisation Telephone Number.'\"> -->\n                            <mat-form-field class=\"fadeInUp _delay2ms\">\n                                <mat-label>Organisation Telephone Number <span class=\"required-field\">required</span></mat-label>\n                                <input type=\"text\" maxlength=\"11\" matInput appTelephoneFormaterDirective formControlName=\"PhoneNumber\" placeholder=\"Ex. 414 318 111\">\n                                <mat-error *ngIf=\"formGeneralInformation.get('PhoneNumber').invalid\">{{ getTelephoneNumberErrorMessage() }}</mat-error>\n                            </mat-form-field> \n                        </div>                \n        \n                        <!-- <mat-form-field>\n                            <span matPrefix>+256 &nbsp;</span>\n                            <mat-label>Land Line <span class=\"optional-field\">optional</span></mat-label>\n                            <input appTelephoneFormaterDirective maxlength=\"11\" matInput formControlName=\"Landline\">           \n                        </mat-form-field>    -->\n        \n                        <mat-form-field>\n                            <mat-label>Organisation Email Address <span class=\"required-field\">required</span></mat-label>\n                            <input appRemoveSpaces matInput formControlName=\"EmailAddress\">\n                            <mat-error *ngIf=\"formGeneralInformation.get('EmailAddress').invalid\">{{ getEmailAddressErrorMessage() }}</mat-error>\n                        </mat-form-field>   \n        \n                        <!-- <mat-form-field hintLabel=\"Select all the roles performed\">\n                            <mat-label>Nature of Business <span class=\"required-field\">required</span></mat-label>\n                            <mat-select multiple formControlName=\"RolesPerformedID\">\n                                <mat-option value=\"1\">Protection of National Security</mat-option>\n                                <mat-option value=\"2\">Public revenue collection</mat-option>\n                                <mat-option value=\"3\">Enforcement of law which imposes a pecuniary penalty</mat-option>\n                                <mat-option value=\"4\">Conduct proceedings before any court</mat-option>\n                            </mat-select>    \n                        </mat-form-field>     -->\n        \n                        <mat-form-field>\n                            <mat-label>Nature of Business Categories<span class=\"required-field\">required</span></mat-label>\n                            <mat-select formControlName=\"NatureOfBusinessCat\">\n                                <mat-option *ngFor=\"let cat of natureOfBusinessCat\" (click)=\"NatureOfBusinessCat = cat.NatureOfBusinessCategoryName\" [value]=\"cat.NatureOfBusinessCatId\">\n                                    {{ cat.NatureOfBusinessCategoryName }}\n                                </mat-option>\n                            </mat-select>    \n                            <mat-error *ngIf=\"formGeneralInformation.get('NatureOfBusinessCat').invalid\">{{ getSelectErrorMessage() }}</mat-error>\n                        </mat-form-field>                   \n        \n                        <mat-form-field [hintLabel]=\"'Choose all that apply'\" *ngIf=\"_hasRequestMoreInfo && !isOfficer && formGeneralInformation.get('NatureOfBusinessSubCat').enabled\">\n                            <mat-label>Nature of Business Sub-Categories <span class=\"required-field\">required</span></mat-label>\n                            <mat-select multiple formControlName=\"NatureOfBusinessSubCat\">\n                                <mat-option *ngFor=\"let sub of natureOfBusinessSubCat\" [value]=\"sub.NatureOfBusinessSubCatId\" [matTooltip]=\"sub.NatureOfBusinessSubCategoryName\">\n                                    {{ sub.NatureOfBusinessSubCategoryName }}\n                                </mat-option>\n                            </mat-select> \n                            <mat-error *ngIf=\"formGeneralInformation.get('NatureOfBusinessSubCat').invalid\">{{ getSelectErrorMessage() }}</mat-error>   \n                        </mat-form-field>      \n                        \n                        <!-- For viewing purposes only -->\n                        <mat-form-field class=\"span-2-columns\" [hintLabel]=\"'Choose all that apply'\" *ngIf=\"!_hasRequestMoreInfo || (_hasRequestMoreInfo && formGeneralInformation.get('NatureOfBusinessSubCat').disabled) || isOfficer\">\n                            <mat-label>Nature of Business Sub-Categories ?<span class=\"required-field\">required</span></mat-label>\n                            <textarea matInput [value]=\"getSelectedNatureOfBusinessSubCat()\" disabled class=\"textarea-small\"></textarea>\n                        </mat-form-field>                          \n        \n                        <!-- <mat-form-field class=\"full-width\" hintLabel=\"What are the main activities of the organisation ?\">\n                            <mat-label>Nature of Business<span class=\"required-field\">required</span></mat-label>\n                            <textarea #CaseTitleInput matInput maxlength=\"1000\" formControlName=\"NatureOfBusiness\" placeholder=\"\"></textarea>\n                            <mat-hint align=\"end\">{{ CaseTitleInput.value.length }} / 1000</mat-hint>\n                        </mat-form-field>                      -->\n                        \n                        <!-- <section class=\"expand-section reduced-properties table-wrapper\">\n                            <button \n                                mat-button\n                                color=\"primary\"\n                                [disabled]=\"processing\"\n                                class=\"add-item-button\"\n                                (click)=\"onAddMainActivity()\">\n                                <div class=\"button-label\">\n                                    <mat-icon>add</mat-icon>                            \n                                    <span>Add A Main Activity</span>\n                                </div>\n                            </button>\n        \n                            <p class=\"description\">What are the main activities of the organisation ?</p>\n                            \n                            <div class=\"table-wrapper\">\n                                <table \n                                    mat-table \n                                    #dpoMatSort=\"matSort\"\n                                    matSortDisableClear=\"true\"\n                                    [dataSource]=\"mainActivitiesDataSource\"\n                                    matSort>\n                    \n                                    <ng-container matColumnDef=\"Count\">\n                                        <th mat-header-cell *matHeaderCellDef> # </th>\n                                        <td mat-cell *matCellDef=\"let index = index\"> {{ index + 1 }} </td>\n                                    </ng-container>\n                    \n                                    <ng-container matColumnDef=\"MainActivity\">\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Main Activities </th>\n                                        <td mat-cell *matCellDef=\"let row\">{{ row.Activity }}</td>\n                                    </ng-container>                      \n                    \n                                    <ng-container matColumnDef=\"Actions\">\n                                        <th mat-header-cell *matHeaderCellDef> Actions </th>\n                                        <td mat-cell *matCellDef=\"let row; let index = index\">\n                                            <button \n                                                mat-button \n                                                class=\"action-btn\"\n                                                [matMenuTriggerFor]=\"menu\" \n                                                (click)=\"$event.stopPropagation()\"\n                                                matTooltip=\"See more options\">\n                                                <mat-icon>more_vert</mat-icon>\n                                            </button>\n                    \n                                            <mat-menu yPosition=\"below\" #menu=\"matMenu\" class=\"more-options-mat-menu\">\n                    \n                                                <button \n                                                    mat-menu-item \n                                                    (click)=\"$event.stopPropagation();onEditMainActivity(row)\">\n                                                    <mat-icon>edit</mat-icon>\n                                                    <span>Make Changes</span>\n                                                </button>\n                                                      \n                                                <hr />\n                    \n                                                <button \n                                                    mat-menu-item \n                                                    (click)=\"$event.stopPropagation();onRemoveMainActivity(row)\">\n                                                    <mat-icon color=\"warn\">delete</mat-icon>\n                                                    <span>Remove</span>\n                                                </button>\n                    \n                                            </mat-menu>                                                  \n                                        </td>\n                                    </ng-container>\n                    \n                                    <tr mat-header-row *matHeaderRowDef=\"MainActivitiesDisplayedColumns\"></tr>\n                                    <tr mat-row *matRowDef=\"let row; columns: MainActivitiesDisplayedColumns;\" class=\"mat-data-row\"></tr>\n                                </table>\n        \n                                <mat-paginator \n                                    #dpoPaginator\n                                    [pageSize]=\"10\"\n                                    [pageSizeOptions]=\"[5, 10]\">\n                                </mat-paginator>                    \n                            </div>                \n                        </section>                      -->\n                        \n                    </form>\n        \n                    <div class=\"button-wrapper single-button\">\n                        <button  *ngIf=\"!isViewOnly\"\n                            mat-button \n                            color=\"primary\" >\n                            Save as Draft\n                        </button>       \n        \n                        <button \n                            [disabled]=\"formGeneralInformation.invalid\"\n                            mat-button \n                            class=\"next-btn\" \n                            color=\"primary\" \n                            matStepperNext>\n                            Next\n                        </button>\n                    </div>             \n                </mat-step>\n        \n                <mat-step [stepControl]=\"formOrganisationDetails\">\n                    <ng-template matStepLabel>\n                        <h3>Data Protection <br />Officer</h3>\n\n                        <span class=\"request-for-more-info-count\" *ngIf=\"formFieldSections[1].Count\">{{ formFieldSections[1].Count }}</span>\n                    </ng-template>\n        \n                    <form [formGroup]=\"formOrganisationDetails\">     \n        \n                        <h1 class=\"full-width step-header\">Details of Data Protection Officer </h1>    \n                        \n                        <!-- If yes... all the fields should be required. -->\n        \n                        <div class=\"grouped-items\" [ngClass]=\"{'full-width': formOrganisationDetails.get('DPORequired').value !== 'Yes'}\">\n                            <h3>Do you have a designated data protection officer ? </h3>\n        \n                            <mat-radio-group \n                                color=\"primary\" \n                                formControlName=\"DPORequired\" \n                                aria-label=\"Pick one\">\n                                <mat-radio-button [ngClass]=\"{'selected-radio-btn': formOrganisationDetails.get('DPORequired').value === 'Yes' }\" value=\"Yes\">Yes</mat-radio-button>\n                                <mat-radio-button [ngClass]=\"{'selected-radio-btn': formOrganisationDetails.get('DPORequired').value === 'No' }\" value=\"No\">No</mat-radio-button>\n                            </mat-radio-group>        \n                        </div>                  \n                        \n                        <mat-form-field *ngIf=\"formOrganisationDetails.get('DPORequired').value === 'Yes'\">\n                            <mat-label>Name <span class=\"required-field\">required</span></mat-label>\n                            <input formControlName=\"DPOName\" matInput>\n                            <mat-error *ngIf=\"formOrganisationDetails.get('DPOName').invalid\">{{ getDPONameErrorMessage() }}</mat-error>\n                        </mat-form-field>\n                \n                        <mat-form-field *ngIf=\"formOrganisationDetails.get('DPORequired').value === 'Yes'\">\n                            <mat-label>Physical Address <span class=\"required-field\">required</span></mat-label>\n                            <input formControlName=\"DPOPhysicalAddress\" maxlength=\"255\" matInput>\n                            <mat-error *ngIf=\"formOrganisationDetails.get('DPOPhysicalAddress').invalid\">{{ getDPOPhysicalAddressErrorMessage() }}</mat-error>\n                        </mat-form-field>\n        \n                        <!-- <mat-form-field >\n                            <span matPrefix>+256 &nbsp;</span>\n                            <mat-label>Telephone Number <span class=\"required-field\">required</span></mat-label>\n                            <input appTelephoneFormaterDirective maxlength=\"11\" matInput formControlName=\"DPOPhoneNumber\">           \n                        </mat-form-field>  -->\n                        \n                        <div class=\"telephone-code-number-wrapper\" *ngIf=\"formOrganisationDetails.get('DPORequired').value === 'Yes'\">\n                            <mat-form-field class=\"fadeInUp _delay2ms\">\n                                <mat-label>Pick one </mat-label>\n                                <mat-select formControlName=\"PhoneNumberCode\">\n                                    <mat-option selected *ngIf=\"!DPOSelected\" value=\"256\">+256</mat-option>\n                                    <!-- <mat-option selected *ngIf=\"!selected\" value=\"256\">+256 - Uganda</mat-option> -->\n                                    <mat-option *ngFor=\"let code of countries\" [value]=\"code.PhoneCode\" (click)=\"DPOSelected = true\">\n                                        +{{ code.PhoneCode }}\n                                    </mat-option>\n                                </mat-select>\n                                <!-- <mat-error *ngIf=\"formGeneralInformation.get('PhoneNumberCode').invalid\">{{ getSelectInputErrorMessage() }}</mat-error>      -->\n                            </mat-form-field>\n        \n                            <!-- <mat-form-field class=\"fadeInUp _delay2ms\" [hintLabel]=\"'Organisation Telephone Number.'\"> -->\n                            <mat-form-field class=\"fadeInUp _delay2ms\">\n                                <mat-label>Telephone Number <span class=\"required-field\">required</span></mat-label>\n                                <input type=\"text\" maxlength=\"11\" matInput appTelephoneFormaterDirective formControlName=\"DPOPhoneNumber\" placeholder=\"Ex. 414 318 111\">\n                                <mat-error *ngIf=\"formOrganisationDetails.get('DPOPhoneNumber').invalid\">{{ getDPOPhoneNumberErrorMessage() }}</mat-error>\n                            </mat-form-field> \n                        </div>                  \n                \n                        <mat-form-field *ngIf=\"formOrganisationDetails.get('DPORequired').value === 'Yes'\">\n                            <mat-label>Email Address <span class=\"required-field\">required</span></mat-label>\n                            <input appRemoveSpaces formControlName=\"DPOEmailAddress\" matInput>\n                            <mat-error *ngIf=\"formOrganisationDetails.get('DPOEmailAddress').invalid\">{{ getDPOEmailAddressErrorMessage() }}</mat-error>\n                        </mat-form-field>       \n        \n                        <mat-form-field *ngIf=\"formOrganisationDetails.get('DPORequired').value === 'Yes'\" class=\"full-width\" hintLabel=\"Any other title held apart from DPO (Data Protection Officer).\">\n                            <mat-label>Title Held <span class=\"required-field\">required</span></mat-label>\n                            <textarea #PositionInput matInput formControlName=\"DPOPositionInOrganisation\" maxlength=\"1000\"></textarea>\n                            <mat-hint align=\"end\">{{ PositionInput.value.length }} / 1000</mat-hint>\n                            <mat-error *ngIf=\"formOrganisationDetails.get('DPOPositionInOrganisation').invalid\">{{ getDPOPositionInOrganisationErrorMessage() }}</mat-error>\n                        </mat-form-field>                  \n                    </form>\n        \n                    <div class=\"button-wrapper\">       \n                        <button mat-button class=\"back-btn\" matStepperPrevious>Back</button>   \n                        <button  *ngIf=\"!isViewOnly\"\n                            mat-button \n                            color=\"primary\" >\n                            Save as Draft\n                        </button>  \n                        <button \n                            [disabled]=\"formOrganisationDetails.invalid\"\n                            mat-button \n                            class=\"next-btn\" \n                            color=\"primary\" \n                            matStepperNext>\n                            Next\n                        </button>\n                    </div>             \n                </mat-step>\n        \n                <mat-step [stepControl]=\"formPersonalDataHeld\">\n                    <ng-template matStepLabel>\n                        <h3>Data Collected <br /> or Processed</h3>\n\n                        <span class=\"request-for-more-info-count\" *ngIf=\"formFieldSections[2].Count\">{{ formFieldSections[2].Count }}</span>\n                    </ng-template>\n        \n                    <form [formGroup]=\"formPersonalDataHeld\" class=\"personal-data-affected\">       \n                        \n                        <h1 class=\"full-width step-header\">Description of Data collected or processed </h1>\n        \n                        <mat-form-field hintLabel=\"Choose all that apply.\" class=\"full-width\">\n                            <mat-label>Source of Data <span class=\"required-field\">required</span></mat-label>\n                            <mat-select multiple formControlName=\"SourceOfDataID\">\n                                <mat-option *ngFor=\"let source of dataSources\" [value]=\"source.DataSourceID\">\n                                    {{ source.DataSource }}\n                                </mat-option>\n                            </mat-select>    \n                            <mat-error *ngIf=\"formPersonalDataHeld.get('SourceOfDataID').invalid\">{{ getSelectErrorMessage() }}</mat-error> \n                        </mat-form-field>        \n                        \n                        <!-- <div class=\"grouped-items\" class=\"span-2-columns\">\n                            <h3>Do you collect personal data relating to Children?</h3>\n            \n                            <mat-radio-group color=\"primary\" aria-label=\"Pick one\" formControlName=\"CollectChildrenData\">\n                                <mat-radio-button value=\"Yes\">Yes</mat-radio-button>\n                                <mat-radio-button value=\"No\">No</mat-radio-button>\n                            </mat-radio-group>        \n                        </div>   -->\n        \n                        <!-- <mat-form-field class=\"full-width personal-data-affected-field\" hintLabel=\"Choose all that apply\">\n                            <mat-label>Personal Data Collected Or Processed <span class=\"required-field\">required</span></mat-label>\n                            <mat-select [formControl]=\"dataCategory\" multiple>\n                                <mat-option \n                                    *ngFor=\"let category of dataCategories\" \n                                    [value]=\"category.Name\">\n                                    {{ category.Name }}\n                            </mat-option>\n                            </mat-select>\n                        </mat-form-field> -->\n        \n                        <h1 class=\"full-width heading\">Personal Data Collected Or Processed</h1>\n                        \n                        <section \n                            *ngFor=\"let category of dataCategories; let i = index\" \n                            class=\"expand-section categories\">        \n\n                            <div>\n                                <h3 [innerHTML]=\"category.DataCategory\"></h3>\n                                <mat-icon matTooltipPosition=\"right\"  [matTooltip]=\"category.DataDescription\">info</mat-icon>\n                            </div>\n\n                            <mat-checkbox [disabled]=\"isViewOnly && !personalDataCollectedCheckBoxEnabled\"\n                                *ngFor=\"let SubCategory of category.SubCategories\" \n                                [ngClass]=\"{'full-width': category.SubCategories.length === 1, 'selected-checkbox': SubCategory.IsChecked}\"\n                                color=\"primary\"\n                                [checked]=\"SubCategory.IsChecked\"\n                                (change)=\"onChangeSubCategory($event,SubCategory)\"\n                                [required]=\"'false'\">\n                                {{ SubCategory.DataSubCategory }}\n                            </mat-checkbox>\n                            \n                        </section>                            \n                    </form>\n        \n                    <div class=\"button-wrapper\">       \n                        <button mat-button class=\"back-btn\" matStepperPrevious>Back</button>\n        \n                        <button *ngIf=\"!isViewOnly\"\n                            mat-button \n                            color=\"primary\" >\n                            Save as Draft\n                        </button> \n\n                        <button \n                            [disabled]=\"formPersonalDataHeld.invalid || selectedDataSubCategory.length === 0\"\n                            mat-button \n                            class=\"next-btn\" \n                            color=\"primary\" \n                            matStepperNext>\n                            Next\n                        </button>\n                    </div>             \n                </mat-step>\n\n                <mat-step [stepControl]=\"formChildrenData\">\n                    <ng-template matStepLabel>\n                        <h3>Children's Data</h3>\n                    </ng-template>\n\n                    <form [formGroup]=\"formChildrenData\">\n                        \n                        <div class=\"grouped-items\">\n                            <h3>Do you collect personal data relating to Children?<span class=\"required-field\">required</span></h3>\n            \n                            <mat-radio-group color=\"primary\" aria-label=\"Pick one\" formControlName=\"CollectChildrenData\" (change)=\"updateCollecthildrenData($event)\">\n                                <mat-radio-button value=\"Yes\">Yes</mat-radio-button>\n                                <mat-radio-button value=\"No\">No</mat-radio-button>\n                            </mat-radio-group>        \n                        </div>  \n        \n                        <mat-form-field *ngIf=\"showChildrenDataFields == true\">\n                            <mat-label>Reason / Purpose for collecting children's data<span class=\"required-field\">required</span> </mat-label>\n                        \n                            <mat-select multiple formControlName=\"PurposeForCollection\">\n                                <mat-option *ngFor=\"let child of childDataPurposes\" [value]=\"child.ChildDataID\">\n                                    {{ child.ChildDataPurpose }}\n                                </mat-option>\n                            </mat-select>  \n                        </mat-form-field>                  \n                        \n                                    \n        \n                    </form>\n\n                    <div class=\"button-wrapper\">       \n                        <button mat-button class=\"back-btn\" matStepperPrevious>Back</button>\n        \n                        <button \n                            *ngIf=\"!isViewOnly\"\n                            mat-button \n                            class=\"save-draft-btn\"\n                            [disabled]=\"processing\"\n                            (click)=\"onSaveDraft()\"\n                            color=\"primary\">\n                            Save\n                        </button> \n\n                        <button \n                            [disabled]=\"formChildrenData.invalid\"\n                            mat-button \n                            class=\"next-btn\" \n                            color=\"primary\" \n                            matStepperNext>\n                            Next\n                        </button>\n                    </div>          \n\n                </mat-step>\n        \n        \n                <mat-step [stepControl]=\"formPurposeRetention\">\n                    <ng-template matStepLabel>\n                        <h3>Purpose & Retention</h3>\n\n                        <span class=\"request-for-more-info-count\" *ngIf=\"formFieldSections[3].Count\">{{ formFieldSections[3].Count }}</span>\n                    </ng-template>\n        \n                    <form [formGroup]=\"formPurposeRetention\">       \n                        \n                        <h1 class=\"full-width step-header\">Description of Purpose for which data is collected or processed </h1>\n        \n                        <!-- <mat-form-field hintLabel=\"Why do you collect personal Data?\">\n                            <mat-label>For What Purpose ?<span class=\"required-field\">required</span></mat-label>\n                            <mat-select formControlName=\"Purpose\" multiple>\n                                <mat-option *ngFor=\"let purpose of dataPurposes\" [value]=\"purpose.DataPurposeID\">\n                                    {{ purpose.DataPurpose }}\n                                </mat-option>\n                            </mat-select>  \n                            <mat-error *ngIf=\"formPurposeRetention.get('Purpose').invalid\">{{ getSelectErrorMessage() }}</mat-error>   \n                        </mat-form-field> -->\n        \n                        <!-- For editing purposes only -->\n                        <mat-form-field *ngIf=\"_hasRequestMoreInfo && !isOfficer && formPurposeRetention.get('Purpose').enabled\" hintLabel=\"Why do you collect personal Data?\">\n                            <mat-label>For What Purpose ?<span class=\"required-field\">required</span></mat-label>\n                            <mat-select formControlName=\"Purpose\" multiple>\n                                <mat-option *ngFor=\"let purpose of dataPurposes\" [value]=\"purpose.DataPurposeID\">\n                                    {{ purpose.DataPurpose }}\n                                </mat-option>\n                            </mat-select>  \n                            <mat-error *ngIf=\"formPurposeRetention.get('Purpose').invalid\">{{ getSelectErrorMessage() }}</mat-error>   \n                        </mat-form-field>\n\n                        <!-- For viewing purposes only -->\n                        <mat-form-field class=\"full-width\" *ngIf=\"!_hasRequestMoreInfo || (_hasRequestMoreInfo && formPurposeRetention.get('Purpose').disabled) || isOfficer\" hintLabel=\"Why do you collect personal Data?\">\n                            <mat-label>For What Purpose ?<span class=\"required-field\">required</span></mat-label>\n                            <textarea matInput [value]=\"getSelectedPurpose()\" disabled class=\"textarea-small\"></textarea>\n                        </mat-form-field>   \n\n        \n                        <!-- For Edits -->\n                        <mat-form-field hintLabel=\"If the purpose is Collection / Processing is required by Law.\" *ngIf=\"SpecifyTheLaw && _hasRequestMoreInfo && !isOfficer && formPurposeRetention.get('SpecifyTheLaw').enabled\">\n                            <mat-label>Specify the Law <span class=\"required-field\">required</span></mat-label>\n                            <input matInput #SpecifyTheLawInput maxlength=\"1000\" formControlName=\"SpecifyTheLaw\">        \n                            <mat-hint align=\"end\">{{ SpecifyTheLawInput.value.length }} / 1000</mat-hint>    \n                            <mat-error *ngIf=\"formPurposeRetention.get('SpecifyTheLaw').invalid\">{{ getRequiredErrorMessage() }}</mat-error>\n                        </mat-form-field>  \n        \n                        <!-- For viewing only -->\n                        <mat-form-field class=\"full-width\" *ngIf=\"SpecifyTheLaw && (!_hasRequestMoreInfo || (_hasRequestMoreInfo && formPurposeRetention.get('SpecifyTheLaw').disabled) || isOfficer)\" hintLabel=\"If the purpose is Collection / Processing is required by Law.\">\n                            <mat-label>Specify the Law<span class=\"required-field\">required</span></mat-label>\n                            <textarea matInput formControlName=\"SpecifyTheLaw\" disabled class=\"textarea-small\"></textarea>\n                        </mat-form-field>                             \n        \n\n                        <!-- For Edits -->\n                        <mat-form-field hintLabel=\"If the purpose is to provide services / products to Individuals.\" *ngIf=\"ServiceOrProductProvided && _hasRequestMoreInfo && !isOfficer && formPurposeRetention.get('ServiceOrProductProvided').enabled\">\n                            <mat-label>Specify the Service / Product Provided<span class=\"required-field\">required</span></mat-label>\n                            <input matInput #ServiceOrProductProvidedInput maxlength=\"1000\" formControlName=\"ServiceOrProductProvided\">     \n                            <mat-hint align=\"end\">{{ ServiceOrProductProvidedInput.value.length }} / 1000</mat-hint>    \n                            <mat-error *ngIf=\"formPurposeRetention.get('ServiceOrProductProvided').invalid\">{{ getRequiredErrorMessage() }}</mat-error>\n                        </mat-form-field>  \n                        \n                        <!-- For viewing only -->\n                        <mat-form-field class=\"full-width\" *ngIf=\"ServiceOrProductProvided && (!_hasRequestMoreInfo || (_hasRequestMoreInfo && formPurposeRetention.get('ServiceOrProductProvided').disabled) || isOfficer)\" hintLabel=\"If the purpose is to provide services / products to Individuals.\">\n                            <mat-label>Specify the Service / Product Provided<span class=\"required-field\">required</span></mat-label>\n                            <textarea matInput formControlName=\"ServiceOrProductProvided\" disabled class=\"textarea-small\"></textarea>\n                        </mat-form-field>                              \n\n                        <!-- For Edits -->\n                        <mat-form-field hintLabel=\"If the purpose is for Compliance with a Legal Obligation.\" *ngIf=\"SpecifyLegalObligation && _hasRequestMoreInfo && !isOfficer && formPurposeRetention.get('SpecifyLegalObligation').enabled\">\n                            <mat-label>Specify the Legal Obligation<span class=\"required-field\">required</span></mat-label>\n                            <input matInput #SpecifyLegalObligationInput maxlength=\"50\" formControlName=\"SpecifyLegalObligation\">  \n                            <mat-hint align=\"end\">{{ SpecifyLegalObligationInput.value.length }} / 50</mat-hint>    \n                            <mat-error *ngIf=\"formPurposeRetention.get('SpecifyLegalObligation').invalid\">{{ getRequiredErrorMessage() }}</mat-error>\n                        </mat-form-field>  \n\n                        <!-- For viewing only -->\n                        <mat-form-field class=\"full-width\" *ngIf=\"SpecifyLegalObligation && (!_hasRequestMoreInfo || (_hasRequestMoreInfo && formPurposeRetention.get('SpecifyLegalObligation').disabled) || isOfficer)\" hintLabel=\"If the purpose is Collection / Processing is required by Law.\">\n                            <mat-label>Specify the Legal Obligation<span class=\"required-field\">required</span></mat-label>\n                            <textarea matInput formControlName=\"SpecifyLegalObligation\" disabled class=\"textarea-small\"></textarea>\n                        </mat-form-field>                              \n                        \n                        <mat-form-field hintLabel=\"Approximate number of Personal Data Records held.\">\n                            <mat-label>Total Records <span class=\"optional-field\">optional</span></mat-label>\n                            <input appCurrencyDirective matInput maxlength=\"14\" formControlName=\"TotalRecordsAtRegistration\">                            \n                            <mat-error *ngIf=\"formPurposeRetention.get('TotalRecordsAtRegistration').invalid\">{{ getPatternErrorMessage() }}</mat-error>\n                        </mat-form-field>  \n                        \n                        <mat-form-field hintLabel=\"The % annual growth of Personal Records held\">\n                            <mat-label>Percentage Annual Growth <span class=\"optional-field\">optional</span></mat-label>\n                            <input appCurrencyDirective matInput max=\"100\" maxlength=\"3\" formControlName=\"RecordPercentageGrowth\">                            \n                            <mat-error *ngIf=\"formPurposeRetention.get('RecordPercentageGrowth').invalid\">{{ getRecordPercentageGrowthErrorMessage() }}</mat-error>\n                            <mat-hint align=\"end\">Max. 100%</mat-hint>      \n                            <span matSuffix>%</span>\n                        </mat-form-field>   \n        \n                        <mat-form-field hintLabel=\"Duration for which personal data shall be kept (Years).\">\n                            <mat-label>Retention period <span class=\"required-field\">required</span></mat-label>\n                            <input appCurrencyDirective max=\"100\" matInput maxlength=\"3\" formControlName=\"RetentionPeriod\">                          \n                            <mat-error *ngIf=\"formPurposeRetention.get('RetentionPeriod').invalid\">{{ getRetentionPeriodErrorMessage() }}</mat-error>\n                            <mat-hint align=\"end\">Max. 100 years</mat-hint>      \n                            <span matSuffix>Year(s)</span>\n                        </mat-form-field>                            \n        \n                        <!-- <div class=\"grouped-items\">\n                            <h3>Did you get consent from the Data Subject ?</h3>\n            \n                            <mat-radio-group color=\"primary\" aria-label=\"Pick one\" formControlName=\"GetConsent\">\n                                <mat-radio-button value=\"Yes\">Yes</mat-radio-button>\n                                <mat-radio-button value=\"No\">No</mat-radio-button>\n                            </mat-radio-group>        \n                        </div>                 -->\n        \n                        <!-- <mat-form-field hintLabel=\"The nature of processing carried out on the personal data.\">\n                            <mat-label>Nature of Processing <span class=\"optional-field\">optional</span></mat-label>\n                            <mat-select multiple formControlName=\"NatureOfProcessing\">\n                                <mat-option value=\"\">Organized, adapted or altered for use in fulfilling organizations mandate and role</mat-option>\n                                <mat-option value=\"\">Data is stored and retrieved and used for internal consultation or verification</mat-option>\n                                <mat-option value=\"\">Data is disseminated or disclosed</mat-option>\n                            </mat-select>    \n                        </mat-form-field>     -->\n        \n                        <!-- <div class=\"grouped-items\">\n                            <h3>Do you process or store personal data outside Uganda ?</h3>\n            \n                            <mat-radio-group color=\"primary\" aria-label=\"Pick one\" formControlName=\"StoreDataOutsideCountry\">\n                                <mat-radio-button value=\"Yes\">Yes</mat-radio-button>\n                                <mat-radio-button value=\"No\">No</mat-radio-button>\n                            </mat-radio-group>        \n                        </div>    \n        \n                        <mat-form-field hintLabel=\"Where the personal data was obtained from.\">\n                            <mat-label>Countries <span class=\"required-field\">required</span></mat-label>\n                            <mat-select multiple formControlName=\"CountriesStoringYourData\">\n                                <mat-option value=\"1\">Kenya</mat-option>\n                                <mat-option value=\"2\">Tanzania</mat-option>\n                                <mat-option value=\"3\">United States</mat-option>\n                            </mat-select>    \n                        </mat-form-field>                     -->\n        <!--                 \n                        <section class=\"expand-section reduced-properties table-wrapper\">\n                            <h1>Identifiers</h1>\n        \n                            <mat-checkbox\n                                color=\"primary\"\n                                [required]=\"'false'\">\n                                Name\n                            </mat-checkbox>    \n        \n                            <mat-checkbox\n                                color=\"primary\"\n                                [required]=\"'false'\">\n                                Nationality\n                            </mat-checkbox>    \n        \n                            <mat-checkbox\n                                color=\"primary\"\n                                [required]=\"'false'\">\n                                Age\n                            </mat-checkbox>      \n        \n                        </section>    \n                         -->\n                        <!-- <section class=\"expand-section reduced-properties table-wrapper\">\n                            <h1>Individual Commercial Information</h1>\n        \n                            <mat-checkbox\n                                color=\"primary\"\n                                [required]=\"'false'\">\n                                Name\n                            </mat-checkbox>    \n        \n                            <mat-checkbox\n                                color=\"primary\"\n                                [required]=\"'false'\">\n                                Nationality\n                            </mat-checkbox>    \n        \n                            <mat-checkbox\n                                color=\"primary\"\n                                [required]=\"'false'\">\n                                Age\n                            </mat-checkbox>      \n        \n                        </section>     -->\n        \n                    </form>\n        \n                    <div class=\"button-wrapper\">       \n                        <button mat-button class=\"back-btn\" matStepperPrevious>Back</button>\n        \n                        <!-- <button  *ngIf=\"!isViewOnly\"\n                            mat-button \n                            color=\"primary\" >\n                            Save as Draft\n                        </button>  -->\n\n                        <button \n                            [disabled]=\"formPurposeRetention.invalid\"\n                            mat-button \n                            class=\"next-btn\" \n                            color=\"primary\" \n                            matStepperNext>\n                            Next\n                        </button>\n                    </div>             \n                </mat-step>\n                <!-- <mat-step [stepControl]=\"form\">\n                    <ng-template matStepLabel>\n                        <h3>Profile <br /></h3>\n                    </ng-template>\n        \n                    <form [formGroup]=\"form\">\n                        \n                    </form>\n        \n                    <div class=\"button-wrapper\">\n                        <button mat-button class=\"back-btn\" matStepperPrevious>Back</button>\n        \n                        <button \n                            mat-button \n                            [disabled]=\"form.invalid || processing\" \n                            class=\"next-btn\" \n                            color=\"primary\" \n                            matStepperNext>\n                            Next\n                        </button>\n                    </div>\n                </mat-step> -->\n        \n                <mat-step [stepControl]=\"formThirdParties\">\n                    <ng-template matStepLabel>\n                        <h3>Disclosure & Transfer</h3>\n\n                        <span class=\"request-for-more-info-count\" *ngIf=\"formFieldSections[4].Count\">{{ formFieldSections[4].Count }}</span>\n                    </ng-template>\n        \n                    <form [formGroup]=\"formThirdParties\">\n        \n                        <h1 class=\"full-width step-header\">List of persons or Bodies to whom personal data may be disclosed</h1>\n                        \n                        <div class=\"grouped-items full-width\">\n                            <h3>Do you disclose Personal Data to other Persons or Bodies ?</h3>\n            \n                            <mat-radio-group \n                                color=\"primary\" \n                                aria-label=\"Pick one\" \n                                formControlName=\"PersonalDataIsForDisclosure\">\n                                <mat-radio-button [ngClass]=\"{'selected-radio-btn': formThirdParties.get('PersonalDataIsForDisclosure').value === 'Yes' }\" value=\"Yes\">Yes</mat-radio-button>\n                                <mat-radio-button [ngClass]=\"{'selected-radio-btn': formThirdParties.get('PersonalDataIsForDisclosure').value === 'No' }\" value=\"No\">No</mat-radio-button>\n                            </mat-radio-group>        \n                        </div>    \n        \n                        <section \n                            *ngIf=\"formThirdParties.get('PersonalDataIsForDisclosure').value === 'Yes'\"\n                            class=\"expand-section reduced-properties table-wrapper fadeInUp _delay3ms\">\n                            <button *ngIf=\"!isViewOnly || (!isOfficer && _hasRequestMoreInfo && thirdPartiesEnabled)\"\n                                mat-button\n                                color=\"primary\"\n                                [disabled]=\"processing\"\n                                class=\"add-item-button\"\n                                (click)=\"onAddAThirdParty()\">\n                                <div class=\"button-label\">\n                                    <mat-icon>add</mat-icon>                            \n                                    <span>Add Person / Body</span>\n                                </div>\n                            </button>\n                            \n                            <div class=\"table-wrapper\">\n                                <table \n                                    mat-table \n                                    #thirdPartyMatSort=\"matSort\"\n                                    matSortDisableClear=\"true\"\n                                    [dataSource]=\"thirdPartyDataSource\"\n                                    matSort>\n                    \n                                    <ng-container matColumnDef=\"Count\">\n                                        <th mat-header-cell *matHeaderCellDef> # </th>\n                                        <td mat-cell *matCellDef=\"let index = index\"> {{ index + 1 }} </td>\n                                    </ng-container>\n                    \n                                    <ng-container matColumnDef=\"NameOfThirdParty\">\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Person / Body </th>\n                                        <td mat-cell *matCellDef=\"let row\">{{ row.ThirdPartyName }}</td>\n                                    </ng-container>          \n                    \n                                    <ng-container matColumnDef=\"Purpose\">\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Purpose </th>\n                                        <td mat-cell *matCellDef=\"let row\">{{ row.Purpose }}</td>\n                                    </ng-container>                                 \n                    \n                                    <!-- Actions Column -->\n                                    <ng-container matColumnDef=\"Actions\">\n                                        <th mat-header-cell *matHeaderCellDef> Actions </th>\n                                        <td mat-cell *matCellDef=\"let row; let index = index\">\n                                            <button \n                                                mat-button \n                                                class=\"action-btn\"\n                                                [disabled]=\"!_hasRequestMoreInfo || isOfficer || (_hasRequestMoreInfo && !thirdPartiesEnabled)\"\n                                                [matMenuTriggerFor]=\"menu\" \n                                                (click)=\"$event.stopPropagation()\"\n                                                matTooltip=\"See more options\">\n                                                <mat-icon>more_vert</mat-icon>\n                                            </button>\n                    \n                                            <mat-menu yPosition=\"below\" #menu=\"matMenu\" class=\"more-options-mat-menu\">\n                    \n                                                <button \n                                                    mat-menu-item \n                                                    (click)=\"$event.stopPropagation();onEditThirdParty(row)\">\n                                                    <mat-icon>edit</mat-icon>\n                                                    <span>Make Changes</span>\n                                                </button>\n                                                      \n                                                <hr />\n                    \n                                                <button \n                                                    mat-menu-item \n                                                    (click)=\"$event.stopPropagation();onRemoveThirdParty(row)\">\n                                                    <mat-icon color=\"warn\">delete</mat-icon>\n                                                    <span>Remove</span>\n                                                </button>\n                    \n                                            </mat-menu>                                                  \n                                        </td>\n                                    </ng-container>\n                    \n                                    <tr mat-header-row *matHeaderRowDef=\"thirdPartyDisplayedColumns\"></tr>\n                                    <tr mat-row *matRowDef=\"let row; columns: thirdPartyDisplayedColumns;\" class=\"mat-data-row\"></tr>\n                                </table>\n        \n                                <mat-paginator \n                                    #thirdPartyPaginator\n                                    [pageSize]=\"10\"\n                                    [pageSizeOptions]=\"[5, 10]\">\n                                </mat-paginator>                    \n                            </div>                \n                        </section>    \n                        \n                        <hr class=\"full-width\" />\n        \n                        <div class=\"grouped-items full-width\">\n                            <h3>Do you Transfer personal data outside Uganda ?</h3>\n            \n                            <mat-radio-group color=\"primary\" aria-label=\"Pick one\" formControlName=\"StoreDataOutsideCountry\">\n                                <mat-radio-button [ngClass]=\"{'selected-radio-btn': formThirdParties.get('StoreDataOutsideCountry').value === 'Yes' }\" value=\"Yes\">Yes</mat-radio-button>\n                                <mat-radio-button [ngClass]=\"{'selected-radio-btn': formThirdParties.get('StoreDataOutsideCountry').value === 'No' }\" value=\"No\">No</mat-radio-button>\n                            </mat-radio-group>        \n                        </div> \n        \n                        <section \n                            *ngIf=\"formThirdParties.get('StoreDataOutsideCountry').value === 'Yes'\"\n                            class=\"expand-section reduced-properties table-wrapper\">\n                            <button *ngIf=\"!isViewOnly || (!isOfficer && _hasRequestMoreInfo && countriesOfTransferEnabled)\"\n                                mat-button\n                                color=\"primary\"\n                                [disabled]=\"processing\"\n                                class=\"add-item-button\"\n                                (click)=\"onAddACountry()\">\n                                <div class=\"button-label\">\n                                    <mat-icon>add</mat-icon>                            \n                                    <span>Add A Country</span>\n                                </div>\n                            </button>\n                            \n                            <div class=\"table-wrapper\">\n                                <table \n                                    mat-table \n                                    #countryOfTransferMatSort=\"matSort\"\n                                    matSortDisableClear=\"true\"\n                                    [dataSource]=\"countriesDataSource\"\n                                    matSort>\n                    \n                                    <ng-container matColumnDef=\"Count\">\n                                        <th mat-header-cell *matHeaderCellDef> # </th>\n                                        <td mat-cell *matCellDef=\"let index = index\"> {{ index + 1 }} </td>\n                                    </ng-container>\n                    \n                                    <ng-container matColumnDef=\"Country\">\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Country </th>\n                                        <td mat-cell *matCellDef=\"let row\">{{ row.Country }}</td>\n                                    </ng-container>          \n                    \n                                    <ng-container matColumnDef=\"Purpose\">\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Purpose </th>\n                                        <td mat-cell *matCellDef=\"let row\">{{ row.Purpose }}</td>\n                                    </ng-container>                                 \n                    \n                                    <ng-container matColumnDef=\"Description\">\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Description </th>\n                                        <td mat-cell *matCellDef=\"let row\">{{ row.Description }}</td>\n                                    </ng-container>                                 \n                    \n                                    <!-- Actions Column -->\n                                    <ng-container matColumnDef=\"Actions\">\n                                        <th mat-header-cell *matHeaderCellDef> Actions </th>\n                                        <td mat-cell *matCellDef=\"let row; let index = index\">\n                                            <button \n                                                mat-button \n                                                class=\"action-btn\"\n                                                [disabled]=\"!_hasRequestMoreInfo || isOfficer || (_hasRequestMoreInfo && !countriesOfTransferEnabled)\"\n                                                [matMenuTriggerFor]=\"menu\" \n                                                (click)=\"$event.stopPropagation()\"\n                                                matTooltip=\"See more options\">\n                                                <mat-icon>more_vert</mat-icon>\n                                            </button>\n                    \n                                            <mat-menu yPosition=\"below\" #menu=\"matMenu\" class=\"more-options-mat-menu\">\n                    \n                                                <button \n                                                    mat-menu-item \n                                                    (click)=\"$event.stopPropagation();onEditCountry(row)\">\n                                                    <mat-icon>edit</mat-icon>\n                                                    <span>Make Changes</span>\n                                                </button>\n                                                      \n                                                <hr />\n                    \n                                                <button \n                                                    mat-menu-item \n                                                    (click)=\"$event.stopPropagation();onRemoveCountry(row)\">\n                                                    <mat-icon color=\"warn\">delete</mat-icon>\n                                                    <span>Remove</span>\n                                                </button>\n                    \n                                            </mat-menu>                                                  \n                                        </td>\n                                    </ng-container>\n                    \n                                    <tr mat-header-row *matHeaderRowDef=\"countryDisplayedColumns\"></tr>\n                                    <tr mat-row *matRowDef=\"let row; columns: countryDisplayedColumns;\" class=\"mat-data-row\"></tr>\n                                </table>\n        \n                                <mat-paginator \n                                    #countryOfTransferPaginator\n                                    [pageSize]=\"10\"\n                                    [pageSizeOptions]=\"[5, 10]\">\n                                </mat-paginator>                    \n                            </div>                \n                        </section>                   \n        \n                    </form>\n        \n                    <div class=\"button-wrapper\">\n                        <button mat-button class=\"back-btn\" matStepperPrevious>Back</button>\n                        <button  *ngIf=\"!isViewOnly\"\n                            mat-button \n                            color=\"primary\" >\n                            Save as Draft\n                        </button> \n                        <button \n                            mat-button \n                            [disabled]=\"formThirdParties.invalid \n                            || processing \n                            || ((formThirdParties.get('PersonalDataIsForDisclosure').value === 'Yes') && (thirdParties.length === 0)) \n                            || ((formThirdParties.get('StoreDataOutsideCountry').value === 'Yes') && (countries.length === 0))\" \n                            class=\"next-btn\" \n                            color=\"primary\" \n                            matStepperNext>\n                            Next\n                        </button>\n                    </div>\n                </mat-step>\n        \n                <mat-step [stepControl]=\"formSecurityMeasures\">\n                    <ng-template matStepLabel>\n                        <h3>Security Information</h3>\n\n                        <span class=\"request-for-more-info-count\" *ngIf=\"formFieldSections[5].Count\">{{ formFieldSections[5].Count }}</span>\n                    </ng-template>\n        \n                    <form [formGroup]=\"formSecurityMeasures\">\n        \n                        <h1 class=\"full-width step-header\">State security measures in place to safeguard personal data collected or processed.</h1>\n        \n                        <section class=\"expand-section reduced-properties table-wrapper no-padding\">\n                            <button *ngIf=\"!isViewOnly || securityMeasuresEnabled\"\n                                mat-button\n                                color=\"primary\"\n                                [disabled]=\"processing\"\n                                class=\"add-item-button\"\n                                (click)=\"onAddSecurityMeasure()\">\n                                <div class=\"button-label\">\n                                    <mat-icon>add</mat-icon>                            \n                                    <span>Add A Security Measure</span>\n                                </div>\n                            </button>\n                            \n                            <div class=\"table-wrapper\">\n                                <table \n                                    mat-table \n                                    #securityMeasureMatSort=\"matSort\"\n                                    matSortDisableClear=\"true\"\n                                    [dataSource]=\"securityMeasureDataSource\"\n                                    matSort>\n                    \n                                    <ng-container matColumnDef=\"Count\">\n                                        <th mat-header-cell *matHeaderCellDef> # </th>\n                                        <td mat-cell *matCellDef=\"let index = index\"> {{ index + 1 }} </td>\n                                    </ng-container>\n                    \n                                    <ng-container matColumnDef=\"SecurityMeasure\">\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Security Measure </th>\n                                        <td mat-cell *matCellDef=\"let row\">{{ row.SecurityMeasure }}</td>\n                                    </ng-container>                                  \n                    \n                                    <!-- Actions Column -->\n                                    <ng-container matColumnDef=\"Actions\">\n                                        <th mat-header-cell *matHeaderCellDef> Actions </th>\n                                        <td mat-cell *matCellDef=\"let row; let index = index\">\n                                            <button \n                                                mat-button \n                                                class=\"action-btn\"\n                                                [disabled]=\"!_hasRequestMoreInfo || isOfficer || (_hasRequestMoreInfo && !securityMeasuresEnabled)\"\n                                                [matMenuTriggerFor]=\"menu\" \n                                                (click)=\"$event.stopPropagation()\"\n                                                matTooltip=\"See more options\">\n                                                <mat-icon>more_vert</mat-icon>\n                                            </button>\n                    \n                                            <mat-menu yPosition=\"below\" #menu=\"matMenu\" class=\"more-options-mat-menu\">\n                \n                                                <button \n                                                    mat-menu-item \n                                                    (click)=\"$event.stopPropagation();onEditSecurityMeasure(row)\">\n                                                    <mat-icon>edit</mat-icon>\n                                                    <span>Make Changes</span>\n                                                </button>\n                                                      \n                                                <hr />\n                    \n                                                <button \n                                                    mat-menu-item \n                                                    (click)=\"$event.stopPropagation();onRemoveSecurityMeasure(row)\">\n                                                    <mat-icon color=\"warn\">delete</mat-icon>\n                                                    <span>Remove</span>\n                                                </button>                                        \n                    \n                                            </mat-menu>                                                  \n                                        </td>\n                                    </ng-container>\n                    \n                                    <tr mat-header-row *matHeaderRowDef=\"securityMeasuresDisplayedColumns\"></tr>\n                                    <tr mat-row *matRowDef=\"let row; columns: securityMeasuresDisplayedColumns;\" [ngClass]=\"{'selected-mat-data-row': selectedSpouse === row}\" class=\"mat-data-row\"></tr>\n                                </table>\n        \n                                <mat-paginator \n                                    #securityMeasurePaginator\n                                    [pageSize]=\"10\"\n                                    [pageSizeOptions]=\"[5, 10]\">\n                                </mat-paginator>                    \n                            </div>                \n                        </section>    \n                        \n                        <section class=\"expand-section reduced-properties table-wrapper margin documents\">\n                            <h1 class=\"full-width step-header\">Attach supporting documentation eg approved information security policy.</h1>\n        \n                            <div class=\"buttons\" *ngIf=\"!isViewOnly || (_hasRequestMoreInfo && _updateAttachment)\">\n                                <button *ngIf=\"!isViewOnly || (_hasRequestMoreInfo && _updateAttachment)\"\n                                    mat-button\n                                    color=\"primary\"\n                                    [disabled]=\"processing\"\n                                    class=\"add-item-button\"\n                                    (click)=\"onUploadAttachments()\">\n                                    <div class=\"button-label\">\n                                        <mat-icon>add</mat-icon>                            \n                                        <span> {{ document ? 'Replace Document' : 'Upload Attachment' }} </span>\n                                    </div>\n                                </button>\n            \n                                <button \n                                    mat-button\n                                    *ngIf=\"document && (!isViewOnly || (_hasRequestMoreInfo && _updateAttachment))\"\n                                    color=\"primary\"\n                                    [disabled]=\"processing\"\n                                    class=\"remove-button\"\n                                    (click)=\"onRemoveDocument()\">\n                                    <div class=\"button-label\">\n                                        <mat-icon>clear</mat-icon>\n                                        <span> Remove Document </span>\n                                    </div>\n                                </button>\n                            </div>\n        \n                            <div *ngIf=\"document && document.Base64\" class=\"uploaded-document\" matTooltip=\"Open Document\" (click)=\"onReadDocument(document)\">\n                                <img src=\"./assets/img/pdf.png\" alt=\"\">\n        \n                                <span>Document: {{ document.Name }} <span *ngIf=\"document.Size\">  -  {{ document.Size }} Mbs</span></span>\n                            </div>\n\n                            <p class=\"no-document-found\" *ngIf=\"document && !document.Base64\">No document found. Please attach</p>\n        \n                        </section>\n        \n                        <hr class=\"full-width\" />\n        \n                        <section class=\"expand-section reduced-properties table-wrapper margin documents\">\n                            <h1 class=\"full-width step-header\">Attach Form 3</h1>\n        \n                            <div class=\"buttons\" *ngIf=\"!isViewOnly || (_hasRequestMoreInfo && _updateForm3Attachment)\">\n                                <!-- <a \n                                    mat-button\n                                    color=\"accent\"\n                                    [disabled]=\"processing\"\n                                    target=\"_blank\"\n                                    download=\"Form 3 -  Undertaking Not to Process or Store Personal Data\"\n                                    class=\"add-item-button\"\n                                    href=\"./assets/docs/Form 3 -  Undertaking Not to Process or Store Personal Data.pdf\">\n                                    <div class=\"button-label\">\n                                        <mat-icon>sim_card_download</mat-icon>                            \n                                        <span>Download Form 3</span>\n                                    </div>\n                                </a> -->\n        \n                                <button\n                                    mat-button\n                                    *ngIf=\"!isViewOnly || (_hasRequestMoreInfo && _updateForm3Attachment)\"\n                                    color=\"accent\"\n                                    class=\"download-form\"                           \n                                    (click)=\"onDownloadForm3()\">\n                                    <div class=\"button-label\">\n                                        <mat-icon>sim_card_download</mat-icon>                            \n                                        <span>Download Form 3</span>\n                                    </div>                        \n                                </button>\n        \n                                <button *ngIf=\"!isViewOnly || (_hasRequestMoreInfo && _updateForm3Attachment)\"\n                                    mat-button\n                                    color=\"primary\"\n                                    [disabled]=\"processing\"\n                                    class=\"add-item-button\"\n                                    (click)=\"onUploadForm3Attachments()\">\n                                    <div class=\"button-label\">\n                                        <mat-icon>add</mat-icon>                            \n                                        <span> {{ documentForm3 ? 'Replace Form 3' : 'Upload Form 3' }} </span>\n                                    </div>\n                                </button>\n            \n                                <button *ngIf=\"documentForm3 && (!isViewOnly || (_hasRequestMoreInfo && _updateForm3Attachment))\"\n                                    mat-button\n                                    color=\"primary\"\n                                    [disabled]=\"processing\"\n                                    class=\"remove-button\"\n                                    (click)=\"onRemoveForm3Document()\">\n                                    <div class=\"button-label\">\n                                        <mat-icon>clear</mat-icon>\n                                        <span> Remove Document </span>\n                                    </div>\n                                </button>\n                            </div>\n        \n                            <div  *ngIf=\"documentForm3 && documentForm3.Base64\" class=\"uploaded-document\" matTooltip=\"Open Document\" (click)=\"onReadDocument(documentForm3)\">\n                                <img src=\"./assets/img/pdf.png\" alt=\"\">\n        \n                                <span>Document: {{ documentForm3.Name }} <span *ngIf=\"documentForm3.Size\">  -  {{ documentForm3.Size }} Mbs</span> </span>\n                            </div>\n\n                            <p class=\"no-document-found\" *ngIf=\"documentForm3 && !documentForm3.Base64\">No document found. Please attach</p>\n        \n                        </section>\n        \n                        <hr class=\"full-width\" />\n        \n                        <section class=\"expand-section reduced-properties table-wrapper margin documents\">\n                            <h1 class=\"full-width step-header\">Attach Proof of Payment</h1>\n        \n                            <div class=\"buttons\" *ngIf=\"!isViewOnly || (_hasRequestMoreInfo && _updateProofOfPayment)\">\n                                <button *ngIf=\"!isViewOnly || (_hasRequestMoreInfo && _updateProofOfPayment)\"\n                                    mat-button\n                                    color=\"primary\"\n                                    [disabled]=\"processing\"\n                                    class=\"add-item-button\"\n                                    (click)=\"onUploadProofOfPayment()\">\n                                    <div class=\"button-label\">\n                                        <mat-icon>add</mat-icon>                            \n                                        <span> {{ proofOfPayment ? 'Replace Document' : 'Upload Proof of Payment' }} </span>\n                                    </div>\n                                </button>\n            \n                                <button \n                                    mat-button\n                                    *ngIf=\"proofOfPayment && (!isViewOnly || (_hasRequestMoreInfo && _updateProofOfPayment))\"\n                                    color=\"primary\"\n                                    [disabled]=\"processing\"\n                                    class=\"remove-button\"\n                                    (click)=\"onRemoveProofOfPaymen()\">\n                                    <div class=\"button-label\">\n                                        <mat-icon>clear</mat-icon>\n                                        <span> Remove Document </span>\n                                    </div>\n                                </button>\n                            </div>\n        \n                            <div *ngIf=\"proofOfPayment && proofOfPayment.Base64\" class=\"uploaded-document\" matTooltip=\"Open Document\" (click)=\"onReadDocument(proofOfPayment)\">\n                                <img src=\"./assets/img/pdf.png\" alt=\"\">\n        \n                                <span>Document: {{ proofOfPayment.Name }} <span *ngIf=\"proofOfPayment.Size\">  -  {{ proofOfPayment.Size }} Mbs</span> </span>\n                            </div>\n\n                            <p class=\"no-document-found\" *ngIf=\"proofOfPayment && !proofOfPayment.Base64\">No document found. Please attach</p>\n        \n                        </section>\n        \n                        <hr class=\"full-width\" />\n        \n                        <mat-checkbox\n                            class=\"full-width selected-checkbox\"\n                            color=\"primary\"\n                            [checked]=\"true\"                            \n                            formControlName=\"RegistrationConsent\"\n                            color=\"primary\">\n                            I certify that the above information is correct and complete and here by apply to be registered as \n                            data collector/ data processor / data controller (This shall be based on th category selected) \n                            under the data Protection and Privacy Act.\n                            <mat-error *ngIf=\"formSecurityMeasures.get('RegistrationConsent').invalid\">{{ getCheckboxErrorMessage() }}</mat-error>   \n                        </mat-checkbox>  \n                        \n                        \n                        \n                        <mat-form-field class=\"full-width\" hintLabel=\"The person authorized to complete and submit this application on the behalf of the applicant organization\">\n                            <mat-label>Name and title of person submitting the application<span class=\"required-field\">required</span></mat-label>\n                            <input appUppercase #RegistrationDoneByInput matInput maxlength=\"50\" formControlName=\"RegistrationDoneBy\">  \n                            <mat-error *ngIf=\"formSecurityMeasures.get('RegistrationDoneBy').invalid\">{{ getRegistrationDoneByErrorMessage() }}</mat-error>                             \n                            <mat-hint align=\"end\">{{ RegistrationDoneByInput.value.length }} / 50</mat-hint>    \n                        </mat-form-field>     \n\n                        <h1 class=\"full-width step-header\">Review Comments</h1>\n                        \n                        <mat-form-field *ngIf=\"isOfficer\" class=\"full-width\" hintLabel=\"Comments from the technical team\" >\n                            <mat-label>Technical Comments</mat-label>\n                            <textarea matInput formControlName=\"TechnicalComments\" disabled class=\"textarea-small\"></textarea>\n                        </mat-form-field>   \n                        \n                        <mat-form-field *ngIf=\"isOfficer\" class=\"full-width\" hintLabel=\"Comments from the legal team\">\n                            <mat-label>Legal Comments</mat-label>\n                            <textarea matInput formControlName=\"LegalComments\" disabled class=\"textarea-small\"></textarea>\n                        </mat-form-field>      \n\n                        <mat-form-field *ngIf=\"isOfficer\" class=\"full-width\" hintLabel=\"Comments from the director\">\n                            <mat-label>Director Comments</mat-label>\n                            <textarea matInput formControlName=\"DirectorComments\" disabled class=\"textarea-small\"></textarea>\n                        </mat-form-field>      \n                        \n        \n                    </form>\n        \n                    <div class=\"button-wrapper\">\n                        <button mat-button class=\"back-btn\" matStepperPrevious>Back</button>\n\n                        <!-- <button *ngIf=\"!isViewOnly\"\n                            mat-button \n                            color=\"primary\" >\n                            Save as Draft\n                        </button>  -->\n                      \n\n                        <div class=\"buttons\">\n                            <button  *ngIf=\"!isViewOnly\"\n                                mat-button\n                                color=\"primary\" \n                                [disabled]=\"formGeneralInformation.invalid || formOrganisationDetails.invalid || formPersonalDataHeld.invalid || formPurposeRetention.invalid || formThirdParties.invalid || formSecurityMeasures.invalid || processing || securityMeasures.length === 0 || !documentForm3 || !proofOfPayment\" \n                                class=\"download\" \n                                matTooltip=\"Keep a copy of the information you have filled in\"\n                                (click)=\"onPreviewForm(true)\">\n                                <div class=\"button-label\">\n                                    <mat-icon>sim_card_download</mat-icon>\n                                    <span>Download Form</span>\n                                </div>\n                            </button>\n        \n                            <button\n                                mat-button  *ngIf=\" !isViewOnly\"\n                                color=\"primary\" \n                                [disabled]=\"formGeneralInformation.invalid || formOrganisationDetails.invalid || formPersonalDataHeld.invalid || formPurposeRetention.invalid || formThirdParties.invalid || formSecurityMeasures.invalid || processing || securityMeasures.length === 0 || !documentForm3 || !proofOfPayment\" \n                                class=\"preview\" \n                                matTooltip=\"Have a look at all the information you have filled in before sending.\"\n                                (click)=\"onPreviewForm(false)\">\n                                <div class=\"button-label\">\n                                    <mat-icon>visibility</mat-icon>\n                                    <span>Preview Form</span>\n                                </div>\n                            </button>\n        \n                        \n                            <button  *ngIf=\"!isViewOnly\"\n                                mat-button \n                                class=\"next-btn submit-btn\" \n                                [disabled]=\"formGeneralInformation.invalid || formOrganisationDetails.invalid || formPersonalDataHeld.invalid || formPurposeRetention.invalid || formThirdParties.invalid || formSecurityMeasures.invalid || processing || securityMeasures.length === 0 || !documentForm3 || !proofOfPayment\" \n                                [ngClass]=\"{'inline-processing-btn': processing}\" \n                                color=\"primary\" \n                                (click)=\"onSubmit()\">\n                                <app-inline-mat-spinner *ngIf=\"processing\"></app-inline-mat-spinner>                  \n                                <span>Send Application</span>                    \n                            </button>                \n                        \n                            <!-- For submitting Request for more information -->\n                            <!-- <button *ngIf=\"_hasRequestMoreInfo\"\n                                mat-button \n                                class=\"next-btn submit-btn\" \n                                [disabled]=\"formGeneralInformation.invalid || formOrganisationDetails.invalid || formPersonalDataHeld.invalid || formPurposeRetention.invalid || formThirdParties.invalid || formSecurityMeasures.invalid || securityMeasures.length === 0\" \n                                color=\"primary\" \n                                (click)=\"onSubmitRequestedInfor()\">\n                                <span>Submit Changes Application</span>                    \n                            </button>                 -->\n\n                            <button *ngIf=\"_hasRequestMoreInfo && !isOfficer\"\n                                mat-button \n                                class=\"next-btn submit-btn\" \n                                color=\"primary\" \n                                (click)=\"onSubmitRequestedInfor()\">\n                                <span>Submit Changes Application</span>                    \n                            </button>                \n                        </div>\n                    </div>\n                </mat-step>\n        \n                <!-- <mat-step [stepControl]=\"form\">\n                    <ng-template matStepLabel>\n                        <h3>Legal <br /> Details</h3>\n                    </ng-template>\n        \n                    <form [formGroup]=\"form\">\n                        \n                    </form>\n        \n                    <div class=\"button-wrapper\">\n                        <button mat-button class=\"back-btn\" matStepperPrevious>Back</button>\n        \n                        <button \n                            mat-button \n                            [disabled]=\"form.invalid || processing\" \n                            class=\"next-btn\" \n                            color=\"primary\" \n                            matStepperNext>\n                            Next\n                        </button>\n                    </div>\n                </mat-step> -->\n        \n                <!-- <mat-step [stepControl]=\"formChildrenData\">\n                    <ng-template matStepLabel>\n                        <h3>Children <br /> Data</h3>\n                    </ng-template>\n        \n                    <form [formGroup]=\"formChildrenData\">\n                        \n                        <div class=\"grouped-items\">\n                            <h3>Do you collect personal data relating to Children?</h3>\n            \n                            <mat-radio-group color=\"primary\" aria-label=\"Pick one\" formControlName=\"CollectChildrenData\">\n                                <mat-radio-button value=\"Yes\">Yes</mat-radio-button>\n                                <mat-radio-button value=\"No\">No</mat-radio-button>\n                            </mat-radio-group>        \n                        </div>  \n        \n                        <mat-form-field>\n                            <mat-label>Please indicate who gave the consent <span class=\"required-field\">required</span></mat-label>\n                            <mat-select formControlName=\"ChildDataConsentor\">\n                                <mat-option value=\"1\">Parents / Guardian</mat-option>\n                                <mat-option value=\"2\">Relevant Authority</mat-option>\n                            </mat-select>    \n                        </mat-form-field>                  \n        \n                        <mat-form-field>\n                            <mat-label>Purpose for collection <span class=\"required-field\">required</span></mat-label>\n                            <mat-select formControlName=\"PurposeForCollectingChildData\">\n                                <mat-option value=\"1\">Comply with the Law</mat-option>\n                                <mat-option value=\"2\">Research or Statistical Purposes</mat-option>\n                            </mat-select>    \n                        </mat-form-field>      \n                        \n                        <mat-form-field>\n                            <mat-label>Indicate the law being complied with <span class=\"required-field\">required</span></mat-label>\n                            <mat-select formControlName=\"ChildLawPurpose\">\n                                <mat-option value=\"1\">Child Law</mat-option>\n                            </mat-select>    \n                        </mat-form-field>                   \n                        \n                        <mat-form-field>\n                            <mat-label>Indicate the research beign carried out.<span class=\"required-field\">required</span></mat-label>\n                            <textarea #CaseTitleInput matInput maxlength=\"1000\" formControlName=\"ChildResearchPurpose\"></textarea>\n                            <mat-hint align=\"end\">{{ CaseTitleInput.value.length }} / 1000</mat-hint>\n                        </mat-form-field>                     \n        \n                    </form>\n        \n                    <div class=\"button-wrapper\">\n                        <button mat-button class=\"back-btn\" matStepperPrevious>Back</button>\n        \n                        <button \n                            mat-button \n                            [disabled]=\"formChildrenData.invalid || processing\" \n                            class=\"next-btn\" \n                            color=\"primary\" \n                            (click)=\"onSubmit()\"\n                            matStepperNext>\n                            Submit\n                        </button>\n                    </div>\n                </mat-step> -->\n        \n                <!-- <mat-step>\n                    <ng-template matStepLabel>\n                        <h3>Payment</h3>          \n                    </ng-template>\n        \n                    <form>\n                        <h1 class=\"full-width step-header\">Show payment options.</h1>  \n                    </form>\n        \n                    <div class=\"button-wrapper single-button-start\">\n                        <button mat-button class=\"back-btn\" matStepperPrevious>Back</button>\n        \n                        <button \n                            mat-raised-button \n                            color=\"primary\" \n                            [ngClass]=\"{'inline-processing-btn': processing }\" \n                            [disabled]=\"processing\"                      \n                            (click)=\"onSubmit()\">\n                                <div class=\"btn-label\">\n                                    <app-inline-mat-spinner *ngIf=\"processing\"></app-inline-mat-spinner>                        \n                                    <span>Submit</span>\n                                </div>\n                        </button>\n                    </div>              \n                </mat-step> -->\n            </mat-horizontal-stepper>   \n        </main>\n    </fury-page-layout-content>\n</fury-page-layout>\n\n\n","var Utils = require('./utils')\n\nfunction getColorAttrib (color, attrib) {\n  var alpha = color.a / 255\n  var str = attrib + '=\"' + color.hex + '\"'\n\n  return alpha < 1\n    ? str + ' ' + attrib + '-opacity=\"' + alpha.toFixed(2).slice(1) + '\"'\n    : str\n}\n\nfunction svgCmd (cmd, x, y) {\n  var str = cmd + x\n  if (typeof y !== 'undefined') str += ' ' + y\n\n  return str\n}\n\nfunction qrToPath (data, size, margin) {\n  var path = ''\n  var moveBy = 0\n  var newRow = false\n  var lineLength = 0\n\n  for (var i = 0; i < data.length; i++) {\n    var col = Math.floor(i % size)\n    var row = Math.floor(i / size)\n\n    if (!col && !newRow) newRow = true\n\n    if (data[i]) {\n      lineLength++\n\n      if (!(i > 0 && col > 0 && data[i - 1])) {\n        path += newRow\n          ? svgCmd('M', col + margin, 0.5 + row + margin)\n          : svgCmd('m', moveBy, 0)\n\n        moveBy = 0\n        newRow = false\n      }\n\n      if (!(col + 1 < size && data[i + 1])) {\n        path += svgCmd('h', lineLength)\n        lineLength = 0\n      }\n    } else {\n      moveBy++\n    }\n  }\n\n  return path\n}\n\nexports.render = function render (qrData, options, cb) {\n  var opts = Utils.getOptions(options)\n  var size = qrData.modules.size\n  var data = qrData.modules.data\n  var qrcodesize = size + opts.margin * 2\n\n  var bg = !opts.color.light.a\n    ? ''\n    : '<path ' + getColorAttrib(opts.color.light, 'fill') +\n      ' d=\"M0 0h' + qrcodesize + 'v' + qrcodesize + 'H0z\"/>'\n\n  var path =\n    '<path ' + getColorAttrib(opts.color.dark, 'stroke') +\n    ' d=\"' + qrToPath(data, size, opts.margin) + '\"/>'\n\n  var viewBox = 'viewBox=\"' + '0 0 ' + qrcodesize + ' ' + qrcodesize + '\"'\n\n  var width = !opts.width ? '' : 'width=\"' + opts.width + '\" height=\"' + opts.width + '\" '\n\n  var svgTag = '<svg xmlns=\"http://www.w3.org/2000/svg\" ' + width + viewBox + ' shape-rendering=\"crispEdges\">' + bg + path + '</svg>\\n'\n\n  if (typeof cb === 'function') {\n    cb(null, svgTag)\n  }\n\n  return svgTag\n}\n","var Utils = require('./utils')\n\nfunction clearCanvas (ctx, canvas, size) {\n  ctx.clearRect(0, 0, canvas.width, canvas.height)\n\n  if (!canvas.style) canvas.style = {}\n  canvas.height = size\n  canvas.width = size\n  canvas.style.height = size + 'px'\n  canvas.style.width = size + 'px'\n}\n\nfunction getCanvasElement () {\n  try {\n    return document.createElement('canvas')\n  } catch (e) {\n    throw new Error('You need to specify a canvas element')\n  }\n}\n\nexports.render = function render (qrData, canvas, options) {\n  var opts = options\n  var canvasEl = canvas\n\n  if (typeof opts === 'undefined' && (!canvas || !canvas.getContext)) {\n    opts = canvas\n    canvas = undefined\n  }\n\n  if (!canvas) {\n    canvasEl = getCanvasElement()\n  }\n\n  opts = Utils.getOptions(opts)\n  var size = Utils.getImageWidth(qrData.modules.size, opts)\n\n  var ctx = canvasEl.getContext('2d')\n  var image = ctx.createImageData(size, size)\n  Utils.qrToImageData(image.data, qrData, opts)\n\n  clearCanvas(ctx, canvasEl, size)\n  ctx.putImageData(image, 0, 0)\n\n  return canvasEl\n}\n\nexports.renderToDataURL = function renderToDataURL (qrData, canvas, options) {\n  var opts = options\n\n  if (typeof opts === 'undefined' && (!canvas || !canvas.getContext)) {\n    opts = canvas\n    canvas = undefined\n  }\n\n  if (!opts) opts = {}\n\n  var canvasEl = exports.render(qrData, canvas, opts)\n\n  var type = opts.type || 'image/png'\n  var rendererOpts = opts.rendererOpts || {}\n\n  return canvasEl.toDataURL(type, rendererOpts.quality)\n}\n","import {HttpClient} from '@angular/common/http';\nimport {AfterContentInit, ChangeDetectorRef, Component, EventEmitter, Input, OnDestroy, OnInit, ViewChild} from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {MatDialog} from '@angular/material/dialog';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {forkJoin, Observable, Subscription} from 'rxjs';\nimport {\n    ApiPayload,\n    Country,\n    CountryOfTransfer,\n    DataCategory,\n    DataProtectionOfficer,\n    DataPurposes,\n    DataSource,\n    DataSubCategory,\n    FileUpload,\n    MainActivity,\n    NatureOfBusinessCat,\n    NatureOfBusinessSubCat,\n    OrganisationCategory,\n    OrganisationType,\n    Sector,\n    SecurityMeasure,\n    ThirdParty,\n    ChildrenDataPurpose\n} from '../../../../services/api.model';\nimport {catchError, filter, map, startWith} from 'rxjs/operators';\nimport {MatCheckboxChange} from '@angular/material/checkbox';\nimport {ApiEndpointsService} from '../../../../services/api-endpoints.service';\nimport {ApiService} from '../../../../services/api.service';\nimport {OrgNoticeComponent} from '../../../../layout/dialogs/org-registration/org-notice/org-notice.component';\nimport {OrgMainActivityComponent} from '../../../../layout/dialogs/org-registration/org-main-activity/org-main-activity.component';\nimport {\n    OrgDataProtectionOfficerComponent\n} from '../../../../layout/dialogs/org-registration/org-data-protection-officer/org-data-protection-officer.component';\nimport {\n    OrgSecurityMeasuresComponent\n} from '../../../../layout/dialogs/org-registration/org-security-measures/org-security-measures.component';\nimport {OrgThirdPartyComponent} from '../../../../layout/dialogs/org-registration/org-third-party/org-third-party.component';\nimport {OrgCountryComponent} from '../../../../layout/dialogs/org-registration/org-country/org-country.component';\nimport {OrgUploadComponent} from '../../../../layout/dialogs/org-upload/org-upload.component';\nimport {OrgForm3DialogComponent} from '../../../../layout/dialogs/org-registration/org-form3-dialog/org-form3-dialog.component';\nimport {\n    OrgRegistrationPreviewDialogComponent\n} from '../../../../layout/dialogs/org-registration/org-registration-preview-dialog/org-registration-preview-dialog.component';\nimport {SuccessfulMessageDialogComponent} from '../../../../layout/dialogs/successful-message-dialog/successful-message-dialog.component';\nimport {\n    Action,\n    ActionPerformed,\n    ActionPerformedRequestMoreInfo,\n    WorkFlowConstants,\n    WorkFlowStep,\n    WorkFlowTimeline\n} from '../../../models/document-workflow.model';\nimport {CertificateDetails, CertificateDetailsResponse, CheckListed, CompanyRegistrationModel} from '../company-registration.model';\nimport {BaseFuryForm} from '../../../../../@fury/shared/base-fury-form';\nimport {KeycloakService} from 'keycloak-angular';\nimport {WorkflowServiceService} from '../../../../services/workflow-service.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {$RequestMoreInfoField, Checked, Checklist, RequestMoreInfoField} from '../../../models/reference.model';\nimport {fadeInRightAnimation} from '../../../../../@fury/animations/fade-in-right.animation';\nimport {fadeInUpAnimation} from '../../../../../@fury/animations/fade-in-up.animation';\nimport {SnackBarService} from '../../../../pages/services/snack-bar.service';\nimport {CompanyRegistrationService} from '../../company-registration.service';\nimport {ReviewCommentsComponent} from '../../../../layout/review-comments/review-comments.component';\nimport {CertPreviewComponent} from '../cert-preview/cert-preview.component';\nimport {ApplicationTimelineComponent} from '../../../../layout/application-timeline/application-timeline.component';\nimport {ReferenceTableService} from '../../../../services/reference-table.service';\nimport {AuthenticationService} from '../../../../authentication/authentication.service';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { ViewPdfDocumentBottomsheetComponent } from '../../../../layout/bottomsheets/view-pdf-document-bottomsheet/view-pdf-document-bottomsheet.component';\nimport { environment } from '../../../../../environments/environment';\nimport { ComplaintService } from '../../../complaints/complaints.service';\n\n@Component({\n  selector: 'fury-company-registration-detail',\n  templateUrl: './company-registration-detail.component.html',\n  styleUrls: ['./company-registration-detail.component.scss'],\n  animations: [fadeInRightAnimation, fadeInUpAnimation]\n})\nexport class CompanyRegistrationDetailComponent extends BaseFuryForm implements OnInit, OnDestroy, AfterContentInit  {\n\n  dialogRef;\n    bottomsheetRef;\n    processing = false;\n    formGeneralInformation: FormGroup;\n    formOrganisationDetails: FormGroup;\n    formPersonalDataHeld: FormGroup;\n    formPurposeRetention: FormGroup;\n    formSecurityMeasures: FormGroup;\n    formThirdParties: FormGroup;\n    formChildrenData: FormGroup;\n    selectedIndex = 0;\n    OrganisationID: any;\n    // selectedIndex = 3;\n    // isLinear = true;\n    isLinear = false;\n    today = new Date();\n    contactInformation = true;\n    sectors: Sector[];\n    countries: Country[];\n    selected = false;\n    DPOSelected = false;\n    organisationCategories: OrganisationCategory[] = [];\n    selectedOrganisationCategories: OrganisationCategory[] = [];\n    organisationTypes: OrganisationType[];\n    dataSources: DataSource[];\n    selectedDataSources: DataSource[] = [];\n    httpSub: Subscription;\n    MainActivitiesDisplayedColumns: string[] = ['Count', 'MainActivity', 'Actions'];\n    dpoDisplayedColumns: string[] = ['Count', 'Name', 'Telephone', 'Email', 'PhysicalAddress', 'Actions'];\n    securityMeasuresDisplayedColumns: string[] = ['Count', 'SecurityMeasure', 'Actions'];\n    thirdPartyDisplayedColumns: string[] = ['Count', 'NameOfThirdParty', 'Purpose', 'Actions'];\n    countryDisplayedColumns: string[] = ['Count', 'Country', 'Purpose', 'Description', 'Actions'];\n    mainActivities: MainActivity[] = [];\n    mainActivitiesDataSource: MatTableDataSource<MainActivity>;\n    dataProtectionOfficers: DataProtectionOfficer[] = [];\n    dpoDataSource: MatTableDataSource<DataProtectionOfficer>;\n    securityMeasures: SecurityMeasure[] = [];\n    securityMeasureDataSource: MatTableDataSource<SecurityMeasure>;\n    thirdParties: ThirdParty[] = [];\n    thirdPartyDataSource: MatTableDataSource<ThirdParty>;\n    countriesOfTransfer: CountryOfTransfer[] = [];\n    countriesDataSource: MatTableDataSource<CountryOfTransfer>;\n    selectedDataCategory: DataCategory[] = [];\n    selectedDataSubCategory: DataSubCategory[] = [];\n    dataCategories: DataCategory[];\n    dataPurposes: DataPurposes[];\n    childDataPurposes: ChildrenDataPurpose[] = [];\n    selectedChildDataPurposes: ChildrenDataPurpose[] = [];\n    selectedDataPurposes: DataPurposes[] = [];\n    natureOfBusinessCat: NatureOfBusinessCat[] = [];\n    natureOfBusinessSubCat: NatureOfBusinessSubCat[] = [];\n    selectedNatureOfBusinessSubCat: NatureOfBusinessSubCat[] = [];\n    SpecifyTheLaw = false;\n    ServiceOrProductProvided = false;\n    showChildrenDataFields = false;\n    SpecifyLegalObligation = false;\n    document: FileUpload | null;\n    documentForm3: FileUpload | null;\n    proofOfPayment: FileUpload | null;\n    OrganizationType = null;\n    SectorName = null;\n    NatureOfBusinessCat = null;\n    CountryOfIncorporation = null;\n    RegTrackingNo: string;\n    \n    //\n    role: string;\n    workflowID = '1';\n    workflowTimeLine: WorkFlowTimeline;\n    currentStep: WorkFlowStep;\n    certificateResponse: CertificateDetailsResponse;\n    certificateDetails: CertificateDetails;\n    accesses: string[];\n    regTrackingNo: string;\n    timeLineAccess: string[] = ['data-protection-officer-director', 'data-protection-officer-nita', 'data-protection-officer-technical', 'data-protection-officer-legal'];\n    isOfficer: boolean;\n    isApplicant: boolean;\n    _hasRequestMoreInfo = false;\n    _StepRequestingForMoreInfo = 0;\n    requestMoreInfoFields: RequestMoreInfoField[] = [];\n    canDownloadCertificate = false;\n    $checklist: Checklist[];\n    // Main Object\n    application: CompanyRegistrationModel = new CompanyRegistrationModel();\n    permittedActions: Action[] = [];\n    // Subscriptions\n    subscriptions: Subscription[] = [];\n    $resultRefChecklistEvent: EventEmitter<any> = new EventEmitter();\n    formFieldSections: { SectionID: number; SectionName: string; Count: number }[] = []\n    personalDataCollectedCheckBoxEnabled = false;\n    dataCategory = new FormControl();\n\n    @ViewChild('MainActivityPaginator', {static: false}) MainActivityPaginator: MatPaginator;\n    @ViewChild('MainActivityMatSort', {static: false}) MainActivityMatSort: MatSort;\n    @ViewChild('dpoPaginator', {static: false}) dpoPaginator: MatPaginator;\n    @ViewChild('dpoMatSort', {static: false}) dpoMatSort: MatSort;\n    @ViewChild('securityMeasurePaginator', {static: false}) securityMeasurePaginator: MatPaginator;\n    @ViewChild('securityMeasureMatSort', {static: false}) securityMeasureMatSort: MatSort;\n    @ViewChild('thirdPartyPaginator', {static: false}) thirdPartyPaginator: MatPaginator;\n    @ViewChild('thirdPartyMatSort', {static: false}) thirdPartyMatSort: MatSort;\n    @ViewChild('countryOfTransferPaginator', {static: false}) countryOfTransferPaginator: MatPaginator;\n    @ViewChild('countryOfTransferMatSort', {static: false}) countryOfTransferMatSort: MatSort;\n    @Input() checked: Boolean;\n\n    OrganizationID: number;\n    cat: number[] = [];\n    organisationcategories: any;\n    natureOfbusinesses: any;\n    natureOfbusinesses_arr: any = [];\n    sourceofdata: any;\n    sourceofdata_arr: any = [];\n    childDataPurposeResults:any = [];\n    purpose: any;\n    purpose_arr: any = [];\n\n    _updateAttachment = false;\n    _updateForm3Attachment = false;\n    _updateProofOfPayment = false;\n    securityMeasuresEnabled = false;\n    thirdPartiesEnabled = false;\n    countriesOfTransferEnabled = false;\n\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private service: ApiService,\n    private endpoints: ApiEndpointsService,\n    private dialog: MatDialog,\n    private bottomsheet: MatBottomSheet,\n    private http: HttpClient,\n    private route: Router,\n    public snackBar: SnackBarService,\n    private activateRoute: ActivatedRoute,\n    private changeDetector: ChangeDetectorRef,\n    public authService: KeycloakService,\n    public _authService: AuthenticationService,\n    public _workflowService: WorkflowServiceService,\n    public registrationService: CompanyRegistrationService,\n    private referenceService: ReferenceTableService,\n    public complaintService: ComplaintService,\n  ) {\n\n\n    super(\n      authService,\n      _workflowService,\n      registrationService,\n      complaintService\n    );\n\n    this.accesses = authService.getKeycloakInstance().resourceAccess['dps-frontend'].roles;\n    this.operationType = activateRoute.routeConfig.data.action;\n    this.regTrackingNo = this.route.getCurrentNavigation().extras.state.regTrackingNo;\n\n    this.pageTitle();\n\n\n   }\n\n   pageTitle() {\n    const pageTitle = this.isOfficer ? this.application.OrganisationName + 'Application' : ' My Application';\n    this.service.updatePageTitle(['Organisations', pageTitle]);\n}\n\n   \n\nngOnInit(): void {\n  this.formGeneralInformation = this.formBuilder.group({\n      OrganizationName: new FormControl('', [Validators.required]),\n      DPPActCategory: new FormControl('', [Validators.required]),\n      OrganizationTypeID: new FormControl('', [Validators.required]),\n      CountryOfIncorporation: new FormControl('', [Validators.required]),\n      URSBNumber: new FormControl(''),\n      SectorID: new FormControl('', [Validators.required]),\n      OtherSector: new FormControl('', [Validators.maxLength(50)]),\n      Location: new FormControl('', [Validators.required]),\n      PhoneNumberCode: new FormControl('', [Validators.required]),\n      PhoneNumber: new FormControl('', [\n          Validators.required,\n          Validators.pattern(/^[0-9 ]+$/),\n      ]),\n      EmailAddress: new FormControl('', [\n          Validators.required,\n          Validators.email\n      ]),\n      // NatureOfBusiness: new FormControl('', [Validators.required]),\n      NatureOfBusinessCat: new FormControl('', [Validators.required]),\n      NatureOfBusinessSubCat: new FormControl('', [Validators.required]),\n  });\n\n  this.formOrganisationDetails = this.formBuilder.group({\n      DPORequired: new FormControl(''),\n      DPOName: new FormControl(''),\n      DPOPhysicalAddress: new FormControl(''),\n      PhoneNumberCode: new FormControl(''),\n      DPOPhoneNumber: new FormControl(''),\n      DPOEmailAddress: new FormControl(''),\n      DPOPositionInOrganisation: new FormControl(''),\n  });\n\n  this.formPersonalDataHeld = this.formBuilder.group({\n      SourceOfDataID: new FormControl('', [Validators.required]),\n  });\n\n  this.formPurposeRetention = this.formBuilder.group({\n      Purpose: new FormControl('', [Validators.required]),\n      SpecifyTheLaw: new FormControl(''),\n      ServiceOrProductProvided: new FormControl(''),\n      SpecifyLegalObligation: new FormControl(''),\n      TotalRecordsAtRegistration: new FormControl('', [Validators.pattern(/^[0-9,]+$/)]),\n      RecordPercentageGrowth: new FormControl('', [\n          Validators.pattern(/^[0-9,]+$/),\n          Validators.max(100),\n      ]),\n      RetentionPeriod: new FormControl('', [\n          Validators.required,\n          Validators.pattern(/^[0-9,]+$/),\n          Validators.max(100),\n      ]),\n  });\n\n  this.formSecurityMeasures = this.formBuilder.group({\n      RegistrationConsent: new FormControl('', [Validators.required]),\n      RegistrationDoneBy: new FormControl('', [Validators.required, Validators.pattern(/^[a-zA-Z ]+$/)]),\n      TechnicalComments: new FormControl(),\n      LegalComments: new FormControl(),\n      DirectorComments: new FormControl(),\n  });\n\n  this.formChildrenData = this.formBuilder.group({\n      CollectChildrenData: new FormControl('', [Validators.required]),\n      PurposeForCollection: new FormControl(''),\n    });\n\n  this.formThirdParties = this.formBuilder.group({\n      PersonalDataIsForDisclosure: new FormControl('', [Validators.required]),\n      StoreDataOutsideCountry: new FormControl('', [Validators.required]),\n  });\n\n  // this.Listeners();\n  // console.log('operationType:', this.operationType);\n  if (this.operationType === 'CREATE' || this.operationType === 'MANAGE') {\n      this.Listeners();\n  }\n  \n  // Set OfficerRole\n  this.isOfficer = this.timeLineAccess.includes(this.realmRole);\n  // Fetch Checklist\n  this.referenceService.getChecklist(this.$processingEvent, this.$resultRefChecklistEvent, this.$errorsEvent);\n\n  this.formGeneralInformation.valueChanges\n      .pipe(\n          filter(() => this.formGeneralInformation.valid)\n      ).subscribe(val => localStorage.setItem('STEP_1', JSON.stringify(val)));\n}\n\nngAfterContentInit(): void {\n  this.OrganizationID = 156;\n  this.getDataFromMultipleRequests();\n}\n\nprivate getDataFromMultipleRequests(): void {\n  this.httpSub = this.fetchMultiple(this.regTrackingNo)\n  .pipe(catchError(this.service.handleError))\n  .subscribe((responseList) => {\n\n    \n      this.countries = responseList[0];\n\n      this.organisationCategories = [\n          {\n              OrganisationCategoryId: 1,\n              OrganisationCategoryName: 'Data Controller'\n          },\n          {\n              OrganisationCategoryId: 2,\n              OrganisationCategoryName: 'Data Processor'\n          },\n          {\n              OrganisationCategoryId: 3,\n              OrganisationCategoryName: 'Data Collector'\n          },\n      ];\n\n      this.childDataPurposes = [\n          {\n            ChildDataID: 1,\n            ChildDataPurpose: 'Carried out with prior consent of the parent,guardian, or  any other person having authority to make decisions on behalf of the child '\n          },\n          {\n            ChildDataID: 2,\n            ChildDataPurpose: 'Necessary to comply with the law'\n          },\n          {\n            ChildDataID: 3,\n            ChildDataPurpose: 'For research or statistical purposes'\n          }\n        ]\n\n\n      this.formGeneralInformation.get('PhoneNumberCode').patchValue('256');\n      this.formOrganisationDetails.get('PhoneNumberCode').patchValue('256');\n\n      this.dataSources = responseList[1];\n\n      this.organisationTypes = responseList[2];\n\n      this.sectors = responseList[3];\n\n      this.dataCategories = responseList[4];\n\n      this.dataPurposes = responseList[5];\n\n      this.natureOfBusinessCat = responseList[6];\n\n\n\n      this.fetchSingleApplication(responseList[7], responseList[8]);\n\n\n\n      this.processing = false;\n  }, (error) => {\n      this.processing = false;\n      this.service.determineErrorResponse(error);\n  });        \n}\n\n\nprivate fetchMultiple(OrgID: any): Observable<any[]> {\n  this.processing = true;\n  const reqCountries = this.http.get<ApiPayload>(this.endpoints.countries);\n  const reqDataSources = this.http.get<ApiPayload>(this.endpoints.dataSources);\n  const reqOrganisationType = this.http.get<ApiPayload>(this.endpoints.organisationType);\n  const reqSector = this.http.get<ApiPayload>(this.endpoints.sector);\n  const reqDataSubcategories = this.http.get<ApiPayload>(this.endpoints.dataSubcategories);\n  const reqDataPurpose = this.http.get<ApiPayload>(this.endpoints.dataPurpose);\n  const reqNatureOfBusiness = this.http.get<ApiPayload>(this.endpoints.natureOfBusiness);\n  const reqFetchOrganisatioDetails = this.http.get<ApiPayload>(this.endpoints.getOrgRegDetails, {params: {RegTrackingNo: OrgID}});\n  const reviewComments = this.http.get<ApiPayload>(this.endpoints.getReviewComments, {params: {RegTrackingNo: OrgID}});\n\n  // tslint:disable-next-line:max-line-length\n  return forkJoin([reqCountries, reqDataSources, reqOrganisationType, reqSector, reqDataSubcategories, reqDataPurpose, reqNatureOfBusiness, reqFetchOrganisatioDetails, reviewComments]);\n}\n\n\nprivate Listeners(): void {\n  // STEP ONE\n  this.formGeneralInformation.get('DPPActCategory').valueChanges.subscribe((value) => {\n      const values: number[] = value;\n      this.selectedOrganisationCategories.length = 0;\n\n      this.organisationCategories.filter((item) => {\n          if (values.includes(item.OrganisationCategoryId)) {\n              this.selectedOrganisationCategories.push(item);\n          }\n      });\n  });\n\n  this.formGeneralInformation.get('OrganizationTypeID').valueChanges.subscribe((value) => {\n      if (value !== 4) {\n          this.formGeneralInformation.get('CountryOfIncorporation').setValidators([Validators.required]);\n          this.formGeneralInformation.get('URSBNumber').setValidators([Validators.required]);\n      } else {\n          this.formGeneralInformation.get('CountryOfIncorporation').clearValidators();\n          this.formGeneralInformation.get('CountryOfIncorporation').reset();\n          this.formGeneralInformation.get('URSBNumber').clearValidators();\n          this.formGeneralInformation.get('URSBNumber').reset();\n          this.CountryOfIncorporation = null;\n      }\n\n      this.formGeneralInformation.controls['CountryOfIncorporation'].updateValueAndValidity();\n      this.formGeneralInformation.controls['URSBNumber'].updateValueAndValidity();\n  });\n\n  this.formGeneralInformation.get('SectorID').valueChanges.subscribe((value) => {\n      if (value === 14) {\n          this.formGeneralInformation.get('OtherSector').setValidators([Validators.required]);\n      } else {\n          this.formGeneralInformation.get('OtherSector').clearValidators();\n          this.formGeneralInformation.get('OtherSector').reset();\n      }\n\n      this.formGeneralInformation.controls['OtherSector'].updateValueAndValidity();\n  });\n\n  this.formGeneralInformation.get('NatureOfBusinessCat').valueChanges.subscribe((value) => {\n      if (value) { \n          this.onNatureOfBusinessCatSelected(value);\n      }\n  });\n\n  this.formGeneralInformation.get('NatureOfBusinessSubCat').valueChanges.subscribe((value) => {\n      const values: number[] = value;\n      this.selectedNatureOfBusinessSubCat.length = 0;\n\n      this.natureOfBusinessSubCat.filter((item) => {\n          if (values.includes(item.NatureOfBusinessSubCatId)) {\n              this.selectedNatureOfBusinessSubCat.push(item);\n          }\n      });\n  });\n\n  // STEP TWO\n  this.formOrganisationDetails.get('DPORequired').valueChanges.subscribe((value) => {\n\n      if (value === 'Yes') {\n          this.formOrganisationDetails.get('DPOName').setValidators([Validators.required, Validators.pattern(/^[a-zA-Z ]+$/), ]);\n          this.formOrganisationDetails.get('DPOPhysicalAddress').setValidators([Validators.required]);\n          this.formOrganisationDetails.get('DPOPhoneNumber').setValidators([Validators.required, Validators.pattern(/^[0-9 ]+$/)]);\n          this.formOrganisationDetails.get('DPOEmailAddress').setValidators([Validators.required, Validators.email]);\n          this.formOrganisationDetails.get('DPOPositionInOrganisation').setValidators([Validators.required]);\n      } else {\n          this.formOrganisationDetails.get('DPOName').clearValidators();\n          this.formOrganisationDetails.get('DPOName').reset();\n          this.formOrganisationDetails.get('DPOPhysicalAddress').clearValidators();\n          this.formOrganisationDetails.get('DPOPhysicalAddress').reset();\n          this.formOrganisationDetails.get('DPOPhoneNumber').clearValidators();\n          this.formOrganisationDetails.get('DPOPhoneNumber').reset();\n          this.formOrganisationDetails.get('DPOEmailAddress').clearValidators();\n          this.formOrganisationDetails.get('DPOEmailAddress').reset();\n          this.formOrganisationDetails.get('DPOPositionInOrganisation').clearValidators();\n          this.formOrganisationDetails.get('DPOPositionInOrganisation').reset();\n      }\n\n      this.formOrganisationDetails.controls['DPOName'].updateValueAndValidity();\n      this.formOrganisationDetails.controls['DPOPhysicalAddress'].updateValueAndValidity();\n      this.formOrganisationDetails.controls['DPOPhoneNumber'].updateValueAndValidity();\n      this.formOrganisationDetails.controls['DPOEmailAddress'].updateValueAndValidity();\n      this.formOrganisationDetails.controls['DPOPositionInOrganisation'].updateValueAndValidity();\n  });\n\n  // STEP THREE\n  this.formPersonalDataHeld.get('SourceOfDataID').valueChanges.subscribe((value) => {\n      const values: number[] = value;\n      this.selectedDataSources.length = 0;\n\n      this.dataSources?.filter((item) => {\n          if (values.includes(item.DataSourceID)) {\n              this.selectedDataSources.push(item);\n          }\n      });\n  });\n\n  \n    ///CHILDREN DATA PURPOSES\n\n    this.formChildrenData.get('PurposeForCollection').valueChanges.subscribe((value) => {\n        const values: number[] = value;\n        this.selectedChildDataPurposes.length = 0;\n  \n        this.childDataPurposes.filter((item) => {\n          if (values.includes(item.ChildDataID)) {\n            this.selectedChildDataPurposes.push(item);\n          }\n        });\n  \n        console.log(this.selectedChildDataPurposes);\n      });\n\n  // STEP FOUR\n  this.formPurposeRetention.get('Purpose').valueChanges.subscribe((value) => {\n      const values: number[] = value;\n\n      this.selectedDataPurposes.length = 0;\n\n      // Reset all the fields first\n      this.SpecifyTheLaw = false;\n      this.ServiceOrProductProvided = false;\n      this.SpecifyLegalObligation = false;\n      this.formPurposeRetention.get('SpecifyTheLaw').clearValidators();\n      this.formPurposeRetention.get('SpecifyTheLaw').reset();\n      this.formPurposeRetention.get('ServiceOrProductProvided').clearValidators();\n      this.formPurposeRetention.get('ServiceOrProductProvided').reset();\n      this.formPurposeRetention.get('SpecifyLegalObligation').clearValidators();\n      this.formPurposeRetention.get('SpecifyLegalObligation').reset();\n\n      values?.filter((item) => {\n          if (item === 1) {\n              this.SpecifyTheLaw = true;\n              this.formPurposeRetention.get('SpecifyTheLaw').setValidators([Validators.required]);\n          }\n\n          if (item === 3) {\n              this.ServiceOrProductProvided = true;\n              this.formPurposeRetention.get('ServiceOrProductProvided').setValidators([Validators.required]);\n          }\n\n          if (item === 6) {\n              this.SpecifyLegalObligation = true;\n              this.formPurposeRetention.get('SpecifyLegalObligation').setValidators([Validators.required]);\n          }\n      });\n\n      this.formPurposeRetention.controls['SpecifyTheLaw'].updateValueAndValidity();\n      this.formPurposeRetention.controls['ServiceOrProductProvided'].updateValueAndValidity();\n      this.formPurposeRetention.controls['SpecifyLegalObligation'].updateValueAndValidity();\n\n      this.dataPurposes.filter((item) => {\n          if (values.includes(item.DataPurposeID)) {\n              this.selectedDataPurposes.push(item);\n          }\n      });\n\n      this.changeDetector.detectChanges();\n  });\n\n  this.formPurposeRetention.get('RecordPercentageGrowth').valueChanges.subscribe((value) => {\n\n      if (value > 100) {\n          this.formPurposeRetention.get('RecordPercentageGrowth').patchValue(100);\n      }\n\n      this.changeDetector.detectChanges();\n  });\n\n  this.formPurposeRetention.get('RetentionPeriod').valueChanges.subscribe((value) => {\n\n      if (value > 100) {\n          this.formPurposeRetention.get('RetentionPeriod').patchValue(100);\n      }\n\n      this.changeDetector.detectChanges();\n  });\n\n  // STEP FIVE\n  this.formThirdParties.get('PersonalDataIsForDisclosure').valueChanges.subscribe((value) => {        \n      if (value === 'No') {\n          this.thirdParties.length = 0;\n\n          this.thirdPartyDataSource = new MatTableDataSource(this.thirdParties);\n\n          setTimeout(() => {\n              this.thirdPartyDataSource.paginator = this.thirdPartyPaginator;\n              this.thirdPartyDataSource.sort = this.thirdPartyMatSort;\n          });\n      }\n  });\n\n  this.formThirdParties.get('StoreDataOutsideCountry').valueChanges.subscribe((value) => {\n      if (value === 'No') {\n          this.countriesOfTransfer.length = 0;\n\n          this.countriesDataSource = new MatTableDataSource(this.countriesOfTransfer);\n\n          setTimeout(() => {\n              this.countriesDataSource.paginator = this.countryOfTransferPaginator;\n              this.countriesDataSource.sort = this.countryOfTransferMatSort;\n          });            \n      }\n  });\n}\n\nprivate onShowNotice(): void {\n  this.dialogRef = this.dialog.open(OrgNoticeComponent, {\n      panelClass: ['organisation-data-protection-officer-dialog', 'dialogs'],\n      disableClose: true,\n  });\n\n  this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: DataProtectionOfficer }) => {\n\n  });\n}\n\ngetOrganizationNameErrorMessage(): string {\n  return this.formGeneralInformation.get('OrganizationName').hasError('required') ? 'Please enter a value' : '';\n}\n\ngetURSBNumberErrorMessage(): string {\n  return this.formGeneralInformation.get('URSBNumber').hasError('required') ? 'Please enter a value' : '';\n}\n\ngetSelectErrorMessage(): string {\n  return this.formGeneralInformation.get('DPPActCategory').hasError('required')\n  || this.formGeneralInformation.get('OrganizationTypeID').hasError('required')\n  || this.formGeneralInformation.get('CountryOfIncorporation').hasError('required')\n  || this.formGeneralInformation.get('SectorID').hasError('required')\n  || this.formGeneralInformation.get('NatureOfBusinessCat').hasError('required')\n  || this.formGeneralInformation.get('NatureOfBusinessSubCat').hasError('required')\n  || this.formPersonalDataHeld.get('SourceOfDataID').hasError('required')\n  || this.formPurposeRetention.get('Purpose').hasError('required')\n      ? 'Please choose a value' : '';\n}\n\ngetTelephoneNumberErrorMessage(): string {\n  return this.formGeneralInformation.get('PhoneNumber').hasError('required') ? 'Please enter a value' :\n      this.formGeneralInformation.get('PhoneNumber').hasError('pattern') ? 'Wrong Phone number' : '';\n}\n\ngetEmailAddressErrorMessage(): string {\n  return this.formGeneralInformation.get('EmailAddress').hasError('required') ? 'Please enter a value' :\n      this.formGeneralInformation.get('EmailAddress').hasError('email') ? 'Wrong Email Address.' : '';\n}\n\ngetOtherSectorErrorMessage(): string {\n  return this.formGeneralInformation.get('OtherSector').hasError('required') ? 'Please enter a value' : '';\n}\n\ngetLocationErrorMessage(): string {\n  return this.formGeneralInformation.get('Location').hasError('required') ? 'Please enter a location' : '';\n}\n\ngetDPONameErrorMessage(): string {\n  return this.formOrganisationDetails.get('DPOName').hasError('required') ? 'Please enter a value' :\n      this.formOrganisationDetails.get('DPOName').hasError('pattern') ? 'Please enter a correct name' : '';\n}\n\ngetDPOPhysicalAddressErrorMessage(): string {\n  return this.formOrganisationDetails.get('DPOPhysicalAddress').hasError('required') ? 'Please enter a location' : '';\n}\n\ngetDPOPhoneNumberErrorMessage(): string {\n  return this.formOrganisationDetails.get('DPOPhoneNumber').hasError('required') ? 'Please enter a value' :\n      this.formOrganisationDetails.get('DPOPhoneNumber').hasError('pattern') ? 'Wrong Phone number' : '';\n}\n\ngetDPOEmailAddressErrorMessage(): string {\n  return this.formOrganisationDetails.get('DPOEmailAddress').hasError('required') ? 'Please enter a value' :\n      this.formOrganisationDetails.get('DPOEmailAddress').hasError('email') ? 'Wrong Email Address.' : '';\n}\n\ngetDPOPositionInOrganisationErrorMessage(): string {\n  return this.formOrganisationDetails.get('DPOPositionInOrganisation').hasError('required') ? 'Please enter a value' : '';\n}\n\ngetRequiredErrorMessage(): string {\n  return this.formPurposeRetention.get('SpecifyTheLaw').hasError('required')\n  || this.formPurposeRetention.get('ServiceOrProductProvided').hasError('required')\n  || this.formPurposeRetention.get('SpecifyLegalObligation').hasError('required')\n      ? 'Please enter a value' : '';\n}\n\ngetPatternErrorMessage(): string {\n  return this.formPurposeRetention.get('TotalRecordsAtRegistration').hasError('pattern')\n      ? 'Please enter correct information' : '';\n}\n\ngetRetentionPeriodErrorMessage(): string {\n  return this.formPurposeRetention.get('RetentionPeriod').hasError('required') ? 'Please enter a value' :\n      this.formPurposeRetention.get('RetentionPeriod').hasError('max') ? 'Maximum of 100' :\n          this.formPurposeRetention.get('RetentionPeriod').hasError('pattern') ? 'Not valid' : '';\n}\n\ngetRecordPercentageGrowthErrorMessage(): string {\n  return this.formPurposeRetention.get('RecordPercentageGrowth').hasError('max') ? 'Maximum of 100' :\n      this.formPurposeRetention.get('RecordPercentageGrowth').hasError('pattern') ? 'Not valid' : '';\n}\n\ngetCheckboxErrorMessage(): string {\n  return this.formSecurityMeasures.get('RegistrationConsent').hasError('max') ? 'This field is required' : '';\n}\n\ngetRegistrationDoneByErrorMessage(): string {\n  return this.formSecurityMeasures.get('RegistrationDoneBy').hasError('required') ? 'Please enter a value' :\n      this.formSecurityMeasures.get('RegistrationDoneBy').hasError('pattern') ? 'Please enter a correct name' : '';\n}\n\nupdateCollecthildrenData(event){\n\n  console.log(event.value);\n\n  if(event.value == 'Yes'){\n    this.showChildrenDataFields = true;\n    this.formChildrenData.get('PurposeForCollection').setValidators([Validators.required]);\n\n    this.formChildrenData.controls['PurposeForCollection'].updateValueAndValidity();\n  }\n  else{\n    this.showChildrenDataFields = false;\n\n    this.formChildrenData.get('PurposeForCollection').setValidators([]);\n\n    this.formChildrenData.get('PurposeForCollection').reset();\n\n    this.formChildrenData.controls['PurposeForCollection'].updateValueAndValidity();\n  }\n}\n\nonAddMainActivity(): void {\n  this.dialogRef = this.dialog.open(OrgMainActivityComponent, {\n      panelClass: ['organisation-main-activity-dialog', 'dialogs'],\n      disableClose: true,\n  });\n\n  this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: MainActivity }) => {\n      if (result.status) {\n          let found = false;\n          this.mainActivities.filter((activity) => {\n              if (activity.Activity === result.row.Activity) {\n                  found = true;\n              }\n          });\n\n          if (found) {\n              this.service.openSnackBar('Sorry, this record already exists', 'error-lg');\n          } else {\n              this.mainActivities.push(result.row);\n          }\n\n          this.mainActivitiesDataSource = new MatTableDataSource(this.mainActivities);\n\n          setTimeout(() => {\n              this.mainActivitiesDataSource.paginator = this.MainActivityPaginator;\n              this.mainActivitiesDataSource.sort = this.MainActivityMatSort;\n          });\n      }\n  });\n}\n\nonEditMainActivity(row: MainActivity): void {\n  this.dialogRef = this.dialog.open(OrgMainActivityComponent, {\n      panelClass: ['organisation-main-activity-dialog', 'dialogs'],\n      disableClose: true,\n      data: {row}\n  });\n\n  this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: MainActivity }) => {\n      if (result.status) {\n\n          this.mainActivities[this.mainActivities.indexOf(row)] = {\n              Activity: result.row.Activity,\n          };\n\n          this.mainActivitiesDataSource = new MatTableDataSource(this.mainActivities);\n\n          setTimeout(() => {\n              this.mainActivitiesDataSource.paginator = this.MainActivityPaginator;\n              this.mainActivitiesDataSource.sort = this.MainActivityMatSort;\n          });\n      }\n  });\n}\n\nonRemoveMainActivity(row: MainActivity): void {\n  this.mainActivities.splice(this.mainActivities.indexOf(row), 1);\n\n  this.mainActivitiesDataSource = new MatTableDataSource(this.mainActivities);\n\n  setTimeout(() => {\n      this.mainActivitiesDataSource.paginator = this.MainActivityPaginator;\n      this.mainActivitiesDataSource.sort = this.MainActivityMatSort;\n  });\n}\n\nonAddADPO(): void {\n  this.dialogRef = this.dialog.open(OrgDataProtectionOfficerComponent, {\n      panelClass: ['organisation-data-protection-officer-dialog', 'dialogs'],\n      disableClose: true,\n  });\n\n  this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: DataProtectionOfficer }) => {\n      if (result.status) {\n          let found = false;\n          this.dataProtectionOfficers.filter((dpo) => {\n              if (dpo.EmailAddress === result.row.EmailAddress || dpo.PhoneNumber === result.row.PhoneNumber) {\n                  found = true;\n              }\n          });\n\n          if (found) {\n              this.service.openSnackBar('Sorry, this record already exists', 'error-lg');\n          } else {\n              this.dataProtectionOfficers.push(result.row);\n          }\n\n          this.dpoDataSource = new MatTableDataSource(this.dataProtectionOfficers);\n\n          setTimeout(() => {\n              this.dpoDataSource.paginator = this.dpoPaginator;\n              this.dpoDataSource.sort = this.dpoMatSort;\n          });\n      }\n  });\n}\n\nonEditDPO(row: DataProtectionOfficer): void {\n  this.dialogRef = this.dialog.open(OrgDataProtectionOfficerComponent, {\n      panelClass: ['organisation-data-protection-officer-dialog', 'dialogs'],\n      disableClose: true,\n      data: {row}\n  });\n\n  this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: DataProtectionOfficer }) => {\n      if (result.status) {\n\n          this.dataProtectionOfficers[this.dataProtectionOfficers.indexOf(row)] = {\n              Name: result.row.Name,\n              EmailAddress: result.row.EmailAddress,\n              PhoneNumber: result.row.PhoneNumber,\n              PhysicalAddress: result.row.PhysicalAddress,\n              PositionInOrganisation: result.row.PositionInOrganisation,\n          };\n\n          this.dpoDataSource = new MatTableDataSource(this.dataProtectionOfficers);\n\n          setTimeout(() => {\n              this.dpoDataSource.paginator = this.dpoPaginator;\n              this.dpoDataSource.sort = this.dpoMatSort;\n          });\n      }\n  });\n}\n\nonRemoveDPO(row: DataProtectionOfficer): void {\n  this.dataProtectionOfficers.splice(this.dataProtectionOfficers.indexOf(row), 1);\n\n  this.dpoDataSource = new MatTableDataSource(this.dataProtectionOfficers);\n\n  setTimeout(() => {\n      this.dpoDataSource.paginator = this.dpoPaginator;\n      this.dpoDataSource.sort = this.dpoMatSort;\n  });\n}\n\nonAddSecurityMeasure(): void {\n  this.dialogRef = this.dialog.open(OrgSecurityMeasuresComponent, {\n      panelClass: ['organisation-security-measure-dialog', 'dialogs'],\n      disableClose: true,\n  });\n\n  this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: SecurityMeasure }) => {\n      if (result.status) {\n          let found = false;\n          this.securityMeasures.filter((item) => {\n              if (item.SecurityMeasure === result.row.SecurityMeasure) {\n                  found = true;\n              }\n          });\n\n          if (found) {\n              this.service.openSnackBar('Sorry, this record already exists', 'error-lg');\n          } else {\n              this.securityMeasures.push(result.row);\n          }\n\n          this.securityMeasureDataSource = new MatTableDataSource(this.securityMeasures);\n\n          setTimeout(() => {\n              this.securityMeasureDataSource.paginator = this.securityMeasurePaginator;\n              this.securityMeasureDataSource.sort = this.securityMeasureMatSort;\n          });\n      }\n  });\n}\n\nonEditSecurityMeasure(row: SecurityMeasure): void {\n  this.dialogRef = this.dialog.open(OrgSecurityMeasuresComponent, {\n      panelClass: ['organisation-security-measure-dialog', 'dialogs'],\n      disableClose: true,\n      data: {row}\n  });\n\n  this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: SecurityMeasure }) => {\n      if (result.status) {\n\n          this.securityMeasures[this.securityMeasures.indexOf(row)] = {\n              SecurityMeasure: result.row.SecurityMeasure,\n          };\n\n          this.securityMeasureDataSource = new MatTableDataSource(this.securityMeasures);\n\n          setTimeout(() => {\n              this.securityMeasureDataSource.paginator = this.securityMeasurePaginator;\n              this.securityMeasureDataSource.sort = this.securityMeasureMatSort;\n          });\n      }\n  });\n}\n\nonRemoveSecurityMeasure(row: SecurityMeasure): void {\n  this.securityMeasures.splice(this.securityMeasures.indexOf(row), 1);\n\n  this.securityMeasureDataSource = new MatTableDataSource(this.securityMeasures);\n\n  setTimeout(() => {\n      this.securityMeasureDataSource.paginator = this.securityMeasurePaginator;\n      this.securityMeasureDataSource.sort = this.securityMeasureMatSort;\n  });\n}\n\nonAddAThirdParty(): void {\n  this.dialogRef = this.dialog.open(OrgThirdPartyComponent, {\n      panelClass: ['organisation-third-party-dialog', 'dialogs'],\n      disableClose: true,\n  });\n\n  this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: ThirdParty }) => {\n      if (result.status) {\n          let found = false;\n\n          this.thirdParties.filter((party) => {\n              if (party.ThirdPartyName === result.row.ThirdPartyName) {\n                  found = true;\n              }\n          });\n\n          if (found) {\n              this.service.openSnackBar('Sorry, this record already exists', 'error-lg');\n          } else {\n              this.thirdParties.push(result.row);\n          }\n\n          this.thirdPartyDataSource = new MatTableDataSource(this.thirdParties);\n\n          setTimeout(() => {\n              this.thirdPartyDataSource.paginator = this.thirdPartyPaginator;\n              this.thirdPartyDataSource.sort = this.thirdPartyMatSort;\n          });\n      }\n  });\n}\n\nonEditThirdParty(row: ThirdParty): void {\n  this.dialogRef = this.dialog.open(OrgThirdPartyComponent, {\n      panelClass: ['organisation-third-party-dialog', 'dialogs'],\n      disableClose: true,\n      data: {row}\n  });\n\n  this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: ThirdParty }) => {\n      if (result.status) {\n\n          this.thirdParties[this.thirdParties.indexOf(row)] = {\n              ThirdPartyName: result.row.ThirdPartyName,\n              Purpose: result.row.Purpose,\n          };\n\n          this.thirdPartyDataSource = new MatTableDataSource(this.thirdParties);\n\n          setTimeout(() => {\n              this.thirdPartyDataSource.paginator = this.thirdPartyPaginator;\n              this.thirdPartyDataSource.sort = this.thirdPartyMatSort;\n          });\n      }\n  });\n}\n\nonRemoveThirdParty(row: ThirdParty): void {\n  this.thirdParties.splice(this.thirdParties.indexOf(row), 1);\n\n  this.thirdPartyDataSource = new MatTableDataSource(this.thirdParties);\n\n  setTimeout(() => {\n      this.thirdPartyDataSource.paginator = this.thirdPartyPaginator;\n      this.thirdPartyDataSource.sort = this.thirdPartyMatSort;\n  });\n}\n\nonAddACountry(): void {\n  this.dialogRef = this.dialog.open(OrgCountryComponent, {\n      panelClass: ['organisation-country-dialog', 'dialogs'],\n      disableClose: true,\n  });\n\n  this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: CountryOfTransfer }) => {\n      if (result.status) {\n          let found = false;\n          this.countriesOfTransfer.filter((party) => {\n              if (party.Country === result.row.Country) {\n                  found = true;\n              }\n          });\n\n          if (found) {\n              this.service.openSnackBar('Sorry, this record already exists', 'error-lg');\n          } else {\n              this.countriesOfTransfer.push(result.row);\n          }\n\n          this.countriesDataSource = new MatTableDataSource(this.countriesOfTransfer);\n\n          setTimeout(() => {\n              this.countriesDataSource.paginator = this.countryOfTransferPaginator;\n              this.countriesDataSource.sort = this.countryOfTransferMatSort;\n          });\n      }\n  });\n}\n\nonEditCountry(row: CountryOfTransfer): void {\n  this.dialogRef = this.dialog.open(OrgCountryComponent, {\n      panelClass: ['organisation-country-dialog', 'dialogs'],\n      disableClose: true,\n      data: {row}\n  });\n\n  this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: CountryOfTransfer }) => {\n      if (result.status) {\n          this.countriesOfTransfer[this.countriesOfTransfer.indexOf(row)] = {\n              CountryID: result.row.CountryID,\n              Country: result.row.Country,\n              Purpose: result.row.Purpose,\n              Description: result.row.Description,\n          };\n\n          this.countriesDataSource = new MatTableDataSource(this.countriesOfTransfer);\n\n          setTimeout(() => {\n              this.countriesDataSource.paginator = this.countryOfTransferPaginator;\n              this.countriesDataSource.sort = this.countryOfTransferMatSort;\n          });\n      }\n  });\n}\n\nonRemoveCountry(row: CountryOfTransfer): void {\n  this.countriesOfTransfer.splice(this.countriesOfTransfer.indexOf(row), 1);\n\n  this.countriesDataSource = new MatTableDataSource(this.countriesOfTransfer);\n\n  setTimeout(() => {\n      this.countriesDataSource.paginator = this.countryOfTransferPaginator;\n      this.countriesDataSource.sort = this.countryOfTransferMatSort;\n  });\n}\n\nonUploadAttachments(): void {\n  this.dialogRef = this.dialog.open(OrgUploadComponent, {\n      panelClass: ['organisation-upload-dialog', 'dialogs'],\n      disableClose: true,\n      data: {\n          multiple: false\n      }\n  });\n\n  this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: FileUpload }) => {\n      // console.log('row:', result.row);\n\n      if (result.status) {\n          this.document = result.row;\n      }\n  });\n}\n\nonRemoveDocument(): void {\n  this.document = null;\n}\n\nonDownloadForm3(): void {\n  // this.formGeneralInformation.get('OrganizationName').patchValue('Applied Principles Consulting');\n  // this.formGeneralInformation.get('Location').patchValue('Bukoto street 764');\n\n  this.dialogRef = this.dialog.open(OrgForm3DialogComponent, {\n      panelClass: ['organisation-form-3-dialog', 'dialogs'],\n      disableClose: true,\n      data: {\n          OrganisationName: this.formGeneralInformation.get('OrganizationName').value,\n          PhysicalAddress: this.formGeneralInformation.get('Location').value,\n          Date: new Date()\n      }\n  });\n}\n\nonUploadProofOfPayment(): void {\n  this.dialogRef = this.dialog.open(OrgUploadComponent, {\n      panelClass: ['organisation-upload-dialog', 'dialogs'],\n      disableClose: true,\n      data: {\n          multiple: false\n      }\n  });\n\n  this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: FileUpload }) => {\n\n      if (result.status) {\n          this.proofOfPayment = result.row;\n      }\n  });\n}\n\nonRemoveProofOfPaymen(): void {\n  this.proofOfPayment = null;\n}\n\nonUploadForm3Attachments(): void {\n  this.dialogRef = this.dialog.open(OrgUploadComponent, {\n      panelClass: ['organisation-upload-dialog', 'dialogs'],\n      disableClose: true,\n      data: {\n          multiple: false\n      }\n  });\n\n  this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: FileUpload }) => {\n      if (result.status) {\n          this.documentForm3 = result.row;\n      }\n  });\n}\n\nonRemoveForm3Document(): void {\n  this.documentForm3 = null;\n}\n\nonChangeSubCategory(event: MatCheckboxChange, SubCategory: DataSubCategory): void {\n  if (event.checked) {\n      this.selectedDataSubCategory.push(SubCategory);\n  } else {\n      this.selectedDataSubCategory.splice(this.selectedDataSubCategory.indexOf(SubCategory), 1);\n  }\n}\n\nprivate getFormData(): any {\n\n  return {\n    \n    OrganisationID: this.OrganisationID.toString(),\n    RegTrackingNo: this.regTrackingNo,\n    OrganisationName: this.formGeneralInformation.get('OrganizationName').value,\n    OrganisationCategory: this.selectedOrganisationCategories ? this.selectedOrganisationCategories : [],\n    OrganizationTypeID: this.formGeneralInformation.get('OrganizationTypeID').value ? this.formGeneralInformation.get('OrganizationTypeID').value : 0,\n    CountryOfIncorporation: this.formGeneralInformation.get('CountryOfIncorporation').value ? this.formGeneralInformation.get('CountryOfIncorporation').value : 0,\n    URSBNumber: this.formGeneralInformation.get('URSBNumber').value ? this.formGeneralInformation.get('URSBNumber').value : '',\n    SectorID: this.formGeneralInformation.get('SectorID').value ? this.formGeneralInformation.get('SectorID').value : 0,\n    OtherSector: this.formGeneralInformation.get('OtherSector').value ? this.formGeneralInformation.get('OtherSector').value : '',\n    Location: this.formGeneralInformation.get('Location').value ? this.formGeneralInformation.get('Location').value : '',\n    // tslint:disable-next-line:max-line-length\n    // PhoneNumber: this.formGeneralInformation.get('PhoneNumberCode').value + (this.formGeneralInformation.get('PhoneNumber').value).replaceAll(' ', ''),\n    // EmailAddress: this.formGeneralInformation.get('EmailAddress').value,\n    PhoneNumber: this.formGeneralInformation.get('PhoneNumberCode').value + (this.formGeneralInformation.get('PhoneNumber').value).replaceAll(' ', ''),\n    EmailAddress: this.formGeneralInformation.get('EmailAddress').value,\n    NatureOfBusinessCatID: this.formGeneralInformation.get('NatureOfBusinessCat').value ? this.formGeneralInformation.get('NatureOfBusinessCat').value : 0,\n    NatureOfBusiness: this.selectedNatureOfBusinessSubCat ? this.selectedNatureOfBusinessSubCat : [],\n    \n    DPORequired: this.formOrganisationDetails.get('DPORequired').value,\n    DPOName: this.formOrganisationDetails.get('DPORequired').value === 'Yes' ? this.formOrganisationDetails.get('DPOName').value : '',\n    DPOPhysicalAddress: this.formOrganisationDetails.get('DPORequired').value === 'Yes' ? this.formOrganisationDetails.get('DPOPhysicalAddress').value : '',\n    // tslint:disable-next-line:max-line-length\n    DPOPhoneNumber: this.formOrganisationDetails.get('DPOPhoneNumber').value ? this.formOrganisationDetails.get('PhoneNumberCode').value + (this.formOrganisationDetails.get('DPOPhoneNumber').value).replaceAll(' ', '') : '',\n    // tslint:disable-next-line:max-line-length\n    DPOEmailAddress: this.formOrganisationDetails.get('DPORequired').value === 'Yes' ? this.formOrganisationDetails.get('DPOEmailAddress').value : '',\n    DPOPositionInOrganisation: this.formOrganisationDetails.get('DPORequired').value === 'Yes' ? this.formOrganisationDetails.get('DPOPositionInOrganisation').value : '',\n    SourceOfDataID: this.selectedDataSources ? this.selectedDataSources : [],\n    PersonalDataCollected: this.selectedDataSubCategory ? this.selectedDataSubCategory : [],\n    Purpose: this.selectedDataPurposes ? this.selectedDataPurposes : [],\n    SpecifyTheLaw: this.formPurposeRetention.get('SpecifyTheLaw').value ? this.formPurposeRetention.get('SpecifyTheLaw').value : '',\n    ServiceOrProductProvided: this.formPurposeRetention.get('ServiceOrProductProvided').value ? this.formPurposeRetention.get('ServiceOrProductProvided').value : '',\n    SpecifyLegalObligation: this.formPurposeRetention.get('SpecifyLegalObligation').value ? this.formPurposeRetention.get('SpecifyLegalObligation').value : '',\n    // tslint:disable-next-line:max-line-length\n    TotalRecordsAtRegistration: this.formPurposeRetention.get('TotalRecordsAtRegistration').value ? parseInt(this.formPurposeRetention.get('TotalRecordsAtRegistration').value, 10) : 0,\n    RecordPercentageGrowth: this.formPurposeRetention.get('RecordPercentageGrowth').value ? parseInt(this.formPurposeRetention.get('RecordPercentageGrowth').value, 10) : 0,\n    // RetentionPeriod: this.formPurposeRetention.get('RetentionPeriod').value,\n    RetentionPeriod: this.formPurposeRetention.get('RetentionPeriod').value ? parseInt(this.formPurposeRetention.get('RetentionPeriod').value, 10) : 0,\n    PersonalDataIsForDisclosure: this.formThirdParties.get('PersonalDataIsForDisclosure').value ? this.formThirdParties.get('PersonalDataIsForDisclosure').value : '',\n    ThirdParties: this.thirdParties ? this.thirdParties : [],\n    StoreDataOutsideCountry: this.formThirdParties.get('StoreDataOutsideCountry').value ? this.formThirdParties.get('StoreDataOutsideCountry').value : '',\n    Countries: this.countriesOfTransfer ? this.countriesOfTransfer : [],\n    SecurityMeasures: this.securityMeasures ? this.securityMeasures : [],\n    Attachment: this.document ? this.document.Base64 : '',\n    Form3Attachment: this.documentForm3 ? this.documentForm3.Base64 : '',\n    RegistrationConsent: this.formSecurityMeasures.get('RegistrationConsent').value ? true : false,\n    RegistrationDoneBy: this.formSecurityMeasures.get('RegistrationDoneBy').value ? this.formSecurityMeasures.get('RegistrationDoneBy').value : '',\n    //PRN : this.formGeneralInformation.get('PRN').value ? this.formGeneralInformation.get('PRN').value : '',\n    ChildrenDataPurpose: this.selectedChildDataPurposes ? this.selectedChildDataPurposes : [],\n    CollectChildrenData: this.formChildrenData.get('CollectChildrenData').value ? this.formChildrenData.get('CollectChildrenData').value : '',\n    ProofOfPayment: this.proofOfPayment ? this.proofOfPayment.Base64 : '',\n  \n  };\n}\n\n\n// Jordan New code here\n   \n//End of Jordan Code here\n\nonNatureOfBusinessCatSelected(NatureOfBusinessCatId): void {\n  // tslint:disable-next-line:max-line-length\n  this.httpSub = this.http.get<NatureOfBusinessSubCat[]>(this.endpoints.natureOfBusiness + '?NatureOfBusinessSubCat=' + NatureOfBusinessCatId)\n  .pipe(catchError(this.service.handleError))\n  .subscribe((response) => {\n\n    this.natureOfBusinessSubCat = response;\n\n  }, (error) => {\n    this.processing = false;\n    this.service.determineErrorResponse(error);\n  });\n}\nfetchSingleApplication(response, comments): void {\n  this.application = response;\n\n  console.log(comments.data.data.length);\n  console.log(comments.data.data);\n\n\n  // console.log('application:', this.application);\n  // console.log('_StepRequestingForMoreInfo:', this._StepRequestingForMoreInfo);\n\n  this.hasRequestForMoreInfo(this.application.RegTrackingNo);\n  this.findDocumentActions(1, this.application.CurrentStepID);\n  this.getDocumentWorkflow(this.application.RegTrackingNo, this.workflowID);\n\n  // console.log('object:', this.application);\n\n  if (this.application.CurrentStepName === 'Certificate Issued') {\n      if (this.isOfficer) {\n          this.getIssuedCertDetails(+this.application.OrganisationID);\n      } else {\n          this.getIssuedCertDetails(parseInt(this.application.OrganisationID, 10));\n      }\n  }\n\n  this.formGeneralInformation.get('OrganizationName').patchValue(this.application.OrganisationName);\n  this.organisationcategories = this.application.OrganisationCategory;\n\n  this.organisationcategories.filter((item) => {\n      this.cat.push(item.OrganisationCategoryId);\n  });\n\n  this.OrganisationID = this.application.OrganisationID;\n  this.formGeneralInformation.get('DPPActCategory').patchValue(this.cat);\n\n  this.formGeneralInformation.get('OrganizationTypeID').patchValue(this.application.OrganizationTypeID);\n  this.formGeneralInformation.get('URSBNumber').patchValue(this.application.URSBNumber);\n  this.formGeneralInformation.get('SectorID').patchValue(this.application.SectorID);\n  this.formGeneralInformation.get('CountryOfIncorporation').patchValue(response['CountryOfIncorporation']);\n  this.formGeneralInformation.get('OtherSector').patchValue(response['OtherSector']);\n  this.formGeneralInformation.get('Location').patchValue(this.application.Location);\n  this.formGeneralInformation.get('PhoneNumberCode').patchValue(this.application.PhoneNumber.substring(0, 3));\n  this.formGeneralInformation.get('PhoneNumber').patchValue(this.application.PhoneNumber.substring(3, 13));\n  this.formGeneralInformation.get('EmailAddress').patchValue(this.application.EmailAddress);\n\n  if (response['NatureOfBusiness'].length) {\n      this.formGeneralInformation.get('NatureOfBusinessCat').patchValue(response['NatureOfBusiness'][0]['NatureOfBusinessCatID']);\n      this.natureOfbusinesses = response['NatureOfBusiness'];\n\n      this.onNatureOfBusinessCatSelected(response['NatureOfBusiness'][0]['NatureOfBusinessCatID']);\n      \n      let _selectedNatureOfBusinessSubCat: NatureOfBusinessSubCat[] = [];\n      this.natureOfbusinesses.filter((item) => {\n          this.natureOfbusinesses_arr.push(item.NatureOfBusinessSubatID);\n\n          _selectedNatureOfBusinessSubCat.push({\n              NatureOfBusinessSubCatId: item.NatureOfBusinessSubatID,\n              NatureOfBusinessSubCategoryName: item.NatureOfBusinessSubCategoryName\n          });\n      });\n      \n      this.formGeneralInformation.get('NatureOfBusinessSubCat').patchValue(this.natureOfbusinesses_arr);\n      this.selectedNatureOfBusinessSubCat = _selectedNatureOfBusinessSubCat;\n  }\n\n\n  // STEP TWO\n  this.formOrganisationDetails.get('DPORequired').patchValue(response['DPORequired']);\n\n  this.formOrganisationDetails.get('DPOName').patchValue(response['DPOName']);\n  this.formOrganisationDetails.get('DPOPhysicalAddress').patchValue(response['DPOPhysicalAddress']);\n  this.formOrganisationDetails.get('PhoneNumberCode').patchValue(response['DPOPhoneNumber'].substring(0, 3));\n  this.formOrganisationDetails.get('DPOPhoneNumber').patchValue(response['DPOPhoneNumber'].substring(3, 13));\n  this.formOrganisationDetails.get('DPOEmailAddress').patchValue(response['DPOEmailAddress']);\n  this.formOrganisationDetails.get('DPOPositionInOrganisation').patchValue(response['DPOPositionInOrganisation']);\n\n  // STEP THREE\n  this.sourceofdata = response['SourceOfDataID'];\n  this.sourceofdata.filter((item) => {\n      this.sourceofdata_arr.push(item.DataSourceID);\n  });\n\n  /// CHILDREN DATA \n\n  this.formChildrenData.get('CollectChildrenData').patchValue(response['CollectChildrenData']);\n  if(response['CollectChildrenData'] == 'Yes'){\n      this.showChildrenDataFields = true;\n      this.childDataPurposes = response['ChildrenDataPurpose']\n      let _selectedChildrenDataPurposes: ChildrenDataPurpose[] = [];\n      this.childDataPurposes.filter((item) => {\n\n          this.childDataPurposeResults.push(item.ChildDataID);\n      })\n\n\n      this.formChildrenData.get('PurposeForCollection').patchValue(this.childDataPurposeResults);\n  }\n\n \n\n  const personalDataCollected: DataSubCategory[] = response['PersonalDataCollected'];\n\n  this.dataCategories.filter((category) => {\n      personalDataCollected.filter((selectedCat) => {\n          if (category.DataCategoryID === selectedCat.DataCategoryID) {\n              category.SubCategories.filter((subCat) => {\n                  personalDataCollected.filter((selectedSubCat) => {\n                      if (subCat.DataSubCategoryID === selectedSubCat.DataSubCategoryID) {\n                          subCat.IsChecked = true;\n                          this.selectedDataSubCategory.push(subCat);\n                      }\n                  });\n              });\n          }\n      });\n  });\n\n  // STEP FOUR\n  this.formPersonalDataHeld.get('SourceOfDataID').patchValue(this.sourceofdata_arr);\n\n  this.purpose = response['Purpose'];\n  let _selectedDataPurposes: DataPurposes[]  = []\n\n  this.purpose.filter((item) => {\n      if (item.DataPurposeID === 1) {\n          this.SpecifyTheLaw = true;\n          this.formPurposeRetention.get('SpecifyTheLaw').setValidators([Validators.required]);\n      }\n\n      if (item.DataPurposeID === 3) {\n          this.ServiceOrProductProvided = true;\n          this.formPurposeRetention.get('ServiceOrProductProvided').setValidators([Validators.required]);\n      }\n\n      if (item.DataPurposeID === 6) {\n          this.SpecifyLegalObligation = true;\n          this.formPurposeRetention.get('SpecifyLegalObligation').setValidators([Validators.required]);\n      }\n\n      this.purpose_arr.push(item.DataPurposeID);\n\n      _selectedDataPurposes.push(item);\n  });\n  \n  this.formPurposeRetention.get('Purpose').patchValue(this.purpose_arr);\n  this.selectedDataPurposes = _selectedDataPurposes;\n\n  this.formPurposeRetention.get('SpecifyTheLaw').patchValue(response['SpecifyTheLaw']);\n  this.formPurposeRetention.get('ServiceOrProductProvided').patchValue(response['ServiceOrProductProvided']);\n  this.formPurposeRetention.get('SpecifyLegalObligation').patchValue(response['SpecifyLegalObligation']);\n  this.formPurposeRetention.get('TotalRecordsAtRegistration').patchValue(response['TotalRecordsAtRegistration']);\n  this.formPurposeRetention.get('RecordPercentageGrowth').patchValue(response['RecordPercentageGrowth']);\n  this.formPurposeRetention.get('RetentionPeriod').patchValue(response['RetentionPeriod']);\n\n  // this.formPurposeRetention.get('RegistrationConsent').patchValue('');\n\n  // STEP FIVE\n  this.formThirdParties.get('PersonalDataIsForDisclosure').patchValue(response['PersonalDataIsForDisclosure'].replace(/\\s/g, ''));\n  this.thirdParties = response['ThirdParties'];\n  this.thirdPartyDataSource = new MatTableDataSource(this.thirdParties);\n\n  setTimeout(() => {\n      this.thirdPartyDataSource.paginator = this.thirdPartyPaginator;\n      this.thirdPartyDataSource.sort = this.thirdPartyMatSort;\n  });\n  this.thirdPartyDataSource = new MatTableDataSource(response['ThirdParties']);\n\n  this.formThirdParties.get('StoreDataOutsideCountry').patchValue(response['StoreDataOutsideCountry']);\n  this.countriesOfTransfer = response['Countries'];\n  this.countriesDataSource = new MatTableDataSource(this.countriesOfTransfer);\n\n  setTimeout(() => {\n      this.countriesDataSource.paginator = this.countryOfTransferPaginator;\n      this.countriesDataSource.sort = this.countryOfTransferMatSort;\n  });\n\n  // STEP SIX\n  this.securityMeasures = response['SecurityMeasures'];\n  this.securityMeasureDataSource = new MatTableDataSource(this.securityMeasures);\n  setTimeout(() => {\n      this.securityMeasureDataSource.paginator = this.securityMeasurePaginator;\n      this.securityMeasureDataSource.sort = this.securityMeasureMatSort;\n  });\n\n  // Supporting Documents.\n  this.document = { \n      Document: null, \n      Name: 'Supporting Documentation.pdf', \n      Size: null, \n      Base64: this.application.Attachment \n  };\n\n  this.documentForm3 = { \n      Document: null, \n      Name: 'Form 3.pdf', \n      Size: null, \n      Base64: this.application.Form3Attachment \n  };\n\n  this.proofOfPayment = {\n      Document: null, \n      Name: 'Proof of Payment.pdf', \n      Size: null, \n      Base64: this.application.ProofOfPayment \n  };\n\n  // console.log('document:', this.document);\n  // console.log('documentForm3:', this.documentForm3);\n  // console.log('proofOfPayment:', this.proofOfPayment);\n\n  this.formSecurityMeasures.get('RegistrationConsent').patchValue('true');\n  this.formSecurityMeasures.get('RegistrationDoneBy').patchValue(this.application.RegistrationDoneBy);\n}\n\nonSubmit(): void {\n  this.processing = true;\n  // console.log('save the registration information:', this.getFormData());\n\n  this.httpSub = this.http.post<ApiPayload>(this.endpoints.orgRegistration, this.getFormData())\n      .pipe(catchError(this.service.handleError))\n      .subscribe((response) => {\n\n          // console.log('response:', response);\n\n          // Clear all the form Data\n\n          // console.log('response:', response);\n          // Show the dialog window for processing payment.\n\n          this.dialogRef = this.dialog.open(SuccessfulMessageDialogComponent, {\n              panelClass: ['successful-message-dialog', 'dialogs'],\n              disableClose: true,\n              data: {\n                  title: response.message['title'],\n                  message: response.message['body'],\n                  status: response.code === 200 ? true : false,\n              }\n          });\n\n          this.dialogRef.afterClosed().subscribe(() => {\n              window.location.reload();\n          });\n\n          this.processing = false;\n      }, (error) => {\n          this.processing = false;\n\n          if (error.error.message) {\n              this.dialogRef = this.dialog.open(SuccessfulMessageDialogComponent, {\n                  panelClass: ['successful-message-dialog', 'dialogs'],\n                  disableClose: true,\n                  data: {\n                      title: error.error.message['title'],\n                      message: error.error.message['body'],\n                      status: false,\n                  }\n              });\n          } else {\n              this.service.determineErrorResponse(error);\n          }\n      });\n}\n\nngOnDestroy(): void {\n  if (this.httpSub) { this.httpSub.unsubscribe(); }\n  if (this.bottomsheetRef) { this.bottomsheetRef.dismiss(); }\n}\n\nonReadDocument(document: FileUpload): void {\n  // console.log('document:', document);\n  this.bottomsheetRef = this.bottomsheet.open(ViewPdfDocumentBottomsheetComponent, {\n      disableClose: true,\n      panelClass: ['view-pdf-document-bottomsheet', 'bottomsheets'],\n      data: {\n        url: document.Base64,\n        title: document.Name\n      }\n  });      \n}\n\ngetSelectedPurpose(): string {\n  let _purpose = '';\n  this.selectedDataPurposes.filter((item, index: number) => {\n      _purpose += (index > 0 ? ', ' : '') +  item.DataPurpose \n  });\n\n  return _purpose;\n}\n\ngetSelectedNatureOfBusinessSubCat(): string {\n  let _subcategories = '';\n  this.selectedNatureOfBusinessSubCat.filter((item, index: number) => {\n      _subcategories += (index > 0 ? ', ' : '') +  item.NatureOfBusinessSubCategoryName \n  });\n\n  return _subcategories;\n}\n\n\nonSubmitChanges(): void {\n\n  this.processing = true;\n  // console.log('save the registration information:', this.getFormData());\n\n  this.httpSub = this.http.post<ApiPayload>(this.endpoints.updateOrganisationRegistrationDetails, this.getFormData())\n      .pipe(catchError(this.service.handleError))\n      .subscribe((response) => {\n\n          this.dialogRef = this.dialog.open(SuccessfulMessageDialogComponent, {\n              panelClass: ['successful-message-dialog', 'dialogs'],\n              disableClose: true,\n              data: {\n                  title: response.message['title'],\n                  message: response.message['body'],\n                  status: response.code === 200 ? true : false,\n              }\n          });\n\n          this.dialogRef.afterClosed().subscribe(() => {\n              window.location.reload();\n          });\n\n          this.processing = false;\n      }, (error) => {\n          this.processing = false;\n\n          if (error.error.message) {\n              this.dialogRef = this.dialog.open(SuccessfulMessageDialogComponent, {\n                  panelClass: ['successful-message-dialog', 'dialogs'],\n                  disableClose: true,\n                  data: {\n                      title: error.error.message['title'],\n                      message: error.error.message['body'],\n                      status: false,\n                  }\n              });\n          } else {\n              this.service.determineErrorResponse(error);\n          }\n      });\n}\n\n\n\n}\n","\n<fury-page-layout mode=\"card\">\n    <fury-page-layout-header>\n        <fury-breadcrumbs \n            [@fadeInRight] \n            [crumbs]=\"[application ? application.OrganisationName : 'New Application']\"\n            [current]=\" application ? application.RegTrackingNo : 'New Application' \">\n        </fury-breadcrumbs>\n    </fury-page-layout-header>\n\n    <fury-page-layout-content [@fadeInUp]>\n        \n       \n\n        <main class=\"fadeInUp _delay4ms\">\n\n            <!-- <app-page-breadcrumb [title]=\"'Application for New Registration / Renewal'\"></app-page-breadcrumb> -->\n        \n            <mat-horizontal-stepper \n                [linear]=\"isLinear\"\n                [selectedIndex]=\"selectedIndex\"\n                labelPosition=\"bottom\" #stepper>\n        \n                <mat-step [stepControl]=\"formGeneralInformation\">\n                    <ng-template matStepLabel>\n                        <h3>Applicant</h3>\n\n                        \n                    </ng-template>\n        \n                    <form [formGroup]=\"formGeneralInformation\">\n                        <h1 class=\"full-width step-header\">Details of the applicant which could be an organisation or Individual that collects or processes Personal Data </h1>\n        \n                        <mat-form-field>\n                            <mat-label>Name of Organisation <span class=\"required-field\">required</span></mat-label>\n                            <input appUppercase matInput formControlName=\"OrganizationName\">       \n                            <mat-error *ngIf=\"formGeneralInformation.get('OrganizationName').invalid\">{{ getOrganizationNameErrorMessage() }}</mat-error>\n                        </mat-form-field>  \n        \n                        <!-- <mat-form-field [hintLabel]=\"'Data Protection & Privacy Act Categories'\"> -->\n                        <!-- <mat-form-field [hintLabel]=\"'Are you a Data Collector/ Data Processor / Data Controller ?'\"> -->\n                        <mat-form-field [hintLabel]=\"'Choose all that apply'\">\n                            <mat-label>Category <span class=\"required-field\">required</span></mat-label>\n                            <mat-select multiple formControlName=\"DPPActCategory\">\n                                <mat-option *ngFor=\"let cat of organisationCategories\" [value]=\"cat.OrganisationCategoryId\">\n                                    {{ cat.OrganisationCategoryName }}\n                                </mat-option>\n                            </mat-select>   \n                            <mat-error *ngIf=\"formGeneralInformation.get('DPPActCategory').invalid\">{{ getSelectErrorMessage() }}</mat-error> \n                        </mat-form-field>                             \n        \n                        <mat-form-field>\n                            <mat-label>Type of Organisation <span class=\"required-field\">required</span></mat-label>\n                            <mat-select formControlName=\"OrganizationTypeID\" #typeOfOrganisation>\n                                <mat-option *ngFor=\"let type of organisationTypes\" (click)=\"OrganizationType = type.OrganisationType\" [value]=\"type.OrganisationTypeID\">\n                                    {{ type.OrganisationType }}\n                                </mat-option>\n                            </mat-select>\n                            <mat-error *ngIf=\"formGeneralInformation.get('OrganizationTypeID').invalid\">{{ getSelectErrorMessage() }}</mat-error> \n                        </mat-form-field>                   \n        \n                        <mat-form-field *ngIf=\"typeOfOrganisation.value && typeOfOrganisation.value !== 4\">\n                            <mat-label>Country of Incorporation <span class=\"required-field\">required</span></mat-label>\n                            <mat-select formControlName=\"CountryOfIncorporation\">\n                                <mat-option *ngFor=\"let country of countries\" (click)=\"CountryOfIncorporation = country.Name\" [value]=\"country.CountryID\">\n                                    {{ country.Name }}\n                                </mat-option>\n                            </mat-select>\n                            <mat-error *ngIf=\"formGeneralInformation.get('CountryOfIncorporation').invalid\">{{ getSelectErrorMessage() }}</mat-error> \n                        </mat-form-field>        \n        \n                        <mat-form-field *ngIf=\"typeOfOrganisation.value && typeOfOrganisation.value !== 4\">\n                            <mat-label>Registration Number <span class=\"required-field\">required</span></mat-label>\n                            <input appUppercase appRemoveSpaces matInput maxlength=\"25\" formControlName=\"URSBNumber\"> \n                            <mat-error *ngIf=\"formGeneralInformation.get('URSBNumber').invalid\">{{ getURSBNumberErrorMessage() }}</mat-error>\n                        </mat-form-field>     \n                        \n                        <mat-form-field>\n                            <mat-label>Sector <span class=\"required-field\">required</span></mat-label>\n                            <mat-select formControlName=\"SectorID\" #Sector>\n                                <mat-option *ngFor=\"let sector of sectors\" (click)=\"SectorName = sector.Sector\" [value]=\"sector.SectorID\">\n                                    {{ sector.Sector }}\n                                </mat-option>\n                            </mat-select>\n                            <mat-error *ngIf=\"formGeneralInformation.get('SectorID').invalid\">{{ getSelectErrorMessage() }}</mat-error>\n                        </mat-form-field>        \n                        \n                        <mat-form-field hintLabel=\"If Other, Please specify the Sector.\" *ngIf=\"Sector.value === 14\">\n                            <mat-label>Specify Sector <span class=\"required-field\">required</span></mat-label>\n                            <input appUppercase matInput maxlength=\"50\" formControlName=\"OtherSector\">    \n                            <mat-error *ngIf=\"formGeneralInformation.get('OtherSector').invalid\">{{ getOtherSectorErrorMessage() }}</mat-error>\n                        </mat-form-field>                 \n        \n                        <!-- <mat-form-field *ngIf=\"formGeneralInformation.get('PublicBodyTypeID').value === '6'\">\n                            <mat-label>Type of Local Government <span class=\"required-field\">required</span></mat-label>\n                            <mat-select formControlName=\"LocalGovernmentType\">\n                                <mat-option value=\"1\">Body Corporate or otherwise established by Act of Parliament</mat-option>\n                                <mat-option value=\"2\">Cabinet</mat-option>\n                                <mat-option value=\"3\">Court</mat-option>\n                                <mat-option value=\"4\">Commission established by Act of Parliament</mat-option>\n                                <mat-option value=\"5\">Government Department</mat-option>\n                                <mat-option value=\"6\">Local Government Adminstration</mat-option>\n                            </mat-select>\n                        </mat-form-field>                    -->\n                        \n                        <!-- <mat-form-field *ngIf=\"formGeneralInformation.get('PublicBodyTypeID').value === '6'\">\n                            <mat-label>Statute <span class=\"required-field\">required</span></mat-label>\n                            <input appUppercase appRemoveSpaces matInput maxlength=\"255\" formControlName=\"Statute\">                            \n                        </mat-form-field>    \n                         -->\n                        <mat-form-field>\n                            <mat-label>Physical Address <span class=\"required-field\">required</span></mat-label>\n                            <input appUppercase matInput maxlength=\"255\" formControlName=\"Location\">            \n                            <mat-error *ngIf=\"formGeneralInformation.get('Location').invalid\">{{ getLocationErrorMessage() }}</mat-error>                \n                        </mat-form-field>  \n        \n                        <!-- <mat-form-field>\n                            <mat-label>Name of Head of Organisation <span class=\"required-field\">required</span></mat-label>\n                            <input appUppercase appRemoveSpaces matInput maxlength=\"255\" formControlName=\"HeadOfOrganization\">                            \n                        </mat-form-field>    \n        \n                        <mat-form-field>\n                            <mat-label>Title of Head of Organisation <span class=\"required-field\">required</span></mat-label>\n                            <input appUppercase appRemoveSpaces matInput maxlength=\"255\" formControlName=\"TitleOfOrganizationHead\">                            \n                        </mat-form-field>     -->\n        \n                        <!-- <mat-form-field>\n                            <mat-label>Postal Address <span class=\"optional-field\">optional</span></mat-label>\n                            <input appUppercase appRemoveSpaces matInput maxlength=\"255\" formControlName=\"PostalAddress\">                            \n                        </mat-form-field>     -->\n        \n                        <!-- Improve the country code to be dynamic -->\n                        <!-- <mat-form-field>\n                            <span matPrefix>+256 &nbsp;</span>\n                            <mat-label>Organisation Telephone Number <span class=\"required-field\">required</span></mat-label>\n                            <input appTelephoneFormaterDirective maxlength=\"11\" matInput formControlName=\"PhoneNumber\">           \n                        </mat-form-field>    -->\n        \n                        <div class=\"telephone-code-number-wrapper\">\n                            <mat-form-field class=\"fadeInUp _delay2ms\">\n                                <mat-label>Pick one </mat-label>\n                                <mat-select formControlName=\"PhoneNumberCode\">\n                                    <mat-option selected *ngIf=\"!selected\" value=\"256\">+256</mat-option>\n                                    <!-- <mat-option selected *ngIf=\"!selected\" value=\"256\">+256 - Uganda</mat-option> -->\n                                    <mat-option *ngFor=\"let code of countries\" [value]=\"code.PhoneCode\" (click)=\"selected = true\">\n                                        +{{ code.PhoneCode }}\n                                    </mat-option>\n                                </mat-select>\n                            </mat-form-field>\n        \n                            <!-- <mat-form-field class=\"fadeInUp _delay2ms\" [hintLabel]=\"'Organisation Telephone Number.'\"> -->\n                            <mat-form-field class=\"fadeInUp _delay2ms\">\n                                <mat-label>Organisation Telephone Number <span class=\"required-field\">required</span></mat-label>\n                                <input type=\"text\" maxlength=\"11\" matInput appTelephoneFormaterDirective formControlName=\"PhoneNumber\" placeholder=\"Ex. 414 318 111\">\n                                <mat-error *ngIf=\"formGeneralInformation.get('PhoneNumber').invalid\">{{ getTelephoneNumberErrorMessage() }}</mat-error>\n                            </mat-form-field> \n                        </div>                \n        \n                        <!-- <mat-form-field>\n                            <span matPrefix>+256 &nbsp;</span>\n                            <mat-label>Land Line <span class=\"optional-field\">optional</span></mat-label>\n                            <input appTelephoneFormaterDirective maxlength=\"11\" matInput formControlName=\"Landline\">           \n                        </mat-form-field>    -->\n        \n                        <mat-form-field>\n                            <mat-label>Organisation Email Address <span class=\"required-field\">required</span></mat-label>\n                            <input appRemoveSpaces matInput formControlName=\"EmailAddress\">\n                            <mat-error *ngIf=\"formGeneralInformation.get('EmailAddress').invalid\">{{ getEmailAddressErrorMessage() }}</mat-error>\n                        </mat-form-field>   \n        \n                        <!-- <mat-form-field hintLabel=\"Select all the roles performed\">\n                            <mat-label>Nature of Business <span class=\"required-field\">required</span></mat-label>\n                            <mat-select multiple formControlName=\"RolesPerformedID\">\n                                <mat-option value=\"1\">Protection of National Security</mat-option>\n                                <mat-option value=\"2\">Public revenue collection</mat-option>\n                                <mat-option value=\"3\">Enforcement of law which imposes a pecuniary penalty</mat-option>\n                                <mat-option value=\"4\">Conduct proceedings before any court</mat-option>\n                            </mat-select>    \n                        </mat-form-field>     -->\n        \n                        <mat-form-field>\n                            <mat-label>Nature of Business Categories<span class=\"required-field\">required</span></mat-label>\n                            <mat-select formControlName=\"NatureOfBusinessCat\">\n                                <mat-option *ngFor=\"let cat of natureOfBusinessCat\" (click)=\"NatureOfBusinessCat = cat.NatureOfBusinessCategoryName\" [value]=\"cat.NatureOfBusinessCatId\">\n                                    {{ cat.NatureOfBusinessCategoryName }}\n                                </mat-option>\n                            </mat-select>    \n                            <mat-error *ngIf=\"formGeneralInformation.get('NatureOfBusinessCat').invalid\">{{ getSelectErrorMessage() }}</mat-error>\n                        </mat-form-field>                   \n        \n                        <mat-form-field [hintLabel]=\"'Choose all that apply'\" *ngIf=\"_hasRequestMoreInfo && !isOfficer && formGeneralInformation.get('NatureOfBusinessSubCat').enabled\">\n                            <mat-label>Nature of Business Sub-Categories <span class=\"required-field\">required</span></mat-label>\n                            <mat-select multiple formControlName=\"NatureOfBusinessSubCat\">\n                                <mat-option *ngFor=\"let sub of natureOfBusinessSubCat\" [value]=\"sub.NatureOfBusinessSubCatId\" [matTooltip]=\"sub.NatureOfBusinessSubCategoryName\">\n                                    {{ sub.NatureOfBusinessSubCategoryName }}\n                                </mat-option>\n                            </mat-select> \n                            <mat-error *ngIf=\"formGeneralInformation.get('NatureOfBusinessSubCat').invalid\">{{ getSelectErrorMessage() }}</mat-error>   \n                        </mat-form-field>      \n                        \n                        <!-- For viewing purposes only -->\n                        <mat-form-field class=\"span-2-columns\" [hintLabel]=\"'Choose all that apply'\" *ngIf=\"!_hasRequestMoreInfo || (_hasRequestMoreInfo && formGeneralInformation.get('NatureOfBusinessSubCat').disabled) || isOfficer\">\n                            <mat-label>Nature of Business Sub-Categories ?<span class=\"required-field\">required</span></mat-label>\n                            <textarea matInput [value]=\"getSelectedNatureOfBusinessSubCat()\" disabled class=\"textarea-small\"></textarea>\n                        </mat-form-field>                          \n        \n                        <!-- <mat-form-field class=\"full-width\" hintLabel=\"What are the main activities of the organisation ?\">\n                            <mat-label>Nature of Business<span class=\"required-field\">required</span></mat-label>\n                            <textarea #CaseTitleInput matInput maxlength=\"1000\" formControlName=\"NatureOfBusiness\" placeholder=\"\"></textarea>\n                            <mat-hint align=\"end\">{{ CaseTitleInput.value.length }} / 1000</mat-hint>\n                        </mat-form-field>                      -->\n                        \n                        <!-- <section class=\"expand-section reduced-properties table-wrapper\">\n                            <button \n                                mat-button\n                                color=\"primary\"\n                                [disabled]=\"processing\"\n                                class=\"add-item-button\"\n                                (click)=\"onAddMainActivity()\">\n                                <div class=\"button-label\">\n                                    <mat-icon>add</mat-icon>                            \n                                    <span>Add A Main Activity</span>\n                                </div>\n                            </button>\n        \n                            <p class=\"description\">What are the main activities of the organisation ?</p>\n                            \n                            <div class=\"table-wrapper\">\n                                <table \n                                    mat-table \n                                    #dpoMatSort=\"matSort\"\n                                    matSortDisableClear=\"true\"\n                                    [dataSource]=\"mainActivitiesDataSource\"\n                                    matSort>\n                    \n                                    <ng-container matColumnDef=\"Count\">\n                                        <th mat-header-cell *matHeaderCellDef> # </th>\n                                        <td mat-cell *matCellDef=\"let index = index\"> {{ index + 1 }} </td>\n                                    </ng-container>\n                    \n                                    <ng-container matColumnDef=\"MainActivity\">\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Main Activities </th>\n                                        <td mat-cell *matCellDef=\"let row\">{{ row.Activity }}</td>\n                                    </ng-container>                      \n                    \n                                    <ng-container matColumnDef=\"Actions\">\n                                        <th mat-header-cell *matHeaderCellDef> Actions </th>\n                                        <td mat-cell *matCellDef=\"let row; let index = index\">\n                                            <button \n                                                mat-button \n                                                class=\"action-btn\"\n                                                [matMenuTriggerFor]=\"menu\" \n                                                (click)=\"$event.stopPropagation()\"\n                                                matTooltip=\"See more options\">\n                                                <mat-icon>more_vert</mat-icon>\n                                            </button>\n                    \n                                            <mat-menu yPosition=\"below\" #menu=\"matMenu\" class=\"more-options-mat-menu\">\n                    \n                                                <button \n                                                    mat-menu-item \n                                                    (click)=\"$event.stopPropagation();onEditMainActivity(row)\">\n                                                    <mat-icon>edit</mat-icon>\n                                                    <span>Make Changes</span>\n                                                </button>\n                                                      \n                                                <hr />\n                    \n                                                <button \n                                                    mat-menu-item \n                                                    (click)=\"$event.stopPropagation();onRemoveMainActivity(row)\">\n                                                    <mat-icon color=\"warn\">delete</mat-icon>\n                                                    <span>Remove</span>\n                                                </button>\n                    \n                                            </mat-menu>                                                  \n                                        </td>\n                                    </ng-container>\n                    \n                                    <tr mat-header-row *matHeaderRowDef=\"MainActivitiesDisplayedColumns\"></tr>\n                                    <tr mat-row *matRowDef=\"let row; columns: MainActivitiesDisplayedColumns;\" class=\"mat-data-row\"></tr>\n                                </table>\n        \n                                <mat-paginator \n                                    #dpoPaginator\n                                    [pageSize]=\"10\"\n                                    [pageSizeOptions]=\"[5, 10]\">\n                                </mat-paginator>                    \n                            </div>                \n                        </section>                      -->\n                        \n                    </form>\n        \n                    <div class=\"button-wrapper single-button\">\n                        <button \n                            [disabled]=\"formGeneralInformation.invalid\"\n                            mat-button \n                            class=\"next-btn\" \n                            color=\"primary\" \n                            matStepperNext>\n                            Next\n                        </button>\n                    </div>             \n                </mat-step>\n        \n                <mat-step [stepControl]=\"formOrganisationDetails\">\n                    <ng-template matStepLabel>\n                        <h3>Data Protection <br />Officer</h3>\n\n                      \n                    </ng-template>\n        \n                    <form [formGroup]=\"formOrganisationDetails\">     \n        \n                        <h1 class=\"full-width step-header\">Details of Data Protection Officer </h1>    \n                        \n                        <!-- If yes... all the fields should be required. -->\n        \n                        <div class=\"grouped-items\" [ngClass]=\"{'full-width': formOrganisationDetails.get('DPORequired').value !== 'Yes'}\">\n                            <h3>Do you have a designated data protection officer ? </h3>\n        \n                            <mat-radio-group \n                                color=\"primary\" \n                                formControlName=\"DPORequired\" \n                                aria-label=\"Pick one\">\n                                <mat-radio-button [ngClass]=\"{'selected-radio-btn': formOrganisationDetails.get('DPORequired').value === 'Yes' }\" value=\"Yes\">Yes</mat-radio-button>\n                                <mat-radio-button [ngClass]=\"{'selected-radio-btn': formOrganisationDetails.get('DPORequired').value === 'No' }\" value=\"No\">No</mat-radio-button>\n                            </mat-radio-group>        \n                        </div>                  \n                        \n                        <mat-form-field *ngIf=\"formOrganisationDetails.get('DPORequired').value === 'Yes'\">\n                            <mat-label>Name <span class=\"required-field\">required</span></mat-label>\n                            <input formControlName=\"DPOName\" matInput>\n                            <mat-error *ngIf=\"formOrganisationDetails.get('DPOName').invalid\">{{ getDPONameErrorMessage() }}</mat-error>\n                        </mat-form-field>\n                \n                        <mat-form-field *ngIf=\"formOrganisationDetails.get('DPORequired').value === 'Yes'\">\n                            <mat-label>Physical Address <span class=\"required-field\">required</span></mat-label>\n                            <input formControlName=\"DPOPhysicalAddress\" maxlength=\"255\" matInput>\n                            <mat-error *ngIf=\"formOrganisationDetails.get('DPOPhysicalAddress').invalid\">{{ getDPOPhysicalAddressErrorMessage() }}</mat-error>\n                        </mat-form-field>\n        \n                        <!-- <mat-form-field >\n                            <span matPrefix>+256 &nbsp;</span>\n                            <mat-label>Telephone Number <span class=\"required-field\">required</span></mat-label>\n                            <input appTelephoneFormaterDirective maxlength=\"11\" matInput formControlName=\"DPOPhoneNumber\">           \n                        </mat-form-field>  -->\n                        \n                        <div class=\"telephone-code-number-wrapper\" *ngIf=\"formOrganisationDetails.get('DPORequired').value === 'Yes'\">\n                            <mat-form-field class=\"fadeInUp _delay2ms\">\n                                <mat-label>Pick one </mat-label>\n                                <mat-select formControlName=\"PhoneNumberCode\">\n                                    <mat-option selected *ngIf=\"!DPOSelected\" value=\"256\">+256</mat-option>\n                                    <!-- <mat-option selected *ngIf=\"!selected\" value=\"256\">+256 - Uganda</mat-option> -->\n                                    <mat-option *ngFor=\"let code of countries\" [value]=\"code.PhoneCode\" (click)=\"DPOSelected = true\">\n                                        +{{ code.PhoneCode }}\n                                    </mat-option>\n                                </mat-select>\n                                <!-- <mat-error *ngIf=\"formGeneralInformation.get('PhoneNumberCode').invalid\">{{ getSelectInputErrorMessage() }}</mat-error>      -->\n                            </mat-form-field>\n        \n                            <!-- <mat-form-field class=\"fadeInUp _delay2ms\" [hintLabel]=\"'Organisation Telephone Number.'\"> -->\n                            <mat-form-field class=\"fadeInUp _delay2ms\">\n                                <mat-label>Telephone Number <span class=\"required-field\">required</span></mat-label>\n                                <input type=\"text\" maxlength=\"11\" matInput appTelephoneFormaterDirective formControlName=\"DPOPhoneNumber\" placeholder=\"Ex. 414 318 111\">\n                                <mat-error *ngIf=\"formOrganisationDetails.get('DPOPhoneNumber').invalid\">{{ getDPOPhoneNumberErrorMessage() }}</mat-error>\n                            </mat-form-field> \n                        </div>                  \n                \n                        <mat-form-field *ngIf=\"formOrganisationDetails.get('DPORequired').value === 'Yes'\">\n                            <mat-label>Email Address <span class=\"required-field\">required</span></mat-label>\n                            <input appRemoveSpaces formControlName=\"DPOEmailAddress\" matInput>\n                            <mat-error *ngIf=\"formOrganisationDetails.get('DPOEmailAddress').invalid\">{{ getDPOEmailAddressErrorMessage() }}</mat-error>\n                        </mat-form-field>       \n        \n                        <mat-form-field *ngIf=\"formOrganisationDetails.get('DPORequired').value === 'Yes'\" class=\"full-width\" hintLabel=\"Any other title held apart from DPO (Data Protection Officer).\">\n                            <mat-label>Title Held <span class=\"required-field\">required</span></mat-label>\n                            <textarea #PositionInput matInput formControlName=\"DPOPositionInOrganisation\" maxlength=\"1000\"></textarea>\n                            <mat-hint align=\"end\">{{ PositionInput.value.length }} / 1000</mat-hint>\n                            <mat-error *ngIf=\"formOrganisationDetails.get('DPOPositionInOrganisation').invalid\">{{ getDPOPositionInOrganisationErrorMessage() }}</mat-error>\n                        </mat-form-field>                  \n                    </form>\n        \n                    <div class=\"button-wrapper\">       \n                        <button mat-button class=\"back-btn\" matStepperPrevious>Back</button>   \n                      \n                        <button \n                            [disabled]=\"formOrganisationDetails.invalid\"\n                            mat-button \n                            class=\"next-btn\" \n                            color=\"primary\" \n                            matStepperNext>\n                            Next\n                        </button>\n                    </div>             \n                </mat-step>\n        \n                <mat-step [stepControl]=\"formPersonalDataHeld\">\n                    <ng-template matStepLabel>\n                        <h3>Data Collected <br /> or Processed</h3>\n\n                      \n                    </ng-template>\n        \n                    <form [formGroup]=\"formPersonalDataHeld\" class=\"personal-data-affected\">       \n                        \n                        <h1 class=\"full-width step-header\">Description of Data collected or processed </h1>\n        \n                        <mat-form-field hintLabel=\"Choose all that apply.\" class=\"full-width\">\n                            <mat-label>Source of Data <span class=\"required-field\">required</span></mat-label>\n                            <mat-select multiple formControlName=\"SourceOfDataID\">\n                                <mat-option *ngFor=\"let source of dataSources\" [value]=\"source.DataSourceID\">\n                                    {{ source.DataSource }}\n                                </mat-option>\n                            </mat-select>    \n                            <mat-error *ngIf=\"formPersonalDataHeld.get('SourceOfDataID').invalid\">{{ getSelectErrorMessage() }}</mat-error> \n                        </mat-form-field>        \n                        \n                        <!-- <div class=\"grouped-items\" class=\"span-2-columns\">\n                            <h3>Do you collect personal data relating to Children?</h3>\n            \n                            <mat-radio-group color=\"primary\" aria-label=\"Pick one\" formControlName=\"CollectChildrenData\">\n                                <mat-radio-button value=\"Yes\">Yes</mat-radio-button>\n                                <mat-radio-button value=\"No\">No</mat-radio-button>\n                            </mat-radio-group>        \n                        </div>   -->\n        \n                        <!-- <mat-form-field class=\"full-width personal-data-affected-field\" hintLabel=\"Choose all that apply\">\n                            <mat-label>Personal Data Collected Or Processed <span class=\"required-field\">required</span></mat-label>\n                            <mat-select [formControl]=\"dataCategory\" multiple>\n                                <mat-option \n                                    *ngFor=\"let category of dataCategories\" \n                                    [value]=\"category.Name\">\n                                    {{ category.Name }}\n                            </mat-option>\n                            </mat-select>\n                        </mat-form-field> -->\n        \n                        <h1 class=\"full-width heading\">Personal Data Collected Or Processed</h1>\n                        \n                        <section \n                            *ngFor=\"let category of dataCategories; let i = index\" \n                            class=\"expand-section categories\">        \n\n                            <div>\n                                <h3 [innerHTML]=\"category.DataCategory\"></h3>\n                                <mat-icon matTooltipPosition=\"right\"  [matTooltip]=\"category.DataDescription\">info</mat-icon>\n                            </div>\n\n                            <mat-checkbox [disabled]=\"isViewOnly && !personalDataCollectedCheckBoxEnabled\"\n                                *ngFor=\"let SubCategory of category.SubCategories\" \n                                [ngClass]=\"{'full-width': category.SubCategories.length === 1, 'selected-checkbox': SubCategory.IsChecked}\"\n                                color=\"primary\"\n                                [checked]=\"SubCategory.IsChecked\"\n                                (change)=\"onChangeSubCategory($event,SubCategory)\"\n                                [required]=\"'false'\">\n                                {{ SubCategory.DataSubCategory }}\n                            </mat-checkbox>\n                            \n                        </section>                            \n                    </form>\n        \n                    <div class=\"button-wrapper\">       \n                        <button mat-button class=\"back-btn\" matStepperPrevious>Back</button>\n        \n\n                        <button \n                            [disabled]=\"formPersonalDataHeld.invalid || selectedDataSubCategory.length === 0\"\n                            mat-button \n                            class=\"next-btn\" \n                            color=\"primary\" \n                            matStepperNext>\n                            Next\n                        </button>\n                    </div>             \n                </mat-step>\n\n                <mat-step [stepControl]=\"formChildrenData\">\n                    <ng-template matStepLabel>\n                        <h3>Children's Data</h3>\n                    </ng-template>\n\n                    <form [formGroup]=\"formChildrenData\">\n                        \n                        <div class=\"grouped-items\">\n                            <h3>Do you collect personal data relating to Children?<span class=\"required-field\">required</span></h3>\n            \n                            <mat-radio-group color=\"primary\" aria-label=\"Pick one\" formControlName=\"CollectChildrenData\" (change)=\"updateCollecthildrenData($event)\">\n                                <mat-radio-button value=\"Yes\">Yes</mat-radio-button>\n                                <mat-radio-button value=\"No\">No</mat-radio-button>\n                            </mat-radio-group>        \n                        </div>  \n        \n                        <mat-form-field *ngIf=\"showChildrenDataFields == true\">\n                            <mat-label>Reason / Purpose for collecting children's data<span class=\"required-field\">required</span> </mat-label>\n                        \n                            <mat-select multiple formControlName=\"PurposeForCollection\">\n                                <mat-option *ngFor=\"let child of childDataPurposes\" [value]=\"child.ChildDataID\">\n                                    {{ child.ChildDataPurpose }}\n                                </mat-option>\n                            </mat-select>  \n                        </mat-form-field>                  \n                        \n                                    \n        \n                    </form>\n\n                    <div class=\"button-wrapper\">       \n                        <button mat-button class=\"back-btn\" matStepperPrevious>Back</button>\n        \n                       \n\n                        <button \n                            [disabled]=\"formChildrenData.invalid\"\n                            mat-button \n                            class=\"next-btn\" \n                            color=\"primary\" \n                            matStepperNext>\n                            Next\n                        </button>\n                    </div>          \n\n                </mat-step>\n        \n        \n                <mat-step [stepControl]=\"formPurposeRetention\">\n                    <ng-template matStepLabel>\n                        <h3>Purpose & Retention</h3>\n\n                       \n                    </ng-template>\n        \n                    <form [formGroup]=\"formPurposeRetention\">       \n                        \n                        <h1 class=\"full-width step-header\">Description of Purpose for which data is collected or processed </h1>\n        \n                       \n                        <!-- For editing purposes only -->\n                        <mat-form-field hintLabel=\"Why do you collect personal Data?\">\n                            <mat-label>For What Purpose ?<span class=\"required-field\">required</span></mat-label>\n                            <mat-select formControlName=\"Purpose\" multiple>\n                                <mat-option *ngFor=\"let purpose of dataPurposes\" [value]=\"purpose.DataPurposeID\">\n                                    {{ purpose.DataPurpose }}\n                                </mat-option>\n                            </mat-select>  \n                            <mat-error *ngIf=\"formPurposeRetention.get('Purpose').invalid\">{{ getSelectErrorMessage() }}</mat-error>   \n                        </mat-form-field>\n\n                        <!-- For viewing purposes only -->\n                        <mat-form-field class=\"full-width\"  hintLabel=\"Why do you collect personal Data?\">\n                            <mat-label>For What Purpose ?<span class=\"required-field\">required</span></mat-label>\n                            <textarea matInput [value]=\"getSelectedPurpose()\" disabled class=\"textarea-small\"></textarea>\n                        </mat-form-field>   \n\n        \n                        <!-- For Edits -->\n                        <mat-form-field hintLabel=\"If the purpose is Collection / Processing is required by Law.\" *ngIf=\"SpecifyTheLaw\">\n                            <mat-label>Specify the Law <span class=\"required-field\">required</span></mat-label>\n                            <input matInput #SpecifyTheLawInput maxlength=\"1000\" formControlName=\"SpecifyTheLaw\">        \n                            <mat-hint align=\"end\">{{ SpecifyTheLawInput.value.length }} / 1000</mat-hint>    \n                            <mat-error *ngIf=\"formPurposeRetention.get('SpecifyTheLaw').invalid\">{{ getRequiredErrorMessage() }}</mat-error>\n                        </mat-form-field>  \n        \n                        <!-- For viewing only -->\n                        <mat-form-field class=\"full-width\" *ngIf=\"SpecifyTheLaw\" hintLabel=\"If the purpose is Collection / Processing is required by Law.\">\n                            <mat-label>Specify the Law<span class=\"required-field\">required</span></mat-label>\n                            <textarea matInput formControlName=\"SpecifyTheLaw\" disabled class=\"textarea-small\"></textarea>\n                        </mat-form-field>                             \n        \n\n                        <!-- For Edits -->\n                        <mat-form-field hintLabel=\"If the purpose is to provide services / products to Individuals.\" *ngIf=\"ServiceOrProductProvided\">\n                            <mat-label>Specify the Service / Product Provided<span class=\"required-field\">required</span></mat-label>\n                            <input matInput #ServiceOrProductProvidedInput maxlength=\"1000\" formControlName=\"ServiceOrProductProvided\">     \n                            <mat-hint align=\"end\">{{ ServiceOrProductProvidedInput.value.length }} / 1000</mat-hint>    \n                            <mat-error *ngIf=\"formPurposeRetention.get('ServiceOrProductProvided').invalid\">{{ getRequiredErrorMessage() }}</mat-error>\n                        </mat-form-field>  \n                        \n                        <!-- For viewing only -->\n                        <mat-form-field class=\"full-width\" *ngIf=\"ServiceOrProductProvided\" hintLabel=\"If the purpose is to provide services / products to Individuals.\">\n                            <mat-label>Specify the Service / Product Provided<span class=\"required-field\">required</span></mat-label>\n                            <textarea matInput formControlName=\"ServiceOrProductProvided\" disabled class=\"textarea-small\"></textarea>\n                        </mat-form-field>                              \n\n                        <!-- For Edits -->\n                        <mat-form-field hintLabel=\"If the purpose is for Compliance with a Legal Obligation.\" *ngIf=\"SpecifyLegalObligation\">\n                            <mat-label>Specify the Legal Obligation<span class=\"required-field\">required</span></mat-label>\n                            <input matInput #SpecifyLegalObligationInput maxlength=\"50\" formControlName=\"SpecifyLegalObligation\">  \n                            <mat-hint align=\"end\">{{ SpecifyLegalObligationInput.value.length }} / 50</mat-hint>    \n                            <mat-error *ngIf=\"formPurposeRetention.get('SpecifyLegalObligation').invalid\">{{ getRequiredErrorMessage() }}</mat-error>\n                        </mat-form-field>  \n\n                        <!-- For viewing only -->\n                        <mat-form-field class=\"full-width\" *ngIf=\"SpecifyLegalObligation\">\n                            <mat-label>Specify the Legal Obligation<span class=\"required-field\">required</span></mat-label>\n                            <textarea matInput formControlName=\"SpecifyLegalObligation\" disabled class=\"textarea-small\"></textarea>\n                        </mat-form-field>                              \n                        \n                        <mat-form-field hintLabel=\"Approximate number of Personal Data Records held.\">\n                            <mat-label>Total Records <span class=\"optional-field\">optional</span></mat-label>\n                            <input appCurrencyDirective matInput maxlength=\"14\" formControlName=\"TotalRecordsAtRegistration\">                            \n                            <mat-error *ngIf=\"formPurposeRetention.get('TotalRecordsAtRegistration').invalid\">{{ getPatternErrorMessage() }}</mat-error>\n                        </mat-form-field>  \n                        \n                        <mat-form-field hintLabel=\"The % annual growth of Personal Records held\">\n                            <mat-label>Percentage Annual Growth <span class=\"optional-field\">optional</span></mat-label>\n                            <input appCurrencyDirective matInput max=\"100\" maxlength=\"3\" formControlName=\"RecordPercentageGrowth\">                            \n                            <mat-error *ngIf=\"formPurposeRetention.get('RecordPercentageGrowth').invalid\">{{ getRecordPercentageGrowthErrorMessage() }}</mat-error>\n                            <mat-hint align=\"end\">Max. 100%</mat-hint>      \n                            <span matSuffix>%</span>\n                        </mat-form-field>   \n        \n                        <mat-form-field hintLabel=\"Duration for which personal data shall be kept (Years).\">\n                            <mat-label>Retention period <span class=\"required-field\">required</span></mat-label>\n                            <input appCurrencyDirective max=\"100\" matInput maxlength=\"3\" formControlName=\"RetentionPeriod\">                          \n                            <mat-error *ngIf=\"formPurposeRetention.get('RetentionPeriod').invalid\">{{ getRetentionPeriodErrorMessage() }}</mat-error>\n                            <mat-hint align=\"end\">Max. 100 years</mat-hint>      \n                            <span matSuffix>Year(s)</span>\n                        </mat-form-field>                            \n        \n                        \n        \n                    </form>\n        \n                    <div class=\"button-wrapper\">       \n                        <button mat-button class=\"back-btn\" matStepperPrevious>Back</button>\n        \n                    \n\n                        <button \n                            [disabled]=\"formPurposeRetention.invalid\"\n                            mat-button \n                            class=\"next-btn\" \n                            color=\"primary\" \n                            matStepperNext>\n                            Next\n                        </button>\n                    </div>             \n                </mat-step>\n              \n        \n                <mat-step [stepControl]=\"formThirdParties\">\n                    <ng-template matStepLabel>\n                        <h3>Disclosure & Transfer</h3>\n\n                    \n                    </ng-template>\n        \n                    <form [formGroup]=\"formThirdParties\">\n        \n                        <h1 class=\"full-width step-header\">List of persons or Bodies to whom personal data may be disclosed</h1>\n                        \n                        <div class=\"grouped-items full-width\">\n                            <h3>Do you disclose Personal Data to other Persons or Bodies ?</h3>\n            \n                            <mat-radio-group \n                                color=\"primary\" \n                                aria-label=\"Pick one\" \n                                formControlName=\"PersonalDataIsForDisclosure\">\n                                <mat-radio-button [ngClass]=\"{'selected-radio-btn': formThirdParties.get('PersonalDataIsForDisclosure').value === 'Yes' }\" value=\"Yes\">Yes</mat-radio-button>\n                                <mat-radio-button [ngClass]=\"{'selected-radio-btn': formThirdParties.get('PersonalDataIsForDisclosure').value === 'No' }\" value=\"No\">No</mat-radio-button>\n                            </mat-radio-group>        \n                        </div>    \n        \n                        <section \n                            *ngIf=\"formThirdParties.get('PersonalDataIsForDisclosure').value === 'Yes'\"\n                            class=\"expand-section reduced-properties table-wrapper fadeInUp _delay3ms\">\n                            <button *ngIf=\"!isViewOnly || (!isOfficer && _hasRequestMoreInfo && thirdPartiesEnabled)\"\n                                mat-button\n                                color=\"primary\"\n                                [disabled]=\"processing\"\n                                class=\"add-item-button\"\n                                (click)=\"onAddAThirdParty()\">\n                                <div class=\"button-label\">\n                                    <mat-icon>add</mat-icon>                            \n                                    <span>Add Person / Body</span>\n                                </div>\n                            </button>\n                            \n                            <div class=\"table-wrapper\">\n                                <table \n                                    mat-table \n                                    #thirdPartyMatSort=\"matSort\"\n                                    matSortDisableClear=\"true\"\n                                    [dataSource]=\"thirdPartyDataSource\"\n                                    matSort>\n                    \n                                    <ng-container matColumnDef=\"Count\">\n                                        <th mat-header-cell *matHeaderCellDef> # </th>\n                                        <td mat-cell *matCellDef=\"let index = index\"> {{ index + 1 }} </td>\n                                    </ng-container>\n                    \n                                    <ng-container matColumnDef=\"NameOfThirdParty\">\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Person / Body </th>\n                                        <td mat-cell *matCellDef=\"let row\">{{ row.ThirdPartyName }}</td>\n                                    </ng-container>          \n                    \n                                    <ng-container matColumnDef=\"Purpose\">\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Purpose </th>\n                                        <td mat-cell *matCellDef=\"let row\">{{ row.Purpose }}</td>\n                                    </ng-container>                                 \n                    \n                                    <!-- Actions Column -->\n                                    <ng-container matColumnDef=\"Actions\">\n                                        <th mat-header-cell *matHeaderCellDef> Actions </th>\n                                        <td mat-cell *matCellDef=\"let row; let index = index\">\n                                            <button \n                                                mat-button \n                                                class=\"action-btn\"\n                                                [disabled]=\"!_hasRequestMoreInfo || isOfficer || (_hasRequestMoreInfo && !thirdPartiesEnabled)\"\n                                                [matMenuTriggerFor]=\"menu\" \n                                                (click)=\"$event.stopPropagation()\"\n                                                matTooltip=\"See more options\">\n                                                <mat-icon>more_vert</mat-icon>\n                                            </button>\n                    \n                                            <mat-menu yPosition=\"below\" #menu=\"matMenu\" class=\"more-options-mat-menu\">\n                    \n                                                <button \n                                                    mat-menu-item \n                                                    (click)=\"$event.stopPropagation();onEditThirdParty(row)\">\n                                                    <mat-icon>edit</mat-icon>\n                                                    <span>Make Changes</span>\n                                                </button>\n                                                      \n                                                <hr />\n                    \n                                                <button \n                                                    mat-menu-item \n                                                    (click)=\"$event.stopPropagation();onRemoveThirdParty(row)\">\n                                                    <mat-icon color=\"warn\">delete</mat-icon>\n                                                    <span>Remove</span>\n                                                </button>\n                    \n                                            </mat-menu>                                                  \n                                        </td>\n                                    </ng-container>\n                    \n                                    <tr mat-header-row *matHeaderRowDef=\"thirdPartyDisplayedColumns\"></tr>\n                                    <tr mat-row *matRowDef=\"let row; columns: thirdPartyDisplayedColumns;\" class=\"mat-data-row\"></tr>\n                                </table>\n        \n                                <mat-paginator \n                                    #thirdPartyPaginator\n                                    [pageSize]=\"10\"\n                                    [pageSizeOptions]=\"[5, 10]\">\n                                </mat-paginator>                    \n                            </div>                \n                        </section>    \n                        \n                        <hr class=\"full-width\" />\n        \n                        <div class=\"grouped-items full-width\">\n                            <h3>Do you Transfer personal data outside Uganda ?</h3>\n            \n                            <mat-radio-group color=\"primary\" aria-label=\"Pick one\" formControlName=\"StoreDataOutsideCountry\">\n                                <mat-radio-button [ngClass]=\"{'selected-radio-btn': formThirdParties.get('StoreDataOutsideCountry').value === 'Yes' }\" value=\"Yes\">Yes</mat-radio-button>\n                                <mat-radio-button [ngClass]=\"{'selected-radio-btn': formThirdParties.get('StoreDataOutsideCountry').value === 'No' }\" value=\"No\">No</mat-radio-button>\n                            </mat-radio-group>        \n                        </div> \n        \n                        <section \n                            *ngIf=\"formThirdParties.get('StoreDataOutsideCountry').value === 'Yes'\"\n                            class=\"expand-section reduced-properties table-wrapper\">\n                            <button *ngIf=\"!isViewOnly || (!isOfficer && _hasRequestMoreInfo && countriesOfTransferEnabled)\"\n                                mat-button\n                                color=\"primary\"\n                                [disabled]=\"processing\"\n                                class=\"add-item-button\"\n                                (click)=\"onAddACountry()\">\n                                <div class=\"button-label\">\n                                    <mat-icon>add</mat-icon>                            \n                                    <span>Add A Country</span>\n                                </div>\n                            </button>\n                            \n                            <div class=\"table-wrapper\">\n                                <table \n                                    mat-table \n                                    #countryOfTransferMatSort=\"matSort\"\n                                    matSortDisableClear=\"true\"\n                                    [dataSource]=\"countriesDataSource\"\n                                    matSort>\n                    \n                                    <ng-container matColumnDef=\"Count\">\n                                        <th mat-header-cell *matHeaderCellDef> # </th>\n                                        <td mat-cell *matCellDef=\"let index = index\"> {{ index + 1 }} </td>\n                                    </ng-container>\n                    \n                                    <ng-container matColumnDef=\"Country\">\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Country </th>\n                                        <td mat-cell *matCellDef=\"let row\">{{ row.Country }}</td>\n                                    </ng-container>          \n                    \n                                    <ng-container matColumnDef=\"Purpose\">\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Purpose </th>\n                                        <td mat-cell *matCellDef=\"let row\">{{ row.Purpose }}</td>\n                                    </ng-container>                                 \n                    \n                                    <ng-container matColumnDef=\"Description\">\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Description </th>\n                                        <td mat-cell *matCellDef=\"let row\">{{ row.Description }}</td>\n                                    </ng-container>                                 \n                    \n                                    <!-- Actions Column -->\n                                    <ng-container matColumnDef=\"Actions\">\n                                        <th mat-header-cell *matHeaderCellDef> Actions </th>\n                                        <td mat-cell *matCellDef=\"let row; let index = index\">\n                                            <button \n                                                mat-button \n                                                class=\"action-btn\"\n                                                [disabled]=\"!_hasRequestMoreInfo || isOfficer || (_hasRequestMoreInfo && !countriesOfTransferEnabled)\"\n                                                [matMenuTriggerFor]=\"menu\" \n                                                (click)=\"$event.stopPropagation()\"\n                                                matTooltip=\"See more options\">\n                                                <mat-icon>more_vert</mat-icon>\n                                            </button>\n                    \n                                            <mat-menu yPosition=\"below\" #menu=\"matMenu\" class=\"more-options-mat-menu\">\n                    \n                                                <button \n                                                    mat-menu-item \n                                                    (click)=\"$event.stopPropagation();onEditCountry(row)\">\n                                                    <mat-icon>edit</mat-icon>\n                                                    <span>Make Changes</span>\n                                                </button>\n                                                      \n                                                <hr />\n                    \n                                                <button \n                                                    mat-menu-item \n                                                    (click)=\"$event.stopPropagation();onRemoveCountry(row)\">\n                                                    <mat-icon color=\"warn\">delete</mat-icon>\n                                                    <span>Remove</span>\n                                                </button>\n                    \n                                            </mat-menu>                                                  \n                                        </td>\n                                    </ng-container>\n                    \n                                    <tr mat-header-row *matHeaderRowDef=\"countryDisplayedColumns\"></tr>\n                                    <tr mat-row *matRowDef=\"let row; columns: countryDisplayedColumns;\" class=\"mat-data-row\"></tr>\n                                </table>\n        \n                                <mat-paginator \n                                    #countryOfTransferPaginator\n                                    [pageSize]=\"10\"\n                                    [pageSizeOptions]=\"[5, 10]\">\n                                </mat-paginator>                    \n                            </div>                \n                        </section>                   \n        \n                    </form>\n        \n                    <div class=\"button-wrapper\">\n                        <button mat-button class=\"back-btn\" matStepperPrevious>Back</button>\n                       \n                        <button \n                            mat-button \n                            [disabled]=\"formThirdParties.invalid \n                            || processing \n                            || ((formThirdParties.get('PersonalDataIsForDisclosure').value === 'Yes') && (thirdParties.length === 0)) \n                            || ((formThirdParties.get('StoreDataOutsideCountry').value === 'Yes') && (countries.length === 0))\" \n                            class=\"next-btn\" \n                            color=\"primary\" \n                            matStepperNext>\n                            Next\n                        </button>\n                    </div>\n                </mat-step>\n        \n                <mat-step [stepControl]=\"formSecurityMeasures\">\n                    <ng-template matStepLabel>\n                        <h3>Security Information</h3>\n\n                    </ng-template>\n        \n                    <form [formGroup]=\"formSecurityMeasures\">\n        \n                        <h1 class=\"full-width step-header\">State security measures in place to safeguard personal data collected or processed.</h1>\n        \n                        <section class=\"expand-section reduced-properties table-wrapper no-padding\">\n                            <button *ngIf=\"!isViewOnly || securityMeasuresEnabled\"\n                                mat-button\n                                color=\"primary\"\n                                [disabled]=\"processing\"\n                                class=\"add-item-button\"\n                                (click)=\"onAddSecurityMeasure()\">\n                                <div class=\"button-label\">\n                                    <mat-icon>add</mat-icon>                            \n                                    <span>Add A Security Measure</span>\n                                </div>\n                            </button>\n                            \n                            <div class=\"table-wrapper\">\n                                <table \n                                    mat-table \n                                    #securityMeasureMatSort=\"matSort\"\n                                    matSortDisableClear=\"true\"\n                                    [dataSource]=\"securityMeasureDataSource\"\n                                    matSort>\n                    \n                                    <ng-container matColumnDef=\"Count\">\n                                        <th mat-header-cell *matHeaderCellDef> # </th>\n                                        <td mat-cell *matCellDef=\"let index = index\"> {{ index + 1 }} </td>\n                                    </ng-container>\n                    \n                                    <ng-container matColumnDef=\"SecurityMeasure\">\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Security Measure </th>\n                                        <td mat-cell *matCellDef=\"let row\">{{ row.SecurityMeasure }}</td>\n                                    </ng-container>                                  \n                    \n                                    <!-- Actions Column -->\n                                    <ng-container matColumnDef=\"Actions\">\n                                        <th mat-header-cell *matHeaderCellDef> Actions </th>\n                                        <td mat-cell *matCellDef=\"let row; let index = index\">\n                                            <button \n                                                mat-button \n                                                class=\"action-btn\"\n                                                [disabled]=\"!_hasRequestMoreInfo || isOfficer || (_hasRequestMoreInfo && !securityMeasuresEnabled)\"\n                                                [matMenuTriggerFor]=\"menu\" \n                                                (click)=\"$event.stopPropagation()\"\n                                                matTooltip=\"See more options\">\n                                                <mat-icon>more_vert</mat-icon>\n                                            </button>\n                    \n                                            <mat-menu yPosition=\"below\" #menu=\"matMenu\" class=\"more-options-mat-menu\">\n                \n                                                <button \n                                                    mat-menu-item \n                                                    (click)=\"$event.stopPropagation();onEditSecurityMeasure(row)\">\n                                                    <mat-icon>edit</mat-icon>\n                                                    <span>Make Changes</span>\n                                                </button>\n                                                      \n                                                <hr />\n                    \n                                                <button \n                                                    mat-menu-item \n                                                    (click)=\"$event.stopPropagation();onRemoveSecurityMeasure(row)\">\n                                                    <mat-icon color=\"warn\">delete</mat-icon>\n                                                    <span>Remove</span>\n                                                </button>                                        \n                    \n                                            </mat-menu>                                                  \n                                        </td>\n                                    </ng-container>\n                    \n                                    <tr mat-header-row *matHeaderRowDef=\"securityMeasuresDisplayedColumns\"></tr>\n                                    <tr mat-row *matRowDef=\"let row; columns: securityMeasuresDisplayedColumns;\" [ngClass]=\"{'selected-mat-data-row': selectedSpouse === row}\" class=\"mat-data-row\"></tr>\n                                </table>\n        \n                                <mat-paginator \n                                    #securityMeasurePaginator\n                                    [pageSize]=\"10\"\n                                    [pageSizeOptions]=\"[5, 10]\">\n                                </mat-paginator>                    \n                            </div>                \n                        </section>    \n                        \n                        <section class=\"expand-section reduced-properties table-wrapper margin documents\">\n                            <h1 class=\"full-width step-header\">Attach supporting documentation eg approved information security policy.</h1>\n        \n                            <div class=\"buttons\" *ngIf=\"!isViewOnly || (_hasRequestMoreInfo && _updateAttachment)\">\n                                <button *ngIf=\"!isViewOnly || (_hasRequestMoreInfo && _updateAttachment)\"\n                                    mat-button\n                                    color=\"primary\"\n                                    [disabled]=\"processing\"\n                                    class=\"add-item-button\"\n                                    (click)=\"onUploadAttachments()\">\n                                    <div class=\"button-label\">\n                                        <mat-icon>add</mat-icon>                            \n                                        <span> {{ document ? 'Replace Document' : 'Upload Attachment' }} </span>\n                                    </div>\n                                </button>\n            \n                                <button \n                                    mat-button\n                                    *ngIf=\"document && (!isViewOnly || (_hasRequestMoreInfo && _updateAttachment))\"\n                                    color=\"primary\"\n                                    [disabled]=\"processing\"\n                                    class=\"remove-button\"\n                                    (click)=\"onRemoveDocument()\">\n                                    <div class=\"button-label\">\n                                        <mat-icon>clear</mat-icon>\n                                        <span> Remove Document </span>\n                                    </div>\n                                </button>\n                            </div>\n        \n                            <div *ngIf=\"document && document.Base64\" class=\"uploaded-document\" matTooltip=\"Open Document\" (click)=\"onReadDocument(document)\">\n                                <img src=\"./assets/img/pdf.png\" alt=\"\">\n        \n                                <span>Document: {{ document.Name }} <span *ngIf=\"document.Size\">  -  {{ document.Size }} Mbs</span></span>\n                            </div>\n\n                            <p class=\"no-document-found\" *ngIf=\"document && !document.Base64\">No document found. Please attach</p>\n        \n                        </section>\n        \n                        <hr class=\"full-width\" />\n        \n                        <section class=\"expand-section reduced-properties table-wrapper margin documents\">\n                            <h1 class=\"full-width step-header\">Attach Form 3</h1>\n        \n                            <div class=\"buttons\" *ngIf=\"!isViewOnly || (_hasRequestMoreInfo && _updateForm3Attachment)\">\n                                <!-- <a \n                                    mat-button\n                                    color=\"accent\"\n                                    [disabled]=\"processing\"\n                                    target=\"_blank\"\n                                    download=\"Form 3 -  Undertaking Not to Process or Store Personal Data\"\n                                    class=\"add-item-button\"\n                                    href=\"./assets/docs/Form 3 -  Undertaking Not to Process or Store Personal Data.pdf\">\n                                    <div class=\"button-label\">\n                                        <mat-icon>sim_card_download</mat-icon>                            \n                                        <span>Download Form 3</span>\n                                    </div>\n                                </a> -->\n        \n                                <button\n                                    mat-button\n                                    *ngIf=\"!isViewOnly || (_hasRequestMoreInfo && _updateForm3Attachment)\"\n                                    color=\"accent\"\n                                    class=\"download-form\"                           \n                                    (click)=\"onDownloadForm3()\">\n                                    <div class=\"button-label\">\n                                        <mat-icon>sim_card_download</mat-icon>                            \n                                        <span>Download Form 3</span>\n                                    </div>                        \n                                </button>\n        \n                                <button *ngIf=\"!isViewOnly || (_hasRequestMoreInfo && _updateForm3Attachment)\"\n                                    mat-button\n                                    color=\"primary\"\n                                    [disabled]=\"processing\"\n                                    class=\"add-item-button\"\n                                    (click)=\"onUploadForm3Attachments()\">\n                                    <div class=\"button-label\">\n                                        <mat-icon>add</mat-icon>                            \n                                        <span> {{ documentForm3 ? 'Replace Form 3' : 'Upload Form 3' }} </span>\n                                    </div>\n                                </button>\n            \n                                <button *ngIf=\"documentForm3 && (!isViewOnly || (_hasRequestMoreInfo && _updateForm3Attachment))\"\n                                    mat-button\n                                    color=\"primary\"\n                                    [disabled]=\"processing\"\n                                    class=\"remove-button\"\n                                    (click)=\"onRemoveForm3Document()\">\n                                    <div class=\"button-label\">\n                                        <mat-icon>clear</mat-icon>\n                                        <span> Remove Document </span>\n                                    </div>\n                                </button>\n                            </div>\n        \n                            <div  *ngIf=\"documentForm3 && documentForm3.Base64\" class=\"uploaded-document\" matTooltip=\"Open Document\" (click)=\"onReadDocument(documentForm3)\">\n                                <img src=\"./assets/img/pdf.png\" alt=\"\">\n        \n                                <span>Document: {{ documentForm3.Name }} <span *ngIf=\"documentForm3.Size\">  -  {{ documentForm3.Size }} Mbs</span> </span>\n                            </div>\n\n                            <p class=\"no-document-found\" *ngIf=\"documentForm3 && !documentForm3.Base64\">No document found. Please attach</p>\n        \n                        </section>\n        \n                        <hr class=\"full-width\" />\n        \n                        <section class=\"expand-section reduced-properties table-wrapper margin documents\">\n                            <h1 class=\"full-width step-header\">Attach Proof of Payment</h1>\n        \n                            <div class=\"buttons\" *ngIf=\"!isViewOnly || (_hasRequestMoreInfo && _updateProofOfPayment)\">\n                                <button *ngIf=\"!isViewOnly || (_hasRequestMoreInfo && _updateProofOfPayment)\"\n                                    mat-button\n                                    color=\"primary\"\n                                    [disabled]=\"processing\"\n                                    class=\"add-item-button\"\n                                    (click)=\"onUploadProofOfPayment()\">\n                                    <div class=\"button-label\">\n                                        <mat-icon>add</mat-icon>                            \n                                        <span> {{ proofOfPayment ? 'Replace Document' : 'Upload Proof of Payment' }} </span>\n                                    </div>\n                                </button>\n            \n                                <button \n                                    mat-button\n                                    *ngIf=\"proofOfPayment && (!isViewOnly || (_hasRequestMoreInfo && _updateProofOfPayment))\"\n                                    color=\"primary\"\n                                    [disabled]=\"processing\"\n                                    class=\"remove-button\"\n                                    (click)=\"onRemoveProofOfPaymen()\">\n                                    <div class=\"button-label\">\n                                        <mat-icon>clear</mat-icon>\n                                        <span> Remove Document </span>\n                                    </div>\n                                </button>\n                            </div>\n        \n                            <div *ngIf=\"proofOfPayment && proofOfPayment.Base64\" class=\"uploaded-document\" matTooltip=\"Open Document\" (click)=\"onReadDocument(proofOfPayment)\">\n                                <img src=\"./assets/img/pdf.png\" alt=\"\">\n        \n                                <span>Document: {{ proofOfPayment.Name }} <span *ngIf=\"proofOfPayment.Size\">  -  {{ proofOfPayment.Size }} Mbs</span> </span>\n                            </div>\n\n                            <p class=\"no-document-found\" *ngIf=\"proofOfPayment && !proofOfPayment.Base64\">No document found. Please attach</p>\n        \n                        </section>\n        \n                        <hr class=\"full-width\" />\n                        \n                        \n                        \n                        <mat-form-field class=\"full-width\" hintLabel=\"The person authorized to complete and submit this application on the behalf of the applicant organization\">\n                            <mat-label>Name and title of person submitting the application<span class=\"required-field\">required</span></mat-label>\n                            <input appUppercase #RegistrationDoneByInput matInput maxlength=\"50\" formControlName=\"RegistrationDoneBy\">  \n                            <mat-error *ngIf=\"formSecurityMeasures.get('RegistrationDoneBy').invalid\">{{ getRegistrationDoneByErrorMessage() }}</mat-error>                             \n                            <mat-hint align=\"end\">{{ RegistrationDoneByInput.value.length }} / 50</mat-hint>    \n                        </mat-form-field>      \n                        \n        \n                    </form>\n        \n                    <div class=\"button-wrapper\">\n                        <button mat-button class=\"back-btn\" matStepperPrevious>Back</button>\n\n                      \n\n                        <div class=\"buttons\">\n                            \n                            <button *ngIf=\"isOfficer\"\n                                mat-button \n                                class=\"next-btn submit-btn\" \n                                color=\"primary\" \n                                (click)=\"onSubmitChanges()\">\n                                <span>Submit Changes Application</span>                    \n                            </button>                \n                        </div>\n                    </div>\n                </mat-step>\n        \n            \n            </mat-horizontal-stepper>   \n        </main>\n    </fury-page-layout-content>\n</fury-page-layout>\n\n\n","function hex2rgba (hex) {\n  if (typeof hex === 'number') {\n    hex = hex.toString()\n  }\n\n  if (typeof hex !== 'string') {\n    throw new Error('Color should be defined as hex string')\n  }\n\n  var hexCode = hex.slice().replace('#', '').split('')\n  if (hexCode.length < 3 || hexCode.length === 5 || hexCode.length > 8) {\n    throw new Error('Invalid hex color: ' + hex)\n  }\n\n  // Convert from short to long form (fff -> ffffff)\n  if (hexCode.length === 3 || hexCode.length === 4) {\n    hexCode = Array.prototype.concat.apply([], hexCode.map(function (c) {\n      return [c, c]\n    }))\n  }\n\n  // Add default alpha value\n  if (hexCode.length === 6) hexCode.push('F', 'F')\n\n  var hexValue = parseInt(hexCode.join(''), 16)\n\n  return {\n    r: (hexValue >> 24) & 255,\n    g: (hexValue >> 16) & 255,\n    b: (hexValue >> 8) & 255,\n    a: hexValue & 255,\n    hex: '#' + hexCode.slice(0, 6).join('')\n  }\n}\n\nexports.getOptions = function getOptions (options) {\n  if (!options) options = {}\n  if (!options.color) options.color = {}\n\n  var margin = typeof options.margin === 'undefined' ||\n    options.margin === null ||\n    options.margin < 0 ? 4 : options.margin\n\n  var width = options.width && options.width >= 21 ? options.width : undefined\n  var scale = options.scale || 4\n\n  return {\n    width: width,\n    scale: width ? 4 : scale,\n    margin: margin,\n    color: {\n      dark: hex2rgba(options.color.dark || '#000000ff'),\n      light: hex2rgba(options.color.light || '#ffffffff')\n    },\n    type: options.type,\n    rendererOpts: options.rendererOpts || {}\n  }\n}\n\nexports.getScale = function getScale (qrSize, opts) {\n  return opts.width && opts.width >= qrSize + opts.margin * 2\n    ? opts.width / (qrSize + opts.margin * 2)\n    : opts.scale\n}\n\nexports.getImageWidth = function getImageWidth (qrSize, opts) {\n  var scale = exports.getScale(qrSize, opts)\n  return Math.floor((qrSize + opts.margin * 2) * scale)\n}\n\nexports.qrToImageData = function qrToImageData (imgData, qr, opts) {\n  var size = qr.modules.size\n  var data = qr.modules.data\n  var scale = exports.getScale(size, opts)\n  var symbolSize = Math.floor((size + opts.margin * 2) * scale)\n  var scaledMargin = opts.margin * scale\n  var palette = [opts.color.light, opts.color.dark]\n\n  for (var i = 0; i < symbolSize; i++) {\n    for (var j = 0; j < symbolSize; j++) {\n      var posDst = (i * symbolSize + j) * 4\n      var pxColor = opts.color.light\n\n      if (i >= scaledMargin && j >= scaledMargin &&\n        i < symbolSize - scaledMargin && j < symbolSize - scaledMargin) {\n        var iSrc = Math.floor((i - scaledMargin) / scale)\n        var jSrc = Math.floor((j - scaledMargin) / scale)\n        pxColor = palette[data[iSrc * size + jSrc] ? 1 : 0]\n      }\n\n      imgData[posDst++] = pxColor.r\n      imgData[posDst++] = pxColor.g\n      imgData[posDst++] = pxColor.b\n      imgData[posDst] = pxColor.a\n    }\n  }\n}\n","import {Component, ElementRef, EventEmitter, Input, Output, OnInit, ViewChild, Inject, OnChanges} from '@angular/core';\nimport * as html2pdf from 'html2pdf.js';\nimport {CertificateDetails} from '../company-registration.model';\nimport {SnackBarService} from '../../../../pages/services/snack-bar.service';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {Data} from '@angular/router';\nimport {ApiService} from '../../../../services/api.service';\nimport {DatePipe} from '@angular/common';\nimport {BaseFuryForm} from '../../../../../@fury/shared/base-fury-form';\nimport {KeycloakService} from 'keycloak-angular';\nimport {WorkflowServiceService} from '../../../../services/workflow-service.service';\nimport {CompanyRegistrationService} from '../../company-registration.service';\nimport { ComplaintService } from '../../../complaints/complaints.service';\nimport {ApiEndpointsService} from '../../../../services/api-endpoints.service';\nimport { environment } from '../../../../../environments/environment';\n\n\n@Component({\n    selector: 'fury-company-cert',\n    templateUrl: './company-cert.component.html',\n    styleUrls: ['./company-cert.component.scss']\n})\nexport class CompanyCertComponent extends BaseFuryForm implements OnInit, OnChanges {\n\n    @Input() certificateData: CertificateDetails;\n    @Output() closeWindow = new EventEmitter();\n    downloading = false;\n    QRCode;\n    @ViewChild('pdfContainer') pdfContainer: ElementRef;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) public data: Data,\n        private service: ApiService,\n        private datePipe: DatePipe,\n        public authService: KeycloakService,\n        public _workerService: WorkflowServiceService,\n        public registrationService: CompanyRegistrationService,\n        public complaintService: ComplaintService,\n        private endpoints: ApiEndpointsService,\n    ) {\n       super(\n           authService,\n           _workerService,\n           registrationService,\n           complaintService,\n       );\n    }\n\n    isApplicant: boolean;\n\n    ngOnInit(): void {\n        this.isApplicant = this.authService.getKeycloakInstance().hasRealmRole('organisation');\n        this.QRCode = environment.baseClientURL+'verify-certificate/'+this.certificateData.OrgRegNumber;\n    }\n\n    ngOnChanges(): void {\n\n    }\n\n//     getDateSuperscript(): string {        \n\n//        return this.service.getDateSuperscript(parseInt(this.datePipe.transform(this.certificateData.IssueDate, 'd')));\n          \n//    }\n\n\n    getDateSuperscript(): string {\n         this.data = {\n            IssueDate: null // Assuming initial IssueDate is null\n        };\n\n             \n       \n        const issueDate = new Date(this.data.IssueDate);\n            const currentDate = new Date(); // Assuming approval date is current date\n\n            // Check if it's the first registration (issue date is null or undefined)\n            if (!issueDate || isNaN(issueDate.getTime())) {\n                // Set issue date to current date for first registration\n                this.data.IssueDate = currentDate;\n                return this.service.getDateSuperscript(parseInt(this.datePipe.transform(currentDate, 'd')));\n            } else {\n                // Renewal: Change the year while keeping the date constant\n                const newDate = new Date(issueDate);\n                newDate.setFullYear(currentDate.getFullYear());\n                return this.service.getDateSuperscript(parseInt(this.datePipe.transform(newDate, 'd')));\n            }\n        \n    }\n        \n\n   \n\n    openPdf(): void {\n        this.downloading = true;\n\n        if (this.isApplicant) {\n            this.updateCertificateDownloadCount(this.certificateData.OrgRegNumber);\n        }\n\n        setTimeout(() => {\n            const element = document.getElementById('letterBodyContainer');\n\n            const opt = {\n                margin: 0,\n                filename: this.certificateData.OrgRegNumber + ' Certificate.pdf',\n                image: {\n                    type: 'jpeg',\n                    quality: 0.98\n                },\n                html2canvas: {\n                    scale: 2,\n                },\n                jsPDF: {\n                    unit: 'in',\n                    format: 'letter',\n                    orientation: 'landscape'\n                }\n            };\n\n            // New Promise-based usage:\n            html2pdf()\n            .from(element)\n            .set(opt)\n            .save()\n            .then((onFulfilled) => {\n\n                setTimeout(() => {\n                    this.downloading = false;\n\n                    this.service.openSnackBar('Downloaded. Please check in your downloads.', 'success');\n                }, 1000);\n\n            });\n\n        }, 1000);\n\n    }\n\n\n}\n","<main>\n        <div class=\"mat-progress-bar-container\">\n                <mat-progress-bar *ngIf=\"downloading\" mode=\"indeterminate\"></mat-progress-bar>\n        </div>\n\n        <button [disabled]=\"downloading\" mat-raised-button class=\"download-button\" (click)=\"openPdf()\" color=\"primary\">Generate Certificate</button>\n\n        <article #pdfContainer id=\"letterBodyContainer\"\n                style=\"overflow-y: auto; width: 100%; margin: 0px 0px 0px; position: relative; padding: 0px;  background-image: url('/assets/img/background2.fw.png'); background-size: 1122px; background-repeat: no-repeat; background-position: -7px 20px;height: fit-content;\">\n\n                <section style=\"float: right; margin-top: 50px;\">\n                        <qrcode [qrdata]=\"QRCode\" [width]=\"256\" [errorCorrectionLevel]=\"'M'\"></qrcode>\n                </section>\n\n                <section style=\" margin: 320px 0px 0px 0px;\">\n\n                        <section>\n\n                                <h1 style=\"text-align: center; font-size: 22px; text-transform: uppercase; font-weight: 500; color: #000; width: 100%;font-family: serif; letter-spacing: 1px;\">\n                                        Certificate of Registration\n                                </h1>\n\n                                <h2 style=\"font-size: 19px; text-transform: uppercase; font-weight: 300; color: #474747;text-align: center;width: 100%\">\n                                        I certify that\n                                </h2>\n\n                                <div\n                                        style=\"border-bottom: 2px dotted; font-size: 15px; text-align: center; width: calc(100% - 35%); margin: 20px auto 0px; font-weight: 700; font-style: italic;padding-bottom: 4px;color: #000;\"\n                                        [innerHTML]=\"certificateData.OrganizationID\">\n                                </div>\n\n                                <p style=\"color: #000; width: 100%; text-align: center; font-size: 17px; line-height: 22px; margin: 28px 0px 25px; font-weight: 300;\">\n                                        has this day been registered as <br />\n\n                                        <b style=\"font-weight: 700;\">a data collector/data processor/data controller</b> under <br />\n\n                                        the Data Protection and Privacy Act, 2019 under the following\n                                </p>\n\n                                <div style=\"color: #000; width: 100%; font-size: 16px; line-height: 22px; margin: 30px 0px 25px; display: flex; flex-direction: row; align-content: center; justify-content: center; align-items: flex-start;\">\n                                        registration number\n                                        <div\n                                                style=\"text-align: center; font-size: 16px;  border-bottom: 2px dotted; padding: 0px 8px 0px; color: #000; margin: -8px 7px 0px; height: 25px; font-style: italic; font-weight: 700; min-width: 243px;\"\n                                                [innerHTML]=\"certificateData.OrgRegNumber\">\n                                        </div>\n                                </div>\n\n                                <p style=\"color: #000; width: 100%;text-align: center;font-size: 17px;line-height: 25px;margin: -25px 0px 25px;font-weight: 300;\">\n                                        This certificate is valid for twelve months from the date of issue.\n                                </p>\n\n                                <!-- <div style=\"color: #000; width: 100%; font-size: 16px; line-height: 27px; margin: 33px 0px 25px; display: flex; flex-direction: row; align-content: center; justify-content: center; align-items: flex-start;\">\n                                        Dated this <div style=\"font-size: 16px; border-bottom: 2px dotted; padding: 0px 20px 0px; color: #000;   font-style: italic; font-weight: bold;margin: -11px 7px 0px;height: 28px;\">{{ certificateData.IssueDate | date : 'dd' }} <sup style=\"font-size: 16px;font-family: none;\">{{ getDateSuperscript() }}</sup></div>\n                                        day of <i style=\"font-size: 16px; border-bottom: 2px dotted; padding: 0px 20px 0px; color: #000; font-style: italic; font-weight: bold; margin: -8px 7px 0px;height: 25px;\">{{ certificateData.IssueDate | date : 'MMMM' }} </i>\n                                        the year <i style=\"font-size: 16px; border-bottom: 2px dotted; padding: 0px 20px 0px; color: #000;   font-style: italic; font-weight: bold;margin: -8px 7px 0px;height: 25px;\">{{ certificateData.IssueDate | date : 'YYYY' }} </i>\n                                </div> -->\n                                <div style=\"color: #000; width: 100%; font-size: 16px; line-height: 27px; margin: 33px 0px 25px; display: flex; flex-direction: row; align-content: center; justify-content: center; align-items: flex-start;\">\n                                        Dated this <div style=\"font-size: 16px; border-bottom: 2px dotted; padding: 0px 20px 0px; color: #000;   font-style: italic; font-weight: bold;margin: -11px 7px 0px;height: 28px;\">{{ certificateData.IssueDate | date : 'dd' }} <sup style=\"font-size: 16px;font-family: none;\">Superscript Date: {{ getDateSuperscript() }}</sup></div>\n                                        day of <i style=\"font-size: 16px; border-bottom: 2px dotted; padding: 0px 20px 0px; color: #000; font-style: italic; font-weight: bold; margin: -8px 7px 0px;height: 25px;\">{{ certificateData.IssueDate | date : 'MMMM' }} <sup style=\"font-size: 16px;font-family: none;\">Superscript Date: {{ getDateSuperscript() }}</sup></i>\n                                        the year <i style=\"font-size: 16px; border-bottom: 2px dotted; padding: 0px 20px 0px; color: #000;   font-style: italic; font-weight: bold;margin: -8px 7px 0px;height: 25px;\">{{ certificateData.IssueDate | date : 'YYYY' }} <sup style=\"font-size: 16px;font-family: none;\">Superscript Date: {{ getDateSuperscript() }}</sup></i>\n                                </div>\n\n\n                                <div style=\"color: #000; width: 100%; font-size: 16px; display: flex; flex-direction: column; align-items: center; margin: 40px 0px 0px; text-align: center;\">\n                                        <div style=\"min-width: 240px; text-align: center;border-bottom: 2px dotted;margin: 0px auto 0px;font-weight: 700;font-style: italic;padding-bottom: 4px;color: #000;\">\n                                                <img src=\"/assets/img/Stella Alibateese.png\" style=\"height: 30px;\" alt=\"\">\n                                        </div>\n                                        <p style=\"font-size: 16px;  color: #000; margin: 8px 0px 1px 0px;font-weight: 600;\">National Personal Data Protection Director</p>\n                                </div>\n\n                                <p style=\"font-size: 14px; width: calc(100% - 68px); text-align: center; color: #000; font-weight: 400; margin: 40px 0px 25px;\">\n                                        This certificate shall remain in force unless revoked by the Personal Data Protection Office\n\n                                </p>\n\n                        </section>\n\n                </section>\n\n        </article>\n</main>\n\n\n","import {HttpClient} from '@angular/common/http';\nimport {AfterContentInit, ChangeDetectorRef, Component, OnDestroy, OnInit, ViewChild} from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {MatDialog} from '@angular/material/dialog';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {forkJoin, Observable, Subscription} from 'rxjs';\n// tslint:disable-next-line:max-line-length\nimport {\n  ApiPayload,\n  Country,\n  CountryOfTransfer,\n  DataCategory,\n  DataProtectionOfficer,\n  DataPurposes,\n  DataSource,\n  DataSubCategory,\n  FileUpload,\n  MainActivity,\n  NatureOfBusinessCat,\n  NatureOfBusinessSubCat,\n  OrganisationCategory,\n  OrganisationType,\n  Sector,\n  SecurityMeasure,\n  ThirdParty,\n  ChildrenDataPurpose\n} from '../../../../services/api.model';\nimport {catchError} from 'rxjs/operators';\nimport {MatCheckboxChange} from '@angular/material/checkbox';\nimport {ApiEndpointsService} from '../../../../services/api-endpoints.service';\nimport {ApiService} from '../../../../services/api.service';\nimport {OrgNoticeComponent} from '../../../../layout/dialogs/org-registration/org-notice/org-notice.component';\nimport {OrgMainActivityComponent} from '../../../../layout/dialogs/org-registration/org-main-activity/org-main-activity.component';\nimport {\n  OrgDataProtectionOfficerComponent\n} from '../../../../layout/dialogs/org-registration/org-data-protection-officer/org-data-protection-officer.component';\nimport {\n  OrgSecurityMeasuresComponent\n} from '../../../../layout/dialogs/org-registration/org-security-measures/org-security-measures.component';\nimport {OrgThirdPartyComponent} from '../../../../layout/dialogs/org-registration/org-third-party/org-third-party.component';\nimport {OrgCountryComponent} from '../../../../layout/dialogs/org-registration/org-country/org-country.component';\nimport {OrgUploadComponent} from '../../../../layout/dialogs/org-upload/org-upload.component';\nimport {OrgForm3DialogComponent} from '../../../../layout/dialogs/org-registration/org-form3-dialog/org-form3-dialog.component';\nimport {\n  OrgRegistrationPreviewDialogComponent\n} from '../../../../layout/dialogs/org-registration/org-registration-preview-dialog/org-registration-preview-dialog.component';\nimport {SuccessfulMessageDialogComponent} from '../../../../layout/dialogs/successful-message-dialog/successful-message-dialog.component';\nimport {BaseFuryForm} from '../../../../../@fury/shared/base-fury-form';\nimport {KeycloakService} from 'keycloak-angular';\nimport {WorkflowServiceService} from '../../../../services/workflow-service.service';\nimport {CompanyRegistrationService} from '../../company-registration.service';\nimport {AuthenticationService} from '../../../../authentication/authentication.service';\nimport {fadeInRightAnimation} from '../../../../../@fury/animations/fade-in-right.animation';\nimport {fadeInUpAnimation} from '../../../../../@fury/animations/fade-in-up.animation';\nimport { ViewPdfDocumentBottomsheetComponent } from '../../../../layout/bottomsheets/view-pdf-document-bottomsheet/view-pdf-document-bottomsheet.component';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { NatureOfBusiness, NewCompanyRegistrationModel } from '../company-registration.model';\nimport { Router } from '@angular/router';\nimport { KeycloakProfile } from 'keycloak-js';\nimport { environment } from '../../../../../environments/environment';\nimport { ComplaintService } from '../../../complaints/complaints.service';\nimport { DownloadPRNReceiptComponent } from '../../../../layout/dialogs/download-prnreceipt/download-prnreceipt.component';\n\n@Component({\n  selector: 'fury-app-register-organisation',\n  templateUrl: './register-organisation.component.html',\n  styleUrls: ['./register-organisation.component.scss'],\n  animations: [fadeInRightAnimation, fadeInUpAnimation]\n})\nexport class RegisterOrganisationComponent extends BaseFuryForm implements  OnInit, OnDestroy, AfterContentInit {\n\n  dialogRef;\n  bottomsheetRef;\n  processing = false;\n  formGeneralInformation: FormGroup;\n  formOrganisationDetails: FormGroup;\n  formPersonalDataHeld: FormGroup;\n  formPurposeRetention: FormGroup;\n  formSecurityMeasures: FormGroup;\n  formThirdParties: FormGroup;\n  formChildrenData: FormGroup;\n  // selectedIndex = 5;\n  showChildrenDataFields = false;\n  selectedIndex = 0;\n  isLinear = true;\n  // isLinear = false;\n  today = new Date();\n  sectors: Sector[];\n  countries: Country[];\n  selected = false;\n  DPOSelected = false;\n  organisationCategories: OrganisationCategory[] = [];\n  selectedOrganisationCategories: OrganisationCategory[] = [];\n  organisationTypes: OrganisationType[];\n  dataSources: DataSource[];\n  selectedDataSources: DataSource[] = [];\n  httpSub: Subscription;\n  MainActivitiesDisplayedColumns: string[] = ['Count', 'MainActivity', 'Actions'];\n  dpoDisplayedColumns: string[] = ['Count', 'Name', 'Telephone', 'Email', 'PhysicalAddress', 'Actions'];\n  securityMeasuresDisplayedColumns: string[] = ['Count', 'SecurityMeasure', 'Actions'];\n  thirdPartyDisplayedColumns: string[] = ['Count', 'NameOfThirdParty', 'Purpose', 'Actions'];\n  countryDisplayedColumns: string[] = ['Count', 'Country', 'Purpose', 'Description', 'Actions'];\n  mainActivities: MainActivity[] = [];\n  mainActivitiesDataSource: MatTableDataSource<MainActivity>;\n  dataProtectionOfficers: DataProtectionOfficer[] = [];\n  dpoDataSource: MatTableDataSource<DataProtectionOfficer>;\n  securityMeasures: SecurityMeasure[] = [];\n  securityMeasureDataSource: MatTableDataSource<SecurityMeasure>;\n  thirdParties: ThirdParty[] = [];\n  childDataPurposes: ChildrenDataPurpose[] = [];\n  selectedChildDataPurposes: ChildrenDataPurpose[] = [];\n  thirdPartyDataSource: MatTableDataSource<ThirdParty>;\n  countriesOfTransfer: CountryOfTransfer[] = [];\n  countriesDataSource: MatTableDataSource<CountryOfTransfer>;\n  selectedDataCategory: DataCategory[] = [];\n  selectedDataSubCategory: DataSubCategory[] = [];\n  dataCategories: DataCategory[];\n  dataPurposes: DataPurposes[];\n  selectedDataPurposes: DataPurposes[] = [];\n  natureOfBusinessCat: NatureOfBusinessCat[] = [];\n  natureOfBusinessSubCat: NatureOfBusinessSubCat[] = [];\n  selectedNatureOfBusinessSubCat: NatureOfBusinessSubCat[] = [];\n  SpecifyTheLaw = false;\n  ServiceOrProductProvided = false;\n  SpecifyLegalObligation = false;\n  document: FileUpload | null;\n  documentForm3: FileUpload | null;\n  proofOfPayment: FileUpload | null;\n  OrganizationType = null;\n  SectorName = null;\n  NatureOfBusinessCat = null;\n  CountryOfIncorporation = null;\n  application: NewCompanyRegistrationModel = new NewCompanyRegistrationModel();\n  public userProfile: KeycloakProfile | null = null;\n  regTrackingNo: any;\n  Organisation_User_ID\n  showPRNDownload = false;\n\n  dataCategory = new FormControl();\n\n  @ViewChild('MainActivityPaginator', { static: false }) MainActivityPaginator: MatPaginator;\n  @ViewChild('MainActivityMatSort', { static: false }) MainActivityMatSort: MatSort;\n  @ViewChild('dpoPaginator', { static: false }) dpoPaginator: MatPaginator;\n  @ViewChild('dpoMatSort', { static: false }) dpoMatSort: MatSort;\n  @ViewChild('securityMeasurePaginator', { static: false }) securityMeasurePaginator: MatPaginator;\n  @ViewChild('securityMeasureMatSort', { static: false }) securityMeasureMatSort: MatSort;\n  @ViewChild('thirdPartyPaginator', { static: false }) thirdPartyPaginator: MatPaginator;\n  @ViewChild('thirdPartyMatSort', { static: false }) thirdPartyMatSort: MatSort;\n  @ViewChild('countryOfTransferPaginator', { static: false }) countryOfTransferPaginator: MatPaginator;\n  @ViewChild('countryOfTransferMatSort', { static: false }) countryOfTransferMatSort: MatSort;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private service: ApiService,\n    private endpoints: ApiEndpointsService,\n    private dialog: MatDialog,\n    private bottomsheet: MatBottomSheet,\n    public authService: KeycloakService,\n    public _auth: AuthenticationService,\n    public _workflowService: WorkflowServiceService,\n    private http: HttpClient,\n    private changeDetector: ChangeDetectorRef,\n    public registrationService: CompanyRegistrationService,\n    public complaintService:ComplaintService,\n    private route: Router,\n  ) {\n    super(\n      authService,\n      _workflowService,\n      registrationService,\n      complaintService\n    );\n\n    // this.regTrackingNo = this.route.getCurrentNavigation().extras.state.regTrackingNo;\n\n    this.service.updatePageTitle(['Organisations', 'New Registration']);\n  }\n\n  ngOnInit(): void {\n    this.formGeneralInformation = this.formBuilder.group({\n      OrganizationName: [{value: this._auth.getOrganisationName(), disabled: true}],\n      DPPActCategory: new FormControl('', [Validators.required]),\n      OrganizationTypeID: new FormControl('', [Validators.required]),\n      CountryOfIncorporation: new FormControl('', [Validators.required]),\n      URSBNumber: new FormControl(''),\n      SectorID: new FormControl('', [Validators.required]),\n      OtherSector: new FormControl('', [Validators.maxLength(50)]),\n      Location: new FormControl('', [Validators.required]),\n      PhoneNumberCode: new FormControl({ value: '', disabled: true }, [Validators.required]),\n      PhoneNumber: new FormControl({ value: '', disabled: true }, [\n        Validators.required,\n        Validators.pattern(/^[0-9 ]+$/),\n      ]),\n      /*PRN:new FormControl({ value: '', disabled: false }, [\n        Validators.required,\n        Validators.pattern(/^[0-9 ]+$/),\n      ]), */\n\n      EmailAddress: new FormControl({ value: '', disabled: true }, [\n        Validators.required,\n        Validators.email\n      ]),\n      // NatureOfBusiness: new FormControl('', [Validators.required]),\n      NatureOfBusinessCat: new FormControl('', [Validators.required]),\n      NatureOfBusinessSubCat: new FormControl('', [Validators.required]),\n    });\n\n    this.formOrganisationDetails = this.formBuilder.group({\n      DPORequired: new FormControl(''),\n      DPOName: new FormControl(''),\n      DPOPhysicalAddress: new FormControl(''),\n      PhoneNumberCode: new FormControl(''),\n      DPOPhoneNumber: new FormControl(''),\n      DPOEmailAddress: new FormControl(''),\n      DPOPositionInOrganisation: new FormControl(''),\n    });\n\n    this.formPersonalDataHeld = this.formBuilder.group({\n      SourceOfDataID: new FormControl('', [Validators.required]),\n    });\n\n    this.formPurposeRetention = this.formBuilder.group({\n      Purpose: new FormControl('', [Validators.required]),\n      SpecifyTheLaw: new FormControl(''),\n      ServiceOrProductProvided: new FormControl(''),\n      SpecifyLegalObligation: new FormControl(''),\n      TotalRecordsAtRegistration: new FormControl('', [Validators.pattern(/^[0-9,]+$/)]),\n      RecordPercentageGrowth: new FormControl('' , [\n        Validators.pattern(/^[0-9,]+$/),\n        Validators.max(100),\n      ]),\n      RetentionPeriod: new FormControl('', [\n        Validators.required,\n        Validators.pattern(/^[0-9,]+$/),\n        Validators.max(100),\n      ]),\n    });\n\n    this.formSecurityMeasures = this.formBuilder.group({\n      RegistrationConsent: new FormControl('', [Validators.required]),\n      RegistrationDoneBy: new FormControl('', [Validators.required, Validators.pattern(/^[a-zA-Z ]+$/)]),\n    });\n\n    this.formChildrenData = this.formBuilder.group({\n      CollectChildrenData: new FormControl('', [Validators.required]),\n      PurposeForCollection: new FormControl(''),\n    });\n\n    this.formThirdParties = this.formBuilder.group({\n      PersonalDataIsForDisclosure: new FormControl('', [Validators.required]),\n      StoreDataOutsideCountry: new FormControl('', [Validators.required]),\n    });\n    this.Listeners();\n  }\n\n  ngAfterContentInit(): void {\n    this.httpSub = this.fetchMultiple()\n    .pipe(catchError(this.service.handleError))\n    .subscribe((responseList) => {\n      this.countries = responseList[0];\n\n      this.organisationCategories = [\n        {\n          OrganisationCategoryId: 1,\n          OrganisationCategoryName: 'Data Controller'\n        },\n        {\n          OrganisationCategoryId: 2,\n          OrganisationCategoryName: 'Data Processor'\n        },\n        {\n          OrganisationCategoryId: 3,\n          OrganisationCategoryName: 'Data Collector'\n        },\n      ];\n\n      this.childDataPurposes = [\n        {\n          ChildDataID: 1,\n          ChildDataPurpose: 'Carried out with prior consent of the parent,guardian, or  any other person having authority to make decisions on behalf of the child '\n        },\n        {\n          ChildDataID: 2,\n          ChildDataPurpose: 'Necessary to comply with the law'\n        },\n        {\n          ChildDataID: 3,\n          ChildDataPurpose: 'For research or statistical purposes'\n        }\n      ]\n\n      this.formGeneralInformation.get('PhoneNumberCode').patchValue('256');\n      this.formOrganisationDetails.get('PhoneNumberCode').patchValue('256');\n\n      this.dataSources = responseList[1];\n\n      this.organisationTypes = responseList[2];\n\n      this.sectors = responseList[3];\n\n      this.dataCategories = responseList[4];\n\n      this.dataPurposes = responseList[5];\n\n      this.natureOfBusinessCat = responseList[6];\n\n      this._loadApplicationDraft(responseList[7]);\n\n      this.processing = false;\n    }, (error) => {\n      this.processing = false;\n      this.service.determineErrorResponse(error);\n    });\n  }\n\n  private Listeners(): void {\n    // STEP ONE\n    this.formGeneralInformation.get('DPPActCategory').valueChanges.subscribe((value) => {\n      const values: number[] = value;\n      this.selectedOrganisationCategories.length = 0;\n\n      this.organisationCategories.filter((item) => {\n        if (values.includes(item.OrganisationCategoryId)) {\n          this.selectedOrganisationCategories.push(item);\n        }\n      });\n    });\n\n    this.formGeneralInformation.get('OrganizationTypeID').valueChanges.subscribe((value) => {\n      if (value !== 4) {\n        this.formGeneralInformation.get('CountryOfIncorporation').setValidators([Validators.required]);\n        this.formGeneralInformation.get('URSBNumber').setValidators([Validators.required]);\n      } else {\n        this.formGeneralInformation.get('CountryOfIncorporation').clearValidators();\n        this.formGeneralInformation.get('CountryOfIncorporation').reset();\n        this.formGeneralInformation.get('URSBNumber').clearValidators();\n        this.formGeneralInformation.get('URSBNumber').reset();\n        this.CountryOfIncorporation = null;\n      }\n\n      this.formGeneralInformation.controls['CountryOfIncorporation'].updateValueAndValidity();\n      this.formGeneralInformation.controls['URSBNumber'].updateValueAndValidity();\n    });\n\n    this.formGeneralInformation.get('SectorID').valueChanges.subscribe((value) => {\n      if (value === 14) {\n        this.formGeneralInformation.get('OtherSector').setValidators([Validators.required]);\n      } else {\n        this.formGeneralInformation.get('OtherSector').clearValidators();\n        this.formGeneralInformation.get('OtherSector').reset();\n      }\n\n      this.formGeneralInformation.controls['OtherSector'].updateValueAndValidity();\n    });\n\n    this.formGeneralInformation.get('NatureOfBusinessCat').valueChanges.subscribe((value) => {\n      this.onNatureOfBusinessCatSelected(value);\n    });\n\n    this.formGeneralInformation.get('NatureOfBusinessSubCat').valueChanges.subscribe((value) => {\n      const values: number[] = value;\n      this.selectedNatureOfBusinessSubCat.length = 0;\n\n      this.natureOfBusinessSubCat.filter((item) => {\n        if (values.includes(item.NatureOfBusinessSubCatId)) {\n          this.selectedNatureOfBusinessSubCat.push(item);\n        }\n      });\n    });\n\n    // STEP TWO\n    this.formOrganisationDetails.get('DPORequired').valueChanges.subscribe((value) => {\n\n      if (value === 'Yes') {\n        this.formOrganisationDetails.get('DPOName').setValidators([Validators.required, Validators.pattern(/^[a-zA-Z ]+$/), ]);\n        this.formOrganisationDetails.get('DPOPhysicalAddress').setValidators([Validators.required]);\n        this.formOrganisationDetails.get('DPOPhoneNumber').setValidators([Validators.required, Validators.pattern(/^[0-9 ]+$/)]);\n        this.formOrganisationDetails.get('DPOEmailAddress').setValidators([Validators.required, Validators.email]);\n        this.formOrganisationDetails.get('DPOPositionInOrganisation').setValidators([Validators.required]);\n      } else {\n        this.formOrganisationDetails.get('DPOName').clearValidators();\n        this.formOrganisationDetails.get('DPOName').reset();\n        this.formOrganisationDetails.get('DPOPhysicalAddress').clearValidators();\n        this.formOrganisationDetails.get('DPOPhysicalAddress').reset();\n        this.formOrganisationDetails.get('DPOPhoneNumber').clearValidators();\n        this.formOrganisationDetails.get('DPOPhoneNumber').reset();\n        this.formOrganisationDetails.get('DPOEmailAddress').clearValidators();\n        this.formOrganisationDetails.get('DPOEmailAddress').reset();\n        this.formOrganisationDetails.get('DPOPositionInOrganisation').clearValidators();\n        this.formOrganisationDetails.get('DPOPositionInOrganisation').reset();\n      }\n\n      this.formOrganisationDetails.controls['DPOName'].updateValueAndValidity();\n      this.formOrganisationDetails.controls['DPOPhysicalAddress'].updateValueAndValidity();\n      this.formOrganisationDetails.controls['DPOPhoneNumber'].updateValueAndValidity();\n      this.formOrganisationDetails.controls['DPOEmailAddress'].updateValueAndValidity();\n      this.formOrganisationDetails.controls['DPOPositionInOrganisation'].updateValueAndValidity();\n    });\n\n    // STEP THREE\n    this.formPersonalDataHeld.get('SourceOfDataID').valueChanges.subscribe((value) => {\n      const values: number[] = value;\n      this.selectedDataSources.length = 0;\n\n      this.dataSources.filter((item) => {\n        if (values.includes(item.DataSourceID)) {\n          this.selectedDataSources.push(item);\n        }\n      });\n    });\n\n    ///CHILDREN DATA PURPOSES\n\n    this.formChildrenData.get('PurposeForCollection').valueChanges.subscribe((value) => {\n      const values: number[] = value;\n      this.selectedChildDataPurposes.length = 0;\n\n      this.childDataPurposes.filter((item) => {\n        if (values.includes(item.ChildDataID)) {\n          this.selectedChildDataPurposes.push(item);\n        }\n      });\n\n      console.log(this.selectedChildDataPurposes);\n    });\n\n    // STEP FOUR\n    this.formPurposeRetention.get('Purpose').valueChanges.subscribe((value) => {\n      const values: number[] = value;\n\n      this.selectedDataPurposes.length = 0;\n\n      // Reset all the fields first\n      this.SpecifyTheLaw = false;\n      this.ServiceOrProductProvided = false;\n      this.SpecifyLegalObligation = false;\n      this.formPurposeRetention.get('SpecifyTheLaw').clearValidators();\n      this.formPurposeRetention.get('SpecifyTheLaw').reset();\n      this.formPurposeRetention.get('ServiceOrProductProvided').clearValidators();\n      this.formPurposeRetention.get('ServiceOrProductProvided').reset();\n      this.formPurposeRetention.get('SpecifyLegalObligation').clearValidators();\n      this.formPurposeRetention.get('SpecifyLegalObligation').reset();\n\n      values.filter((item) => {\n        if (item === 1) {\n          this.SpecifyTheLaw = true;\n          this.formPurposeRetention.get('SpecifyTheLaw').setValidators([Validators.required]);\n        }\n\n        if (item === 3) {\n          this.ServiceOrProductProvided = true;\n          this.formPurposeRetention.get('ServiceOrProductProvided').setValidators([Validators.required]);\n        }\n\n        if (item === 6) {\n          this.SpecifyLegalObligation = true;\n          this.formPurposeRetention.get('SpecifyLegalObligation').setValidators([Validators.required]);\n        }\n      });\n\n      this.formPurposeRetention.controls['SpecifyTheLaw'].updateValueAndValidity();\n      this.formPurposeRetention.controls['ServiceOrProductProvided'].updateValueAndValidity();\n      this.formPurposeRetention.controls['SpecifyLegalObligation'].updateValueAndValidity();\n\n      this.dataPurposes.filter((item) => {\n        if (values.includes(item.DataPurposeID)) {\n          this.selectedDataPurposes.push(item);\n        }\n      });\n\n      this.changeDetector.detectChanges();\n    });\n\n    this.formPurposeRetention.get('RecordPercentageGrowth').valueChanges.subscribe((value) => {\n\n      if (value > 100) {\n        this.formPurposeRetention.get('RecordPercentageGrowth').patchValue(100);\n      }\n\n      this.changeDetector.detectChanges();\n    });\n\n    this.formPurposeRetention.get('RetentionPeriod').valueChanges.subscribe((value) => {\n\n      if (value > 100) {\n        this.formPurposeRetention.get('RetentionPeriod').patchValue(100);\n      }\n\n      this.changeDetector.detectChanges();\n    });\n\n    // STEP FIVE\n    this.formThirdParties.get('PersonalDataIsForDisclosure').valueChanges.subscribe((value) => {\n      this.thirdParties.length = 0;\n    });\n\n    this.formThirdParties.get('StoreDataOutsideCountry').valueChanges.subscribe((value) => {\n      this.countriesOfTransfer.length = 0;\n    });\n  }\n\n  private onShowNotice(): void {\n    this.dialogRef = this.dialog.open(OrgNoticeComponent, {\n      panelClass: ['organisation-data-protection-officer-dialog', 'dialogs'],\n      disableClose: true,\n    });\n\n    this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: DataProtectionOfficer }) => {\n\n    });\n  }\n\n  getOrganizationNameErrorMessage(): string {\n    return this.formGeneralInformation.get('OrganizationName').hasError('required') ? 'Please enter a value' : '';\n  }\n\n  getURSBNumberErrorMessage(): string {\n    return this.formGeneralInformation.get('URSBNumber').hasError('required') ? 'Please enter a value' : '';\n  }\n\n  getSelectErrorMessage(): string {\n    return this.formGeneralInformation.get('DPPActCategory').hasError('required')\n    || this.formGeneralInformation.get('OrganizationTypeID').hasError('required')\n    || this.formGeneralInformation.get('CountryOfIncorporation').hasError('required')\n    || this.formGeneralInformation.get('SectorID').hasError('required')\n    || this.formGeneralInformation.get('NatureOfBusinessCat').hasError('required')\n    || this.formGeneralInformation.get('NatureOfBusinessSubCat').hasError('required')\n    || this.formPersonalDataHeld.get('SourceOfDataID').hasError('required')\n    || this.formPurposeRetention.get('Purpose').hasError('required')\n    ? 'Please choose a value' : '';\n  }\n\n  getTelephoneNumberErrorMessage(): string {\n    return this.formGeneralInformation.get('PhoneNumber').hasError('required') ? 'Please enter a value' :\n    this.formGeneralInformation.get('PhoneNumber').hasError('pattern') ? 'Wrong Phone number' : '';\n  }\n\n  getEmailAddressErrorMessage(): string {\n    return this.formGeneralInformation.get('EmailAddress').hasError('required') ? 'Please enter a value' :\n    this.formGeneralInformation.get('EmailAddress').hasError('email') ? 'Wrong Email Address.' : '';\n  }\n\n  getOtherSectorErrorMessage(): string {\n    return this.formGeneralInformation.get('OtherSector').hasError('required') ? 'Please enter a value' : '';\n  }\n\n  getLocationErrorMessage(): string {\n    return this.formGeneralInformation.get('Location').hasError('required') ? 'Please enter a location' : '';\n  }\n\n  getDPONameErrorMessage(): string {\n    return this.formOrganisationDetails.get('DPOName').hasError('required') ? 'Please enter a value' :\n    this.formOrganisationDetails.get('DPOName').hasError('pattern') ? 'Please enter a correct name' : '';\n  }\n\n  getDPOPhysicalAddressErrorMessage(): string {\n    return this.formOrganisationDetails.get('DPOPhysicalAddress').hasError('required') ? 'Please enter a location' : '';\n  }\n\n  getDPOPhoneNumberErrorMessage(): string {\n    return this.formOrganisationDetails.get('DPOPhoneNumber').hasError('required') ? 'Please enter a value' :\n    this.formOrganisationDetails.get('DPOPhoneNumber').hasError('pattern') ? 'Wrong Phone number' : '';\n  }\n\n  getDPOEmailAddressErrorMessage(): string {\n    return this.formOrganisationDetails.get('DPOEmailAddress').hasError('required') ? 'Please enter a value' :\n    this.formOrganisationDetails.get('DPOEmailAddress').hasError('email') ? 'Wrong Email Address.' : '';\n  }\n\n  getDPOPositionInOrganisationErrorMessage(): string {\n    return this.formOrganisationDetails.get('DPOPositionInOrganisation').hasError('required') ? 'Please enter a value' : '';\n  }\n\n  getRequiredErrorMessage(): string {\n    return this.formPurposeRetention.get('SpecifyTheLaw').hasError('required')\n    || this.formPurposeRetention.get('ServiceOrProductProvided').hasError('required')\n    || this.formPurposeRetention.get('SpecifyLegalObligation').hasError('required')\n    ? 'Please enter a value' : '';\n  }\n\n  getPatternErrorMessage(): string {\n    return this.formPurposeRetention.get('TotalRecordsAtRegistration').hasError('pattern')\n    ? 'Please enter correct information' : '';\n  }\n\n  getRetentionPeriodErrorMessage(): string {\n    return this.formPurposeRetention.get('RetentionPeriod').hasError('required') ? 'Please enter a value' :\n    this.formPurposeRetention.get('RetentionPeriod').hasError('max') ? 'Maximum of 100' :\n    this.formPurposeRetention.get('RetentionPeriod').hasError('pattern') ? 'Not valid' : '';\n  }\n\n  getRecordPercentageGrowthErrorMessage(): string {\n    return this.formPurposeRetention.get('RecordPercentageGrowth').hasError('max') ? 'Maximum of 100' :\n    this.formPurposeRetention.get('RecordPercentageGrowth').hasError('pattern') ? 'Not valid' : '';\n  }\n\n  getCheckboxErrorMessage(): string {\n    return this.formSecurityMeasures.get('RegistrationConsent').hasError('max') ? 'This field is required' : '';\n  }\n\n  getRegistrationDoneByErrorMessage(): string {\n    return this.formSecurityMeasures.get('RegistrationDoneBy').hasError('required') ? 'Please enter a value' :\n    this.formSecurityMeasures.get('RegistrationDoneBy').hasError('pattern') ? 'Please enter a correct name' : '';\n  }\n\n  onAddMainActivity(): void {\n    this.dialogRef = this.dialog.open(OrgMainActivityComponent, {\n      panelClass: ['organisation-main-activity-dialog', 'dialogs'],\n      disableClose: true,\n    });\n\n    this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: MainActivity }) => {\n      if (result.status) {\n          let found = false;\n          this.mainActivities.filter((activity) => {\n            if (activity.Activity === result.row.Activity) {\n              found = true;\n            }\n          });\n\n          if (found) {\n            this.service.openSnackBar('Sorry, this record already exists', 'error-lg');\n          } else {\n            this.mainActivities.push(result.row);\n          }\n\n        this.mainActivitiesDataSource = new MatTableDataSource(this.mainActivities);\n\n        setTimeout(() => {\n          this.mainActivitiesDataSource.paginator = this.MainActivityPaginator;\n          this.mainActivitiesDataSource.sort = this.MainActivityMatSort;\n        });\n      }\n    });\n  }\n\n  onEditMainActivity(row: MainActivity): void {\n    this.dialogRef = this.dialog.open(OrgMainActivityComponent, {\n      panelClass: ['organisation-main-activity-dialog', 'dialogs'],\n      disableClose: true,\n      data: { row }\n    });\n\n    this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: MainActivity }) => {\n      if (result.status) {\n\n        this.mainActivities[this.mainActivities.indexOf(row)] = {\n          Activity: result.row.Activity,\n        };\n\n        this.mainActivitiesDataSource = new MatTableDataSource(this.mainActivities);\n\n        setTimeout(() => {\n          this.mainActivitiesDataSource.paginator = this.MainActivityPaginator;\n          this.mainActivitiesDataSource.sort = this.MainActivityMatSort;\n        });\n      }\n    });\n  }\n\n  onRemoveMainActivity(row: MainActivity): void {\n    this.mainActivities.splice(this.mainActivities.indexOf(row), 1);\n\n    this.mainActivitiesDataSource = new MatTableDataSource(this.mainActivities);\n\n    setTimeout(() => {\n      this.mainActivitiesDataSource.paginator = this.MainActivityPaginator;\n      this.mainActivitiesDataSource.sort = this.MainActivityMatSort;\n    });\n  }\n\n  onAddADPO(): void {\n    this.dialogRef = this.dialog.open(OrgDataProtectionOfficerComponent, {\n      panelClass: ['organisation-data-protection-officer-dialog', 'dialogs'],\n      disableClose: true,\n    });\n\n    this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: DataProtectionOfficer }) => {\n      if (result.status) {\n        let found = false;\n        this.dataProtectionOfficers.filter((dpo) => {\n          if (dpo.EmailAddress === result.row.EmailAddress || dpo.PhoneNumber === result.row.PhoneNumber) {\n            found = true;\n          }\n        });\n\n        if (found) {\n          this.service.openSnackBar('Sorry, this record already exists', 'error-lg');\n        } else {\n          this.dataProtectionOfficers.push(result.row);\n        }\n\n        this.dpoDataSource = new MatTableDataSource(this.dataProtectionOfficers);\n\n        setTimeout(() => {\n          this.dpoDataSource.paginator = this.dpoPaginator;\n          this.dpoDataSource.sort = this.dpoMatSort;\n        });\n      }\n    });\n  }\n\n  onEditDPO(row: DataProtectionOfficer): void {\n    this.dialogRef = this.dialog.open(OrgDataProtectionOfficerComponent, {\n      panelClass: ['organisation-data-protection-officer-dialog', 'dialogs'],\n      disableClose: true,\n      data: { row }\n    });\n\n    this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: DataProtectionOfficer }) => {\n      if (result.status) {\n\n        this.dataProtectionOfficers[this.dataProtectionOfficers.indexOf(row)] = {\n          Name: result.row.Name,\n          EmailAddress: result.row.EmailAddress,\n          PhoneNumber: result.row.PhoneNumber,\n          PhysicalAddress: result.row.PhysicalAddress,\n          PositionInOrganisation: result.row.PositionInOrganisation,\n        };\n\n        this.dpoDataSource = new MatTableDataSource(this.dataProtectionOfficers);\n\n        setTimeout(() => {\n          this.dpoDataSource.paginator = this.dpoPaginator;\n          this.dpoDataSource.sort = this.dpoMatSort;\n        });\n      }\n    });\n  }\n\n  onRemoveDPO(row: DataProtectionOfficer): void {\n    this.dataProtectionOfficers.splice(this.dataProtectionOfficers.indexOf(row), 1);\n\n    this.dpoDataSource = new MatTableDataSource(this.dataProtectionOfficers);\n\n    setTimeout(() => {\n      this.dpoDataSource.paginator = this.dpoPaginator;\n      this.dpoDataSource.sort = this.dpoMatSort;\n    });\n  }\n\n  onAddSecurityMeasure(): void {\n    this.dialogRef = this.dialog.open(OrgSecurityMeasuresComponent, {\n      panelClass: ['organisation-security-measure-dialog', 'dialogs'],\n      disableClose: true,\n    });\n\n    this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: SecurityMeasure }) => {\n      if (result.status) {\n        let found = false;\n        this.securityMeasures.filter((item) => {\n          if (item.SecurityMeasure === result.row.SecurityMeasure) {\n            found = true;\n          }\n        });\n\n        if (found) {\n          this.service.openSnackBar('Sorry, this record already exists', 'error-lg');\n        } else {\n          this.securityMeasures.push(result.row);\n        }\n\n        this.securityMeasureDataSource = new MatTableDataSource(this.securityMeasures);\n\n        setTimeout(() => {\n          this.securityMeasureDataSource.paginator = this.securityMeasurePaginator;\n          this.securityMeasureDataSource.sort = this.securityMeasureMatSort;\n        });\n      }\n    });\n  }\n\n  onEditSecurityMeasure(row: SecurityMeasure): void {\n    this.dialogRef = this.dialog.open(OrgSecurityMeasuresComponent, {\n      panelClass: ['organisation-security-measure-dialog', 'dialogs'],\n      disableClose: true,\n      data: { row }\n    });\n\n    this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: SecurityMeasure }) => {\n      if (result.status) {\n\n        this.securityMeasures[this.securityMeasures.indexOf(row)] = {\n          SecurityMeasure: result.row.SecurityMeasure,\n        };\n\n        this.securityMeasureDataSource = new MatTableDataSource(this.securityMeasures);\n\n        setTimeout(() => {\n          this.securityMeasureDataSource.paginator = this.securityMeasurePaginator;\n          this.securityMeasureDataSource.sort = this.securityMeasureMatSort;\n        });\n      }\n    });\n  }\n\n  onRemoveSecurityMeasure(row: SecurityMeasure): void {\n    this.securityMeasures.splice(this.securityMeasures.indexOf(row), 1);\n\n    this.securityMeasureDataSource = new MatTableDataSource(this.securityMeasures);\n\n    setTimeout(() => {\n      this.securityMeasureDataSource.paginator = this.securityMeasurePaginator;\n      this.securityMeasureDataSource.sort = this.securityMeasureMatSort;\n    });\n  }\n\n  onAddAThirdParty(): void {\n    this.dialogRef = this.dialog.open(OrgThirdPartyComponent, {\n      panelClass: ['organisation-third-party-dialog', 'dialogs'],\n      disableClose: true,\n    });\n\n    this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: ThirdParty }) => {\n      if (result.status) {\n          let found = false;\n\n          this.thirdParties.filter((party) => {\n            if (party.ThirdPartyName === result.row.ThirdPartyName) {\n              found = true;\n            }\n          });\n\n          if (found) {\n            this.service.openSnackBar('Sorry, this record already exists', 'error-lg');\n          } else {\n            this.thirdParties.push(result.row);\n          }\n\n        this.thirdPartyDataSource = new MatTableDataSource(this.thirdParties);\n\n        setTimeout(() => {\n          this.thirdPartyDataSource.paginator = this.thirdPartyPaginator;\n          this.thirdPartyDataSource.sort = this.thirdPartyMatSort;\n        });\n      }\n    });\n  }\n\n  onEditThirdParty(row: ThirdParty): void {\n    this.dialogRef = this.dialog.open(OrgThirdPartyComponent, {\n      panelClass: ['organisation-third-party-dialog', 'dialogs'],\n      disableClose: true,\n      data: { row }\n    });\n\n    this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: ThirdParty }) => {\n      if (result.status) {\n\n        this.thirdParties[this.thirdParties.indexOf(row)] = {\n          ThirdPartyName: result.row.ThirdPartyName,\n          Purpose: result.row.Purpose,\n        };\n\n        this.thirdPartyDataSource = new MatTableDataSource(this.thirdParties);\n\n        setTimeout(() => {\n          this.thirdPartyDataSource.paginator = this.thirdPartyPaginator;\n          this.thirdPartyDataSource.sort = this.thirdPartyMatSort;\n        });\n      }\n    });\n  }\n\n  onRemoveThirdParty(row: ThirdParty): void {\n    this.thirdParties.splice(this.thirdParties.indexOf(row), 1);\n\n    this.thirdPartyDataSource = new MatTableDataSource(this.thirdParties);\n\n    setTimeout(() => {\n      this.thirdPartyDataSource.paginator = this.thirdPartyPaginator;\n      this.thirdPartyDataSource.sort = this.thirdPartyMatSort;\n    });\n  }\n\n  onAddACountry(): void {\n    this.dialogRef = this.dialog.open(OrgCountryComponent, {\n      panelClass: ['organisation-country-dialog', 'dialogs'],\n      disableClose: true,\n    });\n\n    this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: CountryOfTransfer }) => {\n      if (result.status) {\n          let found = false;\n          this.countriesOfTransfer.filter((party) => {\n            if (party.Country === result.row.Country) {\n              found = true;\n            }\n          });\n\n          if (found) {\n            this.service.openSnackBar('Sorry, this record already exists', 'error-lg');\n          } else {\n            this.countriesOfTransfer.push(result.row);\n          }\n\n        this.countriesDataSource = new MatTableDataSource(this.countriesOfTransfer);\n\n        setTimeout(() => {\n          this.countriesDataSource.paginator = this.countryOfTransferPaginator;\n          this.countriesDataSource.sort = this.countryOfTransferMatSort;\n        });\n      }\n    });\n  }\n\n  onEditCountry(row: CountryOfTransfer): void {\n    this.dialogRef = this.dialog.open(OrgCountryComponent, {\n      panelClass: ['organisation-country-dialog', 'dialogs'],\n      disableClose: true,\n      data: { row }\n    });\n\n    this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: CountryOfTransfer }) => {\n      if (result.status) {\n        this.countriesOfTransfer[this.countriesOfTransfer.indexOf(row)] = {\n          CountryID: result.row.CountryID,\n          Country: result.row.Country,\n          Purpose: result.row.Purpose,\n          Description: result.row.Description,\n        };\n\n        this.countriesDataSource = new MatTableDataSource(this.countriesOfTransfer);\n\n        setTimeout(() => {\n          this.countriesDataSource.paginator = this.countryOfTransferPaginator;\n          this.countriesDataSource.sort = this.countryOfTransferMatSort;\n        });\n      }\n    });\n  }\n\n  onRemoveCountry(row: CountryOfTransfer): void {\n    this.countriesOfTransfer.splice(this.countriesOfTransfer.indexOf(row), 1);\n\n    this.countriesDataSource = new MatTableDataSource(this.countriesOfTransfer);\n\n    setTimeout(() => {\n      this.countriesDataSource.paginator = this.countryOfTransferPaginator;\n      this.countriesDataSource.sort = this.countryOfTransferMatSort;\n    });\n  }\n\n  onUploadAttachments(): void {\n    this.dialogRef = this.dialog.open(OrgUploadComponent, {\n      panelClass: ['organisation-upload-dialog', 'dialogs'],\n      disableClose: true,\n      data: {\n        multiple: false\n      }\n    });\n\n    this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: FileUpload }) => {\n      console.log('row:', result.row);\n\n      if (result.status) {\n        this.document = result.row;\n      }\n    });\n  }\n\n  onRemoveDocument(): void {\n    this.document = null;\n  }\n\n  onDownloadForm3(): void {\n    this.dialogRef = this.dialog.open(OrgForm3DialogComponent, {\n      panelClass: ['organisation-form-3-dialog', 'dialogs'],\n      disableClose: true,\n      data: {\n        OrganisationName: this.formGeneralInformation.get('OrganizationName').value,\n        PhysicalAddress: this.formGeneralInformation.get('Location').value,\n        Date: new Date()\n      }\n    });\n  }\n\n  onUploadProofOfPayment(): void {\n    this.dialogRef = this.dialog.open(OrgUploadComponent, {\n      panelClass: ['organisation-upload-dialog', 'dialogs'],\n      disableClose: true,\n      data: {\n        multiple: false\n      }\n    });\n\n    this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: FileUpload }) => {\n\n      if (result.status) {\n        this.proofOfPayment = result.row;\n      }\n    });\n  }\n\n  onRemoveProofOfPaymen(): void {\n    this.proofOfPayment = null;\n  }\n\n  onUploadForm3Attachments(): void {\n    this.dialogRef = this.dialog.open(OrgUploadComponent, {\n      panelClass: ['organisation-upload-dialog', 'dialogs'],\n      disableClose: true,\n      data: {\n        multiple: false\n      }\n    });\n\n    this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: FileUpload }) => {\n      if (result.status) {\n        this.documentForm3 = result.row;\n      }\n    });\n  }\n\n  onRemoveForm3Document(): void {\n    this.documentForm3 = null;\n  }\n\n  onChangeSubCategory(event: MatCheckboxChange, SubCategory: DataSubCategory): void {\n    if (event.checked) {\n      this.selectedDataSubCategory.push(SubCategory);\n    } else {\n      this.selectedDataSubCategory.splice(this.selectedDataSubCategory.indexOf(SubCategory), 1);\n    }\n  }\n\n  private fetchMultiple(): Observable<any[]> {\n    this.processing = true;\n    const reqCountries = this.http.get<ApiPayload>(this.endpoints.countries);\n    const reqDataSources = this.http.get<ApiPayload>(this.endpoints.dataSources);\n    const reqOrganisationType = this.http.get<ApiPayload>(this.endpoints.organisationType);\n    const reqSector = this.http.get<ApiPayload>(this.endpoints.sector);\n    const reqDataSubcategories = this.http.get<ApiPayload>(this.endpoints.dataSubcategories);\n    const reqDataPurpose = this.http.get<ApiPayload>(this.endpoints.dataPurpose);\n    const reqNatureOfBusiness = this.http.get<ApiPayload>(this.endpoints.natureOfBusiness);\n    const reqOrgRegSaveDraft = this.http.get<ApiPayload>(this.endpoints.orgRegSaveDraft, { params: { OrganizationAccountUserID: this._auth.getOrganisationID() } });\n\n    // tslint:disable-next-line:max-line-length\n    return forkJoin([\n      reqCountries, \n      reqDataSources, \n      reqOrganisationType, \n      reqSector, \n      reqDataSubcategories, \n      reqDataPurpose, \n      reqNatureOfBusiness,\n      reqOrgRegSaveDraft\n    ]);\n  }\n\n  private getFormData(): any {\n\n    return {\n      OrganisationUserID: +this._auth.getOrganisationID(),\n      OrganisationName: this.formGeneralInformation.get('OrganizationName').value,\n      OrganisationCategory: this.selectedOrganisationCategories ? this.selectedOrganisationCategories : [],\n      OrganizationTypeID: this.formGeneralInformation.get('OrganizationTypeID').value ? this.formGeneralInformation.get('OrganizationTypeID').value : 0,\n      CountryOfIncorporation: this.formGeneralInformation.get('CountryOfIncorporation').value ? this.formGeneralInformation.get('CountryOfIncorporation').value : 0,\n      URSBNumber: this.formGeneralInformation.get('URSBNumber').value ? this.formGeneralInformation.get('URSBNumber').value : '',\n      SectorID: this.formGeneralInformation.get('SectorID').value ? this.formGeneralInformation.get('SectorID').value : 0,\n      OtherSector: this.formGeneralInformation.get('OtherSector').value ? this.formGeneralInformation.get('OtherSector').value : '',\n      Location: this.formGeneralInformation.get('Location').value ? this.formGeneralInformation.get('Location').value : '',\n      // tslint:disable-next-line:max-line-length\n      // PhoneNumber: this.formGeneralInformation.get('PhoneNumberCode').value + (this.formGeneralInformation.get('PhoneNumber').value).replaceAll(' ', ''),\n      // EmailAddress: this.formGeneralInformation.get('EmailAddress').value,\n      PhoneNumber: this.application.PhoneNumber,\n      EmailAddress: this.application.EmailAddress,\n      NatureOfBusinessCatID: this.formGeneralInformation.get('NatureOfBusinessCat').value ? this.formGeneralInformation.get('NatureOfBusinessCat').value : 0,\n      NatureOfBusiness: this.selectedNatureOfBusinessSubCat ? this.selectedNatureOfBusinessSubCat : [],\n      \n      DPORequired: this.formOrganisationDetails.get('DPORequired').value,\n      DPOName: this.formOrganisationDetails.get('DPORequired').value === 'Yes' ? this.formOrganisationDetails.get('DPOName').value : '',\n      DPOPhysicalAddress: this.formOrganisationDetails.get('DPORequired').value === 'Yes' ? this.formOrganisationDetails.get('DPOPhysicalAddress').value : '',\n      // tslint:disable-next-line:max-line-length\n      DPOPhoneNumber: this.formOrganisationDetails.get('DPOPhoneNumber').value ? this.formOrganisationDetails.get('PhoneNumberCode').value + (this.formOrganisationDetails.get('DPOPhoneNumber').value).replaceAll(' ', '') : '',\n      // tslint:disable-next-line:max-line-length\n      DPOEmailAddress: this.formOrganisationDetails.get('DPORequired').value === 'Yes' ? this.formOrganisationDetails.get('DPOEmailAddress').value : '',\n      DPOPositionInOrganisation: this.formOrganisationDetails.get('DPORequired').value === 'Yes' ? this.formOrganisationDetails.get('DPOPositionInOrganisation').value : '',\n      SourceOfDataID: this.selectedDataSources ? this.selectedDataSources : [],\n      PersonalDataCollected: this.selectedDataSubCategory ? this.selectedDataSubCategory : [],\n      Purpose: this.selectedDataPurposes ? this.selectedDataPurposes : [],\n      SpecifyTheLaw: this.formPurposeRetention.get('SpecifyTheLaw').value ? this.formPurposeRetention.get('SpecifyTheLaw').value : '',\n      ServiceOrProductProvided: this.formPurposeRetention.get('ServiceOrProductProvided').value ? this.formPurposeRetention.get('ServiceOrProductProvided').value : '',\n      SpecifyLegalObligation: this.formPurposeRetention.get('SpecifyLegalObligation').value ? this.formPurposeRetention.get('SpecifyLegalObligation').value : '',\n      // tslint:disable-next-line:max-line-length\n      TotalRecordsAtRegistration: this.formPurposeRetention.get('TotalRecordsAtRegistration').value ? parseInt(this.formPurposeRetention.get('TotalRecordsAtRegistration').value, 10) : 0,\n      RecordPercentageGrowth: this.formPurposeRetention.get('RecordPercentageGrowth').value ? parseInt(this.formPurposeRetention.get('RecordPercentageGrowth').value, 10) : 0,\n      // RetentionPeriod: this.formPurposeRetention.get('RetentionPeriod').value,\n      RetentionPeriod: this.formPurposeRetention.get('RetentionPeriod').value ? parseInt(this.formPurposeRetention.get('RetentionPeriod').value, 10) : 0,\n      PersonalDataIsForDisclosure: this.formThirdParties.get('PersonalDataIsForDisclosure').value ? this.formThirdParties.get('PersonalDataIsForDisclosure').value : '',\n      ThirdParties: this.thirdParties ? this.thirdParties : [],\n      StoreDataOutsideCountry: this.formThirdParties.get('StoreDataOutsideCountry').value ? this.formThirdParties.get('StoreDataOutsideCountry').value : '',\n      Countries: this.countriesOfTransfer ? this.countriesOfTransfer : [],\n      SecurityMeasures: this.securityMeasures ? this.securityMeasures : [],\n      Attachment: this.document ? this.document.Base64 : '',\n      Form3Attachment: this.documentForm3 ? this.documentForm3.Base64 : '',\n      RegistrationConsent: this.formSecurityMeasures.get('RegistrationConsent').value ? true : false,\n      RegistrationDoneBy: this.formSecurityMeasures.get('RegistrationDoneBy').value ? this.formSecurityMeasures.get('RegistrationDoneBy').value : '',\n      //PRN : this.formGeneralInformation.get('PRN').value ? this.formGeneralInformation.get('PRN').value : '',\n      ChildrenDataPurpose: this.selectedChildDataPurposes ? this.selectedChildDataPurposes : [],\n      CollectChildrenData: this.formChildrenData.get('CollectChildrenData').value ? this.formChildrenData.get('CollectChildrenData').value : '',\n      ProofOfPayment: this.proofOfPayment ? this.proofOfPayment.Base64 : '',\n    \n    };\n  }\n\n  onNatureOfBusinessCatSelected(NatureOfBusinessCatId): void {\n    // tslint:disable-next-line:max-line-length\n    this.httpSub = this.http.get<NatureOfBusinessSubCat[]>(this.endpoints.natureOfBusiness + '?NatureOfBusinessSubCat=' + NatureOfBusinessCatId)\n    .pipe(catchError(this.service.handleError))\n    .subscribe((response) => {\n\n      this.natureOfBusinessSubCat = response;\n\n    }, (error) => {\n      this.processing = false;\n      this.service.determineErrorResponse(error);\n    });\n  }\n\n  onPreviewForm(download: boolean): void {\n    this.dialogRef = this.dialog.open(OrgRegistrationPreviewDialogComponent, {\n      panelClass: ['organisation-registration-preview-form-3-dialog', 'dialogs'],\n      disableClose: true,\n      data: {\n        download: download,\n        row: this.getFormData(),\n        Attachment: this.document ? this.document : '',\n        Form3: this.documentForm3 ? this.documentForm3 : '',\n        ProofOfPayment: this.proofOfPayment ? this.proofOfPayment : '',\n        OrganizationType: this.OrganizationType,\n        // tslint:disable-next-line:max-line-length\n        Sector: this.formGeneralInformation.get('OtherSector').value ? this.formGeneralInformation.get('OtherSector').value : this.SectorName,\n        NatureOfBusinessCat: this.NatureOfBusinessCat,\n        CountryOfIncorporation: this.CountryOfIncorporation\n      }\n    });\n  }\n\n  onSubmit(): void {\n    this.processing = true;\n    console.log('save the registration information:', this.getFormData());\n\n    this.httpSub = this.http.post<ApiPayload>(this.endpoints.orgRegistration, this.getFormData())\n    .pipe(catchError(this.service.handleError))\n    .subscribe((response) => {\n      this.dialogRef = this.dialog.open(SuccessfulMessageDialogComponent, {\n        panelClass: ['successful-message-dialog', 'dialogs'],\n        disableClose: true,\n        data: {\n          title: response.message['title'],\n          message: response.message['body'],\n          status: response.code === 200 ? true : false,\n        }\n      });\n\n      this.dialogRef.afterClosed().subscribe(() => {\n        this.route.navigate(['/company-registration/find']);\n      });\n\n      this.processing = false;\n    }, (error) => {\n      this.processing = false;\n\n      if (error.error.message) {\n        this.dialogRef = this.dialog.open(SuccessfulMessageDialogComponent, {\n          panelClass: ['successful-message-dialog', 'dialogs'],\n          disableClose: true,\n          data: {\n            title: error.error.message['title'] ? error.error.message['title'] : 'Operation Failed',\n            message: error.error.message['body'] ? error.error.message['body'] : environment.technicalErrorResponse,\n            status: false,\n          }\n        });\n      } else {\n        this.service.determineErrorResponse(error);\n      }\n    });\n  }\n\n  onReadDocument(document: FileUpload): void {\n    this.bottomsheetRef = this.bottomsheet.open(ViewPdfDocumentBottomsheetComponent, {\n      disableClose: true,\n      panelClass: ['view-pdf-document-bottomsheet', 'bottomsheets'],\n      data: {\n        url: document.Base64,\n        title: document.Name\n      }\n    });      \n  }\n\n  private _loadApplicationDraft(response: ApiPayload): void {\n    this.application = response.data;\n    console.log(this.application);\n    this.processing = false;\n\n    this.regTrackingNo = response['RegTrackingNo'];\n\n    if (!this.application) {      \n      this.dialogRef = this.dialog.open(SuccessfulMessageDialogComponent, {\n        panelClass: ['successful-message-dialog', 'dialogs'],\n        disableClose: true,\n        data: {\n          title: 'Application Already Submitted',\n          message: 'Your application has already been submitted. Please close the window to view application',\n          status: false,\n        }\n      });\n\n      this.dialogRef.afterClosed().subscribe(() => {\n        // console.log('regTrackingNo:', this.regTrackingNo);\n        this.route.navigate(\n          ['/company-registration/view'],\n          { state: { regTrackingNo: this.regTrackingNo }}\n        ).then();\n      });      \n\n    } else {\n\n      if (this.application.OrganisationCategory) {\n        let organisationCategories: any = this.application.OrganisationCategory;\n        let cat: number[] = [];\n    \n        organisationCategories.filter((item) => {\n          cat.push(item.OrganisationCategoryId);\n        });\n    \n        this.formGeneralInformation.get('DPPActCategory').patchValue(cat);\n      }\n  \n      this.formGeneralInformation.get('OrganizationTypeID').patchValue(this.application.OrganizationTypeID);\n      this.formGeneralInformation.get('OrganizationName').patchValue(this.application.OrganisationName);\n      this.formGeneralInformation.get('URSBNumber').patchValue(this.application.URSBNumber);\n      this.formGeneralInformation.get('SectorID').patchValue(this.application.SectorID);\n      this.formGeneralInformation.get('CountryOfIncorporation').patchValue(this.application['CountryOfIncorporation']);\n      this.formGeneralInformation.get('OtherSector').patchValue(this.application['OtherSector']);\n      this.formGeneralInformation.get('Location').patchValue(this.application.Location);\n      this.formGeneralInformation.get('PhoneNumberCode').patchValue(this.application.PhoneNumber.substring(0, 3));\n      this.formGeneralInformation.get('PhoneNumber').patchValue(this.application.PhoneNumber.substring(3, 13));\n      this.formGeneralInformation.get('EmailAddress').patchValue(this.application.EmailAddress);\n      //this.formGeneralInformation.get('PRN').patchValue(this.application.PRN);\n      /*if(this.application.PRN){\n        this.showPRNDownload = true;\n      }*/\n      if (this.application['NatureOfBusiness'].length) {\n        this.formGeneralInformation.get('NatureOfBusinessCat').patchValue(this.application['NatureOfBusinessCatID']);\n        \n        let natureOfbusinesses: NatureOfBusiness[] = this.application['NatureOfBusiness'];\n        let natureOfbusinesses_arr: any[] = [];\n  \n        let _selectedNatureOfBusinessSubCat: NatureOfBusinessSubCat[] = [];\n        natureOfbusinesses.filter((item) => {\n          natureOfbusinesses_arr.push(item['NatureOfBusinessSubCatId']);\n  \n          _selectedNatureOfBusinessSubCat.push({\n            NatureOfBusinessSubCatId: item['NatureOfBusinessSubCatId'],\n            NatureOfBusinessSubCategoryName: item.NatureOfBusinessSubCategoryName\n          });\n        });\n        \n        this.formGeneralInformation.get('NatureOfBusinessSubCat').patchValue(natureOfbusinesses_arr);\n        this.selectedNatureOfBusinessSubCat = _selectedNatureOfBusinessSubCat;\n      }\n  \n      // STEP TWO\n      this.formOrganisationDetails.get('DPORequired').patchValue(this.application['DPORequired']);\n  \n      this.formOrganisationDetails.get('DPOName').patchValue(this.application['DPOName']);\n      this.formOrganisationDetails.get('DPOPhysicalAddress').patchValue(this.application['DPOPhysicalAddress']);\n      this.formOrganisationDetails.get('PhoneNumberCode').patchValue(this.application['DPOPhoneNumber'].substring(0, 3));\n      this.formOrganisationDetails.get('DPOPhoneNumber').patchValue(this.application['DPOPhoneNumber'].substring(3, 13));\n      this.formOrganisationDetails.get('DPOEmailAddress').patchValue(this.application['DPOEmailAddress']);\n      this.formOrganisationDetails.get('DPOPositionInOrganisation').patchValue(this.application['DPOPositionInOrganisation']);\n      \n\n      // CHILDREN'S DATA \n\n      if(this.application.CollectChildrenData == 'Yes'){\n        this.showChildrenDataFields = true;\n      }\n\n      if(this.application['CollectChildrenData']){\n\n        this.formChildrenData.get('CollectChildrenData').patchValue(this.application['CollectChildrenData']);\n      }\n      \n      // STEP THREE\n      let sourceofdata = this.application['SourceOfDataID'];\n      let sourceofdata_arr: number [] = [];\n      \n      sourceofdata.filter((item) => {\n        sourceofdata_arr.push(item.DataSourceID);\n      });\n  \n      this.formPersonalDataHeld.get('SourceOfDataID').patchValue(sourceofdata_arr);\n  \n      if (this.application['PersonalDataCollected']) {\n        const personalDataCollected: any[] = this.application['PersonalDataCollected'];\n    \n        this.dataCategories.filter((category) => {\n          category.SubCategories.filter((subCat) => {\n            personalDataCollected.filter((selectedSubCat) => {            \n              if (subCat.DataSubCategoryID === selectedSubCat.DataSubCategoryID) {\n                subCat.IsChecked = true;\n                this.selectedDataSubCategory.push(subCat);\n              }\n            });\n          });\n        });\n      }\n  \n      // STEP FOUR\n      const purpose: any = this.application['Purpose'];\n      let purpose_arr: any[] = [];\n      let _selectedDataPurposes: DataPurposes[]  = [];\n  \n      purpose.filter((item) => {\n        if (item.DataPurposeID === 1) {\n          this.SpecifyTheLaw = true;\n          this.formPurposeRetention.get('SpecifyTheLaw').setValidators([Validators.required]);\n        }\n  \n        if (item.DataPurposeID === 3) {\n          this.ServiceOrProductProvided = true;\n          this.formPurposeRetention.get('ServiceOrProductProvided').setValidators([Validators.required]);\n        }\n  \n        if (item.DataPurposeID === 6) {\n          this.SpecifyLegalObligation = true;\n          this.formPurposeRetention.get('SpecifyLegalObligation').setValidators([Validators.required]);\n        }\n  \n        purpose_arr.push(item.DataPurposeID);\n  \n        _selectedDataPurposes.push(item);\n      });\n      \n      this.formPurposeRetention.get('Purpose').patchValue(purpose_arr);\n      this.selectedDataPurposes = _selectedDataPurposes;\n  \n      this.formPurposeRetention.get('SpecifyTheLaw').patchValue(this.application['SpecifyTheLaw']);\n      this.formPurposeRetention.get('ServiceOrProductProvided').patchValue(this.application['ServiceOrProductProvided']);\n      this.formPurposeRetention.get('SpecifyLegalObligation').patchValue(this.application['SpecifyLegalObligation']);\n      this.formPurposeRetention.get('TotalRecordsAtRegistration').patchValue(this.application['TotalRecordsAtRegistration']);\n      this.formPurposeRetention.get('RecordPercentageGrowth').patchValue(this.application['RecordPercentageGrowth']);\n      this.formPurposeRetention.get('RetentionPeriod').patchValue(this.application['RetentionPeriod']);\n  \n      // STEP FIVE\n      this.formThirdParties.get('PersonalDataIsForDisclosure').patchValue(this.application['PersonalDataIsForDisclosure'].replace(/\\s/g, ''));\n      this.thirdParties = this.application['ThirdParties'];\n      this.thirdPartyDataSource = new MatTableDataSource(this.thirdParties);\n  \n      setTimeout(() => {\n        this.thirdPartyDataSource.paginator = this.thirdPartyPaginator;\n        this.thirdPartyDataSource.sort = this.thirdPartyMatSort;\n      });\n  \n      this.formThirdParties.get('StoreDataOutsideCountry').patchValue(this.application['StoreDataOutsideCountry']);\n      this.countriesOfTransfer = this.application['Countries'];\n      this.countriesDataSource = new MatTableDataSource(this.countriesOfTransfer);\n  \n      setTimeout(() => {\n        this.countriesDataSource.paginator = this.countryOfTransferPaginator;\n        this.countriesDataSource.sort = this.countryOfTransferMatSort;\n      });\n  \n      // STEP SIX\n      this.securityMeasures = this.application['SecurityMeasures'];\n      this.securityMeasureDataSource = new MatTableDataSource(this.securityMeasures);\n      setTimeout(() => {\n          this.securityMeasureDataSource.paginator = this.securityMeasurePaginator;\n          this.securityMeasureDataSource.sort = this.securityMeasureMatSort;\n      });\n  \n      if (this.application.Attachment) {\n        this.document = { \n          Document: null, \n          Name: 'Supporting Documentation.pdf', \n          Size: null, \n          Base64: this.application.Attachment \n        };\n      }\n  \n      if (this.application.Form3Attachment) {\n        this.documentForm3 = { \n          Document: null, \n          Name: 'Form 3.pdf', \n          Size: null, \n          Base64: this.application.Form3Attachment \n        };\n      }\n  \n      if (this.application.ProofOfPayment) {\n        this.proofOfPayment = {\n            Document: null, \n            Name: 'Proof of Payment.pdf', \n            Size: null, \n            Base64: this.application.ProofOfPayment \n        };\n      }\n  \n      this.formSecurityMeasures.get('RegistrationConsent').patchValue(this.application['RegistrationConsent'] == true ? true : null);\n      this.formSecurityMeasures.get('RegistrationDoneBy').patchValue(this.application['RegistrationDoneBy']);    \n    }\n  }\n\n  onSaveDraft(): void {\n    this.processing = true;\n\n    this.httpSub = this.http.put<ApiPayload>(this.endpoints.orgRegSaveDraft, this.getFormData())\n    .pipe(catchError(this.service.handleError))\n    .subscribe((response) => {\n\n      this.dialogRef = this.dialog.open(SuccessfulMessageDialogComponent, {\n        panelClass: ['successful-message-dialog', 'dialogs'],\n        disableClose: true,\n        data: {\n          title: response.message['title'],\n          message: response.message['body'],\n          status: response.code === 200 ? true : false,\n        }\n      });\n\n      this.processing = false;\n    }, (error) => {\n      this.processing = false;\n\n      if (error.error.message) {\n        this.dialogRef = this.dialog.open(SuccessfulMessageDialogComponent, {\n          panelClass: ['successful-message-dialog', 'dialogs'],\n          disableClose: true,\n          data: {\n            title: error.error.message['title'] ? error.error.message['title'] : 'Operation Failed',\n            message: error.error.message['body'] ? error.error.message['body'] : environment.technicalErrorResponse,\n            status: false,\n          }\n        });\n      } else {\n        this.service.determineErrorResponse(error);\n      }\n    });    \n  }\n\n  ngOnDestroy(): void {\n    if (this.httpSub) { this.httpSub.unsubscribe(); }\n  }\n\n\n  updateCollecthildrenData(event){\n\n    console.log(event.value);\n\n    if(event.value == 'Yes'){\n      this.showChildrenDataFields = true;\n      this.formChildrenData.get('PurposeForCollection').setValidators([Validators.required]);\n\n      this.formChildrenData.controls['PurposeForCollection'].updateValueAndValidity();\n    }\n    else{\n      this.showChildrenDataFields = false;\n\n      this.formChildrenData.get('PurposeForCollection').setValidators([]);\n\n      this.formChildrenData.get('PurposeForCollection').reset();\n\n      this.formChildrenData.controls['PurposeForCollection'].updateValueAndValidity();\n    }\n  }\n\n\n  generatePRN(){\n\n    this.Organisation_User_ID = this._auth.getOrganisationID();\n\n    console.log(this.getPRNRequestData()); \n    this.httpSub = this.http.post<ApiPayload>(this.endpoints.generatePRN, this.getPRNRequestData())\n    .pipe(catchError(this.service.handleError))\n    .subscribe((response) => {\n      console.log(response.data);\n      this.showPRNDownload = true;\n      \n      this.dialogRef = this.dialog.open(SuccessfulMessageDialogComponent, {\n        disableClose: true,\n        data: {\n          title: 'URA PRN',\n          message: 'PRN Generated successfully.Check the email and telephone number provided for more details.',\n          status: true,\n        }\n      });\n\n      this.formGeneralInformation.get('PRN').patchValue(response.data.PRN);\n\n      this.processing = false;\n    }, (error) => {\n      this.processing = false;\n\n      if (error.error.message) {\n        this.dialogRef = this.dialog.open( SuccessfulMessageDialogComponent, {\n          panelClass: ['forward-message-dialog', 'dialogs'],\n          disableClose: true,\n          data: {\n            title: error.error.message['title'] ? error.error.message['title'] : 'Operation Failed',\n            message: error.error.message['body'] ? error.error.message['body'] : environment.technicalErrorResponse,\n            status: false,\n          }\n        });\n      } else {\n        this.service.determineErrorResponse(error);\n      }\n    });\n\n  }\n\n  getPRNRequestData(){\n\n    const data =  {\n\n      phone_number: this.formGeneralInformation.get('PhoneNumberCode').value + '' + this.formGeneralInformation.get('PhoneNumber').value,\n      email: this.formGeneralInformation.get('EmailAddress').value,\n      organisation_name: this.formGeneralInformation.get('OrganizationName').value,\n      organisation_user_id : this._auth.getOrganisationID()\n\n    }\n\n    return data;\n  }\n\n\n  checkPRNStatus(){\n\n    this.Organisation_User_ID = this._auth.getOrganisationID();\n\n    console.log(this.getPRNRequestData()); \n    this.httpSub = this.http.post<ApiPayload>(this.endpoints.checkPRN, this.getPRN())\n    .pipe(catchError(this.service.handleError))\n    .subscribe((response) => {\n      console.log(response.data);\n\n      let message;\n      let status;\n\n      if(response.data.ErrorCode == 'A'){\n        message = 'The PRN is valid, however payment has not been made';\n        status = false;\n      }\n      else if(response.data.ErrorCode == 'R'){\n         message =  'The PRN is valid, however the cheque has not yet matured';\n         status = false;\n      }\n      else if(response.data.ErrorCode == 'T'){\n         message = 'Received and credited. The payment has been reconciled with the  bank';\n         status = true;\n      }\n      else if(response.data.ErrorCode == 'D'){\n         message = 'The PRN is valid, however the cheque was dishonoured';\n         status = false;\n      }\n      else if(response.data.ErrorCode == 'C'){\n         message = 'The PRN was cancelled';\n         status = false;\n      }\n      else if(response.data.ErrorCode == 'X'){\n         message = 'THe PRN has expired';\n         status = false;\n      }\n      else if(response.data.ErrorCode == 'APPOO1'){\n        message = response.data.ErrorDesc;\n        status =  false;\n      }\n      else{\n        message = 'An error occured';\n        status = false;\n      }\n      this.showPRNDownload = true;\n\n\n      \n      this.dialogRef = this.dialog.open(SuccessfulMessageDialogComponent, {\n        disableClose: true,\n        data: {\n          title: 'URA PRN',\n          message: message,\n          status: false,\n        }\n      });\n\n\n      this.processing = false;\n    }, (error) => {\n      this.processing = false;\n\n      if (error.error.message) {\n        this.dialogRef = this.dialog.open( SuccessfulMessageDialogComponent, {\n          panelClass: ['forward-message-dialog', 'dialogs'],\n          disableClose: true,\n          data: {\n            title: error.error.message['title'] ? error.error.message['title'] : 'Operation Failed',\n            message: error.error.message['body'] ? error.error.message['body'] : environment.technicalErrorResponse,\n            status: false,\n          }\n        });\n      } else {\n        this.service.determineErrorResponse(error);\n      }\n    });\n  }\n\n  getPRN(){\n\n    const data =  {\n\n      prn : this.formGeneralInformation.get('PRN').value\n\n    }\n\n    return data;\n  }\n\n\n  downloadPRNDownload(){\n\n\n    this.httpSub = this.http.post<ApiPayload>(this.endpoints.checkPRN, this.getPRN())\n    .pipe(catchError(this.service.handleError))\n    .subscribe((response) => {\n\n      console.log(response.data);\n      this.dialogRef = this.dialog.open(DownloadPRNReceiptComponent, {\n        disableClose: true,\n        data: {\n          download: true,\n          prn_data:response.data\n        }\n      \n      });\n\n      \n    }, (error) => {\n      this.processing = false;\n\n      if (error.error.message) {\n        this.dialogRef = this.dialog.open( SuccessfulMessageDialogComponent, {\n          panelClass: ['forward-message-dialog', 'dialogs'],\n          disableClose: true,\n          data: {\n            title: error.error.message['title'] ? error.error.message['title'] : 'Operation Failed',\n            message: error.error.message['body'] ? error.error.message['body'] : environment.technicalErrorResponse,\n            status: false,\n          }\n        });\n      } else {\n        this.service.determineErrorResponse(error);\n      }\n    });\n\n    \n  }\n}\n","\n<fury-page-layout mode=\"card\">\n    <fury-page-layout-header>\n        <fury-breadcrumbs [@fadeInRight] [crumbs]=\"['New Registration']\"\n                          current=\"New Application\"></fury-breadcrumbs>\n    </fury-page-layout-header>\n\n    <fury-page-layout-content [@fadeInUp]>\n        <main class=\"fadeInUp _delay4ms\">\n\n            <!-- <app-page-breadcrumb [title]=\"'Application for New Registration / Renewal'\"></app-page-breadcrumb> -->\n        \n            <mat-horizontal-stepper \n                [linear]=\"isLinear\"\n                [selectedIndex]=\"selectedIndex\"\n                labelPosition=\"bottom\" #stepper>\n        \n                <mat-step [stepControl]=\"formGeneralInformation\">\n                    <ng-template matStepLabel>\n                        <h3>Applicant</h3>\n                    </ng-template>\n        \n                    <form [formGroup]=\"formGeneralInformation\">\n                        <h1 class=\"full-width step-header\">Details of the applicant which could be an organisation or Individual that collects or processes Personal Data </h1>\n        \n                        <mat-form-field>\n                            <mat-label>Name of Organisation <span class=\"required-field\">required</span></mat-label>\n                            <input appUppercase matInput formControlName=\"OrganizationName\">       \n                            <mat-error *ngIf=\"formGeneralInformation.get('OrganizationName').invalid\">{{ getOrganizationNameErrorMessage() }}</mat-error>\n                        </mat-form-field>  \n        \n                        <div class=\"telephone-code-number-wrapper\">\n                            <mat-form-field class=\"fadeInUp _delay2ms\">\n                                <mat-label>Pick one </mat-label>\n                                <mat-select formControlName=\"PhoneNumberCode\">\n                                    <mat-option selected *ngIf=\"!selected\" value=\"256\">+256</mat-option>\n                                    <!-- <mat-option selected *ngIf=\"!selected\" value=\"256\">+256 - Uganda</mat-option> -->\n                                    <mat-option *ngFor=\"let code of countries\" [value]=\"code.PhoneCode\" (click)=\"selected = true\">\n                                        +{{ code.PhoneCode }}\n                                    </mat-option>\n                                </mat-select>\n                            </mat-form-field>\n        \n                            <!-- <mat-form-field class=\"fadeInUp _delay2ms\" [hintLabel]=\"'Organisation Telephone Number.'\"> -->\n                            <mat-form-field class=\"fadeInUp _delay2ms\">\n                                <mat-label>Organisation Telephone Number <span class=\"required-field\">required</span></mat-label>\n                                <input type=\"text\" maxlength=\"11\" matInput appTelephoneFormaterDirective formControlName=\"PhoneNumber\" placeholder=\"Ex. 414 318 111\">\n                                <mat-error *ngIf=\"formGeneralInformation.get('PhoneNumber').invalid\">{{ getTelephoneNumberErrorMessage() }}</mat-error>\n                            </mat-form-field> \n                        </div>                \n        \n                        <mat-form-field>\n                            <mat-label>Organisation Email Address <span class=\"required-field\">required</span></mat-label>\n                            <input appRemoveSpaces matInput formControlName=\"EmailAddress\">\n                            <mat-error *ngIf=\"formGeneralInformation.get('EmailAddress').invalid\">{{ getEmailAddressErrorMessage() }}</mat-error>\n                        </mat-form-field>   \n                                \n                        <mat-form-field [hintLabel]=\"'Choose all that apply'\">\n                            <mat-label>Category <span class=\"required-field\">required</span></mat-label>\n                            <mat-select multiple formControlName=\"DPPActCategory\">\n                                <mat-option *ngFor=\"let cat of organisationCategories\" [value]=\"cat.OrganisationCategoryId\">\n                                    {{ cat.OrganisationCategoryName }}\n                                </mat-option>\n                            </mat-select>   \n                            <mat-error *ngIf=\"formGeneralInformation.get('DPPActCategory').invalid\">{{ getSelectErrorMessage() }}</mat-error> \n                        </mat-form-field>                             \n        \n                        <mat-form-field>\n                            <mat-label>Type of Organisation <span class=\"required-field\">required</span></mat-label>\n                            <mat-select formControlName=\"OrganizationTypeID\" #typeOfOrganisation>\n                                <mat-option *ngFor=\"let type of organisationTypes\" (click)=\"OrganizationType = type.OrganisationType\" [value]=\"type.OrganisationTypeID\">\n                                    {{ type.OrganisationType }}\n                                </mat-option>\n                            </mat-select>\n                            <mat-error *ngIf=\"formGeneralInformation.get('OrganizationTypeID').invalid\">{{ getSelectErrorMessage() }}</mat-error> \n                        </mat-form-field>                   \n        \n                        <mat-form-field *ngIf=\"typeOfOrganisation.value && typeOfOrganisation.value !== 4\">\n                            <mat-label>Country of Incorporation <span class=\"required-field\">required</span></mat-label>\n                            <mat-select formControlName=\"CountryOfIncorporation\">\n                                <mat-option *ngFor=\"let country of countries\" (click)=\"CountryOfIncorporation = country.Name\" [value]=\"country.CountryID\">\n                                    {{ country.Name }}\n                                </mat-option>\n                            </mat-select>\n                            <mat-error *ngIf=\"formGeneralInformation.get('CountryOfIncorporation').invalid\">{{ getSelectErrorMessage() }}</mat-error> \n                        </mat-form-field>        \n        \n                        <mat-form-field *ngIf=\"typeOfOrganisation.value && typeOfOrganisation.value !== 4\">\n                            <mat-label>Registration Number <span class=\"required-field\">required</span></mat-label>\n                            <input appUppercase appRemoveSpaces matInput maxlength=\"25\" formControlName=\"URSBNumber\"> \n                            <mat-error *ngIf=\"formGeneralInformation.get('URSBNumber').invalid\">{{ getURSBNumberErrorMessage() }}</mat-error>\n                        </mat-form-field>     \n                        \n                        <mat-form-field>\n                            <mat-label>Sector <span class=\"required-field\">required</span></mat-label>\n                            <mat-select formControlName=\"SectorID\" #Sector>\n                                <mat-option *ngFor=\"let sector of sectors\" (click)=\"SectorName = sector.Sector\" [value]=\"sector.SectorID\">\n                                    {{ sector.Sector }}\n                                </mat-option>\n                            </mat-select>\n                            <mat-error *ngIf=\"formGeneralInformation.get('SectorID').invalid\">{{ getSelectErrorMessage() }}</mat-error>\n                        </mat-form-field>        \n                        \n                        <mat-form-field hintLabel=\"If Other, Please specify the Sector.\" *ngIf=\"Sector.value === 14\">\n                            <mat-label>Specify Sector <span class=\"required-field\">required</span></mat-label>\n                            <input appUppercase matInput maxlength=\"50\" formControlName=\"OtherSector\">    \n                            <mat-error *ngIf=\"formGeneralInformation.get('OtherSector').invalid\">{{ getOtherSectorErrorMessage() }}</mat-error>\n                        </mat-form-field>                 \n        \n                        <mat-form-field>\n                            <mat-label>Physical Address <span class=\"required-field\">required</span></mat-label>\n                            <input appUppercase matInput maxlength=\"255\" formControlName=\"Location\">            \n                            <mat-error *ngIf=\"formGeneralInformation.get('Location').invalid\">{{ getLocationErrorMessage() }}</mat-error>                \n                        </mat-form-field>  \n        \n                        <mat-form-field>\n                            <mat-label>Nature of Business Categories<span class=\"required-field\">required</span></mat-label>\n                            <mat-select formControlName=\"NatureOfBusinessCat\">\n                                <mat-option *ngFor=\"let cat of natureOfBusinessCat\" (click)=\"NatureOfBusinessCat = cat.NatureOfBusinessCategoryName\" [value]=\"cat.NatureOfBusinessCatId\">\n                                    {{ cat.NatureOfBusinessCategoryName }}\n                                </mat-option>\n                            </mat-select>    \n                            <mat-error *ngIf=\"formGeneralInformation.get('NatureOfBusinessCat').invalid\">{{ getSelectErrorMessage() }}</mat-error>\n                        </mat-form-field>                   \n        \n                        <mat-form-field [hintLabel]=\"'Choose all that apply'\">\n                            <mat-label>Nature of Business Sub-Categories <span class=\"required-field\">required</span></mat-label>\n                            <mat-select multiple formControlName=\"NatureOfBusinessSubCat\">\n                                <mat-option *ngFor=\"let sub of natureOfBusinessSubCat\" [value]=\"sub.NatureOfBusinessSubCatId\" [matTooltip]=\"sub.NatureOfBusinessSubCategoryName\">\n                                    {{ sub.NatureOfBusinessSubCategoryName }}\n                                </mat-option>\n                            </mat-select> \n                            <mat-error *ngIf=\"formGeneralInformation.get('NatureOfBusinessSubCat').invalid\">{{ getSelectErrorMessage() }}</mat-error>   \n                        </mat-form-field>\n                        <br/>             \n\n                        \n                        <!--<mat-form-field>\n                            <mat-label>PRN <span class=\"required-field\">required</span></mat-label>\n                            <input matInput maxlength=\"255\" formControlName=\"PRN\">            \n                        </mat-form-field>  -->\n                       \n                        <!--<div>\n                            <button \n                                mat-button \n                                class=\"save-draft-btn\"\n                                [disabled]=\"processing\"\n                                (click)=\"generatePRN()\"\n                                style=\"background-color: #1976d2; color: #fff; margin-right: 40px;\">\n                                Generate PRN\n                            </button>       \n            \n                            <button \n                                mat-button \n                                class=\"save-draft-btn\"\n                                [disabled]=\"processing\"\n                                (click)=\"checkPRNStatus()   \"\n                                style=\"background-color: #1976d2; color: #fff; margin-right: 40px;\">\n                                Check PRN Status\n                            </button>  \n\n                            <button\n                                mat-button\n                                *ngIf=\"showPRNDownload == true\"\n                                style=\"background-color: #1976d2; color: #fff;\"\n                                class=\"download\" \n                                matTooltip=\"Download copy of PRN slip\"\n                                (click)=\"downloadPRNDownload()\">\n                                <div class=\"button-label\">\n                                    <mat-icon>sim_card_download</mat-icon>\n                                    <span>Download</span>\n                                </div>\n                            </button>\n                        </div>   -->\n                    </form>\n        \n                    <div class=\"button-wrapper\">\n                        <button \n                            mat-button \n                            class=\"save-draft-btn\"\n                            [disabled]=\"processing\"\n                            (click)=\"onSaveDraft()\"\n                            color=\"primary\">\n                            Save\n                        </button>       \n        \n                        <button \n                            [disabled]=\"formGeneralInformation.invalid\"\n                            mat-button \n                            class=\"next-btn\" \n                            color=\"primary\" \n                            matStepperNext>\n                            Next\n                        </button>\n                    </div>             \n                </mat-step>\n        \n                <mat-step [stepControl]=\"formOrganisationDetails\">\n                    <ng-template matStepLabel>\n                        <h3>Data Protection <br />Officer</h3>\n                    </ng-template>\n        \n                    <form [formGroup]=\"formOrganisationDetails\">     \n        \n                        <h1 class=\"full-width step-header\">Details of Data Protection Officer </h1>    \n        \n                        <div class=\"grouped-items\" [ngClass]=\"{'full-width': formOrganisationDetails.get('DPORequired').value !== 'Yes'}\">\n                            <h3>Do you have a designated data protection officer ? </h3>\n            \n                            <mat-radio-group \n                                color=\"primary\" \n                                formControlName=\"DPORequired\" \n                                aria-label=\"Pick one\">\n                                <mat-radio-button value=\"Yes\">Yes</mat-radio-button>\n                                <mat-radio-button value=\"No\">No</mat-radio-button>\n                            </mat-radio-group>        \n                        </div>                  \n                        \n                        <mat-form-field *ngIf=\"formOrganisationDetails.get('DPORequired').value === 'Yes'\">\n                            <mat-label>Name <span class=\"required-field\">required</span></mat-label>\n                            <input formControlName=\"DPOName\" matInput>\n                            <mat-error *ngIf=\"formOrganisationDetails.get('DPOName').invalid\">{{ getDPONameErrorMessage() }}</mat-error>\n                        </mat-form-field>\n                \n                        <mat-form-field *ngIf=\"formOrganisationDetails.get('DPORequired').value === 'Yes'\">\n                            <mat-label>Physical Address <span class=\"required-field\">required</span></mat-label>\n                            <input formControlName=\"DPOPhysicalAddress\" maxlength=\"255\" matInput>\n                            <mat-error *ngIf=\"formOrganisationDetails.get('DPOPhysicalAddress').invalid\">{{ getDPOPhysicalAddressErrorMessage() }}</mat-error>\n                        </mat-form-field>\n                        \n                        <div class=\"telephone-code-number-wrapper\" *ngIf=\"formOrganisationDetails.get('DPORequired').value === 'Yes'\">\n                            <mat-form-field class=\"fadeInUp _delay2ms\">\n                                <mat-label>Pick one </mat-label>\n                                <mat-select formControlName=\"PhoneNumberCode\">\n                                    <mat-option selected *ngIf=\"!DPOSelected\" value=\"256\">+256</mat-option>\n                                    <!-- <mat-option selected *ngIf=\"!selected\" value=\"256\">+256 - Uganda</mat-option> -->\n                                    <mat-option *ngFor=\"let code of countries\" [value]=\"code.PhoneCode\" (click)=\"DPOSelected = true\">\n                                        +{{ code.PhoneCode }}\n                                    </mat-option>\n                                </mat-select>\n                                <!-- <mat-error *ngIf=\"formGeneralInformation.get('PhoneNumberCode').invalid\">{{ getSelectInputErrorMessage() }}</mat-error>      -->\n                            </mat-form-field>\n        \n                            <!-- <mat-form-field class=\"fadeInUp _delay2ms\" [hintLabel]=\"'Organisation Telephone Number.'\"> -->\n                            <mat-form-field class=\"fadeInUp _delay2ms\">\n                                <mat-label>Telephone Number <span class=\"required-field\">required</span></mat-label>\n                                <input type=\"text\" maxlength=\"11\" matInput appTelephoneFormaterDirective formControlName=\"DPOPhoneNumber\" placeholder=\"Ex. 414 318 111\">\n                                <mat-error *ngIf=\"formOrganisationDetails.get('DPOPhoneNumber').invalid\">{{ getDPOPhoneNumberErrorMessage() }}</mat-error>\n                            </mat-form-field> \n                        </div>                  \n                \n                        <mat-form-field *ngIf=\"formOrganisationDetails.get('DPORequired').value === 'Yes'\">\n                            <mat-label>Email Address <span class=\"required-field\">required</span></mat-label>\n                            <input appRemoveSpaces formControlName=\"DPOEmailAddress\" matInput>\n                            <mat-error *ngIf=\"formOrganisationDetails.get('DPOEmailAddress').invalid\">{{ getDPOEmailAddressErrorMessage() }}</mat-error>\n                        </mat-form-field>       \n        \n                        <mat-form-field *ngIf=\"formOrganisationDetails.get('DPORequired').value === 'Yes'\" class=\"full-width\" hintLabel=\"Any other title held apart from DPO (Data Protection Officer).\">\n                            <mat-label>Title Held <span class=\"required-field\">required</span></mat-label>\n                            <textarea #PositionInput matInput formControlName=\"DPOPositionInOrganisation\" maxlength=\"1000\"></textarea>\n                            <mat-hint align=\"end\">{{ PositionInput.value.length }} / 1000</mat-hint>\n                            <mat-error *ngIf=\"formOrganisationDetails.get('DPOPositionInOrganisation').invalid\">{{ getDPOPositionInOrganisationErrorMessage() }}</mat-error>\n                        </mat-form-field>                  \n                    </form>\n        \n                    <div class=\"button-wrapper\">       \n                        <button mat-button class=\"back-btn\" matStepperPrevious>Back</button>   \n                        \n                        <button \n                            mat-button \n                            class=\"save-draft-btn\"\n                            [disabled]=\"processing\"\n                            (click)=\"onSaveDraft()\"\n                            color=\"primary\">\n                            Save\n                        </button> \n\n                        <button \n                            [disabled]=\"formOrganisationDetails.invalid\"\n                            mat-button \n                            class=\"next-btn\" \n                            color=\"primary\" \n                            matStepperNext>\n                            Next\n                        </button>\n                    </div>             \n                </mat-step>\n        \n                <mat-step [stepControl]=\"formPersonalDataHeld\">\n                    <ng-template matStepLabel>\n                        <h3>Data Collected <br /> or Processed</h3>\n                    </ng-template>\n        \n                    <form [formGroup]=\"formPersonalDataHeld\" class=\"personal-data-affected\">       \n                        \n                        <h1 class=\"full-width step-header\">Description of Data collected or processed </h1>\n        \n                        <mat-form-field hintLabel=\"Choose all that apply.\" class=\"full-width\">\n                            <mat-label>Source of Data <span class=\"required-field\">required</span></mat-label>\n                            <mat-select multiple formControlName=\"SourceOfDataID\">\n                                <mat-option *ngFor=\"let source of dataSources\" [value]=\"source.DataSourceID\">\n                                    {{ source.DataSource }}\n                                </mat-option>\n                            </mat-select>    \n                            <mat-error *ngIf=\"formPersonalDataHeld.get('SourceOfDataID').invalid\">{{ getSelectErrorMessage() }}</mat-error> \n                        </mat-form-field>        \n        \n                        <h1 class=\"full-width heading\">Personal Data Collected Or Processed</h1>\n                        \n                        <section *ngFor=\"let category of dataCategories; let i = index\" class=\"expand-section categories\">        \n                            <div>\n                                <h3 [innerHTML]=\"category.DataCategory\"></h3>\n                                <mat-icon matTooltipPosition=\"right\"  [matTooltip]=\"category.DataDescription\">info</mat-icon>\n                            </div>\n\n                            <mat-checkbox\n                                *ngFor=\"let SubCategory of category.SubCategories\" \n                                [ngClass]=\"{'full-width': category.SubCategories.length === 1}\"\n                                color=\"primary\"\n                                [checked]=\"SubCategory.IsChecked\"\n                                (change)=\"onChangeSubCategory($event,SubCategory)\"\n                                [required]=\"'false'\">\n                                {{ SubCategory.DataSubCategory }}\n                            </mat-checkbox>    \n                        </section>\n                    </form>\n        \n                    <div class=\"button-wrapper\">       \n                        <button mat-button class=\"back-btn\" matStepperPrevious>Back</button>\n        \n                        <button \n                            mat-button \n                            class=\"save-draft-btn\"\n                            [disabled]=\"processing\"\n                            (click)=\"onSaveDraft()\"\n                            color=\"primary\">\n                            Save\n                        </button> \n\n                        <button \n                            [disabled]=\"formPersonalDataHeld.invalid || selectedDataSubCategory.length === 0\"\n                            mat-button \n                            class=\"next-btn\" \n                            color=\"primary\" \n                            matStepperNext>\n                            Next\n                        </button>\n                    </div>             \n                </mat-step>\n\n                <mat-step [stepControl]=\"formChildrenData\">\n                    <ng-template matStepLabel>\n                        <h3>Children's Data</h3>\n                    </ng-template>\n\n                    <form [formGroup]=\"formChildrenData\">\n                        \n                        <div class=\"grouped-items\">\n                            <h3>Do you collect personal data relating to Children?<span class=\"required-field\">required</span></h3>\n            \n                            <mat-radio-group color=\"primary\" aria-label=\"Pick one\" formControlName=\"CollectChildrenData\" (change)=\"updateCollecthildrenData($event)\">\n                                <mat-radio-button value=\"Yes\">Yes</mat-radio-button>\n                                <mat-radio-button value=\"No\">No</mat-radio-button>\n                            </mat-radio-group>        \n                        </div>  \n        \n                        <mat-form-field *ngIf=\"showChildrenDataFields == true\">\n                            <mat-label>Reason / Purpose for collecting children's data<span class=\"required-field\">required</span> </mat-label>\n                        \n                            <mat-select multiple formControlName=\"PurposeForCollection\">\n                                <mat-option *ngFor=\"let child of childDataPurposes\" [value]=\"child.ChildDataID\">\n                                    {{ child.ChildDataPurpose }}\n                                </mat-option>\n                            </mat-select>  \n                        </mat-form-field>                  \n                        \n                                    \n        \n                    </form>\n\n                    <div class=\"button-wrapper\">       \n                        <button mat-button class=\"back-btn\" matStepperPrevious>Back</button>\n        \n                        <button \n                            mat-button \n                            class=\"save-draft-btn\"\n                            [disabled]=\"processing\"\n                            (click)=\"onSaveDraft()\"\n                            color=\"primary\">\n                            Save\n                        </button> \n\n                        <button \n                            [disabled]=\"formChildrenData.invalid\"\n                            mat-button \n                            class=\"next-btn\" \n                            color=\"primary\" \n                            matStepperNext>\n                            Next\n                        </button>\n                    </div>          \n\n                </mat-step>\n        \n                <mat-step [stepControl]=\"formPurposeRetention\">\n                    <ng-template matStepLabel>\n                        <h3>Purpose & Retention</h3>\n                    </ng-template>\n        \n                    <form [formGroup]=\"formPurposeRetention\">       \n                        \n                        <h1 class=\"full-width step-header\">Description of Purpose for which data is collected or processed </h1>\n        \n                        <mat-form-field hintLabel=\"Why do you collect personal Data?\">\n                            <mat-label>For What Purpose ?<span class=\"required-field\">required</span></mat-label>\n                            <mat-select formControlName=\"Purpose\" multiple>\n                                <mat-option *ngFor=\"let purpose of dataPurposes\" [value]=\"purpose.DataPurposeID\">\n                                    {{ purpose.DataPurpose }}\n                                </mat-option>\n                            </mat-select>  \n                            <mat-error *ngIf=\"formPurposeRetention.get('Purpose').invalid\">{{ getSelectErrorMessage() }}</mat-error>   \n                        </mat-form-field>\n        \n                        <mat-form-field hintLabel=\"If the purpose is Collection / Processing is required by Law.\" *ngIf=\"SpecifyTheLaw\">\n                            <mat-label>Specify the Law <span class=\"required-field\">required</span></mat-label>\n                            <input matInput #SpecifyTheLawInput maxlength=\"1000\" formControlName=\"SpecifyTheLaw\">        \n                            <mat-hint align=\"end\">{{ SpecifyTheLawInput.value.length }} / 1000</mat-hint>    \n                            <mat-error *ngIf=\"formPurposeRetention.get('SpecifyTheLaw').invalid\">{{ getRequiredErrorMessage() }}</mat-error>\n                        </mat-form-field>  \n        \n                        <mat-form-field hintLabel=\"If the purpose is to provide services / products to Individuals.\" *ngIf=\"ServiceOrProductProvided\">\n                            <mat-label>Specify the Service / Product Provided<span class=\"required-field\">required</span></mat-label>\n                            <input matInput #ServiceOrProductProvidedInput maxlength=\"1000\" formControlName=\"ServiceOrProductProvided\">     \n                            <mat-hint align=\"end\">{{ ServiceOrProductProvidedInput.value.length }} / 1000</mat-hint>    \n                            <mat-error *ngIf=\"formPurposeRetention.get('ServiceOrProductProvided').invalid\">{{ getRequiredErrorMessage() }}</mat-error>\n                        </mat-form-field>  \n        \n                        <mat-form-field hintLabel=\"If the purpose is for Compliance with a Legal Obligation.\" *ngIf=\"SpecifyLegalObligation\">\n                            <mat-label>Specify the Legal Obligation<span class=\"required-field\">required</span></mat-label>\n                            <input matInput #SpecifyLegalObligationInput maxlength=\"1000\" formControlName=\"SpecifyLegalObligation\">  \n                            <mat-hint align=\"end\">{{ SpecifyLegalObligationInput.value.length }} / 1000</mat-hint>    \n                            <mat-error *ngIf=\"formPurposeRetention.get('SpecifyLegalObligation').invalid\">{{ getRequiredErrorMessage() }}</mat-error>\n                        </mat-form-field>  \n                        \n                        <mat-form-field hintLabel=\"Approximate number of Personal Data Records held.\">\n                            <mat-label>Total Records <span class=\"optional-field\">optional</span></mat-label>\n                            <input appCurrencyDirective matInput maxlength=\"14\" formControlName=\"TotalRecordsAtRegistration\">                            \n                            <mat-error *ngIf=\"formPurposeRetention.get('TotalRecordsAtRegistration').invalid\">{{ getPatternErrorMessage() }}</mat-error>\n                        </mat-form-field>  \n                        \n                        <mat-form-field hintLabel=\"The % annual growth of Personal Records held\">\n                            <mat-label>Percentage Annual Growth <span class=\"optional-field\">optional</span></mat-label>\n                            <input appCurrencyDirective matInput max=\"100\" maxlength=\"3\" formControlName=\"RecordPercentageGrowth\">                            \n                            <mat-error *ngIf=\"formPurposeRetention.get('RecordPercentageGrowth').invalid\">{{ getRecordPercentageGrowthErrorMessage() }}</mat-error>\n                            <mat-hint align=\"end\">Max. 100%</mat-hint>      \n                            <span matSuffix>%</span>\n                        </mat-form-field>   \n        \n                        <mat-form-field hintLabel=\"Duration for which personal data shall be kept (Years).\">\n                            <mat-label>Retention period <span class=\"required-field\">required</span></mat-label>\n                            <input appCurrencyDirective max=\"100\" matInput maxlength=\"3\" formControlName=\"RetentionPeriod\">                          \n                            <mat-error *ngIf=\"formPurposeRetention.get('RetentionPeriod').invalid\">{{ getRetentionPeriodErrorMessage() }}</mat-error>\n                            <mat-hint align=\"end\">Max. 100 years</mat-hint>      \n                            <span matSuffix>Year(s)</span>\n                        </mat-form-field>\n                    </form>\n        \n                    <div class=\"button-wrapper\">       \n                        <button mat-button class=\"back-btn\" matStepperPrevious>Back</button>\n        \n                        <button \n                            mat-button \n                            class=\"save-draft-btn\"\n                            [disabled]=\"processing\"\n                            (click)=\"onSaveDraft()\"\n                            color=\"primary\">\n                            Save\n                        </button> \n\n                        <button \n                            [disabled]=\"formPurposeRetention.invalid\"\n                            mat-button \n                            class=\"next-btn\" \n                            color=\"primary\" \n                            matStepperNext>\n                            Next\n                        </button>\n                    </div>             \n                </mat-step>\n        \n                <mat-step [stepControl]=\"formThirdParties\">\n                    <ng-template matStepLabel>\n                        <h3>Disclosure & Transfer</h3>\n                    </ng-template>\n        \n                    <form [formGroup]=\"formThirdParties\">\n        \n                        <h1 class=\"full-width step-header\">List of persons or Bodies to whom personal data may be disclosed</h1>\n                        \n                        <div class=\"grouped-items full-width\">\n                            <h3>Do you disclose Personal Data to other Persons or Bodies ?</h3>\n            \n                            <mat-radio-group color=\"primary\" aria-label=\"Pick one\" formControlName=\"PersonalDataIsForDisclosure\">\n                                <mat-radio-button value=\"Yes\">Yes</mat-radio-button>\n                                <mat-radio-button value=\"No\">No</mat-radio-button>\n                            </mat-radio-group>        \n                        </div>    \n\n                        <section \n                            *ngIf=\"formThirdParties.get('PersonalDataIsForDisclosure').value === 'Yes'\"\n                            class=\"expand-section reduced-properties table-wrapper fadeInUp _delay3ms\">\n                            <button \n                                mat-button\n                                color=\"primary\"\n                                [disabled]=\"processing\"\n                                class=\"add-item-button\"\n                                (click)=\"onAddAThirdParty()\">\n                                <div class=\"button-label\">\n                                    <mat-icon>add</mat-icon>                            \n                                    <span>Add Person / Body</span>\n                                </div>\n                            </button>\n                            \n                            <div class=\"table-wrapper\">\n                                <table \n                                    mat-table \n                                    #thirdPartyMatSort=\"matSort\"\n                                    matSortDisableClear=\"true\"\n                                    [dataSource]=\"thirdPartyDataSource\"\n                                    matSort>\n                    \n                                    <ng-container matColumnDef=\"Count\">\n                                        <th mat-header-cell *matHeaderCellDef> # </th>\n                                        <td mat-cell *matCellDef=\"let index = index\"> {{ index + 1 }} </td>\n                                    </ng-container>\n                    \n                                    <ng-container matColumnDef=\"NameOfThirdParty\">\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Person / Body </th>\n                                        <td mat-cell *matCellDef=\"let row\">{{ row.ThirdPartyName }}</td>\n                                    </ng-container>          \n                    \n                                    <ng-container matColumnDef=\"Purpose\">\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Purpose </th>\n                                        <td mat-cell *matCellDef=\"let row\">{{ row.Purpose }}</td>\n                                    </ng-container>                                 \n                    \n                                    <!-- Actions Column -->\n                                    <ng-container matColumnDef=\"Actions\">\n                                        <th mat-header-cell *matHeaderCellDef> Actions </th>\n                                        <td mat-cell *matCellDef=\"let row; let index = index\">\n                                            <button \n                                                mat-button \n                                                class=\"action-btn\"\n                                                [matMenuTriggerFor]=\"menu\" \n                                                (click)=\"$event.stopPropagation()\"\n                                                matTooltip=\"See more options\">\n                                                <mat-icon>more_vert</mat-icon>\n                                            </button>\n                    \n                                            <mat-menu yPosition=\"below\" #menu=\"matMenu\" class=\"more-options-mat-menu\">\n                    \n                                                <button \n                                                    mat-menu-item \n                                                    (click)=\"$event.stopPropagation();onEditThirdParty(row)\">\n                                                    <mat-icon>edit</mat-icon>\n                                                    <span>Make Changes</span>\n                                                </button>\n                                                      \n                                                <hr />\n                    \n                                                <button \n                                                    mat-menu-item \n                                                    (click)=\"$event.stopPropagation();onRemoveThirdParty(row)\">\n                                                    <mat-icon color=\"warn\">delete</mat-icon>\n                                                    <span>Remove</span>\n                                                </button>\n                    \n                                            </mat-menu>                                                  \n                                        </td>\n                                    </ng-container>\n                    \n                                    <tr mat-header-row *matHeaderRowDef=\"thirdPartyDisplayedColumns\"></tr>\n                                    <tr mat-row *matRowDef=\"let row; columns: thirdPartyDisplayedColumns;\" class=\"mat-data-row\"></tr>\n                                </table>\n        \n                                <mat-paginator \n                                    #thirdPartyPaginator\n                                    [pageSize]=\"10\"\n                                    [pageSizeOptions]=\"[5, 10]\">\n                                </mat-paginator>                    \n                            </div>                \n                        </section>    \n                        \n                        <hr class=\"full-width\" />\n        \n                        <div class=\"grouped-items full-width\">\n                            <h3>Do you Transfer personal data outside Uganda ?</h3>\n            \n                            <mat-radio-group color=\"primary\" aria-label=\"Pick one\" formControlName=\"StoreDataOutsideCountry\">\n                                <mat-radio-button value=\"Yes\">Yes</mat-radio-button>\n                                <mat-radio-button value=\"No\">No</mat-radio-button>\n                            </mat-radio-group>        \n                        </div> \n        \n                        <section \n                            *ngIf=\"formThirdParties.get('StoreDataOutsideCountry').value === 'Yes'\"\n                            class=\"expand-section reduced-properties table-wrapper\">\n                            <button \n                                mat-button\n                                color=\"primary\"\n                                [disabled]=\"processing\"\n                                class=\"add-item-button\"\n                                (click)=\"onAddACountry()\">\n                                <div class=\"button-label\">\n                                    <mat-icon>add</mat-icon>                            \n                                    <span>Add A Country</span>\n                                </div>\n                            </button>\n                            \n                            <div class=\"table-wrapper\">\n                                <table \n                                    mat-table \n                                    #countryOfTransferMatSort=\"matSort\"\n                                    matSortDisableClear=\"true\"\n                                    [dataSource]=\"countriesDataSource\"\n                                    matSort>\n                    \n                                    <ng-container matColumnDef=\"Count\">\n                                        <th mat-header-cell *matHeaderCellDef> # </th>\n                                        <td mat-cell *matCellDef=\"let index = index\"> {{ index + 1 }} </td>\n                                    </ng-container>\n                    \n                                    <ng-container matColumnDef=\"Country\">\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Country </th>\n                                        <td mat-cell *matCellDef=\"let row\">{{ row.Country }}</td>\n                                    </ng-container>          \n                    \n                                    <ng-container matColumnDef=\"Purpose\">\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Purpose </th>\n                                        <td mat-cell *matCellDef=\"let row\">{{ row.Purpose }}</td>\n                                    </ng-container>                                 \n                    \n                                    <ng-container matColumnDef=\"Description\">\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Description </th>\n                                        <td mat-cell *matCellDef=\"let row\">{{ row.Description }}</td>\n                                    </ng-container>                                 \n                    \n                                    <!-- Actions Column -->\n                                    <ng-container matColumnDef=\"Actions\">\n                                        <th mat-header-cell *matHeaderCellDef> Actions </th>\n                                        <td mat-cell *matCellDef=\"let row; let index = index\">\n                                            <button \n                                                mat-button \n                                                class=\"action-btn\"\n                                                [matMenuTriggerFor]=\"menu\" \n                                                (click)=\"$event.stopPropagation()\"\n                                                matTooltip=\"See more options\">\n                                                <mat-icon>more_vert</mat-icon>\n                                            </button>\n                    \n                                            <mat-menu yPosition=\"below\" #menu=\"matMenu\" class=\"more-options-mat-menu\">\n                    \n                                                <button \n                                                    mat-menu-item \n                                                    (click)=\"$event.stopPropagation();onEditCountry(row)\">\n                                                    <mat-icon>edit</mat-icon>\n                                                    <span>Make Changes</span>\n                                                </button>\n                                                      \n                                                <hr />\n                    \n                                                <button \n                                                    mat-menu-item \n                                                    (click)=\"$event.stopPropagation();onRemoveCountry(row)\">\n                                                    <mat-icon color=\"warn\">delete</mat-icon>\n                                                    <span>Remove</span>\n                                                </button>\n                    \n                                            </mat-menu>                                                  \n                                        </td>\n                                    </ng-container>\n                    \n                                    <tr mat-header-row *matHeaderRowDef=\"countryDisplayedColumns\"></tr>\n                                    <tr mat-row *matRowDef=\"let row; columns: countryDisplayedColumns;\" class=\"mat-data-row\"></tr>\n                                </table>\n        \n                                <mat-paginator \n                                    #countryOfTransferPaginator\n                                    [pageSize]=\"10\"\n                                    [pageSizeOptions]=\"[5, 10]\">\n                                </mat-paginator>                    \n                            </div>                \n                        </section>                   \n        \n                    </form>\n        \n                    <div class=\"button-wrapper\">\n                        <button mat-button class=\"back-btn\" matStepperPrevious>Back</button>\n                        \n                        <button \n                            mat-button \n                            class=\"save-draft-btn\"\n                            [disabled]=\"processing\"\n                            (click)=\"onSaveDraft()\"\n                            color=\"primary\">\n                            Save\n                        </button> \n\n                        <button \n                            mat-button \n                            [disabled]=\"formThirdParties.invalid \n                            || processing \n                            || ((formThirdParties.get('PersonalDataIsForDisclosure').value === 'Yes') && (thirdParties.length === 0)) \n                            || ((formThirdParties.get('StoreDataOutsideCountry').value === 'Yes') && (countries.length === 0))\" \n                            class=\"next-btn\" \n                            color=\"primary\" \n                            matStepperNext>\n                            Next\n                        </button>\n                    </div>\n                </mat-step>\n        \n                <mat-step [stepControl]=\"formSecurityMeasures\">\n                    <ng-template matStepLabel>\n                        <h3>Security Information</h3>\n                    </ng-template>\n        \n                    <form [formGroup]=\"formSecurityMeasures\">\n        \n                        <h1 class=\"full-width step-header\">State security measures in place to safeguard personal data collected or processed.</h1>\n        \n                        <section class=\"expand-section reduced-properties table-wrapper no-padding\">\n                            <button \n                                mat-button\n                                color=\"primary\"\n                                [disabled]=\"processing\"\n                                class=\"add-item-button\"\n                                (click)=\"onAddSecurityMeasure()\">\n                                <div class=\"button-label\">\n                                    <mat-icon>add</mat-icon>                            \n                                    <span>Add A Security Measure</span>\n                                </div>\n                            </button>\n                            \n                            <div class=\"table-wrapper\">\n                                <table \n                                    mat-table \n                                    #securityMeasureMatSort=\"matSort\"\n                                    matSortDisableClear=\"true\"\n                                    [dataSource]=\"securityMeasureDataSource\"\n                                    matSort>\n                    \n                                    <ng-container matColumnDef=\"Count\">\n                                        <th mat-header-cell *matHeaderCellDef> # </th>\n                                        <td mat-cell *matCellDef=\"let index = index\"> {{ index + 1 }} </td>\n                                    </ng-container>\n                    \n                                    <ng-container matColumnDef=\"SecurityMeasure\">\n                                        <th mat-header-cell *matHeaderCellDef mat-sort-header> Security Measure </th>\n                                        <td mat-cell *matCellDef=\"let row\">{{ row.SecurityMeasure }}</td>\n                                    </ng-container>                                  \n                    \n                                    <!-- Actions Column -->\n                                    <ng-container matColumnDef=\"Actions\">\n                                        <th mat-header-cell *matHeaderCellDef> Actions </th>\n                                        <td mat-cell *matCellDef=\"let row; let index = index\">\n                                            <button \n                                                mat-button \n                                                class=\"action-btn\"\n                                                [matMenuTriggerFor]=\"menu\" \n                                                (click)=\"$event.stopPropagation()\"\n                                                matTooltip=\"See more options\">\n                                                <mat-icon>more_vert</mat-icon>\n                                            </button>\n                    \n                                            <mat-menu yPosition=\"below\" #menu=\"matMenu\" class=\"more-options-mat-menu\">\n                \n                                                <button \n                                                    mat-menu-item \n                                                    (click)=\"$event.stopPropagation();onEditSecurityMeasure(row)\">\n                                                    <mat-icon>edit</mat-icon>\n                                                    <span>Make Changes</span>\n                                                </button>\n                                                      \n                                                <hr />\n                    \n                                                <button \n                                                    mat-menu-item \n                                                    (click)=\"$event.stopPropagation();onRemoveSecurityMeasure(row)\">\n                                                    <mat-icon color=\"warn\">delete</mat-icon>\n                                                    <span>Remove</span>\n                                                </button>                                        \n                    \n                                            </mat-menu>                                                  \n                                        </td>\n                                    </ng-container>\n                    \n                                    <tr mat-header-row *matHeaderRowDef=\"securityMeasuresDisplayedColumns\"></tr>\n                                    <tr mat-row *matRowDef=\"let row; columns: securityMeasuresDisplayedColumns;\" [ngClass]=\"{'selected-mat-data-row': selectedSpouse === row}\" class=\"mat-data-row\"></tr>\n                                </table>\n        \n                                <mat-paginator \n                                    #securityMeasurePaginator\n                                    [pageSize]=\"10\"\n                                    [pageSizeOptions]=\"[5, 10]\">\n                                </mat-paginator>                    \n                            </div>                \n                        </section>    \n                        \n                        <section class=\"expand-section reduced-properties table-wrapper margin documents\">\n                            <h1 class=\"full-width step-header\">Attach supporting documentation eg approved information security policy.</h1>\n        \n                            <div class=\"buttons\">\n                                <button \n                                    mat-button\n                                    color=\"primary\"\n                                    [disabled]=\"processing\"\n                                    class=\"add-item-button\"\n                                    (click)=\"onUploadAttachments()\">\n                                    <div class=\"button-label\">\n                                        <mat-icon>add</mat-icon>                            \n                                        <span> {{ document ? 'Replace Document' : 'Upload Attachment' }} </span>\n                                    </div>\n                                </button>\n            \n                                <button \n                                    mat-button\n                                    *ngIf=\"document\"\n                                    color=\"primary\"\n                                    [disabled]=\"processing\"\n                                    class=\"remove-button\"\n                                    (click)=\"onRemoveDocument()\">\n                                    <div class=\"button-label\">\n                                        <mat-icon>clear</mat-icon>\n                                        <span> Remove Document </span>\n                                    </div>\n                                </button>\n                            </div>\n        \n                            <div *ngIf=\"document\" class=\"uploaded-document\" matTooltip=\"Open Document\" (click)=\"onReadDocument(document)\">\n                                <img src=\"./assets/img/pdf.png\" alt=\"\">\n        \n                                <span>Document: {{ document.Name }} <span>  -  {{ document.Size }} Mbs</span></span>\n                            </div>\n        \n                        </section>\n        \n                        <hr class=\"full-width\" />\n        \n                        <section class=\"expand-section reduced-properties table-wrapper margin documents\">\n                            <h1 class=\"full-width step-header\">Attach Form 3</h1>\n        \n                            <div class=\"buttons\">        \n                                <button\n                                    mat-button\n                                    color=\"accent\"\n                                    class=\"download-form\"                           \n                                    (click)=\"onDownloadForm3()\">\n                                    <div class=\"button-label\">\n                                        <mat-icon>sim_card_download</mat-icon>                            \n                                        <span>Download Form 3</span>\n                                    </div>                        \n                                </button>\n        \n                                <button \n                                    mat-button\n                                    color=\"primary\"\n                                    [disabled]=\"processing\"\n                                    class=\"add-item-button\"\n                                    (click)=\"onUploadForm3Attachments()\">\n                                    <div class=\"button-label\">\n                                        <mat-icon>add</mat-icon>                            \n                                        <span> {{ documentForm3 ? 'Replace Form 3' : 'Upload Form 3' }} </span>\n                                    </div>\n                                </button>\n            \n                                <button \n                                    mat-button\n                                    *ngIf=\"documentForm3\"\n                                    color=\"primary\"\n                                    [disabled]=\"processing\"\n                                    class=\"remove-button\"\n                                    (click)=\"onRemoveForm3Document()\">\n                                    <div class=\"button-label\">\n                                        <mat-icon>clear</mat-icon>\n                                        <span> Remove Document </span>\n                                    </div>\n                                </button>\n                            </div>\n        \n                            <div *ngIf=\"documentForm3\" class=\"uploaded-document\" matTooltip=\"Open Document\" (click)=\"onReadDocument(documentForm3)\">\n                                <img src=\"./assets/img/pdf.png\" alt=\"\">\n        \n                                <span>Document: {{ documentForm3.Name }} <span>  -  {{ documentForm3.Size }} Mbs</span> </span>\n                            </div>\n        \n                        </section>\n\n                        <section class=\"expand-section reduced-properties table-wrapper margin documents\">\n                            <h1 class=\"full-width step-header\">Attach Proof of Payment</h1>\n        \n                            <div class=\"buttons\">\n                                <button \n                                    mat-button\n                                    color=\"primary\"\n                                    [disabled]=\"processing\"\n                                    class=\"add-item-button\"\n                                    (click)=\"onUploadProofOfPayment()\">\n                                    <div class=\"button-label\">\n                                        <mat-icon>add</mat-icon>                            \n                                        <span> {{ proofOfPayment ? 'Replace Document' : 'Upload Proof of Payment' }} </span>\n                                    </div>\n                                </button>\n            \n                                <button \n                                    mat-button\n                                    *ngIf=\"proofOfPayment\"\n                                    color=\"primary\"\n                                    [disabled]=\"processing\"\n                                    class=\"remove-button\"\n                                    (click)=\"onRemoveProofOfPaymen()\">\n                                    <div class=\"button-label\">\n                                        <mat-icon>clear</mat-icon>\n                                        <span> Remove Document </span>\n                                    </div>\n                                </button>\n                            </div>\n        \n                            <div *ngIf=\"proofOfPayment\" class=\"uploaded-document\" matTooltip=\"Open Document\" (click)=\"onReadDocument(proofOfPayment)\">\n                                <img src=\"./assets/img/pdf.png\" alt=\"\">\n        \n                                <span>Document: {{ proofOfPayment.Name }} <span>  -  {{ proofOfPayment.Size }} Mbs</span> </span>\n                            </div>\n        \n                        </section>\n        \n                        <hr class=\"full-width\" />\n        \n                \n        \n                        <hr class=\"full-width\" />\n        \n                        <mat-checkbox\n                            class=\"full-width\"\n                            formControlName=\"RegistrationConsent\"\n                            color=\"primary\">\n                            I certify that the above information is correct and complete and here by apply to be registered as \n                            data collector/ data processor / data controller (This shall be based on th category selected) \n                            under the data Protection and Privacy Act.\n                            <mat-error *ngIf=\"formSecurityMeasures.get('RegistrationConsent').invalid\">{{ getCheckboxErrorMessage() }}</mat-error>   \n                        </mat-checkbox>       \n                        \n                        <mat-form-field class=\"full-width\" hintLabel=\"The person authorized to complete and submit this application on the behalf of the applicant organization\">\n                            <mat-label>Name and title of person submitting the application<span class=\"required-field\">required</span></mat-label>\n                            <input appUppercase #RegistrationDoneByInput matInput maxlength=\"50\" formControlName=\"RegistrationDoneBy\">  \n                            <mat-error *ngIf=\"formSecurityMeasures.get('RegistrationDoneBy').invalid\">{{ getRegistrationDoneByErrorMessage() }}</mat-error>                             \n                            <mat-hint align=\"end\">{{ RegistrationDoneByInput.value.length }} / 50</mat-hint>    \n                        </mat-form-field>                  \n        \n                    </form>\n        \n                    <div class=\"button-wrapper\">\n                        <button mat-button class=\"back-btn\" matStepperPrevious>Back</button>\n\n                        <button \n                            mat-button \n                            [disabled]=\"processing\"\n                            class=\"save-draft-btn\"\n                            [disabled]=\"processing\"\n                            (click)=\"onSaveDraft()\"\n                            color=\"primary\">\n                            Save\n                        </button>                         \n\n                        <div class=\"buttons\">\n                            <button\n                                mat-button\n                                color=\"primary\" \n                                [disabled]=\"formGeneralInformation.invalid || formOrganisationDetails.invalid || formPersonalDataHeld.invalid || formPurposeRetention.invalid || formThirdParties.invalid || formSecurityMeasures.invalid || processing || securityMeasures.length === 0 || !documentForm3\" \n                                class=\"download\" \n                                matTooltip=\"Keep a copy of the information you have filled in\"\n                                (click)=\"onPreviewForm(true)\">\n                                <div class=\"button-label\">\n                                    <mat-icon>sim_card_download</mat-icon>\n                                    <span>Download</span>\n                                </div>\n                            </button>\n        \n                            <button\n                                mat-button\n                                color=\"primary\" \n                                [disabled]=\"formGeneralInformation.invalid || formOrganisationDetails.invalid || formPersonalDataHeld.invalid || formPurposeRetention.invalid || formThirdParties.invalid || formSecurityMeasures.invalid || processing || securityMeasures.length === 0 || !documentForm3\" \n                                class=\"preview\" \n                                matTooltip=\"Have a look at all the information you have filled in before sending.\"\n                                (click)=\"onPreviewForm(false)\">\n                                <div class=\"button-label\">\n                                    <mat-icon>visibility</mat-icon>\n                                    <span>Preview</span>\n                                </div>\n                            </button>\n        \n                        \n                            <button \n                                mat-button \n                                class=\"next-btn submit-btn\" \n                                [disabled]=\"formGeneralInformation.invalid || formOrganisationDetails.invalid || formPersonalDataHeld.invalid || formPurposeRetention.invalid || formThirdParties.invalid || formSecurityMeasures.invalid || processing || securityMeasures.length === 0 || !documentForm3\" \n                                [ngClass]=\"{'inline-processing-btn': processing}\" \n                                color=\"primary\" \n                                (click)=\"onSubmit()\">\n                                <app-inline-mat-spinner *ngIf=\"processing\"></app-inline-mat-spinner>                  \n                                <span>Submit Application</span>                    \n                            </button>                \n                        </div>\n                    </div>\n                </mat-step>\n        \n                <!-- <mat-step [stepControl]=\"form\">\n                    <ng-template matStepLabel>\n                        <h3>Legal <br /> Details</h3>\n                    </ng-template>\n        \n                    <form [formGroup]=\"form\">\n                        \n                    </form>\n        \n                    <div class=\"button-wrapper\">\n                        <button mat-button class=\"back-btn\" matStepperPrevious>Back</button>\n        \n                        <button \n                            mat-button \n                            [disabled]=\"form.invalid || processing\" \n                            class=\"next-btn\" \n                            color=\"primary\" \n                            matStepperNext>\n                            Next\n                        </button>\n                    </div>\n                </mat-step> -->\n        \n                <!-- <mat-step [stepControl]=\"formChildrenData\">\n                    <ng-template matStepLabel>\n                        <h3>Children <br /> Data</h3>\n                    </ng-template>\n        \n                    <form [formGroup]=\"formChildrenData\">\n                        \n                        <div class=\"grouped-items\">\n                            <h3>Do you collect personal data relating to Children?</h3>\n            \n                            <mat-radio-group color=\"primary\" aria-label=\"Pick one\" formControlName=\"CollectChildrenData\">\n                                <mat-radio-button value=\"Yes\">Yes</mat-radio-button>\n                                <mat-radio-button value=\"No\">No</mat-radio-button>\n                            </mat-radio-group>        \n                        </div>  \n        \n                        <mat-form-field>\n                            <mat-label>Please indicate who gave the consent <span class=\"required-field\">required</span></mat-label>\n                            <mat-select formControlName=\"ChildDataConsentor\">\n                                <mat-option value=\"1\">Parents / Guardian</mat-option>\n                                <mat-option value=\"2\">Relevant Authority</mat-option>\n                            </mat-select>    \n                        </mat-form-field>                  \n        \n                        <mat-form-field>\n                            <mat-label>Purpose for collection <span class=\"required-field\">required</span></mat-label>\n                            <mat-select formControlName=\"PurposeForCollectingChildData\">\n                                <mat-option value=\"1\">Comply with the Law</mat-option>\n                                <mat-option value=\"2\">Research or Statistical Purposes</mat-option>\n                            </mat-select>    \n                        </mat-form-field>      \n                        \n                        <mat-form-field>\n                            <mat-label>Indicate the law being complied with <span class=\"required-field\">required</span></mat-label>\n                            <mat-select formControlName=\"ChildLawPurpose\">\n                                <mat-option value=\"1\">Child Law</mat-option>\n                            </mat-select>    \n                        </mat-form-field>                   \n                        \n                        <mat-form-field>\n                            <mat-label>Indicate the research beign carried out.<span class=\"required-field\">required</span></mat-label>\n                            <textarea #CaseTitleInput matInput maxlength=\"1000\" formControlName=\"ChildResearchPurpose\"></textarea>\n                            <mat-hint align=\"end\">{{ CaseTitleInput.value.length }} / 1000</mat-hint>\n                        </mat-form-field>                     \n        \n                    </form>\n        \n                    <div class=\"button-wrapper\">\n                        <button mat-button class=\"back-btn\" matStepperPrevious>Back</button>\n        \n                        <button \n                            mat-button \n                            [disabled]=\"formChildrenData.invalid || processing\" \n                            class=\"next-btn\" \n                            color=\"primary\" \n                            (click)=\"onSubmit()\"\n                            matStepperNext>\n                            Submit\n                        </button>\n                    </div>\n                </mat-step> -->\n        \n                <!-- <mat-step>\n                    <ng-template matStepLabel>\n                        <h3>Payment</h3>          \n                    </ng-template>\n        \n                    <form>\n                        <h1 class=\"full-width step-header\">Show payment options.</h1>  \n                    </form>\n        \n                    <div class=\"button-wrapper single-button-start\">\n                        <button mat-button class=\"back-btn\" matStepperPrevious>Back</button>\n        \n                        <button \n                            mat-raised-button \n                            color=\"primary\" \n                            [ngClass]=\"{'inline-processing-btn': processing }\" \n                            [disabled]=\"processing\"                      \n                            (click)=\"onSubmit()\">\n                                <div class=\"btn-label\">\n                                    <app-inline-mat-spinner *ngIf=\"processing\"></app-inline-mat-spinner>                        \n                                    <span>Submit</span>\n                                </div>\n                        </button>\n                    </div>              \n                </mat-step> -->\n            </mat-horizontal-stepper>   \n        </main>\n    </fury-page-layout-content>\n</fury-page-layout>\n\n\n","var Buffer = require('../utils/buffer')\n\n/**\n * Helper class to handle QR Code symbol modules\n *\n * @param {Number} size Symbol size\n */\nfunction BitMatrix (size) {\n  if (!size || size < 1) {\n    throw new Error('BitMatrix size must be defined and greater than 0')\n  }\n\n  this.size = size\n  this.data = new Buffer(size * size)\n  this.data.fill(0)\n  this.reservedBit = new Buffer(size * size)\n  this.reservedBit.fill(0)\n}\n\n/**\n * Set bit value at specified location\n * If reserved flag is set, this bit will be ignored during masking process\n *\n * @param {Number}  row\n * @param {Number}  col\n * @param {Boolean} value\n * @param {Boolean} reserved\n */\nBitMatrix.prototype.set = function (row, col, value, reserved) {\n  var index = row * this.size + col\n  this.data[index] = value\n  if (reserved) this.reservedBit[index] = true\n}\n\n/**\n * Returns bit value at specified location\n *\n * @param  {Number}  row\n * @param  {Number}  col\n * @return {Boolean}\n */\nBitMatrix.prototype.get = function (row, col) {\n  return this.data[row * this.size + col]\n}\n\n/**\n * Applies xor operator at specified location\n * (used during masking process)\n *\n * @param {Number}  row\n * @param {Number}  col\n * @param {Boolean} value\n */\nBitMatrix.prototype.xor = function (row, col, value) {\n  this.data[row * this.size + col] ^= value\n}\n\n/**\n * Check if bit at specified location is reserved\n *\n * @param {Number}   row\n * @param {Number}   col\n * @return {Boolean}\n */\nBitMatrix.prototype.isReserved = function (row, col) {\n  return this.reservedBit[row * this.size + col]\n}\n\nmodule.exports = BitMatrix\n","import {AfterViewInit,EventEmitter, Component, Input, OnDestroy, OnInit, ViewChild} from '@angular/core';\nimport {\n    DataType,\n    DateFinderOptions,\n    IFinderField,\n    ListColumn,\n    LookupFinderOptions,\n    TextFinderOptions\n} from '../../../../../@fury/shared/list/list-column.model';\nimport { PRN } from '../company-registration.model';\nimport { Subscription} from 'rxjs';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {MatDialog} from '@angular/material/dialog';\nimport {Observable, of, ReplaySubject} from 'rxjs';\nimport {filter} from 'rxjs/operators';\nimport {fadeInRightAnimation} from '../../../../../@fury/animations/fade-in-right.animation';\nimport {fadeInUpAnimation} from '../../../../../@fury/animations/fade-in-up.animation';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {BaseFuryForm} from '../../../../../@fury/shared/base-fury-form';\nimport {CdkTextareaAutosize} from '@angular/cdk/text-field';\nimport {KeycloakService} from 'keycloak-angular';\nimport {WorkflowServiceService} from '../../../../services/workflow-service.service';\nimport {CompanyRegistrationService} from '../../../company-registration/company-registration.service';\nimport { RoutingService } from '../../../../services/routing.service';\nimport { ComplaintService } from '../../../complaints/complaints.service';\nimport { SuccessfulMessageDialogComponent } from '../../../../layout/dialogs/successful-message-dialog/successful-message-dialog.component';\nimport { ApiService } from '../../../../services/api.service';\nimport { environment } from '../../../../../environments/environment';\nimport {HttpClient} from '@angular/common/http';\nimport { ApiPayload } from '../../../../services/api.model';\nimport { ApiEndpointsService } from '../../../../services/api-endpoints.service';\nimport { catchError } from 'rxjs/operators';\n\n\n@Component({\n  selector: 'fury-manage-ura-payment',\n  templateUrl: './manage-ura-payment.component.html',\n  styleUrls: ['./manage-ura-payment.component.scss'],\n\n  animations: [fadeInRightAnimation, fadeInUpAnimation]\n  \n})\nexport class ManageUraPaymentComponent extends BaseFuryForm implements OnInit, AfterViewInit, OnDestroy {\n\n      // TODO:: Simulating a service with http that returns observables\n      subject$: ReplaySubject<PRN[]> = new ReplaySubject<PRN[]>(1);\n      data$: Observable<PRN[]> = this.subject$.asObservable();\n      PrnData: [];\n      dialogRef;\n      processing = false;\n      $processingEvent: EventEmitter<boolean> = new EventEmitter();\n      $errorsEvent: EventEmitter<any> = new EventEmitter();\n      $resultComplaintsEvent: EventEmitter<PRN> = new EventEmitter();\n      statusList: any[] = [];\n      pageSize = 10;\n      httpSub: Subscription;\n      subscriptions: Subscription[] = [];\n      statuses: any = [\n          {code: '001', description: 'Form 9'},\n          {code: '002', description: 'FORM 6'},\n          {code: '003', description: 'FORM 11'}\n      ];\n  \n      @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n      @ViewChild(MatSort, {static: true}) sort: MatSort;\n      @Input()\n  \n  \n  \n      columns: ListColumn[] = [\n          {name: 'Organisation', property: 'OrganisationName', visible: true, isModelProperty: true},\n          {name: 'PRN', property: 'PRN', visible: true, isModelProperty: true},\n          {name: 'Search Code', property: 'SearchCode', visible: true, isModelProperty: true},\n          {name: 'Generation Date', property: 'PRNGenerationDate', visible: true, isModelProperty: true},\n          {name: 'Days Passed', property: 'DaysPassed', visible: true, isModelProperty: true},\n          {name: 'Actions', property: 'actions', visible: true},\n      ] as ListColumn[];\n  \n      dataSource: MatTableDataSource<PRN> =  new MatTableDataSource<PRN>();\n  \n      // Search fields\n      searchFields: IFinderField[];\n  \n      @ViewChild('autosize') autosize: CdkTextareaAutosize;\n\n  constructor(\n    private dialog: MatDialog,\n    private route: ActivatedRoute, public authService: KeycloakService,\n    private router: Router,\n    private service: ApiService,\n    private http: HttpClient,\n    private endpoints: ApiEndpointsService,\n    public _workflowService: WorkflowServiceService,\n    public registrationService: CompanyRegistrationService,\n    public complaintService: ComplaintService,\n    private routingService : RoutingService\n  ) {\n        super(\n          authService,\n          _workflowService, registrationService, \n          complaintService\n      );\n   }\n\n      // TODO:: Need to hide addressedTo Column from data controllers its mainly for nita data-protection officers\n      get visibleColumns() {\n        return this.columns.filter(column => column.visible).map(column => column.property);\n    }\n\n\n  ngOnInit(): void {\n\n    this.dataSource.paginator = this.paginator;\n\n    this.getPRNData();\n\n    this.route.paramMap.subscribe(params => {\n        console.log(params.has('navigationPrams'));\n    });\n\n    this.statusList = this.getGenericDDL(this.statuses, {key: 'code', label: 'description'}, false);\n\n  }\n  ngAfterViewInit() {\n\n    setTimeout(() =>{\n\n        this.subscriptions['$resultComplaintsEvent'] = this.$resultComplaintsEvent.subscribe(result => {\n            if (result) {\n              console.log(result);\n                \n                this.PrnData = result.data;\n        \n\n                this.dataSource.data = result.data;\n        \n                this.isLoaded = true;\n            }\n            else{\n                console.log(\"expected\");\n            }\n        });\n    }, 0)\n\n}\n\nonFilterChange(value) {\n  if (!this.dataSource) {\n      return;\n  }\n  value = value.trim();\n  value = value.toLowerCase();\n  this.dataSource.filter = value;\n}\n\nngOnDestroy(): void {\n}\n\ngetPRNData() {\n  // tslint:disable-next-line:max-line-length\n  this.registrationService.getPrnData(this.$processingEvent, this.$resultComplaintsEvent, this.$errorsEvent);\n}\n\n\nviewPRNStatus(row){\n  console.log(row);\n  const data =  {\n\n    prn : row.PRN\n\n  }\n\n  this.httpSub = this.http.post<ApiPayload>(this.endpoints.checkPRN, data)\n    .pipe(catchError(this.service.handleError))\n    .subscribe((response) => {\n      console.log(response.data);\n\n      let message;\n      let status;\n\n      if(response.data.ErrorCode == 'A'){\n        message = 'The PRN is valid, however payment has not been made';\n        status = false;\n      }\n      else if(response.data.ErrorCode == 'R'){\n         message =  'The PRN is valid, however the cheque has not yet matured';\n         status = false;\n      }\n      else if(response.data.ErrorCode == 'T'){\n         message = 'Received and credited. The payment has been reconciled with the  bank';\n         status = true;\n      }\n      else if(response.data.ErrorCode == 'D'){\n         message = 'The PRN is valid, however the cheque was dishonoured';\n         status = false;\n      }\n      else if(response.data.ErrorCode == 'C'){\n         message = 'The PRN was cancelled';\n         status = false;\n      }\n      else if(response.data.ErrorCode == 'X'){\n         message = 'THe PRN has expired';\n         status = false;\n      }\n      else if(response.data.ErrorCode == 'APPOO1'){\n        message = response.data.ErrorDesc;\n        status =  false;\n      }\n      else{\n        message = 'An error occured';\n        status = false;\n      }\n\n\n      \n      this.dialogRef = this.dialog.open(SuccessfulMessageDialogComponent, {\n        disableClose: true,\n        data: {\n          title: 'URA PRN',\n          message: message,\n          status: false,\n        }\n      });\n\n\n      this.processing = false;\n    }, (error) => {\n      this.processing = false;\n\n      if (error.error.message) {\n        this.dialogRef = this.dialog.open( SuccessfulMessageDialogComponent, {\n          panelClass: ['forward-message-dialog', 'dialogs'],\n          disableClose: true,\n          data: {\n            title: error.error.message['title'] ? error.error.message['title'] : 'Operation Failed',\n            message: error.error.message['body'] ? error.error.message['body'] : environment.technicalErrorResponse,\n            status: false,\n          }\n        });\n      } else {\n        this.service.determineErrorResponse(error);\n      }\n    });\n}\n\n}\n","<fury-page-layout mode=\"card\">\n    <fury-page-layout-header>\n        <fury-breadcrumbs [@fadeInRight] [crumbs]=\"['PRN']\" current=\"Find\"></fury-breadcrumbs>\n    </fury-page-layout-header>\n\n    <fury-page-layout-content [@fadeInUp]>\n        <fury-list name=\"PRN\" [columns]=\"columns\" (filterChange)=\"onFilterChange($event)\"\n                   finderDialogTitle=\"PRN Finder\"\n                   [searchFields]=\"searchFields\">\n            <table [dataSource]=\"dataSource\" mat-table matSort>\n                <ng-container matColumnDef=\"checkbox\">\n                    <th *matHeaderCellDef class=\"actions-cell\" mat-header-cell>\n                        <mat-checkbox color=\"primary\" (click)=\"$event.stopPropagation()\"></mat-checkbox>\n                    </th>\n                    <td *matCellDef=\"let row\" class=\"actions-cell\" mat-cell>\n                        <mat-checkbox color=\"primary\" (click)=\"$event.stopPropagation()\"></mat-checkbox>\n                    </td>\n                </ng-container>\n\n                <!-- fullName Column -->\n                <ng-container *ngFor=\"let column of columns\">\n                    <ng-container *ngIf=\"column.isModelProperty\" [matColumnDef]=\"column.property\">\n                        <th *matHeaderCellDef mat-header-cell mat-sort-header> {{ column.name }}</th>\n                        <td *matCellDef=\"let row\" mat-cell>\n                            {{ row[column.property] }}\n                        </td>\n                    </ng-container>\n                </ng-container>\n\n                <ng-container matColumnDef=\"actions\">\n                    <th *matHeaderCellDef class=\"actions-cell\" mat-header-cell mat-sort-header></th>\n                    <td *matCellDef=\"let row\" class=\"actions-cell\" mat-cell>\n                        <button type=\"button\" mat-icon-button [matMenuTriggerFor]=\"actionsMenu\"\n                                (click)=\"$event.stopPropagation()\">\n                            <mat-icon>more_vert</mat-icon>\n                        </button>\n\n                        <mat-menu #actionsMenu=\"matMenu\" yPosition=\"below\" xPosition=\"before\">\n                            <!-- <button (click)=\"viewComplaint(row)\"  mat-menu-item\n                                routerLinkActive=\"router-link-active\">\n                                <mat-icon>visibility</mat-icon>\n                                <span>View</span>\n                            </button> -->\n                            <button (click)=\"viewPRNStatus(row)\" mat-menu-item routerLinkActive=\"router-link-active\">\n                                <mat-icon>settings</mat-icon>\n                                <span>View status</span>\n                            </button>\n                        </mat-menu>\n                    </td>\n                </ng-container>\n                <tr *matHeaderRowDef=\"visibleColumns\" mat-header-row></tr>\n                <tr\n                        *matRowDef=\"let row; columns: visibleColumns;\"\n                        class=\"clickable route-animations-elements\"\n                        mat-row></tr>\n            </table>\n            <mat-paginator  [pageSize]=\"pageSize\"></mat-paginator>\n        </fury-list>\n    </fury-page-layout-content>\n</fury-page-layout>\n\n\n","/**\n * Implementation of a subset of node.js Buffer methods for the browser.\n * Based on https://github.com/feross/buffer\n */\n\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar isArray = require('isarray')\n\nfunction typedArraySupport () {\n  // Can typed array instances be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nvar K_MAX_LENGTH = Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n\nfunction Buffer (arg, offset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, offset, length)\n  }\n\n  if (typeof arg === 'number') {\n    return allocUnsafe(this, arg)\n  }\n\n  return from(this, arg, offset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n\n  // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true,\n      enumerable: false,\n      writable: false\n    })\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\nfunction createBuffer (that, length) {\n  var buf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    buf = new Uint8Array(length)\n    buf.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    buf = that\n    if (buf === null) {\n      buf = new Buffer(length)\n    }\n    buf.length = length\n  }\n\n  return buf\n}\n\nfunction allocUnsafe (that, size) {\n  var buf = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      buf[i] = 0\n    }\n  }\n\n  return buf\n}\n\nfunction fromString (that, string) {\n  var length = byteLength(string) | 0\n  var buf = createBuffer(that, length)\n\n  var actual = buf.write(string)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    buf.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    buf = fromArrayLike(that, buf)\n  }\n\n  return buf\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(that, len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction byteLength (string) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  return utf8ToBytes(string).length\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction from (that, value, offset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, offset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, offset)\n  }\n\n  return fromObject(that, value)\n}\n\nBuffer.prototype.write = function write (string, offset, length) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n    } else {\n      length = undefined\n    }\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  return utf8Write(this, string, offset, length)\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    // Return an augmented `Uint8Array` instance\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\nBuffer.prototype.fill = function fill (val, start, end) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : new Buffer(val)\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return createBuffer(null, 0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = allocUnsafe(null, length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nBuffer.byteLength = byteLength\n\nBuffer.prototype._isBuffer = true\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nmodule.exports = Buffer\n","import {Component, OnInit, EventEmitter,ViewChild, Inject, Input, Output} from '@angular/core';\nimport {FormBuilder,FormControl, FormGroup, Validators} from '@angular/forms';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {BaseFuryForm} from '../../../../../@fury/shared/base-fury-form';\nimport {fadeInRightAnimation} from '../../../../../@fury/animations/fade-in-right.animation';\nimport {fadeInUpAnimation} from '../../../../../@fury/animations/fade-in-up.animation';\nimport {scaleInAnimation} from '../../../../../@fury/animations/scale-in.animation';\nimport {CdkTextareaAutosize} from '@angular/cdk/text-field';\nimport {Observable, of, ReplaySubject} from 'rxjs';\nimport { DocumentComment } from '../../../../../@fury/shared/base-fury-form.model';\nimport {KeycloakService} from 'keycloak-angular';\nimport {WorkflowServiceService} from '../../../../services/workflow-service.service';\nimport {CompanyRegistrationService} from '../../../company-registration/company-registration.service';\nimport {Action, ActionPerformed, WorkFlowActions, WorkFlowStep, WorkFlowTimeline, ActionMakeaComment} from '../../../models/document-workflow.model';\nimport {forkJoin, Subscription} from 'rxjs';\nimport {MatDialog, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport {OrgNoticeComponent} from '../../../../layout/dialogs/org-registration/org-notice/org-notice.component';\nimport {ComplaintCommentsComponent} from '../../../../layout/complaint-comments/complaint-comments.component';\nimport { ViewPdfDocumentBottomsheetComponent } from '../../../../layout/bottomsheets/view-pdf-document-bottomsheet/view-pdf-document-bottomsheet.component';\nimport { ApiPayload, FileUpload } from '../../../../services/api.model';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { ForwardMessageDialogComponent } from '../../../../layout/dialogs/forward-message-dialog/forward-message-dialog.component';\nimport { HttpClient } from '@angular/common/http';\nimport { ApiEndpointsService } from '../../../../services/api-endpoints.service';\nimport { catchError } from 'rxjs/operators';\nimport { ApiService } from '../../../../services/api.service';\nimport { environment } from '../../../../../environments/environment';\nimport {UtilService} from '../../../../../@fury/services/util.service';\nimport {DataSubjectModel} from '../../../models/data-subject.model';\nimport {SnackBarService} from '../../../../pages/services/snack-bar.service';\nimport { MoreInformationComponent } from '../../../../layout/dialogs/more-information/more-information.component';\nimport { MatCheckbox, MatCheckboxChange } from '@angular/material/checkbox';\nimport {SuccessfulMessageDialogComponent } from '../../../../layout/dialogs/successful-message-dialog/successful-message-dialog.component';\n\nimport { ComplaintService } from '../../../complaints/complaints.service';\nimport { AuthenticationService } from '../../../../authentication/authentication.service';\n\n@Component({\n  selector: 'fury-ura-payments',\n  templateUrl: './ura-payments.component.html',\n  styleUrls: ['./ura-payments.component.scss']\n})\nexport class UraPaymentsComponent extends BaseFuryForm implements OnInit {\n\n\n  processing = false;\n  httpSub: Subscription;\n  success_message = false;\n  dialogRef;\n  isLinear = false;\n  selected_role_id:string;\n  selected_role_name:string;\n  showPRN = false;\n  Organisation_User_ID : any;\n\n  current_prn : String;\n  current_search_code : String;\n\n  formCreateAccount: FormGroup;\n\n\n  constructor(    \n    private formBuilder: FormBuilder,\n    private activateRoute: ActivatedRoute,\n    private route: Router,\n    private dialog: MatDialog,\n    private bottomsheet: MatBottomSheet,\n    private endpoints: ApiEndpointsService,\n    private http: HttpClient,\n    private service: ApiService,\n    private allDialogRef: MatDialog,\n    private auth: KeycloakService,\n    public _auth: AuthenticationService,\n    private utilService: UtilService,\n    public snackBar: SnackBarService,\n    public authService: KeycloakService,\n    public _workflowService: WorkflowServiceService,\n    public registrationService: CompanyRegistrationService,\n    public complaintService: ComplaintService,) \n    { \n      super(\n        authService,\n        _workflowService,\n        registrationService,\n        complaintService\n    );\n\n\n    this.Organisation_User_ID = _auth.getUser().organisation_id;\n    console.log(this.Organisation_User_ID);\n\n    }\n\n\n  ngOnInit(): void {\n\n\n    this.formCreateAccount = this.formBuilder.group({\n\n      email: new FormControl('', [Validators.required, Validators.pattern(/^[a-zA-Z]+$/)]),\n      phone_number: new FormControl('', [Validators.required, Validators.pattern(/^[a-zA-Z]+$/)]),\n\n\n    });\n  }\n\n  ngAfterViewInit(): void {\n    this.httpSub = this.fetchRoles()\n    .pipe(catchError(this.service.handleError))\n    .subscribe((responseList) => {\n\n      this.processing = false;\n    }\n    , (error) => {\n        this.processing = false;\n        this.service.determineErrorResponse(error);\n      });  \n}\n\n\n  onSubmit(){\n\n    console.log(this.getFormData());\n    this.httpSub = this.http.post<ApiPayload>(this.endpoints.generatePRN, this.getFormData())\n    .pipe(catchError(this.service.handleError))\n    .subscribe((response) => {\n      console.log(response.data);\n    \n      this.current_prn = response.data.PRN;\n      this.current_search_code = response.data.SearchCode\n      this.showPRN = true;\n      \n      this.dialogRef = this.dialog.open(SuccessfulMessageDialogComponent, {\n        disableClose: true,\n        data: {\n          title: 'URA PRN',\n          message: 'PRN Generated successfully',\n          status: true,\n        }\n      });\n\n      this.processing = false;\n    }, (error) => {\n      this.processing = false;\n\n      if (error.error.message) {\n        this.dialogRef = this.dialog.open( ForwardMessageDialogComponent, {\n          panelClass: ['forward-message-dialog', 'dialogs'],\n          disableClose: true,\n          data: {\n            title: error.error.message['title'] ? error.error.message['title'] : 'Operation Failed',\n            message: error.error.message['body'] ? error.error.message['body'] : environment.technicalErrorResponse,\n            status: false,\n          }\n        });\n      } else {\n        this.service.determineErrorResponse(error);\n      }\n    });\n    \n\n  }\n\n\n  getFirstNameErrorMessage(): string {\n    return this.formCreateAccount.get('FirstName').hasError('required') \n    || this.formCreateAccount.get('ContactFirstName').hasError('required') ? 'Please enter a value' :\n    this.formCreateAccount.get('FirstName').hasError('pattern') \n    || this.formCreateAccount.get('ContactFirstName').hasError('pattern') ? 'Please enter a correct name' : '';\n  }\n\n  getLastNameErrorMessage(): string {\n    return this.formCreateAccount.get('LastName').hasError('required') \n    || this.formCreateAccount.get('ContactLastName').hasError('required') ? 'Please enter a value' :\n    this.formCreateAccount.get('LastName').hasError('pattern')\n    || this.formCreateAccount.get('ContactLastName').hasError('pattern') ? 'Please enter a correct name' : '';\n  }\n\n  getTelephoneNumberErrorMessage(): string {\n    return this.formCreateAccount.get('PhoneNumber').hasError('required') ? 'Please enter a value' : \n    this.formCreateAccount.get('PhoneNumber').hasError('pattern') ? 'Wrong Phone number' : ''\n  }\n\n  getEmailAddressErrorMessage(): string {\n    return this.formCreateAccount.get('ContactEmailAddress').hasError('required') ? 'Please enter a value' :\n    this.formCreateAccount.get('EmailAddress').hasError('email') \n    || this.formCreateAccount.get('ContactEmailAddress').hasError('email')  ? 'Wrong Email Address.' : '';\n  }\n\n  private getFormData(): any {\n    \n    const data = {\n        \n      phone_number: this.formCreateAccount.get('phone_number').value,\n      email: this.formCreateAccount.get('email').value,\n      organisation_user_id : this.Organisation_User_ID\n\n    }\n\n    return data;\n  }\n\n\n  private fetchRoles(): Observable<any[]> {\n    this.processing = true;\n\n    const Roles = this.http.get<ApiPayload>(this.endpoints.getKeycloakRoles);\n   \n    return forkJoin([Roles]);\n}\n\n\nonChangeOfRole(event, Role){\n  this.selected_role_id = Role.RoleID\n\n  this.selected_role_name = Role.RoleName\n}\n\n}\n","<fury-page-layout>\n    <fury-page-layout-header>\n        <fury-breadcrumbs [@fadeInRight]  current=\"Generate PRN\"></fury-breadcrumbs>\n    </fury-page-layout-header>\n    <fury-page-layout-content>\n        <div [@fadeInUp] class=\"\">\n                    \n                    <form [formGroup]=\"formCreateAccount\">\n                        <div>\n                            <mat-form-field fxFlex=\"2 2 auto\" [ngStyle]=\"{'margin-right': '20px'}\">\n                                <mat-label>Email Adress <span class=\"required-field\">required</span></mat-label>\n                                <input appRemoveSpaces matInput  formControlName=\"email\">\n            \n                            </mat-form-field>   \n            \n                            <mat-form-field fxFlex=\"2 2 auto\" [ngStyle]=\"{'margin-right': '20px'}\">\n                                <mat-label>Phone Number<span class=\"required-field\">required</span></mat-label>\n                                <input appRemoveSpaces matInput formControlName=\"phone_number\">                            \n\n                            </mat-form-field> \n                        </div><br>\n  \n                    </form>\n     \n                    <div class=\"buttons\" fxLayout=\"row\" fxLayoutAlign=\"center center\" fxLayoutGap=\"8px\">\n                        <button\n                            mat-button \n                            color=\"primary\" \n                            [ngClass]=\"{'inline-processing-btn': processing }\"      \n                            class=\"next-btn submit-btn\"                 \n                            (click)=\"onSubmit()\"\n                            mat-raised-button>                        \n                                <span>Generate PRN</span>\n                        </button>\n                    </div>\n        </div>\n\n        <div fxLayout=\"row\" fxLayoutAlign=\"center center\" fxLayoutGap=\"8px\" *ngIf=\"showPRN ==true\">\n            <h2 style=\"font-weight:700; \">PRN DETAILS</h2>\n        </div>\n            <br/><br/>\n            <div *ngIf=\"showPRN ==true\">\n                <table>\n\n                    <!--- Note that these columns can be defined in any order.\n                          The actual rendered columns are set as a property on the row definition\" -->\n                  \n                  \n                    <!-- PRN Column -->\n                    <tr>\n                        <th > PRN </th>\n                        <td > {{current_prn}} </td>\n                    </tr>\n                  \n                    <!-- CODE Column -->\n                    <tr>\n                        <th> SEARCH CODE </th>\n                        <td> {{current_search_code}} </td>\n                    </tr>\n                    \n              \n    \n                  </table>\n            </div>\n\n\n    </fury-page-layout-content>   \n</fury-page-layout>\n \n\n","// can-promise has a crash in some versions of react native that dont have\n// standard global objects\n// https://github.com/soldair/node-qrcode/issues/157\n\nmodule.exports = function () {\n  return typeof Promise === 'function' && Promise.prototype && Promise.prototype.then\n}\n","var Buffer = require('../utils/buffer')\n\nvar EXP_TABLE\nvar LOG_TABLE\n\nif (Buffer.alloc) {\n  EXP_TABLE = Buffer.alloc(512)\n  LOG_TABLE = Buffer.alloc(256)\n} else {\n  EXP_TABLE = new Buffer(512)\n  LOG_TABLE = new Buffer(256)\n}\n/**\n * Precompute the log and anti-log tables for faster computation later\n *\n * For each possible value in the galois field 2^8, we will pre-compute\n * the logarithm and anti-logarithm (exponential) of this value\n *\n * ref {@link https://en.wikiversity.org/wiki/Reed%E2%80%93Solomon_codes_for_coders#Introduction_to_mathematical_fields}\n */\n;(function initTables () {\n  var x = 1\n  for (var i = 0; i < 255; i++) {\n    EXP_TABLE[i] = x\n    LOG_TABLE[x] = i\n\n    x <<= 1 // multiply by 2\n\n    // The QR code specification says to use byte-wise modulo 100011101 arithmetic.\n    // This means that when a number is 256 or larger, it should be XORed with 0x11D.\n    if (x & 0x100) { // similar to x >= 256, but a lot faster (because 0x100 == 256)\n      x ^= 0x11D\n    }\n  }\n\n  // Optimization: double the size of the anti-log table so that we don't need to mod 255 to\n  // stay inside the bounds (because we will mainly use this table for the multiplication of\n  // two GF numbers, no more).\n  // @see {@link mul}\n  for (i = 255; i < 512; i++) {\n    EXP_TABLE[i] = EXP_TABLE[i - 255]\n  }\n}())\n\n/**\n * Returns log value of n inside Galois Field\n *\n * @param  {Number} n\n * @return {Number}\n */\nexports.log = function log (n) {\n  if (n < 1) throw new Error('log(' + n + ')')\n  return LOG_TABLE[n]\n}\n\n/**\n * Returns anti-log value of n inside Galois Field\n *\n * @param  {Number} n\n * @return {Number}\n */\nexports.exp = function exp (n) {\n  return EXP_TABLE[n]\n}\n\n/**\n * Multiplies two number inside Galois Field\n *\n * @param  {Number} x\n * @param  {Number} y\n * @return {Number}\n */\nexports.mul = function mul (x, y) {\n  if (x === 0 || y === 0) return 0\n\n  // should be EXP_TABLE[(LOG_TABLE[x] + LOG_TABLE[y]) % 255] if EXP_TABLE wasn't oversized\n  // @see {@link initTables}\n  return EXP_TABLE[LOG_TABLE[x] + LOG_TABLE[y]]\n}\n","var toSJISFunction\nvar CODEWORDS_COUNT = [\n  0, // Not used\n  26, 44, 70, 100, 134, 172, 196, 242, 292, 346,\n  404, 466, 532, 581, 655, 733, 815, 901, 991, 1085,\n  1156, 1258, 1364, 1474, 1588, 1706, 1828, 1921, 2051, 2185,\n  2323, 2465, 2611, 2761, 2876, 3034, 3196, 3362, 3532, 3706\n]\n\n/**\n * Returns the QR Code size for the specified version\n *\n * @param  {Number} version QR Code version\n * @return {Number}         size of QR code\n */\nexports.getSymbolSize = function getSymbolSize (version) {\n  if (!version) throw new Error('\"version\" cannot be null or undefined')\n  if (version < 1 || version > 40) throw new Error('\"version\" should be in range from 1 to 40')\n  return version * 4 + 17\n}\n\n/**\n * Returns the total number of codewords used to store data and EC information.\n *\n * @param  {Number} version QR Code version\n * @return {Number}         Data length in bits\n */\nexports.getSymbolTotalCodewords = function getSymbolTotalCodewords (version) {\n  return CODEWORDS_COUNT[version]\n}\n\n/**\n * Encode data with Bose-Chaudhuri-Hocquenghem\n *\n * @param  {Number} data Value to encode\n * @return {Number}      Encoded value\n */\nexports.getBCHDigit = function (data) {\n  var digit = 0\n\n  while (data !== 0) {\n    digit++\n    data >>>= 1\n  }\n\n  return digit\n}\n\nexports.setToSJISFunction = function setToSJISFunction (f) {\n  if (typeof f !== 'function') {\n    throw new Error('\"toSJISFunc\" is not a valid function.')\n  }\n\n  toSJISFunction = f\n}\n\nexports.isKanjiModeEnabled = function () {\n  return typeof toSJISFunction !== 'undefined'\n}\n\nexports.toSJIS = function toSJIS (kanji) {\n  return toSJISFunction(kanji)\n}\n","function BitBuffer () {\n  this.buffer = []\n  this.length = 0\n}\n\nBitBuffer.prototype = {\n\n  get: function (index) {\n    var bufIndex = Math.floor(index / 8)\n    return ((this.buffer[bufIndex] >>> (7 - index % 8)) & 1) === 1\n  },\n\n  put: function (num, length) {\n    for (var i = 0; i < length; i++) {\n      this.putBit(((num >>> (length - i - 1)) & 1) === 1)\n    }\n  },\n\n  getLengthInBits: function () {\n    return this.length\n  },\n\n  putBit: function (bit) {\n    var bufIndex = Math.floor(this.length / 8)\n    if (this.buffer.length <= bufIndex) {\n      this.buffer.push(0)\n    }\n\n    if (bit) {\n      this.buffer[bufIndex] |= (0x80 >>> (this.length % 8))\n    }\n\n    this.length++\n  }\n}\n\nmodule.exports = BitBuffer\n","/**\n * Data mask pattern reference\n * @type {Object}\n */\nexports.Patterns = {\n  PATTERN000: 0,\n  PATTERN001: 1,\n  PATTERN010: 2,\n  PATTERN011: 3,\n  PATTERN100: 4,\n  PATTERN101: 5,\n  PATTERN110: 6,\n  PATTERN111: 7\n}\n\n/**\n * Weighted penalty scores for the undesirable features\n * @type {Object}\n */\nvar PenaltyScores = {\n  N1: 3,\n  N2: 3,\n  N3: 40,\n  N4: 10\n}\n\n/**\n * Check if mask pattern value is valid\n *\n * @param  {Number}  mask    Mask pattern\n * @return {Boolean}         true if valid, false otherwise\n */\nexports.isValid = function isValid (mask) {\n  return mask != null && mask !== '' && !isNaN(mask) && mask >= 0 && mask <= 7\n}\n\n/**\n * Returns mask pattern from a value.\n * If value is not valid, returns undefined\n *\n * @param  {Number|String} value        Mask pattern value\n * @return {Number}                     Valid mask pattern or undefined\n */\nexports.from = function from (value) {\n  return exports.isValid(value) ? parseInt(value, 10) : undefined\n}\n\n/**\n* Find adjacent modules in row/column with the same color\n* and assign a penalty value.\n*\n* Points: N1 + i\n* i is the amount by which the number of adjacent modules of the same color exceeds 5\n*/\nexports.getPenaltyN1 = function getPenaltyN1 (data) {\n  var size = data.size\n  var points = 0\n  var sameCountCol = 0\n  var sameCountRow = 0\n  var lastCol = null\n  var lastRow = null\n\n  for (var row = 0; row < size; row++) {\n    sameCountCol = sameCountRow = 0\n    lastCol = lastRow = null\n\n    for (var col = 0; col < size; col++) {\n      var module = data.get(row, col)\n      if (module === lastCol) {\n        sameCountCol++\n      } else {\n        if (sameCountCol >= 5) points += PenaltyScores.N1 + (sameCountCol - 5)\n        lastCol = module\n        sameCountCol = 1\n      }\n\n      module = data.get(col, row)\n      if (module === lastRow) {\n        sameCountRow++\n      } else {\n        if (sameCountRow >= 5) points += PenaltyScores.N1 + (sameCountRow - 5)\n        lastRow = module\n        sameCountRow = 1\n      }\n    }\n\n    if (sameCountCol >= 5) points += PenaltyScores.N1 + (sameCountCol - 5)\n    if (sameCountRow >= 5) points += PenaltyScores.N1 + (sameCountRow - 5)\n  }\n\n  return points\n}\n\n/**\n * Find 2x2 blocks with the same color and assign a penalty value\n *\n * Points: N2 * (m - 1) * (n - 1)\n */\nexports.getPenaltyN2 = function getPenaltyN2 (data) {\n  var size = data.size\n  var points = 0\n\n  for (var row = 0; row < size - 1; row++) {\n    for (var col = 0; col < size - 1; col++) {\n      var last = data.get(row, col) +\n        data.get(row, col + 1) +\n        data.get(row + 1, col) +\n        data.get(row + 1, col + 1)\n\n      if (last === 4 || last === 0) points++\n    }\n  }\n\n  return points * PenaltyScores.N2\n}\n\n/**\n * Find 1:1:3:1:1 ratio (dark:light:dark:light:dark) pattern in row/column,\n * preceded or followed by light area 4 modules wide\n *\n * Points: N3 * number of pattern found\n */\nexports.getPenaltyN3 = function getPenaltyN3 (data) {\n  var size = data.size\n  var points = 0\n  var bitsCol = 0\n  var bitsRow = 0\n\n  for (var row = 0; row < size; row++) {\n    bitsCol = bitsRow = 0\n    for (var col = 0; col < size; col++) {\n      bitsCol = ((bitsCol << 1) & 0x7FF) | data.get(row, col)\n      if (col >= 10 && (bitsCol === 0x5D0 || bitsCol === 0x05D)) points++\n\n      bitsRow = ((bitsRow << 1) & 0x7FF) | data.get(col, row)\n      if (col >= 10 && (bitsRow === 0x5D0 || bitsRow === 0x05D)) points++\n    }\n  }\n\n  return points * PenaltyScores.N3\n}\n\n/**\n * Calculate proportion of dark modules in entire symbol\n *\n * Points: N4 * k\n *\n * k is the rating of the deviation of the proportion of dark modules\n * in the symbol from 50% in steps of 5%\n */\nexports.getPenaltyN4 = function getPenaltyN4 (data) {\n  var darkCount = 0\n  var modulesCount = data.data.length\n\n  for (var i = 0; i < modulesCount; i++) darkCount += data.data[i]\n\n  var k = Math.abs(Math.ceil((darkCount * 100 / modulesCount) / 5) - 10)\n\n  return k * PenaltyScores.N4\n}\n\n/**\n * Return mask value at given position\n *\n * @param  {Number} maskPattern Pattern reference value\n * @param  {Number} i           Row\n * @param  {Number} j           Column\n * @return {Boolean}            Mask value\n */\nfunction getMaskAt (maskPattern, i, j) {\n  switch (maskPattern) {\n    case exports.Patterns.PATTERN000: return (i + j) % 2 === 0\n    case exports.Patterns.PATTERN001: return i % 2 === 0\n    case exports.Patterns.PATTERN010: return j % 3 === 0\n    case exports.Patterns.PATTERN011: return (i + j) % 3 === 0\n    case exports.Patterns.PATTERN100: return (Math.floor(i / 2) + Math.floor(j / 3)) % 2 === 0\n    case exports.Patterns.PATTERN101: return (i * j) % 2 + (i * j) % 3 === 0\n    case exports.Patterns.PATTERN110: return ((i * j) % 2 + (i * j) % 3) % 2 === 0\n    case exports.Patterns.PATTERN111: return ((i * j) % 3 + (i + j) % 2) % 2 === 0\n\n    default: throw new Error('bad maskPattern:' + maskPattern)\n  }\n}\n\n/**\n * Apply a mask pattern to a BitMatrix\n *\n * @param  {Number}    pattern Pattern reference number\n * @param  {BitMatrix} data    BitMatrix data\n */\nexports.applyMask = function applyMask (pattern, data) {\n  var size = data.size\n\n  for (var col = 0; col < size; col++) {\n    for (var row = 0; row < size; row++) {\n      if (data.isReserved(row, col)) continue\n      data.xor(row, col, getMaskAt(pattern, row, col))\n    }\n  }\n}\n\n/**\n * Returns the best mask pattern for data\n *\n * @param  {BitMatrix} data\n * @return {Number} Mask pattern reference number\n */\nexports.getBestMask = function getBestMask (data, setupFormatFunc) {\n  var numPatterns = Object.keys(exports.Patterns).length\n  var bestPattern = 0\n  var lowerPenalty = Infinity\n\n  for (var p = 0; p < numPatterns; p++) {\n    setupFormatFunc(p)\n    exports.applyMask(p, data)\n\n    // Calculate penalty\n    var penalty =\n      exports.getPenaltyN1(data) +\n      exports.getPenaltyN2(data) +\n      exports.getPenaltyN3(data) +\n      exports.getPenaltyN4(data)\n\n    // Undo previously applied mask\n    exports.applyMask(p, data)\n\n    if (penalty < lowerPenalty) {\n      lowerPenalty = penalty\n      bestPattern = p\n    }\n  }\n\n  return bestPattern\n}\n","exports.L = { bit: 1 }\nexports.M = { bit: 0 }\nexports.Q = { bit: 3 }\nexports.H = { bit: 2 }\n\nfunction fromString (string) {\n  if (typeof string !== 'string') {\n    throw new Error('Param is not a string')\n  }\n\n  var lcStr = string.toLowerCase()\n\n  switch (lcStr) {\n    case 'l':\n    case 'low':\n      return exports.L\n\n    case 'm':\n    case 'medium':\n      return exports.M\n\n    case 'q':\n    case 'quartile':\n      return exports.Q\n\n    case 'h':\n    case 'high':\n      return exports.H\n\n    default:\n      throw new Error('Unknown EC Level: ' + string)\n  }\n}\n\nexports.isValid = function isValid (level) {\n  return level && typeof level.bit !== 'undefined' &&\n    level.bit >= 0 && level.bit < 4\n}\n\nexports.from = function from (value, defaultValue) {\n  if (exports.isValid(value)) {\n    return value\n  }\n\n  try {\n    return fromString(value)\n  } catch (e) {\n    return defaultValue\n  }\n}\n","var Buffer = require('../utils/buffer')\nvar Polynomial = require('./polynomial')\n\nfunction ReedSolomonEncoder (degree) {\n  this.genPoly = undefined\n  this.degree = degree\n\n  if (this.degree) this.initialize(this.degree)\n}\n\n/**\n * Initialize the encoder.\n * The input param should correspond to the number of error correction codewords.\n *\n * @param  {Number} degree\n */\nReedSolomonEncoder.prototype.initialize = function initialize (degree) {\n  // create an irreducible generator polynomial\n  this.degree = degree\n  this.genPoly = Polynomial.generateECPolynomial(this.degree)\n}\n\n/**\n * Encodes a chunk of data\n *\n * @param  {Buffer} data Buffer containing input data\n * @return {Buffer}      Buffer containing encoded data\n */\nReedSolomonEncoder.prototype.encode = function encode (data) {\n  if (!this.genPoly) {\n    throw new Error('Encoder not initialized')\n  }\n\n  // Calculate EC for this data block\n  // extends data size to data+genPoly size\n  var pad = new Buffer(this.degree)\n  pad.fill(0)\n  var paddedData = Buffer.concat([data, pad], data.length + this.degree)\n\n  // The error correction codewords are the remainder after dividing the data codewords\n  // by a generator polynomial\n  var remainder = Polynomial.mod(paddedData, this.genPoly)\n\n  // return EC data blocks (last n byte, where n is the degree of genPoly)\n  // If coefficients number in remainder are less than genPoly degree,\n  // pad with 0s to the left to reach the needed number of coefficients\n  var start = this.degree - remainder.length\n  if (start > 0) {\n    var buff = new Buffer(this.degree)\n    buff.fill(0)\n    remainder.copy(buff, start)\n\n    return buff\n  }\n\n  return remainder\n}\n\nmodule.exports = ReedSolomonEncoder\n","import { Component, EventEmitter, Input, OnChanges, OnInit, Output} from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {DataServiceError} from '../../../../../@fury/shared/HttpModel';\nimport {KeycloakService} from 'keycloak-angular';\nimport {UtilService} from '../../../../../@fury/services/util.service';\nimport {SnackBarService} from '../../../../pages/services/snack-bar.service';\nimport {ReferenceTableService} from '../../../../services/reference-table.service';\nimport {Subscription} from 'rxjs';\nimport {MatTableDataSource} from '@angular/material/table';\n\n@Component({\n  selector: 'fury-countries',\n  templateUrl: './countries.component.html',\n  styleUrls: ['./countries.component.scss']\n})\nexport class CountriesComponent implements OnInit, OnChanges {\n\n  countryFormGroup: FormGroup;\n  country: Country = new Country();\n  // arrays\n  errors: string[] = [];\n  // list = [];\n  list: MatTableDataSource<Country>;\n\n  displayColumns: string [] = ['nber', 'country', 'purpose', 'description', 'actions'];\n\n  // events\n  $processingEvent: EventEmitter<boolean> = new EventEmitter();\n  $errorsEvent: EventEmitter<DataServiceError[]> = new EventEmitter();\n  $resultRefCountriesEvent: EventEmitter<any> = new EventEmitter();\n  $countries: CountryModel[] = [];\n  subscriptions: Subscription[] = [];\n  @Input() countries: Country[];\n  @Input() isViewOnly: boolean;\n  @Output() countryEvent = new EventEmitter<Country[]>();\n  @Input() storeDataOutSideCountry: string;\n  // Button Config\n  buttonIcon = 'add_circle_outline';\n  buttonLabel = 'Add';\n  // boolean\n  isEditingCountry = false;\n  tableEditable = true;\n  // int\n  countryIndex = 0;\n  countryNumber = 1;\n\n  constructor(\n      private fb: FormBuilder,\n      private auth: KeycloakService,\n      private utilService: UtilService,\n      public snackBar: SnackBarService,\n      private referenceService: ReferenceTableService,\n  ) {\n  }\n\n  ngOnChanges(): void {\n    // Initialize list of countries\n    if (this.countries) {\n      this.list = new MatTableDataSource<Country>(this.countries);\n    }\n  }\n\n  ngOnInit(): void {\n    this.initForm();\n\n    this.initMainObject();\n    this.subscriptions['$resultRefCountriesEvent'] = this.$resultRefCountriesEvent.subscribe(result => {\n      if (result) {\n        this.$countries = result;\n      }\n    });\n    this.loadReferenceTableDetails();\n  }\n\n  private initForm(): void {\n\n    this.countryFormGroup = this.fb.group({\n      Country: new FormControl('', [Validators.required]),\n      Purpose: new FormControl('', [Validators.required]),\n      Description: new FormControl('', [Validators.required]),\n    });\n  }\n\n  private initMainObject() {\n    this.country = new Country();\n  }\n\n  addOrUpdateCountry(option: number): void {\n    if (this.countryFormGroup.valid) {\n      this.mapFormControlToControl(1);\n      if (option === 1) {\n        this.list.data.push(this.country);\n        this.countries.push(this.country);\n        this.list.data = [...this.list.data];\n      } else {\n        this.list[this.countryIndex] = this.country;\n        this.countries[this.countryIndex] = this.country;\n        this.list.data = [...this.countries];\n      }\n      // Send new country to parent\n      this.countryEvent.emit(this.countries);\n      // rest form and item object\n      this.resetCountry();\n    }\n  }\n\n  private mapFormControlToControl(option: number) {\n    if (option === 1) {\n      this.country.Country = this.countryFormGroup.get('Country').value;\n      this.country.Purpose = this.countryFormGroup.get('Purpose').value;\n      this.country.Description = this.countryFormGroup.get('Description').value;\n    } else {\n      this.countryFormGroup.get('Country').setValue(this.country.Country);\n      this.countryFormGroup.get('Purpose').setValue(this.country.Purpose);\n      this.countryFormGroup.get('Description').setValue(this.country.Description);\n    }\n  }\n\n  resetCountry() {\n    this.countryFormGroup.reset();\n    this.country = new Country();\n    this.validateCountryLabels(1);\n    this.manageCountry(1);\n  }\n\n  validateCountryLabels(option: number) {\n    if (option === 1) {\n      this.buttonIcon = 'add_circle_outline';\n      this.buttonLabel = 'Add Country';\n    } else {\n      this.buttonIcon = 'save';\n      this.buttonLabel = 'Save';\n    }\n  }\n\n  manageCountry(option: number, id ?: number) {\n    if (option === 2) {\n      this.country = this.countries[id];\n      this.isEditingCountry = true;\n      this.countryIndex = id;\n      this.mapFormControlToControl(option);\n    } else {\n      this.isEditingCountry = false;\n      this.country = new Country();\n      this.countryIndex = 0;\n    }\n    this.validateCountryLabels(option);\n  }\n\n  editItem(index: number) {\n    // Store the index of the item to be modified\n    this.countryIndex = index;\n    this.country = this.countries[this.countryIndex];\n    this.isEditingCountry = true;\n    // Map item to form fields\n    this.mapFormControlToControl(index);\n    this.validateCountryLabels(2);\n  }\n\n  loadReferenceTableDetails() {\n    this.referenceService.getCountries(this.$processingEvent, this.$resultRefCountriesEvent, this.$errorsEvent);\n  }\n\n  deleteItem(index: number) {\n    this.list.data.splice(index, 1);\n    this.countries.splice(index, 1);\n    this.list.data = [...this.list.data];\n    // Send items to parent\n    this.countryEvent.emit(this.countries);\n    this.isEditingCountry = false;\n  }\n\n  isValidForm() {\n    return this.countryFormGroup.valid;\n  }\n}\n\nexport class Country {\n  Country: string;\n  Purpose: string;\n  Description: string;\n}\n\nexport interface CountryModel {\n  CountryID: number;\n  Iso: string;\n  Name: string;\n  PhoneCode: string;\n}\n","<ng-container *ngIf=\"storeDataOutSideCountry !== 'No'\">\n\n    <fieldset>\n        <legend>Countries</legend>\n        <ng-container *ngIf=\"!isViewOnly\">\n            <form [formGroup]=\"countryFormGroup\">\n                <ng-template matStepLabel>Countries</ng-template>\n\n                <div class=\"content\" fxLayout=\"column\" fxLayoutGap=\"8px\">\n                    <div fxLayout=\"column\" fxLayout.gt-xs=\"row\" fxLayoutGap=\"8px\" fxLayoutGap.gt-xs=\"24px\">\n                        <mat-form-field class=\"full-width\">\n                            <mat-label>Country<span class=\"required-field\">required</span></mat-label>\n                            <mat-select formControlName=\"Country\">\n                                <mat-option *ngFor=\"let country of $countries\" [value]=\"country.CountryID\">\n                                    {{ country.Name }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n\n                        <mat-form-field class=\"full-width\">\n                            <mat-label>Purpose of Transfer<span class=\"required-field\">required</span></mat-label>\n                            <textarea #PositionInput matInput maxlength=\"1000\" formControlName=\"Purpose\"></textarea>\n                            <mat-hint align=\"end\">{{ PositionInput.value.length }} / 1000</mat-hint>\n                        </mat-form-field>\n\n                        <mat-form-field class=\"full-width\" hintLabel=\"A brief Description of data transfered\">\n                            <mat-label>Brief Description<span class=\"required-field\">required</span></mat-label>\n                            <textarea #PositionInput matInput maxlength=\"1000\" formControlName=\"Description\"></textarea>\n                            <mat-hint align=\"end\">{{ PositionInput.value.length }} / 1000</mat-hint>\n                        </mat-form-field>\n\n                    </div>\n                </div>\n            </form>\n            <div *ngIf=\"!isViewOnly\" style=\"text-align: right; padding-top: 5px; padding-bottom: 5px;\">\n                <button mat-raised-button\n                        (click)=\"addOrUpdateCountry(isEditingCountry?2:1)\" color=\"primary\"\n                        [disabled]=\"!isValidForm()\">\n                    <mat-icon>{{buttonIcon}}</mat-icon>\n                    <span>{{buttonLabel}}</span>\n                </button>&nbsp;\n                <span class=\"example-spacer\"></span>\n                <button mat-raised-button (click)=\"resetCountry()\" color=\"warn\">\n                    <mat-icon>cancel</mat-icon>\n                    <span>Cancel</span>\n                </button>\n            </div>\n        </ng-container>\n\n        <div class=\"content\" fxLayout=\"column\" fxLayoutGap=\"8px\">\n            <table mat-table [dataSource]=\"list\">\n                <ng-container matColumnDef=\"nber\">\n                    <th mat-header-cell *matHeaderCellDef style=\"width: 5%\"\n                        class=\"tableFontSize firstColumnTable alignCenter\">#\n                    </th>\n                    <td mat-cell *matCellDef=\"let element; let j=index;\"\n                        class=\"tableFontSize firstColumnTable alignCenter\">\n                        {{j + 1}}\n                    </td>\n                </ng-container>\n                <ng-container matColumnDef=\"country\" *ngIf=\"isViewOnly\">\n                    <th mat-header-cell *matHeaderCellDef class=\"tableFontSize \" style=\"width: 20%\"> Country</th>\n                    <td mat-cell *matCellDef=\"let element\" class=\"tableFontSize \">\n                        {{element.Country}}\n                    </td>\n                </ng-container>\n                <ng-container matColumnDef=\"purpose\" *ngIf=\"isViewOnly\">\n                    <th mat-header-cell *matHeaderCellDef class=\"tableFontSize \" style=\"width: 20%\"> Purpose</th>\n                    <td mat-cell *matCellDef=\"let element\" class=\"tableFontSize \">\n                        {{element.Description}}\n                    </td>\n                </ng-container>\n                <ng-container matColumnDef=\"description\">\n                    <th mat-header-cell *matHeaderCellDef class=\"tableFontSize \" style=\"width: 20%\">Description</th>\n                    <td mat-cell *matCellDef=\"let element\" class=\"tableFontSize \"> {{element.Description}}</td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"actions\">\n                    <th mat-header-cell *matHeaderCellDef style=\"width: 5%\">Actions</th>\n                    <td mat-cell *matCellDef=\"let element; let j=index\" class=\"actions\">\n                        <ng-container *ngIf=\"!isViewOnly\">\n                            <a class=\"link\" (click)=\"manageCountry(2,j)\">\n                                <mat-icon color=\"primary\" class=\"material-icons-outlined\" matTooltip=\"Edit item\">edit\n                                </mat-icon>\n                            </a>&nbsp;&nbsp;\n                            <a class=\"link\" (click)=\"deleteItem(j)\">\n                                <mat-icon color=\"warn\" class=\"material-icons-outlined\" matTooltip=\"Delete item\">delete\n                                </mat-icon>\n                            </a>\n                        </ng-container>\n                    </td>\n                </ng-container>\n                <ng-container matColumnDef=\"noData\">\n                    <td mat-footer-cell *matFooterCellDef colspan=\"7\">\n                        There is no data!\n                    </td>\n                </ng-container>\n                <tr mat-header-row *matHeaderRowDef=\"displayColumns;sticky:true\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: displayColumns;\"></tr>\n                <tr mat-footer-row *matFooterRowDef=\"['noData']\" [ngClass]=\"{'hide':!(list?.data.length==0)}\"></tr>\n            </table>\n        </div>\n    </fieldset>\n</ng-container>\n\n\n<!-- LIST OF ITEMS -->\n\n","var getSymbolSize = require('./utils').getSymbolSize\nvar FINDER_PATTERN_SIZE = 7\n\n/**\n * Returns an array containing the positions of each finder pattern.\n * Each array's element represent the top-left point of the pattern as (x, y) coordinates\n *\n * @param  {Number} version QR Code version\n * @return {Array}          Array of coordinates\n */\nexports.getPositions = function getPositions (version) {\n  var size = getSymbolSize(version)\n\n  return [\n    // top-left\n    [0, 0],\n    // top-right\n    [size - FINDER_PATTERN_SIZE, 0],\n    // bottom-left\n    [0, size - FINDER_PATTERN_SIZE]\n  ]\n}\n","import {ChangeDetectionStrategy, Component, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild} from '@angular/core';\nimport {BaseFuryForm} from '../../../../../@fury/shared/base-fury-form';\nimport {FormArray, FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {\n    CertificateDetails, CertificateDetailsResponse,\n    CompanyRegistrationModel, DataProtectionActors,\n    ROLES_PERFORMED, SecurityMeasuresModel,\n    ThirdParties,\n    TypeOfOrganisation\n} from '../company-registration.model';\nimport {Observable, of, ReplaySubject, Subscription} from 'rxjs';\nimport {CdkTextareaAutosize} from '@angular/cdk/text-field';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {DocumentComment} from '../../../../../@fury/shared/base-fury-form.model';\nimport {fadeInRightAnimation} from '../../../../../@fury/animations/fade-in-right.animation';\nimport {fadeInUpAnimation} from '../../../../../@fury/animations/fade-in-up.animation';\nimport {DataProtectionOfficer} from '../../../models/data-subject.model';\nimport {DataServiceError} from '../../../../../@fury/shared/HttpModel';\nimport {CompanyRegistrationService} from '../../company-registration.service';\nimport {SnackBarService} from '../../../../pages/services/snack-bar.service';\nimport {KeycloakService} from 'keycloak-angular';\nimport {WorkflowServiceService} from '../../../../services/workflow-service.service';\nimport {Action, ActionPerformed, WorkFlowActions, WorkFlowStep, WorkFlowTimeline} from '../../../models/document-workflow.model';\nimport {MatDialog} from '@angular/material/dialog';\nimport {ReviewCommentsComponent} from '../../../../layout/review-comments/review-comments.component';\nimport {CertPreviewComponent} from '../cert-preview/cert-preview.component';\nimport {\n    Checklist,\n    DataPurposes,\n    DataSourceCategory, DataSources,\n    DataSourceSubCategory, DataSourceSubCategoryChecked,\n    NatureOfBusiness,\n    NatureOfBusinessSubCat,\n    Sector\n} from '../../../models/reference.model';\nimport {ReferenceTableService} from '../../../../services/reference-table.service';\nimport {MatCheckboxChange} from '@angular/material/checkbox';\nimport {ApplicationTimelineComponent} from '../../../../layout/application-timeline/application-timeline.component';\nimport {Country} from '../countries/countries.component';\nimport {difference, differenceBy} from 'lodash-es';\nimport { ComplaintService } from '../../../complaints/complaints.service';\nimport { NgModule } from '@angular/core';\nimport { UpdateRegistrationComponent } from '../update-registration/update-registration.component';\n\n\n// @ts-ignore\n@Component({\n    selector: 'fury-edit-company-registration',\n    templateUrl: './edit-company-registration.component.html',\n    styleUrls: ['./edit-company-registration.component.scss'],\n    // changeDetection: ChangeDetectionStrategy.OnPush,\n    animations: [fadeInRightAnimation, fadeInUpAnimation]\n})\nexport class EditCompanyRegistrationComponent extends BaseFuryForm implements OnInit, OnDestroy {\n\n    // Simulating A Service\n    subject$: ReplaySubject<CompanyRegistrationModel> = new ReplaySubject<CompanyRegistrationModel>(1);\n    data$: Observable<CompanyRegistrationModel> = this.subject$.asObservable();\n\n    // Output\n    @Input() certDetailsEventEmitter = new EventEmitter<CertificateDetails>();\n\n    // FormGroups\n    organizationFormGroup: FormGroup;\n    personalDataFormGroup: FormGroup;\n    thirdPartiesFormGroup: FormGroup;\n    childFormGroup: FormGroup;\n    securityFormGroup: FormGroup;\n    applicantDetails: FormGroup;\n    dataProtectionOfficerFormGroup: FormGroup;\n    purposeRetentionFormGroup: FormGroup;\n    personalDataHeldFormGroup: FormGroup;\n    disclosureFormGroup: FormGroup;\n    // ViewChild\n    @ViewChild('autosize') autosize: CdkTextareaAutosize;\n    // Main Object\n    application: CompanyRegistrationModel = new CompanyRegistrationModel();\n    actionPerformed: ActionPerformed = new ActionPerformed();\n    // PageStyle\n    private _gap = 16;\n    gap = `${this._gap}px`;\n    col2 = `1 1 calc(50% - ${this._gap / 2}px)`;\n    col3 = `1 1 calc(33.3333% - ${this._gap / 1.5}px)`;\n\n    // arrays\n    typesOfOrganisation: any[] = [];\n    dataProtectionActors: any [] = [];\n    sectors: any[] = [];\n    dataActors: any [];\n    _dataActors: any [];\n    dataPurposes = [];\n    rolesPerformed: any [] = [];\n    accesses: string[];\n    refDataSourcesCat: DataSourceCategory[] = [];\n    refDataSourceSubCat: DataSourceSubCategory[] = [];\n    dataSourceSubCatChecked: DataSourceSubCategoryChecked [] = [];\n    permittedActions: Action[] = [];\n    dataProtectionOfficers: DataProtectionOfficer[];\n    thirdParties: ThirdParties[];\n    $sectors: Sector[];\n    $natureOfBusiness: NatureOfBusiness[];\n    $natureOfBusinessCat: NatureOfBusinessSubCat[];\n    $dataPurposes: DataPurposes[] = [];\n    $dataSources: DataSources[];\n    securityMeasures: SecurityMeasuresModel[];\n    countries: Country[];\n    selectedDataSourceCategory: DataSourceCategory[] = [];\n    selectedDataSourceSubCategory: DataSourceSubCategory[] = [];\n    $checklist: Checklist[];\n    timeLineAccess: string[] = ['data-protection-officer-director', 'data-protection-officer-nita', 'data-protection-officer-technical', 'data-protection-officer-legal'];\n    isOfficer: boolean;\n    isApplicant: boolean;\n    //\n    today = new Date();\n    regTrackingNo: string;\n    role: string;\n    workflowID = '1';\n    workflowTimeLine: WorkFlowTimeline;\n    currentStep: WorkFlowStep;\n    certificateResponse: CertificateDetailsResponse;\n    certificateDetails: CertificateDetails;\n    // events\n    $processingEvent: EventEmitter<boolean> = new EventEmitter();\n    $errorsEvent: EventEmitter<DataServiceError[]> = new EventEmitter();\n    $resultDocumentEvent: EventEmitter<any> = new EventEmitter();\n    $resultRefDataSourceCatEvent: EventEmitter<any> = new EventEmitter();\n    $resultReferenceDataSourcesEvent: EventEmitter<any> = new EventEmitter();\n    $resultReferenceDataPurposesEvent: EventEmitter<any> = new EventEmitter();\n    $resultRefSectorsEvent: EventEmitter<any> = new EventEmitter();\n    $resultRefNatureOfBussEvent: EventEmitter<any> = new EventEmitter();\n    $resultDocumentCertificate: EventEmitter<any> = new EventEmitter();\n    $resultRefNatureOfBussCatEvent: EventEmitter<any> = new EventEmitter();\n    $resultRefNatureOfBussSubCatEvent: EventEmitter<any> = new EventEmitter();\n    $resultRefChecklistEvent: EventEmitter<any> = new EventEmitter();\n    // Subscriptions\n    subscriptions: Subscription[] = [];\n\n    constructor(\n        private fb: FormBuilder,\n        private activateRoute: ActivatedRoute,\n        private route: Router,\n        public registrationService: CompanyRegistrationService,\n        private _referenceService: ReferenceTableService,\n        public snackBar: SnackBarService,\n        public authService: KeycloakService,\n        public _workflowService: WorkflowServiceService,\n        public complaintService: ComplaintService,\n        private dialog: MatDialog\n    ) {\n        super(\n            authService,\n            _workflowService,\n            registrationService,\n            complaintService,\n        );\n\n        this.accesses = authService.getKeycloakInstance().resourceAccess['dps-frontend'].roles;\n        this.operationType = activateRoute.routeConfig.data.action;\n        this.regTrackingNo = this.route.getCurrentNavigation().extras.state.regTrackingNo;\n        if (this.operationType === 'EDIT') {\n            this.isEditMode = true;\n            this.application.Comments = [];\n            this.application.Countries = [];\n            this.application.DataProtectionOfficers = [];\n            this.application.ThirdParties = [];\n            this.application.SecurityMeasure = [];\n        } else if (this.operationType === 'CREATE') {\n            this.isEditMode = false;\n            this.application.Comments = [];\n            this.application.DataProtectionOfficers = [];\n            this.application.ThirdParties = [];\n            this.application.SecurityMeasure = [];\n            this.application.Countries = [];\n        } else if (this.operationType === 'VIEW') {\n            this.isEditMode = false;\n            this.isViewOnly = true;\n        }\n\n    }\n\n\n    ngOnInit(): void {\n        console.log(\n            'ISVIEW' + this.isViewOnly\n        );\n        this.initForms();\n        this.loadReferenceTableDetails();\n        // Reference Tables Event\n        this.referenceTableSubscriptions();\n        this.referenceTables();\n        // Disable Form By ApplicationStatus\n        this.disableByStatus();\n        // if (this.isViewOnly) {\n        //     this.disableAllControls();\n        // }\n        this.loadRegistrationDocumentDetails();\n        // this.disableFieldsByStatus();\n        this.isOfficer = this.timeLineAccess.includes(this.realmRole);\n        this.subscriptions['$resultDocumentCertificate'] = this.$resultDocumentCertificate.subscribe(result => {\n            if (result) {\n                this.certificateResponse = result;\n                this.certificateResponse.data.OrganizationID = this.application.OrganisationName;\n            }\n        });\n\n        // Company Registration Document Event\n        this.subscriptions['$resultDocumentEvent'] = this.$resultDocumentEvent.subscribe(result => {\n            if (result) {\n                this.application = result;\n                this.mapFields();\n                if (this.operationType === 'MANAGE') {\n                    this.findDocumentActions(1, this.application.CurrentStepID);\n                }\n                this.getDocumentWorkflow(this.application.RegTrackingNo, this.workflowID);\n                this.getIssuedCertDetails(+this.application.OrganisationID);\n                this.isLoaded = true;\n            }\n        });\n\n        // Document Actions\n        this.subscriptions['$resultOperations'] = this.$resultWorkFlowActionsEvent.subscribe(result => {\n            this.errors = [];\n            if (result) {\n                this.workFlowActions = result;\n                this.hasStepAccess = this.workFlowActions.StepAccess;\n                if (this.hasStepAccess) {\n                    console.log('this.workFlowActions.Actions:', this.workFlowActions.Actions);\n                    this.permittedActions = this.workFlowActions.Actions.filter(access => this.accesses.includes(access.ActionRole));\n                    console.log('permittedActions:', this.permittedActions);\n\n                    if (this.permittedActions.length === 0) {\n                        this.snackBar.snackBarAlert(\n                            'ERROR', 'Unauthorized To Perform Action On This Document ', {\n                                duration: 5000\n                            }\n                        );\n                    }\n                }\n                this.isLoaded = true;\n            }\n        });\n\n        // Action Performed\n        this.subscriptions['$resultPerformActionEvent'] = this.$resultPerformActionEvent.subscribe(result => {\n            this.errors = [];\n            if (result.message === 'Success') {\n                this.loadRegistrationDocumentDetails();\n                this.snackBar.snackBarAlert(\n                    'SUCCESS', 'Action Was Successfully, Registration Moved To Next Step', {\n                        duration: 5000\n                    }\n                );\n                this.permittedActions = [];\n            }\n        });\n\n        // Action Performed\n        this.subscriptions['$resultDocumentWorkflowTimelineEvent'] = this.$resultDocWorkFlowTimelineEvent.subscribe(result => {\n            this.errors = [];\n            if (result) {\n                this.workflowTimeLine = result;\n                this.currentStep = this.workflowTimeLine.data.find(\n                    step => +step.StepID === this.application.CurrentStepID\n                );\n                this.application.Status = this.currentStep.StepName;\n                // this.applicantDetails.get('status').setValue(this.application.Status);\n            }\n        });\n\n\n    }\n\n    // DisableByStatus\n    disableByStatus() {\n        if ((this.isApplicant && this.application &&\n                this.application.CurrentStepName !== 'Application Review - Legal' &&\n                this.application.CurrentStepName !== 'Application Review - Legal' &&\n                this.application.CurrentStepName !== 'Final Approver' &&\n                this.application.CurrentStepName !== 'Application Review - Technical' &&\n                this.application.CurrentStepName !== 'Certificate Issued') ||\n            (!this.isApplicant)) {\n            this.disableAllControls();\n        }\n    }\n\n    referenceTableSubscriptions() {\n        this.subscriptions['$resultRefDataSourceCatEvent'] = this.$resultRefDataSourceCatEvent.subscribe(result => {\n            if (result) {\n                this.refDataSourcesCat = result;\n                this.refDataSourcesCat.filter(\n                    e => {\n                        e.SubCategories.forEach(\n                            subCat => {\n                                if (e.SubCategories.indexOf(subCat) > 1) {\n                                    const obj = new DataSourceSubCategory();\n                                    obj.DataSubCategoryID = subCat.DataSubCategoryID;\n                                    obj.DataSubCategory = subCat.DataSubCategory;\n                                    obj.checked = false;\n                                    e.SubCategories.push(obj);\n                                }\n                            }\n                        );\n                    }\n                );\n            }\n        });\n        this.subscriptions['$resultRefNatureOfBussEvent'] = this.$resultRefNatureOfBussEvent.subscribe(result => {\n            if (result) {\n                this.$natureOfBusiness = result;\n            }\n        });\n        this.subscriptions['$resultRefNatureOfBussCatEvent'] = this.$resultRefNatureOfBussCatEvent.subscribe(result => {\n            if (result) {\n                this.$natureOfBusinessCat = result;\n            }\n        });\n        this.subscriptions['$resultReferenceDataSourcesEvent'] = this.$resultReferenceDataSourcesEvent.subscribe(result => {\n            if (result) {\n                this.$dataSources = result;\n            }\n        });\n        this.subscriptions['$resultReferenceDataPurposesEvent'] = this.$resultReferenceDataPurposesEvent.subscribe(result => {\n            if (result) {\n                this.$dataPurposes = result;\n            }\n        });\n        this.subscriptions['$resultRefSectorsEvent'] = this.$resultRefSectorsEvent.subscribe(result => {\n            if (result) {\n                this.$sectors = result;\n            }\n        });\n        this.subscriptions['$resultRefChecklistEvent'] = this.$resultRefChecklistEvent.subscribe(result => {\n            if (result) {\n                console.log(JSON.stringify('checklist' + JSON.stringify(result)));\n                this.$checklist = result.filter(\n                    e =>\n                        this.realmRole === 'data-protection-officer-technical' ? e.ChecklistSection === 'Technical' : e.ChecklistSection === 'Legal'\n                );\n            }\n        });\n        this.dataActors = [\n            {\n                OrganisationCategoryId: 1,\n                OrganisationCategoryName: 'Data Controller'\n            },\n            {\n                OrganisationCategoryId: 2,\n                OrganisationCategoryName: 'Data Processor'\n            },\n            {\n                OrganisationCategoryId: 3,\n                OrganisationCategoryName: 'Data Collector'\n            },\n        ];\n    }\n\n    // Get Certificate Details\n    getIssuedCertDetails(organisationId: number) {\n        this.registrationService.getCertificateDetails(\n            this.$processingEvent,\n            this.$resultDocumentCertificate,\n            this.$errorsEvent,\n            organisationId\n        );\n    }\n\n    onChangeSubCategory(event: MatCheckboxChange, SubCategory: DataSourceSubCategory): void {\n        if (event.checked) {\n            this.selectedDataSourceSubCategory.push(SubCategory);\n        } else {\n            this.selectedDataSourceSubCategory.splice(this.selectedDataSourceSubCategory.indexOf(SubCategory), 1);\n        }\n    }\n\n    // Perform Document Action\n    performAction(action: Action) {\n        this.dialog.open(ReviewCommentsComponent, {\n            width: '1391px',\n            height: '595px',\n            data: {\n                checklist: (action.ActionName === 'Technical-review' || action.ActionName === 'Legal-review') ? this.$checklist : [],\n                action: action,\n                currentStep: this.application.CurrentStepID\n            }\n        }).afterClosed().subscribe((dialogResult) => {\n            if (dialogResult !== null && dialogResult !== '') {\n                const performedAction = new ActionPerformed();\n                performedAction.WorkFlowID = this.workflowID;\n                performedAction.ActionID = action.ActionID.toString();\n                performedAction.RecordTrackingNo = this.application.RegTrackingNo;\n                performedAction.CurrentStepID = this.application.CurrentStepID.toString();\n                performedAction.Comment = dialogResult.comment;\n                performedAction.ActionIsFinal = action.ActionIsFinal;\n                performedAction.CheckList = dialogResult.checklist;\n                this.performingAction(performedAction);\n            }\n        });\n    }\n\n    // Certificate Preview\n    previewCert() {\n        this.dialog.open(CertPreviewComponent, {\n            // width: '841px',\n            // height: '695px',\n            panelClass: ['organisation-certificate-dialog', 'dialogs'],\n            data: this.certificateResponse.data\n        });\n    }\n\n    viewApplicationTimeLine() {\n        this.dialog.open(ApplicationTimelineComponent, {\n            width: '941px',\n            height: '595px',\n            data: this.workflowTimeLine\n        });\n    }\n\n    referenceTables() {\n        this.typesOfOrganisation = Object.entries(TypeOfOrganisation).map(([key, value]) => ({key: key, value: value}));\n        // this.dataActors = Object.entries(DataProtectionActors).map(([key, value]) => ({key: key, value: value}));\n        this.rolesPerformed = Object.entries(ROLES_PERFORMED).map(([key, value]) => ({key: key, value: value}));\n    }\n\n    disableAllControls() {\n        this.applicantDetails.disable();\n        this.dataProtectionOfficerFormGroup.disable();\n        this.personalDataHeldFormGroup.disable();\n        this.purposeRetentionFormGroup.disable();\n        this.disclosureFormGroup.disable();\n    }\n\n    onCommentChange(comments: DocumentComment[]) {\n        if (comments) {\n            this.application.Comments = comments;\n        }\n    }\n\n    initForms() {\n\n        this.applicantDetails = this.fb.group({\n            organizationName: [],\n            DPPActCategory: [],\n            OrganizationTypeID: [],\n            SectorID: [],\n            Location: [],\n            PhoneNumber: [],\n            EmailAddress: [],\n            NatureOfBusinessCat: [],\n            NatureOfBusinessSubCat: [],\n        });\n        this.dataProtectionOfficerFormGroup = this.fb.group({\n            DPOName: [],\n            DPOPhysicalAddress: [],\n            PhoneNumberCode: [],\n            DPOPhoneNumber: [],\n            DPOEmailAddress: [],\n            DPOPositionInOrganisation: [],\n            DPORequired: []\n        });\n        this.disclosureFormGroup = this.fb.group({\n            disclosePersonalData: [],\n            StoreDataOutsideCountry: []\n        });\n\n        this.purposeRetentionFormGroup = this.fb.group({\n            Purpose: [],\n            SpecifyTheLaw: [],\n            ServiceOrProductProvided: [],\n            SpecifyLegalObligation: [],\n            TotalRecordsAtRegistration: [],\n            RecordPercentageGrowth: [],\n            RetentionPeriod: []\n        });\n\n        this.personalDataHeldFormGroup = this.fb.group({\n            SourceOfDataID: [],\n            PersonalDataCollected: []\n        });\n\n        this.securityFormGroup = this.fb.group({});\n    }\n\n\n    loadRegistrationDocumentDetails() {\n        this.registrationService.getRegistrationByReferenceNumber(\n            this.$processingEvent, this.$resultDocumentEvent, this.$errorsEvent, this.regTrackingNo);\n    }\n\n    loadReferenceTableDetails() {\n        // this.registrationService.getDataSource(this.$processingEvent, this.$resultReferenceDataSourcesEvent, this.$errorsEvent);\n        // this.referenceService.getSubCategories(this.$processingEvent, this.$resultRefDataSourceCatEvent, this.$errorsEvent);\n        // this.referenceService.getDataPurposes(this.$processingEvent, this.$resultReferenceDataPurposesEvent, this.$errorsEvent);\n        // this.referenceService.getSectors(this.$processingEvent, this.$resultRefSectorsEvent, this.$errorsEvent);\n        // this.referenceService.getNatureOfBusiness(this.$processingEvent, this.$resultRefNatureOfBussEvent, this.$errorsEvent);\n        // this.referenceService.getChecklist(this.$processingEvent, this.$resultRefChecklistEvent, this.$errorsEvent);\n    }\n\n    onDataProtectionOfficerChange($event: DataProtectionOfficer[]) {\n        this.dataProtectionOfficers = $event;\n    }\n\n    onSecurityModelChange($event: SecurityMeasuresModel[]) {\n        this.application.SecurityMeasure = $event;\n    }\n\n    onCountriesChange($event: Country[]) {\n        this.application.Countries = $event;\n    }\n\n    onDataThirdPartiesChange($event: ThirdParties[]) {\n        this.application.ThirdParties = $event;\n    }\n\n    filter(data) {\n        console.log(data.value);\n    }\n\n    mapFields() {\n        this.isApplicationValid = true;\n        // generalFormGroup\n        if (this.application.OrganisationCategory.length > 0) {\n            const tempArr = [];\n            this.application.OrganisationCategory.forEach(e => tempArr.push(e.OrganisationCategoryId));\n            this.applicantDetails.get('DPPActCategory').setValue(tempArr);\n        }\n        this.applicantDetails.get('organizationName').setValue(this.application.OrganisationName);\n        this.applicantDetails.get('OrganizationTypeID').setValue(this.application.OrganizationTypeID);\n        this.applicantDetails.get('SectorID').setValue(this.application.SectorID);\n        this.applicantDetails.get('Location').setValue(this.application.Location);\n        this.applicantDetails.get('PhoneNumber').setValue(this.application.PhoneNumber);\n        this.applicantDetails.get('EmailAddress').setValue(this.application.EmailAddress);\n        if (this.application.NatureOfBusiness.length > 0) {\n            this.applicantDetails.get('NatureOfBusinessCat').setValue(\n                this.application.NatureOfBusiness[0].NatureOfBusinessCatID\n            );\n            const tempArr = [];\n            // this.referenceService.getNatureOfBusinessSubCat(\n            //     this.application.NatureOfBusiness[0].NatureOfBusinessCatID,\n            //     this.$processingEvent, this.$resultRefNatureOfBussCatEvent, this.$errorsEvent\n            // );\n            this.application.NatureOfBusiness.forEach(e => tempArr.push(e.NatureOfBusinessSubatID));\n            this.applicantDetails.get('NatureOfBusinessSubCat').setValue(\n                tempArr\n            );\n        }\n        this.dataProtectionOfficerFormGroup.get('DPORequired').setValue(this.application.DPORequired);\n        this.dataProtectionOfficerFormGroup.get('DPOName').setValue(this.application.DPOName);\n        this.dataProtectionOfficerFormGroup.get('DPOPhysicalAddress').setValue(this.application.DPOPhysicalAddress);\n        this.dataProtectionOfficerFormGroup.get('DPOPhoneNumber').setValue(this.application.DPOPhoneNumber);\n        this.dataProtectionOfficerFormGroup.get('DPOEmailAddress').setValue(this.application.DPOEmailAddress);\n        this.dataProtectionOfficerFormGroup.get('DPOPositionInOrganisation').setValue(this.application.DPOPositionInOrganisation);\n        if (this.application.Purpose.length > 0) {\n            const tempArr = [];\n            this.application.Purpose.forEach(e => tempArr.push(e.DataPurposeID));\n            this.purposeRetentionFormGroup.get('Purpose').setValue(tempArr);\n        }\n\n        this.purposeRetentionFormGroup.get('SpecifyTheLaw').setValue(this.application.SpecifyTheLaw);\n        this.purposeRetentionFormGroup.get('ServiceOrProductProvided').setValue(this.application.ServiceOrProductProvided);\n        this.purposeRetentionFormGroup.get('SpecifyLegalObligation').setValue(this.application.SpecifyLegalObligation);\n        this.purposeRetentionFormGroup.get('TotalRecordsAtRegistration').setValue(this.application.TotalRecordsAtRegistration);\n        this.purposeRetentionFormGroup.get('RecordPercentageGrowth').setValue(this.application.RecordPercentageGrowth);\n        this.purposeRetentionFormGroup.get('RetentionPeriod').setValue(this.application.RetentionPeriod);\n        if (this.application.SourceOfDataID.length > 0) {\n            const tempArr = [];\n            this.application.SourceOfDataID.forEach(e => tempArr.push(e.DataSourceID));\n            console.log('dataSources' + tempArr);\n            console.log('SourcesCategory' + JSON.stringify(this.$dataSources));\n            this.personalDataHeldFormGroup.get('SourceOfDataID').setValue(tempArr);\n            // this.personalDataHeldFormGroup.get('PersonalDataCollected').setValue(tempArr);\n        }\n        // if (this.refDataSourcesCat.length > 0) {\n        //     console.log('here');\n        //     if (this.application.PersonalDataCollected.length > 0) {\n        //         const tempArr = [];\n        //         this.application.PersonalDataCollected.forEach(e => {\n        //             const obj = new DataSourceSubCategoryChecked();\n        //             obj.DataSubCategoryID = +e.DataSubCategoryID;\n        //             obj.DataSubCategory = e.DataSubCategory;\n        //             obj.checked = false;\n        //             tempArr.push(obj);\n        //         });\n        //         this.refDataSourcesCat.filter(\n        //             e => {\n        //                 e.SubCategories.forEach((s) => {\n        //                         if (e.SubCategories.indexOf(s) > 1) {\n        //                             tempArr.find(a => {\n        //                                 if (s.DataSubCategory === a.DataSubCategory) {\n        //                                     s.checked = true;\n        //                                     console.log('checked');\n        //                                 } else {\n        //                                     s.checked = false;\n        //                                 }\n        //                                 e.SubCategories.push(s);\n        //                             });\n        //                         }\n        //                     }\n        //                 )\n        //                 ;\n        //                 // e.SubCategories.forEach((s) => tempArr.find(a => {\n        //                 //         if (s.DataSubCategory === a.DataSubCategory) {\n        //                 //             s.checked = true;\n        //                 //             console.log('checked');\n        //                 //             // this.personalDataHeldFormGroup.get('PersonalDataCollected').setValue(e.checked);\n        //                 //         }\n        //                 //     })\n        //                 // );\n        //             }\n        //         );\n        //\n        //         // this.dataSourceSubCatChecked.map((e) => tempArr.find(a => {\n        //         //     if (e.DataSubCategory === a.DataSubCategory) {\n        //         //         e.checked = true;\n        //         //         // this.personalDataHeldFormGroup.get('PersonalDataCollected').setValue(e.checked);\n        //         //     }\n        //         // }));\n        //         // this.updateChecked();\n        //         console.log('checked===>' + JSON.stringify(this.refDataSourcesCat));\n        //     }\n        // }\n\n        this.disclosureFormGroup.get('disclosePersonalData')\n            .setValue(this.application.PersonalDataIsForDisclosure);\n        this.disclosureFormGroup.get('StoreDataOutsideCountry')\n            .setValue(this.application.StoreDataOutsideCountry);\n\n    }\n\n    updateChecked() {\n        this.dataSourceSubCatChecked.every(t => t.checked);\n    }\n\n    ngOnDestroy(): void {\n        this.subscriptions.forEach((subscription) => subscription.unsubscribe());\n    }\n\n    Update(){\n        this.dialog.open(UpdateRegistrationComponent, {\n\n           \n        });\n\n\n\n    }\n\n    \n}\n","<fury-page-layout mode=\"card\">\n    <fury-page-layout-header>\n        <fury-breadcrumbs [@fadeInRight] [crumbs]=\"['Company Registration']\"\n                          current=\"{{application.RegTrackingNo}}\"></fury-breadcrumbs>\n    </fury-page-layout-header>\n\n    <fury-page-layout-content [@fadeInUp]>\n        <div class=\"actions-button-padding\">\n            <mat-toolbar\n                    *ngIf=\"permittedActions.length > 0 || application.CurrentStepName === 'Certificate Issued' || isOfficer \">\n                <mat-toolbar-row>\n                    <ng-container *ngFor=\"let operation of permittedActions\">\n                        <button mat-raised-button [color]=\"operation.ActionColor\" class=\"actions-button-padding\"\n                                (click)=\"performAction(operation)\">\n                            <mat-icon>{{operation.ActionIcon}}</mat-icon>\n                            <span> {{operation.ActionName}}</span>\n                        </button>\n                    </ng-container>\n                    <span class=\"example-spacer\"></span>\n                    <button mat-raised-button matTooltip=\"Print Certificate\"\n                            *ngIf=\"application.CurrentStepName === 'Certificate Issued'\" color=\"primary\"\n                            (click)=\"previewCert()\">\n                        <mat-icon>print</mat-icon>\n                        <span> Print Certificate </span>\n                    </button>\n                 \n                    <button mat-raised-button matTooltip=\"View Timeline\" class=\"actions-button-padding\"\n                            *ngIf=\"isOfficer\" color=\"primary\" (click)=\"viewApplicationTimeLine()\">\n                        <mat-icon>view_timeline</mat-icon>\n                        <span>Application Timeline</span>\n                    </button>\n                </mat-toolbar-row>\n            </mat-toolbar>\n        </div>\n        <div [@fadeInUp] class=\"\">\n            <fury-card>\n                <mat-tab-group mat-stretch-tabs>\n                    <mat-tab>\n                        <ng-template mat-tab-label>\n                            <mat-icon>info</mat-icon>\n                            Applicant Info\n                        </ng-template>\n                        <fury-card-content class=\"padding-top\">\n                            <form [formGroup]=\"applicantDetails\">\n                                <div class=\"content\" fxLayout=\"column\" fxLayoutGap=\"8px\">\n\n                                    <div fxLayout=\"column\" fxLayout.gt-xs=\"row\" fxLayoutGap=\"8px\"\n                                         fxLayoutGap.gt-xs=\"24px\">\n                                        <mat-form-field fxFlex=\"2 1 auto\">\n                                            <mat-label>Organisation Name</mat-label>\n                                            <input formControlName=\"organizationName\" matInput>\n                                        </mat-form-field>\n\n                                        <mat-form-field fxFlex=\"2 1 auto\">\n                                            <mat-label>Category <span class=\"required-field\">required</span></mat-label>\n                                            <mat-select (selectionChange)=\"filter($event)\" multiple\n                                                        formControlName=\"DPPActCategory\">\n                                                <mat-option *ngFor=\"let actor of dataActors\"\n                                                            [value]=\"actor.OrganisationCategoryId \">\n                                                    {{actor.OrganisationCategoryName }}</mat-option>\n                                            </mat-select>\n                                        </mat-form-field>\n\n                                        <mat-form-field fxFlex=\"2 1 auto\">\n                                            <mat-label>Type of Organisation <span class=\"required-field\">required</span>\n                                            </mat-label>\n                                            <mat-select formControlName=\"OrganizationTypeID\">\n                                                <mat-option *ngFor=\"let type of typesOfOrganisation\"\n                                                            [value]=\"type.value.id\">{{ type.value.name }}\n                                                </mat-option>\n                                            </mat-select>\n                                        </mat-form-field>\n                                    </div>\n\n                                    <div fxLayout=\"column\" fxLayout.gt-xs=\"row\" fxLayoutGap=\"8px\"\n                                         fxLayoutGap.gt-xs=\"24px\">\n\n                                        <mat-form-field fxFlex=\"2 1 auto\">\n                                            <mat-label>Sector <span class=\"required-field\">required</span></mat-label>\n                                            <mat-select formControlName=\"SectorID\">\n                                                <mat-option *ngFor=\"let sector of $sectors\" [value]=\"sector.SectorID\">\n                                                    {{ sector.Sector }}\n                                                </mat-option>\n                                            </mat-select>\n                                        </mat-form-field>\n\n\n                                        <mat-form-field fxFlex=\"2 1 auto\">\n                                            <mat-label>Physical Address</mat-label>\n                                            <input formControlName=\"Location\" matInput>\n                                        </mat-form-field>\n\n                                        <mat-form-field fxFlex=\"2 1 auto\">\n                                            <mat-label>Organisation Telephone Number</mat-label>\n                                            <input formControlName=\"PhoneNumber\" matInput>\n                                        </mat-form-field>\n                                    </div>\n\n                                    <div fxLayout=\"column\" fxLayout.gt-xs=\"row\" fxLayoutGap=\"8px\"\n                                         fxLayoutGap.gt-xs=\"24px\">\n                                        <mat-form-field fxFlex=\"2 1 auto\">\n                                            <mat-label>Organisation Email Address</mat-label>\n                                            <input formControlName=\"EmailAddress\" matInput>\n                                        </mat-form-field>\n\n                                        <mat-form-field fxFlex=\"2 1 auto\">\n                                            <mat-label>Nature Of Business</mat-label>\n                                            <mat-select formControlName=\"NatureOfBusinessCat\">\n                                                <mat-option *ngFor=\"let business of $natureOfBusiness\"\n                                                            [value]=\"business.NatureOfBusinessCatId\">\n                                                    {{ business.NatureOfBusinessCategoryName }}\n                                                </mat-option>\n                                            </mat-select>\n                                        </mat-form-field>\n                                    </div>\n                                    <div fxLayout=\"column\" fxLayout.gt-xs=\"row\" fxLayoutGap=\"8px\"\n                                         fxLayoutGap.gt-xs=\"24px\">\n                                        <mat-form-field fxFlex=\"2 1 auto\" hintLabel=\"\">\n                                            <mat-label>Nature of Business Sub-Categories\n                                            </mat-label>\n                                            <mat-select formControlName=\"NatureOfBusinessSubCat\" multiple>\n                                                <mat-option *ngFor=\"let subCat of $natureOfBusinessCat\"\n                                                            [value]=\"subCat.NatureOfBusinessSubCatId\">\n                                                    {{ subCat.NatureOfBusinessSubCategoryName }}\n                                                </mat-option>\n                                            </mat-select>\n                                        </mat-form-field>\n                                    </div>\n\n                                </div>\n                            </form>\n                        </fury-card-content>\n                    </mat-tab>\n                    <mat-tab>\n                        <ng-template mat-tab-label>\n                            <mat-icon>admin_panel_settings</mat-icon>\n                            Data Protection Officer\n                        </ng-template>\n\n                        <fury-card-content class=\"padding-top\">\n                            <fieldset>\n                                <legend>Data Protection Officer Details</legend>\n                                <form [formGroup]=\"dataProtectionOfficerFormGroup\">\n                                    <div class=\"content\" fxLayout=\"column\" fxLayoutGap=\"8px\">\n\n                                        <div fxLayout=\"column\" fxLayout.gt-xs=\"row\" fxLayoutGap=\"8px\"\n                                             fxLayoutGap.gt-xs=\"24px\">\n                                            <mat-label>Are you required by Law to designate a data protection Officer ?\n                                            </mat-label>\n                                            <mat-radio-group\n                                                    color=\"primary\"\n                                                    formControlName=\"DPORequired\"\n                                                    aria-label=\"Pick one\">\n                                                <mat-radio-button value=\"Yes\">Yes</mat-radio-button>\n                                                <mat-radio-button value=\"No\">No</mat-radio-button>\n                                            </mat-radio-group>\n\n                                            <mat-form-field fxFlex=\"2 1 auto\" *ngIf=\"application.DPORequired === 'YES'\">\n                                                <mat-label> Name</mat-label>\n                                                <input formControlName=\"DPOName\" matInput>\n                                            </mat-form-field>\n\n                                            <mat-form-field fxFlex=\"2 1 auto\" *ngIf=\"application.DPORequired === 'YES'\">\n                                                <mat-label>Physical Address</mat-label>\n                                                <input formControlName=\"DPOPhysicalAddress\" matInput>\n                                            </mat-form-field>\n\n                                            <mat-form-field fxFlex=\"2 1 auto\" *ngIf=\"application.DPORequired === 'YES'\">\n                                                <mat-label>Phone</mat-label>\n                                                <input formControlName=\"DPOPhoneNumber\" matInput>\n                                            </mat-form-field>\n                                        </div>\n\n                                        <div fxLayout=\"column\" fxLayout.gt-xs=\"row\" fxLayoutGap=\"8px\"\n                                             fxLayoutGap.gt-xs=\"24px\">\n\n                                            <mat-form-field fxFlex=\"2 1 auto\" *ngIf=\"application.DPORequired === 'YES'\">\n                                                <mat-label>Email Address</mat-label>\n                                                <input formControlName=\"DPOEmailAddress\" matInput>\n                                            </mat-form-field>\n\n                                            <mat-form-field fxFlex=\"2 1 auto\" *ngIf=\"application.DPORequired === 'YES'\">\n                                                <mat-label>Title Held</mat-label>\n                                                <input formControlName=\"DPOPositionInOrganisation\" matInput>\n                                            </mat-form-field>\n\n                                        </div>\n                                    </div>\n                                </form>\n                            </fieldset>\n                        </fury-card-content>\n                    </mat-tab>\n                    <mat-tab label=\"\">\n                        <ng-template mat-tab-label>\n                            <mat-icon>folder_shared</mat-icon>\n                            Data Collected or Processed\n                        </ng-template>\n\n                        <fury-card-content class=\"padding-top\">\n                            <fieldset>\n                                <legend>Data Collected / Processed</legend>\n                                <form [formGroup]=\"personalDataHeldFormGroup\">\n                                    <ng-template matStepLabel>Personal Data Held</ng-template>\n                                    <div class=\"content\" fxLayout=\"column\" fxLayoutGap=\"8px\">\n                                        <mat-form-field hintLabel=\"Choose all that apply.\" class=\"full-width\">\n                                            <mat-label>Source of Data\n                                            </mat-label>\n                                            <mat-select multiple formControlName=\"SourceOfDataID\">\n                                                <mat-option *ngFor=\"let source of $dataSources\"\n                                                            [value]=\"source.DataSourceID\">\n                                                    {{ source.DataSource }}\n                                                </mat-option>\n                                            </mat-select>\n                                        </mat-form-field>\n                                        <section *ngFor=\"let category of refDataSourcesCat; let i = index\"\n                                                 class=\"expand-section categories\">\n\n                                            <h3 [innerHTML]=\"category.DataCategory\"></h3>\n                                            <br>\n\n                                            <ng-container *ngFor=\"let item of category.SubCategories\">\n                                                <mat-checkbox formControlName=\"PersonalDataCollected\"\n                                                              [(ngModel)]=\"item.checked\"\n                                                >\n                                                    {{item.DataSubCategory}}\n                                                </mat-checkbox>\n                                            </ng-container>\n\n<!--                                            <mat-checkbox formControlName=\"PersonalDataCollected\"-->\n<!--                                                          *ngFor=\"let SubCategory of category.SubCategories\"-->\n<!--                                                          [(ngModel)]=\"SubCategory.checked\"-->\n<!--                                                          [ngClass]=\"{'full-width': category.SubCategories.length === 1}\"-->\n<!--                                                          color=\"primary\"-->\n<!--                                                          (change)=\"onChangeSubCategory($event,SubCategory)\"-->\n<!--                                                          [required]=\"'false'\">-->\n<!--                                                {{ SubCategory.DataSubCategory }}-->\n<!--                                            </mat-checkbox>-->\n                                        </section>\n                                    </div>\n                                </form>\n                            </fieldset>\n\n                        </fury-card-content>\n                    </mat-tab>\n                    <mat-tab label=\"\">\n                        <ng-template mat-tab-label>\n                            <mat-icon>verified_user</mat-icon>\n                            Purpose & Retention\n                        </ng-template>\n                        <fury-card-content class=\"padding-top\">\n                            <fieldset>\n                                <legend>Purpose & Retention Details</legend>\n                                <form [formGroup]=\"purposeRetentionFormGroup\">\n                                    <div class=\"content\" fxLayout=\"column\" fxLayoutGap=\"8px\">\n                                        <div fxLayout=\"column\" fxLayout.gt-xs=\"row\" fxLayoutGap=\"8px\"\n                                             fxLayoutGap.gt-xs=\"24px\">\n                                            <mat-form-field fxFlex=\"2 1 auto\"\n                                                            hintLabel=\"Why do you collect personal Data?\">\n                                                <mat-label>For What Purpose ?<span\n                                                        class=\"required-field\">required</span>\n                                                </mat-label>\n                                                <mat-select formControlName=\"Purpose\" multiple>\n                                                    <mat-option *ngFor=\"let purpose of $dataPurposes\"\n                                                                [value]=\"purpose.DataPurposeID\">\n                                                        {{ purpose.DataPurpose }}\n                                                    </mat-option>\n                                                </mat-select>\n                                            </mat-form-field>\n\n                                            <mat-form-field fxFlex=\"2 1 auto\"\n                                                            hintLabel=\"If the purpose is Collection / Processing is required by Law.\"\n                                            >\n                                                <mat-label>Specify the Law\n                                                </mat-label>\n                                                <input matInput maxlength=\"14\" formControlName=\"SpecifyTheLaw\">\n                                            </mat-form-field>\n\n                                            <mat-form-field fxFlex=\"2 1 auto\"\n                                                            hintLabel=\"If the purpose is to provide services / products to Individuals.\"\n                                            >\n                                                <mat-label>Specify the Service / Product Provided</mat-label>\n                                                <input matInput maxlength=\"14\"\n                                                       formControlName=\"ServiceOrProductProvided\">\n                                            </mat-form-field>\n                                        </div>\n                                        <div fxLayout=\"column\" fxLayout.gt-xs=\"row\" fxLayoutGap=\"8px\"\n                                             fxLayoutGap.gt-xs=\"24px\">\n                                            <mat-form-field fxFlex=\"2 1 auto\"\n                                                            hintLabel=\"If the purpose is for Complience with a Legal Obligation.\"\n                                            >\n                                                <mat-label>Specify the Legal Obligation</mat-label>\n                                                <input matInput maxlength=\"14\" formControlName=\"SpecifyLegalObligation\">\n                                            </mat-form-field>\n\n                                            <mat-form-field fxFlex=\"2 1 auto\"\n                                                            hintLabel=\"Approximate number of Personal Data Records held.\">\n                                                <mat-label>Total Records\n                                                </mat-label>\n                                                <input appCurrencyDirective matInput maxlength=\"14\"\n                                                       formControlName=\"TotalRecordsAtRegistration\">\n                                            </mat-form-field>\n\n                                            <mat-form-field fxFlex=\"2 1 auto\"\n                                                            hintLabel=\"The percentage annual growth of Personal Records held\">\n                                                <mat-label>Percentage Annual Growth</mat-label>\n                                                <input appCurrencyDirective matInput maxlength=\"3\"\n                                                       formControlName=\"RecordPercentageGrowth\">\n                                                <span matSuffix>%</span>\n                                            </mat-form-field>\n\n                                            <mat-form-field fxFlex=\"2 1 auto\"\n                                                            hintLabel=\"Duration for which personal data shall be kept (Years).\">\n                                                <mat-label>Retention period\n                                                </mat-label>\n                                                <input appCurrencyDirective matInput maxlength=\"5\"\n                                                       formControlName=\"RetentionPeriod\">\n                                            </mat-form-field>\n                                        </div>\n                                    </div>\n                                </form>\n                            </fieldset>\n\n                        </fury-card-content>\n                    </mat-tab>\n                    <mat-tab label=\"\">\n                        <ng-template mat-tab-label>\n                            <mat-icon>group_add</mat-icon>\n                            DisClosure & Transfer\n                        </ng-template>\n                        <fury-card-content class=\"padding-top\">\n                            <form [formGroup]=\"disclosureFormGroup\">\n                                <div class=\"content\" fxLayout=\"column\" fxLayoutGap=\"8px\">\n\n                                    <div fxLayout=\"column\" fxLayout.gt-xs=\"row\" fxLayoutGap=\"8px\"\n                                         fxLayoutGap.gt-xs=\"24px\">\n                                        <mat-label>List of persons or Bodies to whom personal data may be disclosed\n                                            Do you disclose Personal Data to other Persons or Bodies ?\n                                        </mat-label>\n                                        <mat-radio-group color=\"primary\" aria-label=\"Pick one\"\n                                                         formControlName=\"disclosePersonalData\">\n                                            <mat-radio-button value=\"Yes\"> Yes</mat-radio-button>\n                                            <mat-radio-button value=\"No\"> No</mat-radio-button>\n                                        </mat-radio-group>\n                                    </div>\n                                    <div fxFlex=\"2 2 auto\">\n                                        <fury-third-parties\n                                                [disclosePersonalData]=\"application.PersonalDataIsForDisclosure\"\n                                                [thirdParties]=\"application.ThirdParties\"\n                                                [isViewOnly]=\"true\"\n                                                (thirdPartiesEvent)=\"onDataThirdPartiesChange($event)\">\n                                        </fury-third-parties>\n                                    </div>\n                                    <div fxLayout=\"column\" fxLayout.gt-xs=\"row\" fxLayoutGap=\"8px\"\n                                         fxLayoutGap.gt-xs=\"24px\">\n                                        <mat-label>Do you Transfer personal data outside Uganda\n                                        </mat-label>\n                                        <mat-radio-group color=\"primary\" aria-label=\"Pick one\"\n                                                         formControlName=\"StoreDataOutsideCountry\">\n                                            <mat-radio-button value=\"Yes\"> Yes</mat-radio-button>\n                                            <mat-radio-button value=\"No\"> No</mat-radio-button>\n                                        </mat-radio-group>\n                                    </div>\n                                    <fury-countries\n                                            [storeDataOutSideCountry]=\"application.StoreDataOutsideCountry\"\n                                            [countries]=\"application.Countries\"\n                                            [isViewOnly]=\"true\"\n                                            (countryEvent)=\"onCountriesChange($event)\"\n                                    ></fury-countries>\n                                </div>\n                            </form>\n                        </fury-card-content>\n                    </mat-tab>\n                    <mat-tab label=\"\">\n                        <ng-template mat-tab-label>\n                            <mat-icon>admin_panel_settings</mat-icon>\n                            Security Information\n                        </ng-template>\n                        <fury-card-content class=\"padding-top\">\n                            <fury-security-measures\n                                    [securityMeasures]=\"application.SecurityMeasure\"\n                                    [isViewOnly]=\"true\"\n                                    (securityEvent)=\"onSecurityModelChange($event)\"\n                            ></fury-security-measures>\n                        </fury-card-content>\n                    </mat-tab>\n                </mat-tab-group>\n            </fury-card>\n        </div>\n    </fury-page-layout-content>\n</fury-page-layout>\n","var Utils = require('./utils')\n\nvar G15 = (1 << 10) | (1 << 8) | (1 << 5) | (1 << 4) | (1 << 2) | (1 << 1) | (1 << 0)\nvar G15_MASK = (1 << 14) | (1 << 12) | (1 << 10) | (1 << 4) | (1 << 1)\nvar G15_BCH = Utils.getBCHDigit(G15)\n\n/**\n * Returns format information with relative error correction bits\n *\n * The format information is a 15-bit sequence containing 5 data bits,\n * with 10 error correction bits calculated using the (15, 5) BCH code.\n *\n * @param  {Number} errorCorrectionLevel Error correction level\n * @param  {Number} mask                 Mask pattern\n * @return {Number}                      Encoded format information bits\n */\nexports.getEncodedBits = function getEncodedBits (errorCorrectionLevel, mask) {\n  var data = ((errorCorrectionLevel.bit << 3) | mask)\n  var d = data << 10\n\n  while (Utils.getBCHDigit(d) - G15_BCH >= 0) {\n    d ^= (G15 << (Utils.getBCHDigit(d) - G15_BCH))\n  }\n\n  // xor final data with mask pattern in order to ensure that\n  // no combination of Error Correction Level and data mask pattern\n  // will result in an all-zero data string\n  return ((data << 10) | d) ^ G15_MASK\n}\n","import {AfterViewInit, Component, EventEmitter, Input, OnInit, ViewChild} from '@angular/core';\nimport { Subscription} from 'rxjs';\nimport {\n    CompanyRegistration,\n    ComponyRegistrationObject\n} from '../company-registration.model';\nimport {\n    DataType, DateFinderOptions,\n    IFinderField,\n    ListColumn,\n    LookupFinderOptions,\n    TextFinderOptions\n} from '../../../../../@fury/shared/list/list-column.model';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {MatDialog} from '@angular/material/dialog';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {fadeInRightAnimation} from '../../../../../@fury/animations/fade-in-right.animation';\nimport {fadeInUpAnimation} from '../../../../../@fury/animations/fade-in-up.animation';\nimport {BaseFuryForm} from '../../../../../@fury/shared/base-fury-form';\nimport {CompanyRegistrationService} from '../../company-registration.service';\nimport {KeycloakService} from 'keycloak-angular';\nimport {WorkflowServiceService} from '../../../../services/workflow-service.service';\nimport {AuthenticationService} from '../../../../authentication/authentication.service';\nimport {ComplaintService} from '../../../complaints/complaints.service';\n\n@Component({\n    selector: 'fury-find-company-registration',\n    templateUrl: './find-company-registration.component.html',\n    styleUrls: ['./find-company-registration.component.scss'],\n    animations: [fadeInRightAnimation, fadeInUpAnimation]\n})\nexport class FindCompanyRegistrationComponent extends BaseFuryForm implements OnInit, AfterViewInit {\n\n\n    statuses: any = [\n        {code: '001', description: 'Received'},\n        {code: '002', description: 'Pending Payment'},\n        {code: '003', description: 'Legal Review'},\n        {code: '004', description: 'Technical Review'},\n        {code: '005', description: 'Paid'},\n        {code: '002', description: 'Certificate Issued'},\n    ];\n\n    operationType = '';\n    realmRole: string;\n    showUpdateButton =  false;\n    // Array\n    accesses: any [] = [];\n    statusList: any[] = [];\n    companyRegistrations: ComponyRegistrationObject[];\n    // Subscriptions\n    subscriptions: Subscription[] = [];\n    // Events\n    $processingEvent: EventEmitter<boolean> = new EventEmitter();\n    $errorsEvent: EventEmitter<any> = new EventEmitter();\n    $resultCompaniesEvent: EventEmitter<ComponyRegistrationObject> = new EventEmitter();\n    // Boolean\n    isProcessing = false;\n    isOrganisation = false;\n    @Input()\n    columns: ListColumn[] = [\n        {name: 'Tracking No', property: 'RegTrackingNo', visible: true, isModelProperty: true},\n        {name: 'Organisation Name', property: 'OrganisationName', visible: true, isModelProperty: true},\n        {name: 'Current Status', property: 'CurrentStepName', visible: true, isModelProperty: true},\n        {name: 'Email', property: 'EmailAddress', visible: true, isModelProperty: true},\n        {name: 'PhoneNumber', property: 'PhoneNumber', visible: true, isModelProperty: true},\n        {name: 'Created On', property: 'EnteredOn', visible: true, isModelProperty: false},\n        {name: 'Actions', property: 'actions', visible: true},\n    ] as ListColumn[];\n    pageSize = 10;\n    dataSource: MatTableDataSource<CompanyRegistration> | null;\n\n    @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n    @ViewChild(MatSort, {static: true}) sort: MatSort;\n\n    // Search fields\n    searchFields: IFinderField[];\n\n    constructor(\n        private dialog: MatDialog,\n        private route: ActivatedRoute,\n        private router: Router,\n        private auth: KeycloakService,\n        private authenticationService: AuthenticationService,\n        public registrationService: CompanyRegistrationService,\n        public _workflowService: WorkflowServiceService,\n        public complaintService:ComplaintService\n    ) {\n        super(\n            auth,\n            _workflowService,\n            registrationService,\n            complaintService,\n        );\n\n        this.operationType = route.routeConfig.data.action;\n    }\n\n    // TODO:: Need to hide addressedTo Column from data controllers its mainly for nita data-protection officers\n    get visibleColumns() {\n        return this.columns.filter(column => column.visible).map(column => column.property);\n    }\n\n    ngOnInit(): void {\n        if (this.auth.getKeycloakInstance().resourceAccess['dps-frontend']) {\n            this.accesses = this.auth.getKeycloakInstance().resourceAccess['dps-frontend'].roles;\n        }\n\n        console.log(this.auth.getKeycloakInstance());\n\n        if (this.auth.getKeycloakInstance().realmAccess) {\n            if(this.auth.getKeycloakInstance().realmAccess.roles.includes('organisation')){\n                this.isOrganisation = true;\n            }\n            //this.realmRole = this.auth.getKeycloakInstance().realmAccess.roles[1];\n            //console.log(this.realmRole);\n            //console.log(\"here\");\n            //if (this.realmRole === 'organisation') {\n                //this.isOrganisation = true;\n            //}\n        }\n\n        // Processing event\n        this.subscriptions['$processingEvent'] = this.$processingEvent.subscribe(isProcessing => this.isProcessing = isProcessing);\n\n        this.dataSource = new MatTableDataSource();\n\n        // registeredCompanies\n        this.subscriptions['$resultCompaniesEvent'] = this.$resultCompaniesEvent.subscribe(result => {\n            if (result) {\n                this.companyRegistrations = result;\n                this.dataSource.data = result;\n                this.isLoaded = true;\n            }\n        });\n\n        this.statusList = this.getGenericDDL(this.statuses, {key: 'code', label: 'description'}, false);\n\n        this.defineSearchFields();\n\n        if (this.operationType === 'FIND') {\n            if (this.isOrganisation) {\n                this.loadByOrganisationID();\n            } else {\n                this.loadRegisteredOrganisation();\n            }\n        }\n\n        if (this.operationType === 'PENDING-TASK') {\n            this.loadMyPendingTask();\n        }\n    }\n\n    loadRegisteredOrganisation() {\n        this.showUpdateButton = true;\n        this.registrationService.getRegisteredOrganisation(this.$processingEvent, this.$resultCompaniesEvent, this.$errorsEvent);\n    }\n\n    loadByOrganisationID() {\n        // tslint:disable-next-line:max-line-length\n        this.registrationService.getByOrgID(this.$processingEvent, this.$resultCompaniesEvent, this.$errorsEvent, this.authenticationService.getOrganisationID());\n    }\n    //\n\n    loadMyPendingTask() {\n        console.log(this.realmRole);\n        this.registrationService.getMyPendingTask(\n            this.realmRole, this.$processingEvent, this.$resultCompaniesEvent, this.$errorsEvent);\n    }\n\n    ngAfterViewInit() {\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n    }\n\n    onFilterChange(value) {\n        if (!this.dataSource) {\n            return;\n        }\n        value = value.trim();\n        value = value.toLowerCase();\n        this.dataSource.filter = value;\n    }\n\n    viewRegistration(registration) {\n        this.router.navigate(['/company-registration/view'],\n            {state: {regTrackingNo: registration.RegTrackingNo}}).then( );\n    }\n\n    manageRegistration(registration) {\n        console.log(registration);\n        if(registration.CurrentStepID === 7 || registration.CurrentStepID === 8){\n            this.router.navigate(['/company-registration/manage-registration-update'],\n                {state: {regTrackingNo: registration.RegTrackingNo,\n                         OrganisationID: registration.OrganisationID,\n                         CurrentStepID : registration.CurrentStepID}}).then();\n        }\n        else{\n            console.log('tracking number' + JSON.stringify(registration.RegTrackingNo));\n            this.router.navigate(['/company-registration/update-application'],\n                {state: {regTrackingNo: registration.RegTrackingNo}}).then();\n        }\n      \n    }\n\n\n    updateRegistrationDetails(registration) {\n        \n        this.router.navigate(['/company-registration/update-registration-details'],\n            {state: {regTrackingNo: registration.RegTrackingNo}}).then();\n         \n    }\n\n    private defineSearchFields() {\n        this.searchFields = [\n            {\n                label: 'Registration reference #',\n                fieldName: 'registrationReference',\n                operators: TextFinderOptions,\n                dataType: DataType.TEXT\n            },\n            {\n                label: 'Company Name',\n                fieldName: 'companyName',\n                operators: TextFinderOptions,\n                dataType: DataType.TEXT\n            },\n            {\n                label: 'Status',\n                fieldName: 'status',\n                operators: LookupFinderOptions,\n                dataType: DataType.TEXT,\n                lookupOptions: this.statusList,\n                multiple: true\n            },\n            {\n                label: 'Registration date',\n                fieldName: 'registrationDate',\n                operators: DateFinderOptions,\n                dataType: DataType.DATETIME\n            },\n        ];\n    }\n\n\n}","<fury-page-layout mode=\"card\">\n    <fury-page-layout-header>\n        <fury-breadcrumbs [@fadeInRight] [crumbs]=\"['Company Registration']\" current=\"Find\"></fury-breadcrumbs>\n    </fury-page-layout-header>\n\n    <fury-page-layout-content [@fadeInUp]>\n        <fury-list \n            name=\"Company Registration\" \n            [columns]=\"columns\" \n            (filterChange)=\"onFilterChange($event)\"\n            finderDialogTitle=\"Company Registration Finder\"\n            [searchFields]=\"searchFields\">\n\n            <div class=\"table-container\">\n                <table [dataSource]=\"dataSource\" mat-table matSort>\n                    <ng-container matColumnDef=\"checkbox\">\n                        <th *matHeaderCellDef class=\"actions-cell\" mat-header-cell>\n                            <mat-checkbox color=\"primary\" (click)=\"$event.stopPropagation()\"></mat-checkbox>\n                        </th>\n                        <td *matCellDef=\"let row\" class=\"actions-cell\" mat-cell>\n                            <mat-checkbox color=\"primary\" (click)=\"$event.stopPropagation()\"></mat-checkbox>\n                        </td>\n                    </ng-container>\n    \n                    <!-- fullName Column -->\n                    <ng-container *ngFor=\"let column of columns\">\n                        <ng-container *ngIf=\"column.isModelProperty\" [matColumnDef]=\"column.property\">\n                            <th *matHeaderCellDef mat-header-cell mat-sort-header> {{ column.name }}</th>\n                            <td *matCellDef=\"let row\" mat-cell>\n                                {{ row[column.property] }}\n                            </td>\n                        </ng-container>\n    \n                        <ng-container *ngIf=\"column.name === 'Created On'\" [matColumnDef]=\"column.property\">\n                            <th *matHeaderCellDef mat-header-cell mat-sort-header> {{ column.name}}</th>\n                            <td *matCellDef=\"let row\" mat-cell>\n                                {{ row[column.property]  | date :'MMM d, y, h:mm a'  }}\n                            </td>\n                        </ng-container>\n                    </ng-container>\n    \n                    <ng-container matColumnDef=\"actions\">\n                        <th *matHeaderCellDef class=\"actions-cell\" mat-header-cell mat-sort-header>Actions</th>\n                        <td *matCellDef=\"let row\" class=\"actions-cell\" mat-cell>\n                            <button type=\"button\" mat-icon-button [matMenuTriggerFor]=\"actionsMenu\"\n                                    (click)=\"$event.stopPropagation()\">\n                                <mat-icon>more_vert</mat-icon>\n                            </button>\n    \n                            <mat-menu #actionsMenu=\"matMenu\" yPosition=\"below\" xPosition=\"before\">\n                                <!-- <button (click)=\"viewRegistration(row)\"  mat-menu-item\n                                   routerLinkActive=\"router-link-active\">\n                                    <mat-icon>visibility</mat-icon>\n                                    <span>View</span>\n                                </button> -->\n                                <button (click)=\"manageRegistration(row)\"  mat-menu-item\n                                        routerLinkActive=\"router-link-active\">\n                                    <mat-icon>settings</mat-icon>\n                                    <span>Manage</span>\n                                </button>\n                                <button *ngIf = \"showUpdateButton\" (click)=\"updateRegistrationDetails(row)\"  mat-menu-item\n                                routerLinkActive=\"router-link-active\">\n                            <mat-icon>settings</mat-icon>\n                            <span>Update</span>\n                        </button>\n                            </mat-menu>\n                        </td>\n                    </ng-container>\n                    <tr *matHeaderRowDef=\"visibleColumns\" mat-header-row></tr>\n                    <tr\n                        *matRowDef=\"let row; columns: visibleColumns;\"\n                        class=\"clickable route-animations-elements\"\n                        mat-row></tr>\n                </table>\n            </div>\n            \n            <mat-paginator \n\n                class=\"paginator\" \n                [pageSize]=\"pageSize\">\n            </mat-paginator>\n        </fury-list>\n    </fury-page-layout-content>\n    \n</fury-page-layout>","var Mode = require('./mode')\n\n/**\n * Array of characters available in alphanumeric mode\n *\n * As per QR Code specification, to each character\n * is assigned a value from 0 to 44 which in this case coincides\n * with the array index\n *\n * @type {Array}\n */\nvar ALPHA_NUM_CHARS = [\n  '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',\n  'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M',\n  'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z',\n  ' ', '$', '%', '*', '+', '-', '.', '/', ':'\n]\n\nfunction AlphanumericData (data) {\n  this.mode = Mode.ALPHANUMERIC\n  this.data = data\n}\n\nAlphanumericData.getBitsLength = function getBitsLength (length) {\n  return 11 * Math.floor(length / 2) + 6 * (length % 2)\n}\n\nAlphanumericData.prototype.getLength = function getLength () {\n  return this.data.length\n}\n\nAlphanumericData.prototype.getBitsLength = function getBitsLength () {\n  return AlphanumericData.getBitsLength(this.data.length)\n}\n\nAlphanumericData.prototype.write = function write (bitBuffer) {\n  var i\n\n  // Input data characters are divided into groups of two characters\n  // and encoded as 11-bit binary codes.\n  for (i = 0; i + 2 <= this.data.length; i += 2) {\n    // The character value of the first character is multiplied by 45\n    var value = ALPHA_NUM_CHARS.indexOf(this.data[i]) * 45\n\n    // The character value of the second digit is added to the product\n    value += ALPHA_NUM_CHARS.indexOf(this.data[i + 1])\n\n    // The sum is then stored as 11-bit binary number\n    bitBuffer.put(value, 11)\n  }\n\n  // If the number of input data characters is not a multiple of two,\n  // the character value of the final character is encoded as a 6-bit binary number.\n  if (this.data.length % 2) {\n    bitBuffer.put(ALPHA_NUM_CHARS.indexOf(this.data[i]), 6)\n  }\n}\n\nmodule.exports = AlphanumericData\n","import {AfterViewInit, Component, Inject, OnInit, ViewChild} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {FormBuilder} from '@angular/forms';\nimport {CertificateDetails} from '../company-registration.model';\nimport { CompanyCertComponent } from '../company-cert/company-cert.component';\n\n@Component({\n  selector: 'fury-cert-preview',\n  templateUrl: './cert-preview.component.html',\n  styleUrls: ['./cert-preview.component.scss']\n})\nexport class CertPreviewComponent implements OnInit, AfterViewInit {\n\n  @ViewChild(CompanyCertComponent) companyCertComponent!: CompanyCertComponent;\n\n  constructor(@Inject(MAT_DIALOG_DATA) public certDetails: CertificateDetails,\n              private dialogRef: MatDialogRef<CertPreviewComponent>,\n              private fb: FormBuilder) {\n  }\n\n  ngOnInit(): void {\n    console.log(this.certDetails);\n  }\n\n  ngAfterViewInit(): void {\n  }\n\n}\n","\n    <fury-company-cert\n            [certificateData]=\"certDetails\"\n    ></fury-company-cert>\n\n","var Buffer = require('../utils/buffer')\nvar Utils = require('./utils')\nvar ECLevel = require('./error-correction-level')\nvar BitBuffer = require('./bit-buffer')\nvar BitMatrix = require('./bit-matrix')\nvar AlignmentPattern = require('./alignment-pattern')\nvar FinderPattern = require('./finder-pattern')\nvar MaskPattern = require('./mask-pattern')\nvar ECCode = require('./error-correction-code')\nvar ReedSolomonEncoder = require('./reed-solomon-encoder')\nvar Version = require('./version')\nvar FormatInfo = require('./format-info')\nvar Mode = require('./mode')\nvar Segments = require('./segments')\nvar isArray = require('isarray')\n\n/**\n * QRCode for JavaScript\n *\n * modified by Ryan Day for nodejs support\n * Copyright (c) 2011 Ryan Day\n *\n * Licensed under the MIT license:\n *   http://www.opensource.org/licenses/mit-license.php\n *\n//---------------------------------------------------------------------\n// QRCode for JavaScript\n//\n// Copyright (c) 2009 Kazuhiko Arase\n//\n// URL: http://www.d-project.com/\n//\n// Licensed under the MIT license:\n//   http://www.opensource.org/licenses/mit-license.php\n//\n// The word \"QR Code\" is registered trademark of\n// DENSO WAVE INCORPORATED\n//   http://www.denso-wave.com/qrcode/faqpatent-e.html\n//\n//---------------------------------------------------------------------\n*/\n\n/**\n * Add finder patterns bits to matrix\n *\n * @param  {BitMatrix} matrix  Modules matrix\n * @param  {Number}    version QR Code version\n */\nfunction setupFinderPattern (matrix, version) {\n  var size = matrix.size\n  var pos = FinderPattern.getPositions(version)\n\n  for (var i = 0; i < pos.length; i++) {\n    var row = pos[i][0]\n    var col = pos[i][1]\n\n    for (var r = -1; r <= 7; r++) {\n      if (row + r <= -1 || size <= row + r) continue\n\n      for (var c = -1; c <= 7; c++) {\n        if (col + c <= -1 || size <= col + c) continue\n\n        if ((r >= 0 && r <= 6 && (c === 0 || c === 6)) ||\n          (c >= 0 && c <= 6 && (r === 0 || r === 6)) ||\n          (r >= 2 && r <= 4 && c >= 2 && c <= 4)) {\n          matrix.set(row + r, col + c, true, true)\n        } else {\n          matrix.set(row + r, col + c, false, true)\n        }\n      }\n    }\n  }\n}\n\n/**\n * Add timing pattern bits to matrix\n *\n * Note: this function must be called before {@link setupAlignmentPattern}\n *\n * @param  {BitMatrix} matrix Modules matrix\n */\nfunction setupTimingPattern (matrix) {\n  var size = matrix.size\n\n  for (var r = 8; r < size - 8; r++) {\n    var value = r % 2 === 0\n    matrix.set(r, 6, value, true)\n    matrix.set(6, r, value, true)\n  }\n}\n\n/**\n * Add alignment patterns bits to matrix\n *\n * Note: this function must be called after {@link setupTimingPattern}\n *\n * @param  {BitMatrix} matrix  Modules matrix\n * @param  {Number}    version QR Code version\n */\nfunction setupAlignmentPattern (matrix, version) {\n  var pos = AlignmentPattern.getPositions(version)\n\n  for (var i = 0; i < pos.length; i++) {\n    var row = pos[i][0]\n    var col = pos[i][1]\n\n    for (var r = -2; r <= 2; r++) {\n      for (var c = -2; c <= 2; c++) {\n        if (r === -2 || r === 2 || c === -2 || c === 2 ||\n          (r === 0 && c === 0)) {\n          matrix.set(row + r, col + c, true, true)\n        } else {\n          matrix.set(row + r, col + c, false, true)\n        }\n      }\n    }\n  }\n}\n\n/**\n * Add version info bits to matrix\n *\n * @param  {BitMatrix} matrix  Modules matrix\n * @param  {Number}    version QR Code version\n */\nfunction setupVersionInfo (matrix, version) {\n  var size = matrix.size\n  var bits = Version.getEncodedBits(version)\n  var row, col, mod\n\n  for (var i = 0; i < 18; i++) {\n    row = Math.floor(i / 3)\n    col = i % 3 + size - 8 - 3\n    mod = ((bits >> i) & 1) === 1\n\n    matrix.set(row, col, mod, true)\n    matrix.set(col, row, mod, true)\n  }\n}\n\n/**\n * Add format info bits to matrix\n *\n * @param  {BitMatrix} matrix               Modules matrix\n * @param  {ErrorCorrectionLevel}    errorCorrectionLevel Error correction level\n * @param  {Number}    maskPattern          Mask pattern reference value\n */\nfunction setupFormatInfo (matrix, errorCorrectionLevel, maskPattern) {\n  var size = matrix.size\n  var bits = FormatInfo.getEncodedBits(errorCorrectionLevel, maskPattern)\n  var i, mod\n\n  for (i = 0; i < 15; i++) {\n    mod = ((bits >> i) & 1) === 1\n\n    // vertical\n    if (i < 6) {\n      matrix.set(i, 8, mod, true)\n    } else if (i < 8) {\n      matrix.set(i + 1, 8, mod, true)\n    } else {\n      matrix.set(size - 15 + i, 8, mod, true)\n    }\n\n    // horizontal\n    if (i < 8) {\n      matrix.set(8, size - i - 1, mod, true)\n    } else if (i < 9) {\n      matrix.set(8, 15 - i - 1 + 1, mod, true)\n    } else {\n      matrix.set(8, 15 - i - 1, mod, true)\n    }\n  }\n\n  // fixed module\n  matrix.set(size - 8, 8, 1, true)\n}\n\n/**\n * Add encoded data bits to matrix\n *\n * @param  {BitMatrix} matrix Modules matrix\n * @param  {Buffer}    data   Data codewords\n */\nfunction setupData (matrix, data) {\n  var size = matrix.size\n  var inc = -1\n  var row = size - 1\n  var bitIndex = 7\n  var byteIndex = 0\n\n  for (var col = size - 1; col > 0; col -= 2) {\n    if (col === 6) col--\n\n    while (true) {\n      for (var c = 0; c < 2; c++) {\n        if (!matrix.isReserved(row, col - c)) {\n          var dark = false\n\n          if (byteIndex < data.length) {\n            dark = (((data[byteIndex] >>> bitIndex) & 1) === 1)\n          }\n\n          matrix.set(row, col - c, dark)\n          bitIndex--\n\n          if (bitIndex === -1) {\n            byteIndex++\n            bitIndex = 7\n          }\n        }\n      }\n\n      row += inc\n\n      if (row < 0 || size <= row) {\n        row -= inc\n        inc = -inc\n        break\n      }\n    }\n  }\n}\n\n/**\n * Create encoded codewords from data input\n *\n * @param  {Number}   version              QR Code version\n * @param  {ErrorCorrectionLevel}   errorCorrectionLevel Error correction level\n * @param  {ByteData} data                 Data input\n * @return {Buffer}                        Buffer containing encoded codewords\n */\nfunction createData (version, errorCorrectionLevel, segments) {\n  // Prepare data buffer\n  var buffer = new BitBuffer()\n\n  segments.forEach(function (data) {\n    // prefix data with mode indicator (4 bits)\n    buffer.put(data.mode.bit, 4)\n\n    // Prefix data with character count indicator.\n    // The character count indicator is a string of bits that represents the\n    // number of characters that are being encoded.\n    // The character count indicator must be placed after the mode indicator\n    // and must be a certain number of bits long, depending on the QR version\n    // and data mode\n    // @see {@link Mode.getCharCountIndicator}.\n    buffer.put(data.getLength(), Mode.getCharCountIndicator(data.mode, version))\n\n    // add binary data sequence to buffer\n    data.write(buffer)\n  })\n\n  // Calculate required number of bits\n  var totalCodewords = Utils.getSymbolTotalCodewords(version)\n  var ecTotalCodewords = ECCode.getTotalCodewordsCount(version, errorCorrectionLevel)\n  var dataTotalCodewordsBits = (totalCodewords - ecTotalCodewords) * 8\n\n  // Add a terminator.\n  // If the bit string is shorter than the total number of required bits,\n  // a terminator of up to four 0s must be added to the right side of the string.\n  // If the bit string is more than four bits shorter than the required number of bits,\n  // add four 0s to the end.\n  if (buffer.getLengthInBits() + 4 <= dataTotalCodewordsBits) {\n    buffer.put(0, 4)\n  }\n\n  // If the bit string is fewer than four bits shorter, add only the number of 0s that\n  // are needed to reach the required number of bits.\n\n  // After adding the terminator, if the number of bits in the string is not a multiple of 8,\n  // pad the string on the right with 0s to make the string's length a multiple of 8.\n  while (buffer.getLengthInBits() % 8 !== 0) {\n    buffer.putBit(0)\n  }\n\n  // Add pad bytes if the string is still shorter than the total number of required bits.\n  // Extend the buffer to fill the data capacity of the symbol corresponding to\n  // the Version and Error Correction Level by adding the Pad Codewords 11101100 (0xEC)\n  // and 00010001 (0x11) alternately.\n  var remainingByte = (dataTotalCodewordsBits - buffer.getLengthInBits()) / 8\n  for (var i = 0; i < remainingByte; i++) {\n    buffer.put(i % 2 ? 0x11 : 0xEC, 8)\n  }\n\n  return createCodewords(buffer, version, errorCorrectionLevel)\n}\n\n/**\n * Encode input data with Reed-Solomon and return codewords with\n * relative error correction bits\n *\n * @param  {BitBuffer} bitBuffer            Data to encode\n * @param  {Number}    version              QR Code version\n * @param  {ErrorCorrectionLevel} errorCorrectionLevel Error correction level\n * @return {Buffer}                         Buffer containing encoded codewords\n */\nfunction createCodewords (bitBuffer, version, errorCorrectionLevel) {\n  // Total codewords for this QR code version (Data + Error correction)\n  var totalCodewords = Utils.getSymbolTotalCodewords(version)\n\n  // Total number of error correction codewords\n  var ecTotalCodewords = ECCode.getTotalCodewordsCount(version, errorCorrectionLevel)\n\n  // Total number of data codewords\n  var dataTotalCodewords = totalCodewords - ecTotalCodewords\n\n  // Total number of blocks\n  var ecTotalBlocks = ECCode.getBlocksCount(version, errorCorrectionLevel)\n\n  // Calculate how many blocks each group should contain\n  var blocksInGroup2 = totalCodewords % ecTotalBlocks\n  var blocksInGroup1 = ecTotalBlocks - blocksInGroup2\n\n  var totalCodewordsInGroup1 = Math.floor(totalCodewords / ecTotalBlocks)\n\n  var dataCodewordsInGroup1 = Math.floor(dataTotalCodewords / ecTotalBlocks)\n  var dataCodewordsInGroup2 = dataCodewordsInGroup1 + 1\n\n  // Number of EC codewords is the same for both groups\n  var ecCount = totalCodewordsInGroup1 - dataCodewordsInGroup1\n\n  // Initialize a Reed-Solomon encoder with a generator polynomial of degree ecCount\n  var rs = new ReedSolomonEncoder(ecCount)\n\n  var offset = 0\n  var dcData = new Array(ecTotalBlocks)\n  var ecData = new Array(ecTotalBlocks)\n  var maxDataSize = 0\n  var buffer = new Buffer(bitBuffer.buffer)\n\n  // Divide the buffer into the required number of blocks\n  for (var b = 0; b < ecTotalBlocks; b++) {\n    var dataSize = b < blocksInGroup1 ? dataCodewordsInGroup1 : dataCodewordsInGroup2\n\n    // extract a block of data from buffer\n    dcData[b] = buffer.slice(offset, offset + dataSize)\n\n    // Calculate EC codewords for this data block\n    ecData[b] = rs.encode(dcData[b])\n\n    offset += dataSize\n    maxDataSize = Math.max(maxDataSize, dataSize)\n  }\n\n  // Create final data\n  // Interleave the data and error correction codewords from each block\n  var data = new Buffer(totalCodewords)\n  var index = 0\n  var i, r\n\n  // Add data codewords\n  for (i = 0; i < maxDataSize; i++) {\n    for (r = 0; r < ecTotalBlocks; r++) {\n      if (i < dcData[r].length) {\n        data[index++] = dcData[r][i]\n      }\n    }\n  }\n\n  // Apped EC codewords\n  for (i = 0; i < ecCount; i++) {\n    for (r = 0; r < ecTotalBlocks; r++) {\n      data[index++] = ecData[r][i]\n    }\n  }\n\n  return data\n}\n\n/**\n * Build QR Code symbol\n *\n * @param  {String} data                 Input string\n * @param  {Number} version              QR Code version\n * @param  {ErrorCorretionLevel} errorCorrectionLevel Error level\n * @param  {MaskPattern} maskPattern     Mask pattern\n * @return {Object}                      Object containing symbol data\n */\nfunction createSymbol (data, version, errorCorrectionLevel, maskPattern) {\n  var segments\n\n  if (isArray(data)) {\n    segments = Segments.fromArray(data)\n  } else if (typeof data === 'string') {\n    var estimatedVersion = version\n\n    if (!estimatedVersion) {\n      var rawSegments = Segments.rawSplit(data)\n\n      // Estimate best version that can contain raw splitted segments\n      estimatedVersion = Version.getBestVersionForData(rawSegments,\n        errorCorrectionLevel)\n    }\n\n    // Build optimized segments\n    // If estimated version is undefined, try with the highest version\n    segments = Segments.fromString(data, estimatedVersion || 40)\n  } else {\n    throw new Error('Invalid data')\n  }\n\n  // Get the min version that can contain data\n  var bestVersion = Version.getBestVersionForData(segments,\n      errorCorrectionLevel)\n\n  // If no version is found, data cannot be stored\n  if (!bestVersion) {\n    throw new Error('The amount of data is too big to be stored in a QR Code')\n  }\n\n  // If not specified, use min version as default\n  if (!version) {\n    version = bestVersion\n\n  // Check if the specified version can contain the data\n  } else if (version < bestVersion) {\n    throw new Error('\\n' +\n      'The chosen QR Code version cannot contain this amount of data.\\n' +\n      'Minimum version required to store current data is: ' + bestVersion + '.\\n'\n    )\n  }\n\n  var dataBits = createData(version, errorCorrectionLevel, segments)\n\n  // Allocate matrix buffer\n  var moduleCount = Utils.getSymbolSize(version)\n  var modules = new BitMatrix(moduleCount)\n\n  // Add function modules\n  setupFinderPattern(modules, version)\n  setupTimingPattern(modules)\n  setupAlignmentPattern(modules, version)\n\n  // Add temporary dummy bits for format info just to set them as reserved.\n  // This is needed to prevent these bits from being masked by {@link MaskPattern.applyMask}\n  // since the masking operation must be performed only on the encoding region.\n  // These blocks will be replaced with correct values later in code.\n  setupFormatInfo(modules, errorCorrectionLevel, 0)\n\n  if (version >= 7) {\n    setupVersionInfo(modules, version)\n  }\n\n  // Add data codewords\n  setupData(modules, dataBits)\n\n  if (isNaN(maskPattern)) {\n    // Find best mask pattern\n    maskPattern = MaskPattern.getBestMask(modules,\n      setupFormatInfo.bind(null, modules, errorCorrectionLevel))\n  }\n\n  // Apply mask pattern\n  MaskPattern.applyMask(maskPattern, modules)\n\n  // Replace format info bits with correct values\n  setupFormatInfo(modules, errorCorrectionLevel, maskPattern)\n\n  return {\n    modules: modules,\n    version: version,\n    errorCorrectionLevel: errorCorrectionLevel,\n    maskPattern: maskPattern,\n    segments: segments\n  }\n}\n\n/**\n * QR Code\n *\n * @param {String | Array} data                 Input data\n * @param {Object} options                      Optional configurations\n * @param {Number} options.version              QR Code version\n * @param {String} options.errorCorrectionLevel Error correction level\n * @param {Function} options.toSJISFunc         Helper func to convert utf8 to sjis\n */\nexports.create = function create (data, options) {\n  if (typeof data === 'undefined' || data === '') {\n    throw new Error('No input text')\n  }\n\n  var errorCorrectionLevel = ECLevel.M\n  var version\n  var mask\n\n  if (typeof options !== 'undefined') {\n    // Use higher error correction level as default\n    errorCorrectionLevel = ECLevel.from(options.errorCorrectionLevel, ECLevel.M)\n    version = Version.from(options.version)\n    mask = MaskPattern.from(options.maskPattern)\n\n    if (options.toSJISFunc) {\n      Utils.setToSJISFunction(options.toSJISFunc)\n    }\n  }\n\n  return createSymbol(data, version, errorCorrectionLevel, mask)\n}\n","import {DocumentComment} from '../../../../@fury/shared/base-fury-form.model';\nimport { ThirdParty } from '../../../services/api.model';\nimport {DataProtectionOfficer} from '../../models/data-subject.model';\nimport {DataPurposes, DataSources, PersonalDataCollected} from '../../models/reference.model';\nimport {Country} from './countries/countries.component';\n\nexport class CompanyRegistrationModel {\n    OrganisationID: string;\n    OrganisationName: string;\n    OrganizationRegNo: string;\n    RegTrackingNo: string;\n    YearOfStart: string;\n    TIN: string;\n    Status: string;\n    URSBNumber: string;\n    OrganizationTypeID: string;\n    PublicBodyTypeID: string;\n    Location: string;\n    HeadOfOrganization: string;\n    TitleOfOrganizationHead: string;\n    PostalAddress: string;\n    PhoneNumber: string;\n    Landline: string;\n    EmailAddress: string;\n    SectorID: string;\n    TotalRecordsAtRegistration: string;\n    RecordPercentageGrowth: string;\n    RetentionPeriod: string;\n    Purpose: DataPurposes[];\n    SourceOfDataID: DataSources[];\n    PersonalDataCollected: PersonalDataCollected[];\n    GetConsent: string;\n    StoreDataOutsideCountry: string;\n    PersonalDataIsForDisclosure: string;\n    CollectChildrenData: string;\n    ChildDataConsentor: string;\n    OrganisationCategory: OrganisationCategory[];\n    PurposeForCollectingChildData: string;\n    ChildResearchPurpose: ChildrenDataPurpose[];\n    EnteredOn: string;\n    DPPActCategory: string[];\n    DataProtectionOfficers: DataProtectionOfficer[];\n    ThirdParties: ThirdParties[];\n    Comments: DocumentComment[];\n    NatureOfBusiness: NatureOfBusiness[];\n    SecurityMeasure: SecurityMeasuresModel[];\n    CurrentStepID: number;\n    DPORequired: string;\n    DPOName: string;\n    DPOPhysicalAddress: string;\n    DPOPhoneNumber: string;\n    DPOEmailAddress: string;\n    DPOPositionInOrganisation: string;\n    SpecifyTheLaw: string;\n    ServiceOrProductProvided: string;\n    SpecifyLegalObligation: string;\n    CurrentStepName: string;\n    Countries: Country[];\n    CheckList: CheckListed[];\n    Attachment: string;\n    Form3Attachment: string;\n    ProofOfPayment: string;\n    RegistrationDoneBy: string;\n}\n\nexport class NewCompanyRegistrationModel {\n    OrganisationID: string;\n    OrganisationName: string;\n    OrganizationRegNo: string;\n    RegTrackingNo: string;\n    YearOfStart: string;\n    TIN: string;\n    Status: string;\n    URSBNumber: string;\n    OrganizationTypeID: string;\n    PublicBodyTypeID: string;\n    Location: string;\n    HeadOfOrganization: string;\n    TitleOfOrganizationHead: string;\n    PostalAddress: string;\n    PhoneNumber: string;\n    Landline: string;\n    EmailAddress: string;\n    SectorID: string;\n    TotalRecordsAtRegistration: string;\n    RecordPercentageGrowth: string;\n    RetentionPeriod: string;\n    Purpose: DataPurposes[];\n    SourceOfDataID: DataSources[];\n    PersonalDataCollected: PersonalDataCollected[];\n    GetConsent: string;\n    StoreDataOutsideCountry: string;\n    PersonalDataIsForDisclosure: string;\n    ChildDataConsentor: string;\n    OrganisationCategory: OrganisationCategory[];\n    PurposeForCollectingChildData: string;\n    ChildResearchPurpose: string;\n    EnteredOn: string;\n    DPPActCategory: string[];\n    DataProtectionOfficers: DataProtectionOfficer[];\n    ThirdParties: ThirdParty[];\n    Comments: DocumentComment[];\n    NatureOfBusiness: NatureOfBusiness[];\n    SecurityMeasure: SecurityMeasuresModel[];\n    CurrentStepID: number;\n    DPORequired: string;\n    DPOName: string;\n    DPOPhysicalAddress: string;\n    DPOPhoneNumber: string;\n    DPOEmailAddress: string;\n    DPOPositionInOrganisation: string;\n    SpecifyTheLaw: string;\n    ServiceOrProductProvided: string;\n    SpecifyLegalObligation: string;\n    CurrentStepName: string;\n    Countries: Country[];\n    CheckList: CheckListed[];\n    Attachment: string;\n    Form3Attachment: string;\n    ProofOfPayment: string;\n    PRN:string;\n    PurposeForCollection:string;\n    ChildrenDataConsentor:string;\n    CollectChildrenData:string;\n    RegistrationDoneBy: string;\n}\n\nexport class CheckListed {\n    CheckListID: number;\n    CheckListValue: string;\n    CheckListName: string;\n    StepID: number;\n    ActionID: number;\n}\nexport class NatureOfBusiness {\n    NatureOfBusinessCatID: number;\n    NatureOfBusinessCategoryName: string;\n    NatureOfBusinessSubatID: number;\n    NatureOfBusinessSubCategoryName: string;\n}\n\nexport class OrganisationCategory {\n    OrganisationCategoryId: string;\n    OrganisationCategoryName: string;\n}\n\nexport class ChildrenDataPurpose {\n    ChildDataID: number;\n    ChildDataPurpose: string;\n}\n\nexport class CancelRegistration {\n    RegTrackingNo:string;\n    CancellationApproval:string;\n    ReasonForCancellation:string;\n}\n\nexport class CompanyRegistration {\n    id?: number;\n    oragisationName: string;\n    yearOfStart: string;\n    tin: string;\n    ursbNumber: string;\n    organisationType: string[];\n    publicBody: string;\n    localGovement: string;\n    statute: string;\n    location: string;\n    headOfOganisation: string;\n    titleOfOrganizationHead: string;\n    postalAddress: string;\n    phoneNumber: string;\n    landLine: string;\n    emailAddress: string;\n    dpoActCategory: string [];\n    sector: string;\n    rolesPerformed: string [];\n    mainActivities: MainActivite [];\n    dataProtectionOfficers: DataProtectionOfficerModel[];\n    totalRecordsAtRegistration: string;\n    recordPercentageGrowth: string;\n    retentionPeriod: string;\n    dataStoredCategory: string [];\n    dataStoredSubCategory: string [];\n    purpose: string;\n    sourceOfData: string [];\n    countriesStoringYourData: string [];\n    securityMeasures: SecurityMeasuresModel[];\n    personalDataIsForDisclosure: string;\n    reasonsForSharing: string [];\n    thirdParties: ThirdParties [];\n    collectChildrenData: string;\n    childDataConsentor: string;\n    purposeForCollectingChildData: string;\n    childLawPurpose: string;\n    childResearchPurpose: string;\n    status: string;\n    comments: DocumentComment[];\n    concent: string;\n    natureOfProcessing: string[];\n    storeDataOutsideCountry: string;\n    registrationDate: string;\n\n\n    constructor(model) {\n        this.id = model.id;\n        this.oragisationName = model.oragisationName;\n        this.yearOfStart = model.yearOfStart;\n        this.tin = model.tin;\n        this.ursbNumber = model.ursbNumber;\n        this.organisationType = model.organisationType;\n        this.publicBody = model.publicBody;\n        this.localGovement = model.localGovement;\n        this.statute = model.statute;\n        this.location = model.location;\n        this.headOfOganisation = model.headOfOganisation;\n        this.titleOfOrganizationHead = model.titleOfOrganizationHead;\n        this.postalAddress = model.postalAddress;\n        this.phoneNumber = model.phoneNumber;\n        this.landLine = model.landLine;\n        this.emailAddress = model.emailAddress;\n        this.dpoActCategory = model.dpoActCategory;\n        this.sector = model.sector;\n        this.rolesPerformed = model.rolesPerformed;\n        this.mainActivities = model.mainActivities;\n        this.dataProtectionOfficers = model.dataProtectionOfficers;\n        this.totalRecordsAtRegistration = model.totalRecordsAtRegistration;\n        this.recordPercentageGrowth = model.recordPercentageGrowth;\n        this.retentionPeriod = model.retentionPeriod;\n        this.dataStoredCategory = model.dataStoredCategory;\n        this.dataStoredSubCategory = model.dataStoredSubCategory;\n        this.purpose = model.purpose;\n        this.sourceOfData = model.sourceOfData;\n        this.countriesStoringYourData = model.countriesStoringYourData;\n        this.securityMeasures = model.securityMeasures;\n        this.personalDataIsForDisclosure = model.personalDataIsForDisclosure;\n        this.reasonsForSharing = model.reasonsForSharing;\n        this.thirdParties = model.thirdParties;\n        this.collectChildrenData = model.collectChildrenData;\n        this.childDataConsentor = model.childDataConsentor;\n        this.purposeForCollectingChildData = model.purposeForCollectingChildData;\n        this.childLawPurpose = model.childLawPurpose;\n        this.childResearchPurpose = model.childResearchPurpose;\n        this.status = model.status;\n        this.registrationDate = model.registrationDate;\n        this.concent = model.concent;\n    }\n}\n\nexport class ComponyRegistrationObject {\n    OrganisationID: string;\n    OrganisationName: string;\n    CurrentStepName: string;\n    OrganizationRegNo: string;\n    RegTrackingNo: string;\n    YearOfStart: string;\n    TIN: string;\n    URSBNumber: string;\n    OrganizationTypeID: string;\n    PublicBodyTypeID: string;\n    Location: string;\n    HeadOfOrganization: string;\n    TitleOfOrganizati: string;\n    PostalAddress: string;\n    PhoneNumber: string;\n    Landline: string;\n    EmailAddres: string;\n    SectorID: string;\n    TotalRecordsAtRegistration: string;\n    RecordPercentageGr: string;\n    RetentionPer: string;\n    Purpose: string;\n    GetConsent: string;\n    StoreDataOutsideCountry: string;\n    PersonalDataIsForDisclosure: string;\n    CollectChildrenData: string;\n    ChildDataConsentor: string;\n    PurposeForCollectingChildDat: string;\n    ChildResearchPurpose: string;\n    DataProtectionOfficers: DataProtectionOfficerModelObject[];\n    ThirdParties: ThirdPartiesObject[];\n}\n\nexport class DataProtectionOfficerModelObject {\n    Name: string;\n    PositionInOrganisation: string;\n    EmailAddress: string;\n    PhysicalAddress: string;\n    PhoneNumber: string;\n}\n\nexport class CertificateDetailsResponse {\n    code: number;\n    message: string;\n    data: CertificateDetails;\n}\n\nexport class CertificateDetails {\n    OrganizationID: any;\n    OrgRegNumber: string;\n    IssueDate: string;\n    ExpiryDate: string;\n    IssueType: string;\n    DownloadCount: any;\n}\n\nexport class CertificateRequest {\n    OrganizationID: string;\n}\n\nexport class ThirdPartiesObject {\n    ContactPerson: string;\n    ThirdPartyName: string;\n    PhoneNumber: string;\n    EmailAddress: string;\n}\n\nexport class SecurityMeasuresModel {\n    Name: string;\n    FileSize: string;\n    Link: string;\n}\n\nexport class PRN {\n    OrganisationUserID:number;\n    OrganisationName: string;\n    PRN: string;\n    SearchCode: string;\n    PRNGenerationDate:string;\n    DaysPassed:string;\n}\n\nexport class MainActivite {\n    activity: string;\n}\n\nexport class ThirdParties {\n    ContactPerson: string;\n    ThirdPartyName: string;\n    PhoneNumber: string;\n    EmailAddress: string;\n}\n\nexport class CompanyModel {\n    id?: number;\n    name?: string;\n    address?: string;\n    contact?: string;\n    email?: string;\n    website?: string;\n\n    constructor(companyDetails) {\n        this.id = companyDetails.id;\n        this.name = companyDetails.name;\n        this.address = companyDetails.address;\n        this.contact = companyDetails.contact;\n        this.email = companyDetails.email;\n        this.website = companyDetails.website;\n    }\n}\n\nexport class DataProtectionOfficerModel {\n    Name: string;\n    PositionInOrganisation: string;\n    EmailAddress: string;\n    PhysicalAddress: string;\n    PhoneNumber: string;\n}\n\n\nexport const COMPANY_REGISTRATION_DATA = [\n    {\n        'id': 324324,\n        'oragisationName': 'Applied Principles',\n        'yearOfStart': '2021-02-02T21:00:00.000Z',\n        'tin': '1234567890',\n        'ursbNumber': 'wewe',\n        'organisationType': '1',\n        'publicBody': '1',\n        'localGovement': '1',\n        'statute': 'Sample Statute',\n        'location': 'Bukoto',\n        'headOfOganisation': 'Patrick Okiring',\n        'titleOfOrganizationHead': 'CEO',\n        'postalAddress': '',\n        'phoneNumber': '0703333889',\n        'landLine': '',\n        'emailAddress': 'pokiring@principlesapplied.com',\n        'dpoActCategory': [\n            '1',\n            '2'\n        ],\n        'concent': '',\n        'sector': 'Public Sector',\n        'rolesPerformed': [\n            '1',\n            '2'\n        ],\n        'mainActivities': [\n            {\n                'activity': 'Security tests'\n            }\n        ],\n        'dataProtectionOfficers': [\n            {\n                'id': 93892,\n                'name': 'Jovita',\n                'emailAddress': 'jovita@apc.go.ug',\n                'phoneNumber': '0700000898',\n                'physicalAddress': 'Mengo',\n                'positionInOrganisation': 'DPO'\n            }\n        ],\n        'totalRecordsAtRegistration': '12023400',\n        'recordPercentageGrowth': '5',\n        'retentionPeriod': '1',\n        'dataStoredCategory': [\n            'Identifiers',\n            'Sensory Data'\n        ],\n        'dataStoredSubCategory': [\n            'Name',\n            'Nationality',\n            'Age'\n        ],\n        'purpose': '1',\n        'sourceOfData': [\n            '1',\n            '2'\n        ],\n        'getConsent': 'Yes',\n        'natureOfProcessing': [\n            '',\n            ''\n        ],\n        'storeDataOutsideCountry': 'Yes',\n        'countriesStoringYourData': [\n            '1',\n            '2'\n        ],\n        'securityMeasures': [\n            {\n                'name': '21042021012350-Form_5_-_Application_for_Certified_Copy_of_Extract_Entry_in_Register.pdf',\n                'document': {},\n                'size': '0.087'\n            }\n        ],\n        'personalDataIsForDisclosure': 'Yes',\n        'reasonsForSharing': [\n            '2',\n            '3'\n        ],\n        'thirdParties': [\n            {\n                'name': 'APC',\n                'contactPerson': 'JB',\n                'emailAddress': 'jb@apc.go.ug',\n                'phoneNumber': '0777777777'\n            }\n        ],\n        'collectChildrenData': 'Yes',\n        'childDataConsentor': '1',\n        'purposeForCollectingChildData': '1',\n        'childLawPurpose': '1',\n        'childResearchPurpose': 'ffdfd',\n        'status': 'SUBMITTED',\n        'registrationDate': '23-02-2021 18:20:20',\n        'comments': [\n            {\n                'instanceId': 23,\n                'username': 'jkalungi',\n                'creationDate': '23-02-2021 18:20:20',\n                'comment': 'Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry\\'sd  Lorem Ipsum has been the industry'\n            },\n        ]\n    }\n];\n\n\nexport const COMPANY_REGISTRATION = {\n    'id': 324324,\n    'oragisationName': 'Applied Principles',\n    'yearOfStart': '2021-02-02T21:00:00.000Z',\n    'tin': '1234567890',\n    'ursbNumber': 'wewe',\n    'organisationType': [\n        'COMPANY_OR_A_LIMITED_COMPANY'\n    ],\n    'concent': '',\n    'publicBody': '1',\n    'localGovement': '1',\n    'statute': 'Sample Statute',\n    'location': 'Bukoto',\n    'headOfOganisation': 'Patrick Okiring',\n    'titleOfOrganizationHead': 'CEO',\n    'postalAddress': 'P.O.Box 2372',\n    'phoneNumber': '0703333889',\n    'landLine': '0323878273',\n    'emailAddress': 'pokiring@principlesapplied.com',\n    'dpoActCategory': [\n        '1',\n        '2'\n    ],\n    'sector': 'Public Sector',\n    'rolesPerformed': [\n        // {'code':'',\"name\":''}\n    ],\n    'mainActivities': [\n        {\n            'activity': 'Security tests'\n        }\n    ],\n    'dataProtectionOfficers': [\n        {\n            'id': 93892,\n            'name': 'Jovita',\n            'emailAddress': 'jovita@apc.go.ug',\n            'phoneNumber': '0700000898',\n            'physicalAddress': 'Mengo',\n            'positionInOrganisation': 'DPO'\n        }\n    ],\n    'totalRecordsAtRegistration': '12023400',\n    'recordPercentageGrowth': '5',\n    'retentionPeriod': '1',\n    'dataStoredCategory': [\n        'Identifiers',\n        'Sensory Data'\n    ],\n    'dataStoredSubCategory': [\n        'Name',\n        'Nationality',\n        'Age'\n    ],\n    'purpose': '1',\n    'sourceOfData': [\n        '1',\n        '2'\n    ],\n    'getConsent': 'Yes',\n    'natureOfProcessing': [\n        'Organized, adapted or altered for use in fulfilling organizations mandate and role',\n        'Data is stored and retrieved and used for internal consultation or verification'\n    ],\n    'storeDataOutsideCountry': 'Yes',\n    'countriesStoringYourData': [\n        '1',\n        '2'\n    ],\n    'securityMeasures': [\n        {\n            'name': '21042021012350-Form_5_-_Application_for_Certified_Copy_of_Extract_Entry_in_Register.pdf',\n            'document': {},\n            'size': '0.087'\n        }\n    ],\n    'personalDataIsForDisclosure': 'Yes',\n    'reasonsForSharing': [\n        '2',\n        '3'\n    ],\n    'thirdParties': [\n        {\n            'name': 'APC',\n            'contactPerson': 'JB',\n            'emailAddress': 'jb@apc.go.ug',\n            'phoneNumber': '0777777777'\n        }\n    ],\n    'collectChildrenData': 'Yes',\n    'childDataConsentor': '1',\n    'purposeForCollectingChildData': '1',\n    'childLawPurpose': '1',\n    'childResearchPurpose': 'ffdfd',\n    'status': 'SUBMITTED',\n    'registrationDate': '23-02-2021 18:20:20',\n    'comments': [\n        {\n            'instanceId': 23,\n            'username': 'jkalungi',\n            'creationDate': '23-02-2021 18:20:20',\n            'comment': 'Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry\\'sd  Lorem Ipsum has been the industry'\n        },\n    ]\n};\n\nexport const TypeOfOrganisation = [\n    {id: 1, name: 'Limited Liability Company Or Corporation'},\n    {id: 2, name: 'Partnership'},\n    {id: 3, name: 'Public Body'},\n    {id: 4, name: 'Non Governmental Organisation'}\n];\n\nexport const DataProtectionActors: any = [\n    {id: '1', name: 'Data Controller'},\n    {id: '2', name: 'Data Processor'},\n    {id: '3', name: 'Data Collector'},\n];\n\nexport const Sectors = [\n    {\n        SectorID: 1,\n        Sector: 'Public Sector'\n    },\n    {\n        SectorID: 2,\n        Sector: 'Transportation'\n    },\n    {\n        SectorID: 3,\n        Sector: 'Civil / Infrastructure Engineering'\n    },\n    {\n        SectorID: 4,\n        Sector: 'Academia'\n    },\n    {\n        SectorID: 5,\n        Sector: 'Energy'\n    },\n    {\n        SectorID: 6,\n        Sector: 'Health Care'\n    },\n    {\n        SectorID: 7,\n        Sector: 'Finance'\n    },\n    {\n        SectorID: 8,\n        Sector: 'Utilities'\n    },\n    {\n        SectorID: 9,\n        Sector: 'Information Technology'\n    },\n    {\n        SectorID: 10,\n        Sector: 'Manufacturing / Industrial'\n    },\n    {\n        SectorID: 11,\n        Sector: 'Telecommunication Services'\n    },\n    {\n        SectorID: 12,\n        Sector: 'Materials'\n    },\n    {\n        SectorID: 13,\n        Sector: 'Consulting'\n    },\n    {\n        SectorID: 14,\n        Sector: 'Others'\n    },\n];\nexport const ROLES_PERFORMED = [\n    {id: 1, name: 'Protection of National Security'},\n    {id: 2, name: 'Public revenue collection'},\n    {id: 3, name: 'Enforcement of law which imposes a pecuniary penalty'},\n    {id: 3, name: 'Conduct proceedings before any court'}\n];\nexport const SECTORS = [\n    {\n        id: 1,\n        name: 'Public Sector'\n    },\n    {\n        id: 2,\n        name: 'Transportation'\n    },\n    {\n        id: 3,\n        name: 'Civil / Infrastructure Engineering'\n    },\n    {\n        id: 4,\n        name: 'Academia'\n    },\n    {\n        id: 5,\n        name: 'Energy'\n    },\n    {\n        id: 6,\n        name: 'Health Care'\n    },\n    {\n        id: 7,\n        name: 'Finance'\n    },\n    {\n        id: 8,\n        name: 'Utilities'\n    },\n    {\n        id: 9,\n        name: 'Information Technology'\n    },\n    {\n        id: 10,\n        name: 'Manufacturing / Industrial'\n    },\n    {\n        id: 11,\n        name: 'Telecommunication Services'\n    },\n    {\n        id: 12,\n        name: 'Materials'\n    },\n    {\n        id: 13,\n        name: 'Consulting'\n    },\n    {\n        id: 14,\n        name: 'Others'\n    },\n];\n\nexport enum DataProtectionAct {\n    DATA_CONTROLER = 'Data Controller',\n    DATA_COLLECTOR = 'Data Collector',\n    DATA_PROCESSOR = 'Data Processor'\n}\n\n[\n    {\n        'OrganisationID': 32,\n        'OrganisationName': 'National Identification & Registration Authority',\n        'OrganizationRegNo': '',\n        'RegTrackingNo': 'REG/16/10/21/5337',\n        'YearOfStart': '2012',\n        'TIN': '1234567890',\n        'URSBNumber': 'wewe',\n        'OrganizationTypeID': 3,\n        'PublicBodyTypeID': 1,\n        'Location': 'Kololo',\n        'HeadOfOrganization': 'Patrick Okiring',\n        'TitleOfOrganizationHead': 'CEO',\n        'PostalAddress': '',\n        'PhoneNumber': '0703333889',\n        'Landline': '',\n        'EmailAddress': 'pokiring@principlesapplied.com',\n        'SectorID': 1,\n        'TotalRecordsAtRegistration': 12023400,\n        'RecordPercentageGrowth': 5,\n        'RetentionPeriod': 1,\n        'Purpose': '1',\n        'GetConsent': 'Yes',\n        'StoreDataOutsideCountry': 'Yes',\n        'PersonalDataIsForDisclosure': 'Yes       ',\n        'CollectChildrenData': 'Yes       ',\n        'ChildDataConsentor': '1',\n        'PurposeForCollectingChildData': '1',\n        'ChildResearchPurpose': 'test',\n        'EnteredOn': '2021-10-16 14:32:47.413000',\n        'DataProtectionOfficers': [\n            {\n                'Name': 'Grace',\n                'PositionInOrganisation': 'Manager ICT',\n                'EmailAddress': 'grace@nira.go.ug',\n                'PhysicalAddress': 'Kololo',\n                'PhoneNumber': '0700000000'\n            }\n        ],\n        'ThirdParties': [\n            {\n                'ContactPerson': 'mark',\n                'ThirdPartyName': 'UNRA',\n                'PhoneNumber': '',\n                'EmailAddress': 'mark@unra.go.ug'\n            }\n        ]\n    },\n    {\n        'OrganisationID': 33,\n        'OrganisationName': 'National Identification & Registration Authority',\n        'OrganizationRegNo': '',\n        'RegTrackingNo': 'REG/16/10/21/3684',\n        'YearOfStart': '2012',\n        'TIN': '1234567890',\n        'URSBNumber': 'wewe',\n        'OrganizationTypeID': 3,\n        'PublicBodyTypeID': 1,\n        'Location': 'Kololo',\n        'HeadOfOrganization': 'Patrick Okiring',\n        'TitleOfOrganizationHead': 'CEO',\n        'PostalAddress': '',\n        'PhoneNumber': '0703333889',\n        'Landline': '',\n        'EmailAddress': 'pokiring@principlesapplied.com',\n        'SectorID': 1,\n        'TotalRecordsAtRegistration': 12023400,\n        'RecordPercentageGrowth': 5,\n        'RetentionPeriod': 1,\n        'Purpose': '1',\n        'GetConsent': 'Yes',\n        'StoreDataOutsideCountry': 'Yes',\n        'PersonalDataIsForDisclosure': 'Yes       ',\n        'CollectChildrenData': 'Yes       ',\n        'ChildDataConsentor': '1',\n        'PurposeForCollectingChildData': '1',\n        'ChildResearchPurpose': 'test',\n        'EnteredOn': '2021-10-16 14:34:03.153000',\n        'DataProtectionOfficers': [\n            {\n                'Name': 'Grace',\n                'PositionInOrganisation': 'Manager ICT',\n                'EmailAddress': 'grace@nira.go.ug',\n                'PhysicalAddress': 'Kololo',\n                'PhoneNumber': '0700000000'\n            }\n        ],\n        'ThirdParties': [\n            {\n                'ContactPerson': 'mark',\n                'ThirdPartyName': 'UNRA',\n                'PhoneNumber': '',\n                'EmailAddress': 'mark@unra.go.ug'\n            }\n        ]\n    },\n    {\n        'OrganisationID': 34,\n        'OrganisationName': 'National Identification & Registration Authority',\n        'OrganizationRegNo': '',\n        'RegTrackingNo': 'REG/16/10/21/1616',\n        'YearOfStart': '2012',\n        'TIN': '1234567890',\n        'URSBNumber': 'wewe',\n        'OrganizationTypeID': 3,\n        'PublicBodyTypeID': 1,\n        'Location': 'Kololo',\n        'HeadOfOrganization': 'Patrick Okiring',\n        'TitleOfOrganizationHead': 'CEO',\n        'PostalAddress': '',\n        'PhoneNumber': '0703333889',\n        'Landline': '',\n        'EmailAddress': 'pokiring@principlesapplied.com',\n        'SectorID': 1,\n        'TotalRecordsAtRegistration': 12023400,\n        'RecordPercentageGrowth': 5,\n        'RetentionPeriod': 1,\n        'Purpose': '1',\n        'GetConsent': 'Yes',\n        'StoreDataOutsideCountry': 'Yes',\n        'PersonalDataIsForDisclosure': 'Yes       ',\n        'CollectChildrenData': 'Yes       ',\n        'ChildDataConsentor': '1',\n        'PurposeForCollectingChildData': '1',\n        'ChildResearchPurpose': 'test',\n        'EnteredOn': '2021-10-16 14:35:18.113000',\n        'DataProtectionOfficers': [\n            {\n                'Name': 'Grace',\n                'PositionInOrganisation': 'Manager ICT',\n                'EmailAddress': 'grace@nira.go.ug',\n                'PhysicalAddress': 'Kololo',\n                'PhoneNumber': '0700000000'\n            },\n            {\n                'Name': 'John',\n                'PositionInOrganisation': 'Manager ICT',\n                'EmailAddress': 'grace@nira.go.ug',\n                'PhysicalAddress': 'Kololo',\n                'PhoneNumber': '0700000000'\n            },\n            {\n                'Name': 'Kevin',\n                'PositionInOrganisation': 'Manager ICT',\n                'EmailAddress': 'grace@nira.go.ug',\n                'PhysicalAddress': 'Kololo',\n                'PhoneNumber': '0700000000'\n            }\n        ],\n        'ThirdParties': [\n            {\n                'ContactPerson': 'mark',\n                'ThirdPartyName': 'UNRA',\n                'PhoneNumber': '',\n                'EmailAddress': 'mark@unra.go.ug'\n            }\n        ]\n    },\n    {\n        'OrganisationID': 35,\n        'OrganisationName': 'MTN Uganda',\n        'OrganizationRegNo': '',\n        'RegTrackingNo': 'REG/21/10/21/8585',\n        'YearOfStart': '2021',\n        'TIN': '2873849732',\n        'URSBNumber': '',\n        'OrganizationTypeID': 3,\n        'PublicBodyTypeID': 2,\n        'Location': 'Bukoto',\n        'HeadOfOrganization': 'Isaac',\n        'TitleOfOrganizationHead': 'Isaac',\n        'PostalAddress': '',\n        'PhoneNumber': '702 837 483',\n        'Landline': '',\n        'EmailAddress': 'isaac@ap.com',\n        'SectorID': 2,\n        'TotalRecordsAtRegistration': 9000,\n        'RecordPercentageGrowth': 23,\n        'RetentionPeriod': 324,\n        'Purpose': '2',\n        'GetConsent': 'No',\n        'StoreDataOutsideCountry': 'No',\n        'PersonalDataIsForDisclosure': 'Yes       ',\n        'CollectChildrenData': 'No        ',\n        'ChildDataConsentor': '2',\n        'PurposeForCollectingChildData': '2',\n        'ChildResearchPurpose': 'Google LLC is an American multinational technology',\n        'EnteredOn': '2021-10-21 09:28:44.900000',\n        'DataProtectionOfficers': [\n            {\n                'Name': 'TestUser ',\n                'PositionInOrganisation': 'Head',\n                'EmailAddress': 'test@gmail.com',\n                'PhysicalAddress': '',\n                'PhoneNumber': '0823843294'\n            }\n        ],\n        'ThirdParties': [\n            {\n                'ContactPerson': 'Enock',\n                'ThirdPartyName': 'Google LLC is an American multinational technology company that specializes in Internet-related services and products, which include online advertising technologies, a search engine, cloud computing, software, and hardware.',\n                'PhoneNumber': '',\n                'EmailAddress': 'enock@gmail.com'\n            }\n        ]\n    },\n    {\n        'OrganisationID': 36,\n        'OrganisationName': 'UAP ',\n        'OrganizationRegNo': '',\n        'RegTrackingNo': 'REG/21/10/21/4981',\n        'YearOfStart': '2003',\n        'TIN': '9829384',\n        'URSBNumber': '',\n        'OrganizationTypeID': 3,\n        'PublicBodyTypeID': 3,\n        'Location': 'Nakawa',\n        'HeadOfOrganization': 'John',\n        'TitleOfOrganizationHead': 'CTO',\n        'PostalAddress': '',\n        'PhoneNumber': '783 223 433',\n        'Landline': '',\n        'EmailAddress': '',\n        'SectorID': 3,\n        'TotalRecordsAtRegistration': 90,\n        'RecordPercentageGrowth': 20,\n        'RetentionPeriod': 23,\n        'Purpose': '1',\n        'GetConsent': 'Yes',\n        'StoreDataOutsideCountry': 'No',\n        'PersonalDataIsForDisclosure': 'No        ',\n        'CollectChildrenData': 'No        ',\n        'ChildDataConsentor': '1',\n        'PurposeForCollectingChildData': '1',\n        'ChildResearchPurpose': 'Google LLC is an American multinational technology',\n        'EnteredOn': '2021-10-21 09:41:55.267000',\n        'DataProtectionOfficers': [\n            {\n                'Name': 'Mark',\n                'PositionInOrganisation': 'CTO',\n                'EmailAddress': 'mark@ura.go.ug',\n                'PhysicalAddress': '',\n                'PhoneNumber': ''\n            }\n        ],\n        'ThirdParties': [\n            {\n                'ContactPerson': 'Isaac',\n                'ThirdPartyName': 'Google LLC ',\n                'PhoneNumber': '',\n                'EmailAddress': 'isaac@mtn.go'\n            }\n        ]\n    },\n    {\n        'OrganisationID': 37,\n        'OrganisationName': 'Sco Systems Limited',\n        'OrganizationRegNo': '',\n        'RegTrackingNo': 'REG/11/11/21/5629',\n        'YearOfStart': '2003',\n        'TIN': '1232341345',\n        'URSBNumber': 'QW2323DEFE',\n        'OrganizationTypeID': 3,\n        'PublicBodyTypeID': 4,\n        'Location': 'D',\n        'HeadOfOrganization': 'Olive Duncan',\n        'TitleOfOrganizationHead': 'CEO',\n        'PostalAddress': 'D',\n        'PhoneNumber': '700 392 854',\n        'Landline': '700 392 854',\n        'EmailAddress': 'A@F.COM',\n        'SectorID': 2,\n        'TotalRecordsAtRegistration': 12,\n        'RecordPercentageGrowth': 12,\n        'RetentionPeriod': 12,\n        'Purpose': '2',\n        'GetConsent': 'Yes',\n        'StoreDataOutsideCountry': 'Yes',\n        'PersonalDataIsForDisclosure': 'Yes       ',\n        'CollectChildrenData': '          ',\n        'ChildDataConsentor': '2',\n        'PurposeForCollectingChildData': '2',\n        'ChildResearchPurpose': 'rr',\n        'EnteredOn': '2021-11-11 10:41:35.643000',\n        'DataProtectionOfficers': [\n            {\n                'Name': 'f',\n                'PositionInOrganisation': 'f',\n                'EmailAddress': 'f',\n                'PhysicalAddress': 'f',\n                'PhoneNumber': 'f'\n            }\n        ],\n        'ThirdParties': [\n            {\n                'ContactPerson': 'r',\n                'ThirdPartyName': 'r',\n                'PhoneNumber': 'r',\n                'EmailAddress': 'r'\n            }\n        ]\n    }\n];\n// id?: number;\n// OrganisationName: string;\n// YearOfStart: string;\n// tin: string;\n// ursbNumber: string;\n// organisationType: string[];\n// publicBody: string;\n// localGovement: string;\n// statute: string;\n// location: string;\n// headOfOganisation: string;\n// titleOfOrganizationHead: string;\n// postalAddress: string;\n// phoneNumber: string;\n// landLine: string;\n// emailAddress: string;\n// dpoActCategory: string [];\n// sector: string;\n// rolesPerformed: string [];\n// mainActivities: MainActivite [];\n// dataProtectionOfficers: DataProtectionOfficerModel[];\n// totalRecordsAtRegistration: string;\n// recordPercentageGrowth: string;\n// retentionPeriod: string;\n// dataStoredCategory: string [];\n// dataStoredSubCategory: string [];\n// purpose: string;\n// sourceOfData: string [];\n// countriesStoringYourData: string [];\n// securityMeasures: SecurityMeasuresModel[];\n// personalDataIsForDisclosure: string;\n// reasonsForSharing: string [];\n// thirdParties: ThirdParties [];\n// collectChildrenData: string;\n// childDataConsentor: string;\n// purposeForCollectingChildData: string;\n// childLawPurpose: string;\n// childResearchPurpose: string;\n// status: string;\n// comments: DocumentComment[];\n// concent:string;\n// natureOfProcessing: string[];\n// storeDataOutsideCountry: string;\n// registrationDate: string;\n","var VersionCheck = require('./version-check')\nvar Regex = require('./regex')\n\n/**\n * Numeric mode encodes data from the decimal digit set (0 - 9)\n * (byte values 30HEX to 39HEX).\n * Normally, 3 data characters are represented by 10 bits.\n *\n * @type {Object}\n */\nexports.NUMERIC = {\n  id: 'Numeric',\n  bit: 1 << 0,\n  ccBits: [10, 12, 14]\n}\n\n/**\n * Alphanumeric mode encodes data from a set of 45 characters,\n * i.e. 10 numeric digits (0 - 9),\n *      26 alphabetic characters (A - Z),\n *   and 9 symbols (SP, $, %, *, +, -, ., /, :).\n * Normally, two input characters are represented by 11 bits.\n *\n * @type {Object}\n */\nexports.ALPHANUMERIC = {\n  id: 'Alphanumeric',\n  bit: 1 << 1,\n  ccBits: [9, 11, 13]\n}\n\n/**\n * In byte mode, data is encoded at 8 bits per character.\n *\n * @type {Object}\n */\nexports.BYTE = {\n  id: 'Byte',\n  bit: 1 << 2,\n  ccBits: [8, 16, 16]\n}\n\n/**\n * The Kanji mode efficiently encodes Kanji characters in accordance with\n * the Shift JIS system based on JIS X 0208.\n * The Shift JIS values are shifted from the JIS X 0208 values.\n * JIS X 0208 gives details of the shift coded representation.\n * Each two-byte character value is compacted to a 13-bit binary codeword.\n *\n * @type {Object}\n */\nexports.KANJI = {\n  id: 'Kanji',\n  bit: 1 << 3,\n  ccBits: [8, 10, 12]\n}\n\n/**\n * Mixed mode will contain a sequences of data in a combination of any of\n * the modes described above\n *\n * @type {Object}\n */\nexports.MIXED = {\n  bit: -1\n}\n\n/**\n * Returns the number of bits needed to store the data length\n * according to QR Code specifications.\n *\n * @param  {Mode}   mode    Data mode\n * @param  {Number} version QR Code version\n * @return {Number}         Number of bits\n */\nexports.getCharCountIndicator = function getCharCountIndicator (mode, version) {\n  if (!mode.ccBits) throw new Error('Invalid mode: ' + mode)\n\n  if (!VersionCheck.isValid(version)) {\n    throw new Error('Invalid version: ' + version)\n  }\n\n  if (version >= 1 && version < 10) return mode.ccBits[0]\n  else if (version < 27) return mode.ccBits[1]\n  return mode.ccBits[2]\n}\n\n/**\n * Returns the most efficient mode to store the specified data\n *\n * @param  {String} dataStr Input data string\n * @return {Mode}           Best mode\n */\nexports.getBestModeForData = function getBestModeForData (dataStr) {\n  if (Regex.testNumeric(dataStr)) return exports.NUMERIC\n  else if (Regex.testAlphanumeric(dataStr)) return exports.ALPHANUMERIC\n  else if (Regex.testKanji(dataStr)) return exports.KANJI\n  else return exports.BYTE\n}\n\n/**\n * Return mode name as string\n *\n * @param {Mode} mode Mode object\n * @returns {String}  Mode name\n */\nexports.toString = function toString (mode) {\n  if (mode && mode.id) return mode.id\n  throw new Error('Invalid mode')\n}\n\n/**\n * Check if input param is a valid mode object\n *\n * @param   {Mode}    mode Mode object\n * @returns {Boolean} True if valid mode, false otherwise\n */\nexports.isValid = function isValid (mode) {\n  return mode && mode.bit && mode.ccBits\n}\n\n/**\n * Get mode object from its name\n *\n * @param   {String} string Mode name\n * @returns {Mode}          Mode object\n */\nfunction fromString (string) {\n  if (typeof string !== 'string') {\n    throw new Error('Param is not a string')\n  }\n\n  var lcStr = string.toLowerCase()\n\n  switch (lcStr) {\n    case 'numeric':\n      return exports.NUMERIC\n    case 'alphanumeric':\n      return exports.ALPHANUMERIC\n    case 'kanji':\n      return exports.KANJI\n    case 'byte':\n      return exports.BYTE\n    default:\n      throw new Error('Unknown mode: ' + string)\n  }\n}\n\n/**\n * Returns mode from a value.\n * If value is not a valid mode, returns defaultValue\n *\n * @param  {Mode|String} value        Encoding mode\n * @param  {Mode}        defaultValue Fallback value\n * @return {Mode}                     Encoding mode\n */\nexports.from = function from (value, defaultValue) {\n  if (exports.isValid(value)) {\n    return value\n  }\n\n  try {\n    return fromString(value)\n  } catch (e) {\n    return defaultValue\n  }\n}\n","var Mode = require('./mode')\nvar NumericData = require('./numeric-data')\nvar AlphanumericData = require('./alphanumeric-data')\nvar ByteData = require('./byte-data')\nvar KanjiData = require('./kanji-data')\nvar Regex = require('./regex')\nvar Utils = require('./utils')\nvar dijkstra = require('dijkstrajs')\n\n/**\n * Returns UTF8 byte length\n *\n * @param  {String} str Input string\n * @return {Number}     Number of byte\n */\nfunction getStringByteLength (str) {\n  return unescape(encodeURIComponent(str)).length\n}\n\n/**\n * Get a list of segments of the specified mode\n * from a string\n *\n * @param  {Mode}   mode Segment mode\n * @param  {String} str  String to process\n * @return {Array}       Array of object with segments data\n */\nfunction getSegments (regex, mode, str) {\n  var segments = []\n  var result\n\n  while ((result = regex.exec(str)) !== null) {\n    segments.push({\n      data: result[0],\n      index: result.index,\n      mode: mode,\n      length: result[0].length\n    })\n  }\n\n  return segments\n}\n\n/**\n * Extracts a series of segments with the appropriate\n * modes from a string\n *\n * @param  {String} dataStr Input string\n * @return {Array}          Array of object with segments data\n */\nfunction getSegmentsFromString (dataStr) {\n  var numSegs = getSegments(Regex.NUMERIC, Mode.NUMERIC, dataStr)\n  var alphaNumSegs = getSegments(Regex.ALPHANUMERIC, Mode.ALPHANUMERIC, dataStr)\n  var byteSegs\n  var kanjiSegs\n\n  if (Utils.isKanjiModeEnabled()) {\n    byteSegs = getSegments(Regex.BYTE, Mode.BYTE, dataStr)\n    kanjiSegs = getSegments(Regex.KANJI, Mode.KANJI, dataStr)\n  } else {\n    byteSegs = getSegments(Regex.BYTE_KANJI, Mode.BYTE, dataStr)\n    kanjiSegs = []\n  }\n\n  var segs = numSegs.concat(alphaNumSegs, byteSegs, kanjiSegs)\n\n  return segs\n    .sort(function (s1, s2) {\n      return s1.index - s2.index\n    })\n    .map(function (obj) {\n      return {\n        data: obj.data,\n        mode: obj.mode,\n        length: obj.length\n      }\n    })\n}\n\n/**\n * Returns how many bits are needed to encode a string of\n * specified length with the specified mode\n *\n * @param  {Number} length String length\n * @param  {Mode} mode     Segment mode\n * @return {Number}        Bit length\n */\nfunction getSegmentBitsLength (length, mode) {\n  switch (mode) {\n    case Mode.NUMERIC:\n      return NumericData.getBitsLength(length)\n    case Mode.ALPHANUMERIC:\n      return AlphanumericData.getBitsLength(length)\n    case Mode.KANJI:\n      return KanjiData.getBitsLength(length)\n    case Mode.BYTE:\n      return ByteData.getBitsLength(length)\n  }\n}\n\n/**\n * Merges adjacent segments which have the same mode\n *\n * @param  {Array} segs Array of object with segments data\n * @return {Array}      Array of object with segments data\n */\nfunction mergeSegments (segs) {\n  return segs.reduce(function (acc, curr) {\n    var prevSeg = acc.length - 1 >= 0 ? acc[acc.length - 1] : null\n    if (prevSeg && prevSeg.mode === curr.mode) {\n      acc[acc.length - 1].data += curr.data\n      return acc\n    }\n\n    acc.push(curr)\n    return acc\n  }, [])\n}\n\n/**\n * Generates a list of all possible nodes combination which\n * will be used to build a segments graph.\n *\n * Nodes are divided by groups. Each group will contain a list of all the modes\n * in which is possible to encode the given text.\n *\n * For example the text '12345' can be encoded as Numeric, Alphanumeric or Byte.\n * The group for '12345' will contain then 3 objects, one for each\n * possible encoding mode.\n *\n * Each node represents a possible segment.\n *\n * @param  {Array} segs Array of object with segments data\n * @return {Array}      Array of object with segments data\n */\nfunction buildNodes (segs) {\n  var nodes = []\n  for (var i = 0; i < segs.length; i++) {\n    var seg = segs[i]\n\n    switch (seg.mode) {\n      case Mode.NUMERIC:\n        nodes.push([seg,\n          { data: seg.data, mode: Mode.ALPHANUMERIC, length: seg.length },\n          { data: seg.data, mode: Mode.BYTE, length: seg.length }\n        ])\n        break\n      case Mode.ALPHANUMERIC:\n        nodes.push([seg,\n          { data: seg.data, mode: Mode.BYTE, length: seg.length }\n        ])\n        break\n      case Mode.KANJI:\n        nodes.push([seg,\n          { data: seg.data, mode: Mode.BYTE, length: getStringByteLength(seg.data) }\n        ])\n        break\n      case Mode.BYTE:\n        nodes.push([\n          { data: seg.data, mode: Mode.BYTE, length: getStringByteLength(seg.data) }\n        ])\n    }\n  }\n\n  return nodes\n}\n\n/**\n * Builds a graph from a list of nodes.\n * All segments in each node group will be connected with all the segments of\n * the next group and so on.\n *\n * At each connection will be assigned a weight depending on the\n * segment's byte length.\n *\n * @param  {Array} nodes    Array of object with segments data\n * @param  {Number} version QR Code version\n * @return {Object}         Graph of all possible segments\n */\nfunction buildGraph (nodes, version) {\n  var table = {}\n  var graph = {'start': {}}\n  var prevNodeIds = ['start']\n\n  for (var i = 0; i < nodes.length; i++) {\n    var nodeGroup = nodes[i]\n    var currentNodeIds = []\n\n    for (var j = 0; j < nodeGroup.length; j++) {\n      var node = nodeGroup[j]\n      var key = '' + i + j\n\n      currentNodeIds.push(key)\n      table[key] = { node: node, lastCount: 0 }\n      graph[key] = {}\n\n      for (var n = 0; n < prevNodeIds.length; n++) {\n        var prevNodeId = prevNodeIds[n]\n\n        if (table[prevNodeId] && table[prevNodeId].node.mode === node.mode) {\n          graph[prevNodeId][key] =\n            getSegmentBitsLength(table[prevNodeId].lastCount + node.length, node.mode) -\n            getSegmentBitsLength(table[prevNodeId].lastCount, node.mode)\n\n          table[prevNodeId].lastCount += node.length\n        } else {\n          if (table[prevNodeId]) table[prevNodeId].lastCount = node.length\n\n          graph[prevNodeId][key] = getSegmentBitsLength(node.length, node.mode) +\n            4 + Mode.getCharCountIndicator(node.mode, version) // switch cost\n        }\n      }\n    }\n\n    prevNodeIds = currentNodeIds\n  }\n\n  for (n = 0; n < prevNodeIds.length; n++) {\n    graph[prevNodeIds[n]]['end'] = 0\n  }\n\n  return { map: graph, table: table }\n}\n\n/**\n * Builds a segment from a specified data and mode.\n * If a mode is not specified, the more suitable will be used.\n *\n * @param  {String} data             Input data\n * @param  {Mode | String} modesHint Data mode\n * @return {Segment}                 Segment\n */\nfunction buildSingleSegment (data, modesHint) {\n  var mode\n  var bestMode = Mode.getBestModeForData(data)\n\n  mode = Mode.from(modesHint, bestMode)\n\n  // Make sure data can be encoded\n  if (mode !== Mode.BYTE && mode.bit < bestMode.bit) {\n    throw new Error('\"' + data + '\"' +\n      ' cannot be encoded with mode ' + Mode.toString(mode) +\n      '.\\n Suggested mode is: ' + Mode.toString(bestMode))\n  }\n\n  // Use Mode.BYTE if Kanji support is disabled\n  if (mode === Mode.KANJI && !Utils.isKanjiModeEnabled()) {\n    mode = Mode.BYTE\n  }\n\n  switch (mode) {\n    case Mode.NUMERIC:\n      return new NumericData(data)\n\n    case Mode.ALPHANUMERIC:\n      return new AlphanumericData(data)\n\n    case Mode.KANJI:\n      return new KanjiData(data)\n\n    case Mode.BYTE:\n      return new ByteData(data)\n  }\n}\n\n/**\n * Builds a list of segments from an array.\n * Array can contain Strings or Objects with segment's info.\n *\n * For each item which is a string, will be generated a segment with the given\n * string and the more appropriate encoding mode.\n *\n * For each item which is an object, will be generated a segment with the given\n * data and mode.\n * Objects must contain at least the property \"data\".\n * If property \"mode\" is not present, the more suitable mode will be used.\n *\n * @param  {Array} array Array of objects with segments data\n * @return {Array}       Array of Segments\n */\nexports.fromArray = function fromArray (array) {\n  return array.reduce(function (acc, seg) {\n    if (typeof seg === 'string') {\n      acc.push(buildSingleSegment(seg, null))\n    } else if (seg.data) {\n      acc.push(buildSingleSegment(seg.data, seg.mode))\n    }\n\n    return acc\n  }, [])\n}\n\n/**\n * Builds an optimized sequence of segments from a string,\n * which will produce the shortest possible bitstream.\n *\n * @param  {String} data    Input string\n * @param  {Number} version QR Code version\n * @return {Array}          Array of segments\n */\nexports.fromString = function fromString (data, version) {\n  var segs = getSegmentsFromString(data, Utils.isKanjiModeEnabled())\n\n  var nodes = buildNodes(segs)\n  var graph = buildGraph(nodes, version)\n  var path = dijkstra.find_path(graph.map, 'start', 'end')\n\n  var optimizedSegs = []\n  for (var i = 1; i < path.length - 1; i++) {\n    optimizedSegs.push(graph.table[path[i]].node)\n  }\n\n  return exports.fromArray(mergeSegments(optimizedSegs))\n}\n\n/**\n * Splits a string in various segments with the modes which\n * best represent their content.\n * The produced segments are far from being optimized.\n * The output of this function is only used to estimate a QR Code version\n * which may contain the data.\n *\n * @param  {string} data Input string\n * @return {Array}       Array of segments\n */\nexports.rawSplit = function rawSplit (data) {\n  return exports.fromArray(\n    getSegmentsFromString(data, Utils.isKanjiModeEnabled())\n  )\n}\n","var Utils = require('./utils')\nvar ECCode = require('./error-correction-code')\nvar ECLevel = require('./error-correction-level')\nvar Mode = require('./mode')\nvar VersionCheck = require('./version-check')\nvar isArray = require('isarray')\n\n// Generator polynomial used to encode version information\nvar G18 = (1 << 12) | (1 << 11) | (1 << 10) | (1 << 9) | (1 << 8) | (1 << 5) | (1 << 2) | (1 << 0)\nvar G18_BCH = Utils.getBCHDigit(G18)\n\nfunction getBestVersionForDataLength (mode, length, errorCorrectionLevel) {\n  for (var currentVersion = 1; currentVersion <= 40; currentVersion++) {\n    if (length <= exports.getCapacity(currentVersion, errorCorrectionLevel, mode)) {\n      return currentVersion\n    }\n  }\n\n  return undefined\n}\n\nfunction getReservedBitsCount (mode, version) {\n  // Character count indicator + mode indicator bits\n  return Mode.getCharCountIndicator(mode, version) + 4\n}\n\nfunction getTotalBitsFromDataArray (segments, version) {\n  var totalBits = 0\n\n  segments.forEach(function (data) {\n    var reservedBits = getReservedBitsCount(data.mode, version)\n    totalBits += reservedBits + data.getBitsLength()\n  })\n\n  return totalBits\n}\n\nfunction getBestVersionForMixedData (segments, errorCorrectionLevel) {\n  for (var currentVersion = 1; currentVersion <= 40; currentVersion++) {\n    var length = getTotalBitsFromDataArray(segments, currentVersion)\n    if (length <= exports.getCapacity(currentVersion, errorCorrectionLevel, Mode.MIXED)) {\n      return currentVersion\n    }\n  }\n\n  return undefined\n}\n\n/**\n * Returns version number from a value.\n * If value is not a valid version, returns defaultValue\n *\n * @param  {Number|String} value        QR Code version\n * @param  {Number}        defaultValue Fallback value\n * @return {Number}                     QR Code version number\n */\nexports.from = function from (value, defaultValue) {\n  if (VersionCheck.isValid(value)) {\n    return parseInt(value, 10)\n  }\n\n  return defaultValue\n}\n\n/**\n * Returns how much data can be stored with the specified QR code version\n * and error correction level\n *\n * @param  {Number} version              QR Code version (1-40)\n * @param  {Number} errorCorrectionLevel Error correction level\n * @param  {Mode}   mode                 Data mode\n * @return {Number}                      Quantity of storable data\n */\nexports.getCapacity = function getCapacity (version, errorCorrectionLevel, mode) {\n  if (!VersionCheck.isValid(version)) {\n    throw new Error('Invalid QR Code version')\n  }\n\n  // Use Byte mode as default\n  if (typeof mode === 'undefined') mode = Mode.BYTE\n\n  // Total codewords for this QR code version (Data + Error correction)\n  var totalCodewords = Utils.getSymbolTotalCodewords(version)\n\n  // Total number of error correction codewords\n  var ecTotalCodewords = ECCode.getTotalCodewordsCount(version, errorCorrectionLevel)\n\n  // Total number of data codewords\n  var dataTotalCodewordsBits = (totalCodewords - ecTotalCodewords) * 8\n\n  if (mode === Mode.MIXED) return dataTotalCodewordsBits\n\n  var usableBits = dataTotalCodewordsBits - getReservedBitsCount(mode, version)\n\n  // Return max number of storable codewords\n  switch (mode) {\n    case Mode.NUMERIC:\n      return Math.floor((usableBits / 10) * 3)\n\n    case Mode.ALPHANUMERIC:\n      return Math.floor((usableBits / 11) * 2)\n\n    case Mode.KANJI:\n      return Math.floor(usableBits / 13)\n\n    case Mode.BYTE:\n    default:\n      return Math.floor(usableBits / 8)\n  }\n}\n\n/**\n * Returns the minimum version needed to contain the amount of data\n *\n * @param  {Segment} data                    Segment of data\n * @param  {Number} [errorCorrectionLevel=H] Error correction level\n * @param  {Mode} mode                       Data mode\n * @return {Number}                          QR Code version\n */\nexports.getBestVersionForData = function getBestVersionForData (data, errorCorrectionLevel) {\n  var seg\n\n  var ecl = ECLevel.from(errorCorrectionLevel, ECLevel.M)\n\n  if (isArray(data)) {\n    if (data.length > 1) {\n      return getBestVersionForMixedData(data, ecl)\n    }\n\n    if (data.length === 0) {\n      return 1\n    }\n\n    seg = data[0]\n  } else {\n    seg = data\n  }\n\n  return getBestVersionForDataLength(seg.mode, seg.getLength(), ecl)\n}\n\n/**\n * Returns version information with relative error correction bits\n *\n * The version information is included in QR Code symbols of version 7 or larger.\n * It consists of an 18-bit sequence containing 6 data bits,\n * with 12 error correction bits calculated using the (18, 6) Golay code.\n *\n * @param  {Number} version QR Code version\n * @return {Number}         Encoded version info bits\n */\nexports.getEncodedBits = function getEncodedBits (version) {\n  if (!VersionCheck.isValid(version) || version < 7) {\n    throw new Error('Invalid QR Code version')\n  }\n\n  var d = version << 12\n\n  while (Utils.getBCHDigit(d) - G18_BCH >= 0) {\n    d ^= (G18 << (Utils.getBCHDigit(d) - G18_BCH))\n  }\n\n  return (version << 12) | d\n}\n","export class DataSubjectModel {\n    id:any;\n    name: string;\n    email: string;\n    phone: string;\n}\n\nexport class DataProtectionOfficer {\n    id: any;\n    Name: string;\n    PositionInOrganisation: string;\n    EmailAddress: string;\n    PhysicalAddress: string;\n    PhoneNumber: string;\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {FindCompanyRegistrationComponent} from './components/find-company-registration/find-company-registration.component';\nimport {AuthGuard} from '../../authentication/auth.guard';\nimport {EditCompanyRegistrationComponent} from './components/edit-company-registration/edit-company-registration.component';\nimport { RegisterOrganisationComponent } from './components/register-organisation/register-organisation.component';\nimport { UpdateRegistrationComponent } from './components/update-registration/update-registration.component';\nimport { RenewalsComponent } from './components/cert-renewals/renewals/renewals.component';\nimport { UpdateInformationComponent } from './components/update/update-information/update-information.component';\nimport { ManageRegistrationUpdateComponent } from './components/manage-registration-update/manage-registration-update.component';\nimport { UraPaymentsComponent } from './components/ura-payments/ura-payments.component';\nimport { ManageUraPaymentComponent } from './components/manage-ura-payment/manage-ura-payment.component';\nimport { CancelRegistrationComponent } from './components/cancel-registration/cancel-registration.component';\nimport { ViewCancelRegistrationComponent } from './components/view-cancel-registration/view-cancel-registration.component';\nimport { CompanyRegistrationDetailComponent } from './components/company-registration-detail/company-registration-detail.component';\n\nconst routes: Routes = [\n  {\n    path: 'find',\n    component: FindCompanyRegistrationComponent,\n    canActivate: [AuthGuard],\n    data: {\n      roles: ['find.company.registration'],\n      action: 'FIND'\n    }\n  },\n  {\n    path: 'pending-task',\n    component: FindCompanyRegistrationComponent,\n    canActivate: [AuthGuard],\n    data: {\n      roles: ['find.company.registration'],\n      action: 'PENDING-TASK'\n    }\n  },\n\n  {\n    path: 'register',\n    component: EditCompanyRegistrationComponent,\n    canActivate: [AuthGuard],\n    data: {\n      roles: ['register.company'],\n      action: 'EDIT',\n      viewOnlyMode: false\n    }\n  },\n\n  {\n    path: 'cancel-registration',\n    component: CancelRegistrationComponent,\n    canActivate: [AuthGuard],\n    data: {\n      roles: ['cancel.registration'],\n      action: 'EDIT',\n      viewOnlyMode: true\n    }\n  },\n\n\n\n  {\n    path: 'apply',\n    component: RegisterOrganisationComponent,\n    canActivate: [AuthGuard],\n    data: {\n      // roles: ['register.company'],\n      action: 'EDIT',\n      viewOnlyMode: false\n    }\n  },\n  {\n    path: 'view',\n    component: UpdateRegistrationComponent,\n    canActivate: [AuthGuard],\n    data: {\n      roles: ['view.company.registration'],\n      action: 'VIEW',\n      viewOnlyMode: true\n    }\n  },\n  {\n    path: 'ura-payment',\n    component: UraPaymentsComponent,\n    canActivate: [AuthGuard],\n    data: {\n      roles: ['ura.payment'],\n      action: 'MANAGE',\n      viewOnlyMode: false\n    }\n  },\n\n  {\n    path: 'prn-information',\n    component: ManageUraPaymentComponent,\n    canActivate: [AuthGuard],\n    data: {\n      roles: ['manage.ura'],\n      action: 'FIND',\n      viewOnlyMode: false\n    }\n  },\n  {\n    path: 'perform-action',\n    component: EditCompanyRegistrationComponent,\n    canActivate: [AuthGuard],\n    data: {\n      roles: ['view.company.registration'],\n      action: 'MANAGE',\n      viewOnlyMode: true\n    }\n  },\n\n  {\n    path: 'update',\n    component: UpdateInformationComponent,\n    canActivate: [AuthGuard],\n    data: {\n      roles: ['renewals.registration'],\n      action: 'MANAGE'\n    }\n  },\n\n \n  {\n    path: 'update-application',\n    component: UpdateRegistrationComponent,\n    canActivate: [AuthGuard],\n    data: {\n      roles: ['view.company.registration'],\n      action: 'MANAGE',\n      viewOnlyMode: true\n    }\n  },\n\n  {\n    path: 'update-registration-details',\n    component: CompanyRegistrationDetailComponent,\n    canActivate: [AuthGuard],\n    data: {\n      roles: ['view.company.registration'],\n      action: 'MANAGE',\n      viewOnlyMode: true\n    }\n  },\n\n  {\n    path: 'view-cancel-registration',\n    component: ViewCancelRegistrationComponent,\n    canActivate: [AuthGuard],\n    data: {\n      roles: ['cancel.registration'],\n      action: 'MANAGE',\n      viewOnlyMode: true\n    }\n  },\n\n  {\n    path: 'manage-registration-update',\n    component: ManageRegistrationUpdateComponent,\n    canActivate: [AuthGuard],\n    data: {\n      roles: ['view.company.registration'],\n      action: 'MANAGE',\n      viewOnlyMode: true\n    }\n  },\n  {\n    path: 'renewals',\n    component: RenewalsComponent,\n    canActivate: [AuthGuard],\n    data: {\n      // roles: ['register.company'],\n      action: 'EDIT',\n      viewOnlyMode: false\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CompanyRegistrationRoutingModule { }\n","import {AfterViewInit, Component, EventEmitter, Input, OnInit, ViewChild} from '@angular/core';\nimport {forkJoin,Observable,Subscription} from 'rxjs';\nimport {catchError} from 'rxjs/operators';\nimport {HttpClient} from '@angular/common/http';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {\n    ComponyRegistrationObject,\n    CancelRegistration\n} from '../company-registration.model';\nimport {\n    DataType, DateFinderOptions,\n    IFinderField,\n    ListColumn,\n    LookupFinderOptions,\n    TextFinderOptions\n} from '../../../../../@fury/shared/list/list-column.model';\nimport {\n  ApiPayload,\n  FileUpload,\n    \n} from '../../../../services/api.model';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {MatDialog} from '@angular/material/dialog';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {fadeInRightAnimation} from '../../../../../@fury/animations/fade-in-right.animation';\nimport {fadeInUpAnimation} from '../../../../../@fury/animations/fade-in-up.animation';\nimport {BaseFuryForm} from '../../../../../@fury/shared/base-fury-form';\nimport {CompanyRegistrationService} from '../../company-registration.service';\nimport {KeycloakService} from 'keycloak-angular';\nimport {WorkflowServiceService} from '../../../../services/workflow-service.service';\nimport {AuthenticationService} from '../../../../authentication/authentication.service';\nimport {ComplaintService} from '../../../complaints/complaints.service';\nimport { OrgUploadComponent } from '../../../../layout/dialogs/org-upload/org-upload.component';\nimport {ApiService} from '../../../../services/api.service';\nimport { SuccessfulMessageDialogComponent } from '../../../../layout/dialogs/successful-message-dialog/successful-message-dialog.component';\nimport { environment } from '../../../../../environments/environment';\nimport {ApiEndpointsService} from '../../../../services/api-endpoints.service';\n\n@Component({\n  selector: 'fury-cancel-registration',\n  templateUrl: './cancel-registration.component.html',\n  styleUrls: ['./cancel-registration.component.scss'],\n  animations: [fadeInRightAnimation, fadeInUpAnimation]\n})\nexport class CancelRegistrationComponent extends BaseFuryForm implements OnInit, AfterViewInit {\n\noperationType = '';\nRegTrackingNo: string;\nprocessing=false;\nrealmRole: string;\ndialogRef;\n// Array\nhttpSub: Subscription;\naccesses: any [] = [];\nformCancelRegistration: FormGroup;\ndocument: FileUpload | null;\n// Subscriptions\nsubscriptions: Subscription[] = [];\n\ncancelRegistration: CancelRegistration[];\n// Events\n$processingEvent: EventEmitter<boolean> = new EventEmitter();\n$errorsEvent: EventEmitter<any> = new EventEmitter();\n$resultCompaniesEvent: EventEmitter<CancelRegistration> = new EventEmitter();\n// Boolean\nisProcessing = false;\nisOrganisation = false;\n@Input()\ncolumns: ListColumn[] = [\n    {name: 'Registration N0', property: 'RegTrackingNo', visible: true, isModelProperty: true},\n    {name: 'Reason for Cancellation', property: 'ReasonForCancellation', visible: true, isModelProperty: true},\n    {name: 'Status', property: 'CancellationApproval', visible: true, isModelProperty: true},\n    {name: 'Actions', property: 'actions', visible: true},\n] as ListColumn[];\npageSize = 10;\ndataSource: MatTableDataSource<CancelRegistration> | null;\n\n@ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n@ViewChild(MatSort, {static: true}) sort: MatSort;\n\n// Search fields\nsearchFields: IFinderField[];\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private dialog: MatDialog,\n    private http: HttpClient,\n    private service: ApiService,\n    private route: ActivatedRoute,\n    private endpoints: ApiEndpointsService,\n    public _auth: AuthenticationService,\n    private router: Router,\n    private auth: KeycloakService,\n    private authenticationService: AuthenticationService,\n    public registrationService: CompanyRegistrationService,\n    public _workflowService: WorkflowServiceService,\n    public complaintService:ComplaintService\n   \n  ) {\n    super(\n      auth,\n      _workflowService,\n      registrationService,\n      complaintService,\n  );\n\n  this.operationType = route.routeConfig.data.action;\n   }\n\n  ngOnInit(): void {\n\n    if (this.auth.getKeycloakInstance().resourceAccess['dps-frontend']) {\n      this.accesses = this.auth.getKeycloakInstance().resourceAccess['dps-frontend'].roles;\n\n  }\n\n  \n  this.formCancelRegistration = this.formBuilder.group({\n    ReasonForCancellation: new FormControl('', [Validators.required]),\n  });\n\n  if (this.auth.getKeycloakInstance().realmAccess) {\n      if(this.auth.getKeycloakInstance().realmAccess.roles.includes('organisation')){\n          this.isOrganisation = true;\n\n          this.httpSub = this.fetchMultiple()\n          .pipe(catchError(this.service.handleError))\n          .subscribe((responseList) => {\n            console.log(responseList[0][0]);\n\n            if(!(responseList[1].data[0].CerificateNumber)){\n\n              this.dialogRef.afterClosed().subscribe(() => {\n                this.dialogRef = this.dialog.open(SuccessfulMessageDialogComponent, {\n                  panelClass: ['successful-message-dialog', 'dialogs'],\n                  disableClose: true,\n                  data: {\n                    title:  'Error',\n                    message: 'Organisation does not have a valid certificate',\n                    status: false,\n                  }\n                });\n                this.router.navigate(['/']);\n              });\n            }\n           \n            this.RegTrackingNo =  responseList[0][0].RegTrackingNo;\n      \n            \n      \n            this.processing = false;\n          }, (error) => {\n            this.processing = false;\n            this.service.determineErrorResponse(error);\n          });\n      }\n  }\n\n   \n\n\n  // Processing event\n  this.subscriptions['$processingEvent'] = this.$processingEvent.subscribe(isProcessing => this.isProcessing = isProcessing);\n\n  this.dataSource = new MatTableDataSource();\n\n  // registeredCompanies\n  this.subscriptions['$resultCompaniesEvent'] = this.$resultCompaniesEvent.subscribe(result => {\n      if (result) {\n        console.log(result);\n          this.cancelRegistration = result;\n          this.dataSource.data = result;\n          this.isLoaded = true;\n      }\n  });\n\n  this.loadRegistrationCancelRequests();\n\n  \n\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n}\n\n\nprivate getFormData(): any {\n\n  return {\n    \n    \n    ReasonForCancellation: this.formCancelRegistration.get('ReasonForCancellation').value ? this.formCancelRegistration.get('ReasonForCancellation').value : '',\n    Attachment: this.document ? this.document.Base64 : '',\n    RegTrackingNo: this.RegTrackingNo,\n    \n  \n  };\n}\n\n// TODO:: Need to hide addressedTo Column from data controllers its mainly for nita data-protection officers\nget visibleColumns() {\n  return this.columns.filter(column => column.visible).map(column => column.property);\n}\n\nonSubmit(): void {\n  this.processing = true;\n  console.log(this.getFormData());\n  console.log('save the registration information:', this.getFormData());\n\n  this.httpSub = this.http.post<ApiPayload>(this.endpoints.cancelRegistration, this.getFormData())\n  .pipe(catchError(this.service.handleError))\n  .subscribe((response) => {\n    \n    this.dialogRef = this.dialog.open(SuccessfulMessageDialogComponent, {\n      panelClass: ['successful-message-dialog', 'dialogs'],\n      disableClose: true,\n      data: {\n        title:  'Success',\n        message: 'Request to cancel registration has been sent',\n        status: true,\n      }\n    });\n    this.router.navigate(['/']);\n\n    this.processing = false;\n  }, (error) => {\n    this.processing = false;\n\n    if (error.error.message) {\n      this.dialogRef = this.dialog.open(SuccessfulMessageDialogComponent, {\n        panelClass: ['successful-message-dialog', 'dialogs'],\n        disableClose: true,\n        data: {\n          title: error.error.message['title'] ? error.error.message['title'] : 'Operation Failed',\n          message: error.error.message['body'] ? error.error.message['body'] : environment.technicalErrorResponse,\n          status: false,\n        }\n      });\n    } else {\n      this.service.determineErrorResponse(error);\n    }\n  });\n}\n\nonFilterChange(value) {\n  if (!this.dataSource) {\n      return;\n  }\n  value = value.trim();\n  value = value.toLowerCase();\n  this.dataSource.filter = value;\n}\n\nloadRegistrationCancelRequests() {\n\n  \n\n  this.registrationService.getRequestsToCancel( this.$processingEvent, this.$resultCompaniesEvent, this.$errorsEvent);\n}\n\nonUploadAttachments(): void {\n  this.dialogRef = this.dialog.open(OrgUploadComponent, {\n    panelClass: ['organisation-upload-dialog', 'dialogs'],\n    disableClose: true,\n    data: {\n      multiple: false\n    }\n  });\n\n  this.dialogRef.afterClosed().subscribe((result: { status: boolean, row: FileUpload }) => {\n    console.log('row:', result.row);\n\n    if (result.status) {\n      this.document = result.row;\n    }\n  });\n}\n\nonRemoveDocument(): void {\n  this.document = null;\n}\n\n\nprivate fetchMultiple(): Observable<any[]> {\n  \n  const registrationDetails = this.http.get<ApiPayload>(this.endpoints.getOrgDetailsById, { params: { OrganizationID: this._auth.getOrganisationID() } });\n  const certificate =  this.http.get<ApiPayload>(this.endpoints.checkCertificate, { params: { OrganizationID: this._auth.getOrganisationID() } });\n  // tslint:disable-next-line:max-line-length\n  return forkJoin([\n    registrationDetails, certificate\n  ]);\n}\n\n\nmanageRegistration(registration) {\n  \n      this.router.navigate(['/company-registration/view-cancel-registration'],\n          {state: {regTrackingNo: registration.RegTrackingNo}}).then();\n  \n\n}\n\n\n}\n","<fury-page-layout>\n    <fury-page-layout-header>\n        <fury-breadcrumbs [@fadeInRight]  current=\"Cancel Registration\"></fury-breadcrumbs>\n    </fury-page-layout-header>\n    <fury-page-layout-content *ngIf=\"isOrganisation\">\n        <div [@fadeInUp] class=\"\">\n            <div labelPosition=\"top\">\n \n                <div>\n                    \n                    <form [formGroup]=\"formCancelRegistration\">\n                        <section style=\"margin-top: 50px;\">\n                            <h2 style=\"text-align: center; font-weight: bold;\">CANCEL REGISTRATION</h2>\n                        </section>\n                        <section>\n                            <mat-form-field fxFlex=\"2 2 auto\" [ngStyle]=\"{'margin-right': '20px'}\">\n                                <mat-label>Reason for cancellation<span class=\"required-field\">required</span></mat-label>\n                                <textarea matInput\n                                    cdkTextareaAutosize\n                                    #autosize=\"cdkTextareaAutosize\"\n                                    cdkAutosizeMinRows=\"1\"\n                                    formControlName=\"ReasonForCancellation\"\n                                    cdkAutosizeMaxRows=\"5\"></textarea>             \n                            </mat-form-field>\n            \n                        </section>\n\n                        <section class=\"expand-section reduced-properties table-wrapper margin documents\">\n                            <h2 class=\"full-width step-header\">Attach notice for cancellation</h2>\n        \n                            <div class=\"buttons\">\n                                <button \n                                    mat-button\n                                    color=\"primary\"\n                                    [disabled]=\"processing\"\n                                    class=\"add-item-button\"\n                                    (click)=\"onUploadAttachments()\">\n                                    <div class=\"button-label\">\n                                        <mat-icon>add</mat-icon>                            \n                                        <span> {{ document ? 'Replace Document' : 'Upload Attachment' }} </span>\n                                    </div>\n                                </button>\n            \n                                <button \n                                    mat-button\n                                    *ngIf=\"document\"\n                                    color=\"primary\"\n                                    [disabled]=\"processing\"\n                                    class=\"remove-button\"\n                                    (click)=\"onRemoveDocument()\">\n                                    <div class=\"button-label\">\n                                        <mat-icon>clear</mat-icon>\n                                        <span> Remove Document </span>\n                                    </div>\n                                </button>\n                            </div>\n        \n                            <div *ngIf=\"document\" class=\"uploaded-document\" matTooltip=\"Open Document\" (click)=\"onReadDocument(document)\" style=\"margin-top: 20px;\">\n                                <img width=\"50\" height=\"50\" src=\"./assets/img/pdf.png\" alt=\"\">\n        \n                                <span>Document: {{ document.Name }} <span>  -  {{ document.Size }} Mbs</span></span>\n                            </div>\n        \n                        </section>\n                    </form>\n     \n                    <div class=\"buttons\" fxLayout=\"row\" fxLayoutAlign=\"end center\" fxLayoutGap=\"8px\">\n                        <button\n                            [disabled]=\"formCancelRegistration.invalid\"\n                            mat-button \n                            color=\"primary\" \n                            [ngClass]=\"{'inline-processing-btn': processing }\"      \n                            class=\"next-btn submit-btn\"                 \n                            (click)=\"onSubmit()\"\n                            mat-raised-button>                        \n                                <span>Submit Request</span>\n                        </button>\n                    </div>\n                                \n                </div>\n            </div>    \n        </div>\n    </fury-page-layout-content>   \n\n    <fury-page-layout-content *ngIf=\"isOrganisation == false\" [@fadeInUp]>\n        <fury-list \n            name=\"Requests to cancel\" \n            [columns]=\"columns\" \n            (filterChange)=\"onFilterChange($event)\"\n            finderDialogTitle=\"Finder\"\n            [searchFields]=\"searchFields\">\n\n            <div class=\"table-container\">\n                <table [dataSource]=\"dataSource\" mat-table matSort>\n                    <ng-container matColumnDef=\"checkbox\">\n                        <th *matHeaderCellDef class=\"actions-cell\" mat-header-cell>\n                            <mat-checkbox color=\"primary\" (click)=\"$event.stopPropagation()\"></mat-checkbox>\n                        </th>\n                        <td *matCellDef=\"let row\" class=\"actions-cell\" mat-cell>\n                            <mat-checkbox color=\"primary\" (click)=\"$event.stopPropagation()\"></mat-checkbox>\n                        </td>\n                    </ng-container>\n    \n                    <!-- fullName Column -->\n                    <ng-container *ngFor=\"let column of columns\">\n                        <ng-container *ngIf=\"column.isModelProperty\" [matColumnDef]=\"column.property\">\n                            <th *matHeaderCellDef mat-header-cell mat-sort-header> {{ column.name }}</th>\n                            <td *matCellDef=\"let row\" mat-cell>\n                                {{ row[column.property] }}\n                            </td>\n                        </ng-container>\n                    </ng-container>\n    \n                    <ng-container matColumnDef=\"actions\">\n                        <th *matHeaderCellDef class=\"actions-cell\" mat-header-cell mat-sort-header>Actions</th>\n                        <td *matCellDef=\"let row\" class=\"actions-cell\" mat-cell>\n                            <button type=\"button\" mat-icon-button [matMenuTriggerFor]=\"actionsMenu\"\n                                    (click)=\"$event.stopPropagation()\">\n                                <mat-icon>more_vert</mat-icon>\n                            </button>\n    \n                            <mat-menu #actionsMenu=\"matMenu\" yPosition=\"below\" xPosition=\"before\">\n                                <!-- <button (click)=\"viewRegistration(row)\"  mat-menu-item\n                                   routerLinkActive=\"router-link-active\">\n                                    <mat-icon>visibility</mat-icon>\n                                    <span>View</span>\n                                </button> -->\n                                <button (click)=\"manageRegistration(row)\"  mat-menu-item\n                                        routerLinkActive=\"router-link-active\">\n                                    <mat-icon>settings</mat-icon>\n                                    <span>Manage</span>\n                                </button>\n                            </mat-menu>\n                        </td>\n                    </ng-container>\n                    <tr *matHeaderRowDef=\"visibleColumns\" mat-header-row></tr>\n                    <tr\n                        *matRowDef=\"let row; columns: visibleColumns;\"\n                        class=\"clickable route-animations-elements\"\n                        mat-row></tr>\n                </table>\n            </div>\n            \n            <mat-paginator \n\n                class=\"paginator\" \n                [pageSize]=\"pageSize\">\n            </mat-paginator>\n        </fury-list>\n    </fury-page-layout-content>\n</fury-page-layout>\n \n"],"sourceRoot":"webpack:///"}