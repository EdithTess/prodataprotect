{"version":3,"sources":["webpack:///src/@fury/shared/highlightjs/highlight.module.ts","webpack:///src/@fury/services/util.service.ts"],"names":["HighlightModule","imports","declarations","exports","UtilService","nMonths","month","Date","getMonth","day","getDate","year","getFullYear","numberInputField","dateString","defaultServerDateFormat","defaultLocale","defaultServerDateTimeFormat","value","digitalInfo","digitalFormat","defaultDigitalInfo","event","targetField","document","fieldControl","target","source","selected","_element","nativeElement","text","innerText","trim","arrayText","split","length","setValue","selectedData","viewValue","items","pattern","addDefaultOption","itemsResult","undefined","push","key","disabled","forEach","item","label","rawData","fileName","extensionArray","extension","toLowerCase","contentType","str","index","replace","lengthOfCode","possible","i","charAt","Math","floor","random","max","entity","stringDate","catalogRequest","searchRequest","Object","assign","viewColumn","JSON","stringify","criteria","jsonRequest","q","includeTotals","excludeRecords","pagination","viewColumns","sortBy","enumClass","list","keys","constantNameToDescription","constantName","stringFormatted","words","word","toUpperCase","substring","concat","substr","order","columns","searchRequestEncoded","path","obj","reduce","prev","curr","self","providedIn"],"mappings":"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","file":"default~modules-company-registration-company-registration-module~modules-complaints-complaints-modul~2b0601b3-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { HighlightDirective } from './highlight.directive';\n\n@NgModule({\n  imports: [],\n  declarations: [HighlightDirective],\n  exports: [HighlightDirective]\n})\nexport class HighlightModule {\n}\n","import { formatDate, formatNumber } from '@angular/common';\nimport { Injectable } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\nimport { MatOption } from '@angular/material/core';\nimport { MatSelectChange } from '@angular/material/select';\n// import { environment } from 'src/environments/environment';\nimport { environment } from '../../environments/environment';\nimport {CatalogRequest, ISearchExpression, ISearchOrder, ISearchPagination, ISearchRequest, LookupValue } from '../shared/list/list-column.model';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class UtilService {\n  constructor() {\n  }\n\n  public addMonthToDate(nMonths: number): Date {\n    const month = new Date().getMonth();\n    let day = new Date().getDate();\n    const year = new Date().getFullYear();\n    if (month + nMonths > 12) {\n      if ((month + nMonths) % 12 === 2) {\n        if (day > 29) {\n          day = 28;\n        }\n      }\n      return new Date(year + 1, (month + nMonths) % 12, day);\n    } else {\n      if (month + nMonths === 2) {\n        if (day > 29) {\n          day = 28;\n        }\n      }\n      return new Date(year, month + nMonths, day);\n    }\n  }\n\n  public convertToNumber(numberInputField): number {\n    return (numberInputField && numberInputField !== '') ? +numberInputField : null;\n  }\n\n  public transformDate(dateString: string) {\n    return dateString && dateString !== null + '' ?\n        formatDate(dateString, environment.defaultServerDateFormat, environment.defaultLocale) :\n        null;\n  }\n\n  public transformDateTime(dateString: string) {\n    if (dateString && dateString !== null + '') {\n      return formatDate(dateString, environment.defaultServerDateTimeFormat, environment.defaultLocale, '+0300');\n    } else {\n      return null;\n    }\n  }\n\n  public formatDecimal(value: number, digitalInfo?: string) {\n    const digitalFormat = (digitalInfo) ? digitalInfo : environment.defaultDigitalInfo;\n    return formatNumber(value, environment.defaultLocale, digitalFormat);\n  }\n\n  // setSelectedText(event, targetField: string, document: any) {\n  //   const target = event.source.selected._element.nativeElement;\n  //   let text = target.innerText.trim();\n  //   const arrayText = text.split('|');\n  //\n  //   if (arrayText.length > 1) {\n  //     text = arrayText[1];\n  //   } else {\n  //     text = arrayText[0];\n  //   }\n  //\n  //   if (document) {\n  //     document[targetField] = text;\n  //   }\n  // }\n\n  public setSelectedText(event, targetField: string, document: any, fieldControl?: AbstractControl) {\n    const target = event.source.selected._element.nativeElement;\n    let text = target.innerText.trim();\n    const arrayText = text.split('|');\n    if (arrayText.length > 1) {\n      text = arrayText[1];\n    } else {\n      text = arrayText[0];\n    }\n    if (document) {\n      document[targetField] = text.trim();\n    }\n    if (fieldControl) {\n      fieldControl.setValue(text.trim());\n    }\n  }\n\n  /**\n   * Get text of mat-select option selected\n   */\n  public setSelectedOptionText(event: MatSelectChange): string {\n    const selectedData = {\n      text: (event.source.selected as MatOption).viewValue,\n      value: event.source.value\n    };\n    const arrayText = selectedData.text.split('|');\n    return (arrayText.length > 1) ? arrayText[1] : arrayText[0];\n  }\n\n  public getGenericDDL(items: [], pattern: any, addDefaultOption?: boolean): {}[] {\n    const itemsResult: {}[] = [];\n    if (addDefaultOption === undefined || addDefaultOption === true) {\n      itemsResult.push(\n          {\n            key: '',\n            value: 'Select an option',\n            disabled: true\n          });\n    }\n    items.forEach(item => {\n      itemsResult.push({\n        key: item[pattern.key],\n        value: item[pattern.label],\n        disabled: false,\n        rawData: item\n      });\n    });\n    return itemsResult;\n  }\n\n  public getContentType(fileName: string) {\n    const extensionArray: string[] = fileName.split('.');\n    const extension = extensionArray[extensionArray.length - 1].toLowerCase();\n    let contentType: string;\n    switch (extension) {\n      case 'pdf':\n        contentType = 'application/pdf';\n        break;\n      case 'gif':\n        contentType = 'image/gif';\n        break;\n      case 'png':\n        contentType = 'image/png';\n        break;\n      case 'jpg':\n        contentType = 'image/jpg';\n        break;\n      case 'doc':\n        contentType = 'application/msword';\n        break;\n      case 'docx':\n        contentType = 'application/msword';\n        break;\n      default:\n        contentType = 'application/octet-stream ';\n        break;\n    }\n    return contentType;\n  }\n\n  public formatString(str: string, ...val: string[]) {\n    for (let index = 0; index < val.length; index++) {\n      str = str.replace(`{${index}}`, val[index]);\n    }\n    return str;\n  }\n\n  public makeRandom(lengthOfCode: number) {\n    const possible = 'abcdefghijklmnopqrstuvwxyz1234567890';\n    let text = '';\n    for (let i = 0; i < lengthOfCode; i++) {\n      text += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n    return text;\n  }\n\n  public getRandomInt(max) {\n    return Math.floor(Math.random() * Math.floor(max)) + 1 ;\n  }\n\n  public isNotEmpty(entity: any) {\n    return entity !== undefined && entity !== null;\n  }\n\n  public getDateFromString(stringDate: string): Date {\n    if (stringDate) {\n      return new Date(stringDate);\n    } else {\n      return null;\n    }\n  }\n\n  public formatCatalogRequest(catalogRequest: CatalogRequest): string {\n    const searchRequest: any = Object.assign({}, catalogRequest);\n    if (catalogRequest) {\n      if (catalogRequest.viewColumn) {\n        searchRequest.viewColumn = JSON.stringify(catalogRequest.viewColumn);\n      }\n      if (catalogRequest.criteria) {\n        // we must send the search criteria array as a string\n        searchRequest.criteria = JSON.stringify(catalogRequest.criteria);\n      }\n    }\n    return searchRequest;\n  }\n\n  public formatSearchRequest(searchRequest: ISearchRequest): string {\n    const jsonRequest: any = Object.assign({}, {q: searchRequest});\n    jsonRequest.q = JSON.stringify(searchRequest);\n    return jsonRequest;\n  }\n\n  public getSearchRequest(\n      includeTotals: boolean,\n      excludeRecords: boolean,\n      pagination: ISearchPagination,\n      viewColumns: string[],\n      criteria: ISearchExpression[],\n      sortBy: ISearchOrder[]): ISearchRequest {\n    return {\n      includeTotals: includeTotals,\n      excludeRecords: excludeRecords,\n      pagination: pagination,\n      viewColumns: viewColumns,\n      criteria: criteria,\n      sortBy: sortBy};\n  }\n\n  public enumToLookupValue(enumClass: any): LookupValue[] {\n    const list: LookupValue[] = [];\n    Object.keys(enumClass).forEach((key) => {\n      list.push({\n        key: key,\n        value: enumClass[key]\n      });\n    });\n    return list;\n  }\n\n  public setLookupValues(items: [], pattern: any): LookupValue[] {\n    const itemsResult: LookupValue[] = [];\n    items.forEach(item => {\n      itemsResult.push(\n          {\n            key: item[pattern.key],\n            value: item[pattern.label]\n          }\n      );\n    });\n    return itemsResult;\n  }\n\n  public getListOptionsFromEnum(enumClass: any): {}[] {\n    const itemsResult: {}[] = [\n      {\n        key: '',\n        value: 'Select an option',\n        disabled: true\n      }\n    ];\n    Object.keys(enumClass).forEach((key) => {\n      itemsResult.push({\n        key: key,\n        value: this.constantNameToDescription(enumClass[key]),\n        disabled: false,\n        rawData: key\n      });\n    });\n    return itemsResult;\n  }\n\n  public constantNameToDescription(constantName: string): string {\n    if (!constantName || constantName.trim() === '') {\n      return 'N/A';\n    }\n    let stringFormatted = '';\n    const words: string[] = constantName.split('_');\n    words.forEach(word => {\n      if (word.length === 1) {\n        word = word.toUpperCase();\n      } else {\n        word = word.substring(0, 1).toUpperCase().concat(word.substr(1).toLowerCase());\n      }\n      stringFormatted += word + ' ';\n    });\n    return stringFormatted.trim();\n  }\n\n  public buildSearchRequest(\n      order: ISearchOrder[],\n      columns: string[],\n      pagination: ISearchPagination,\n      criteria: ISearchExpression[]): any {\n    const searchRequest: any = {\n      q: {\n        includeTotals: true,\n        excludeRecords: false\n      }\n    };\n    if (order) {\n      searchRequest.q.sortBy = order;\n    }\n    if (columns) {\n      searchRequest.q.viewColumns = columns;\n    }\n    if (pagination) {\n      searchRequest.q.pagination = pagination;\n    }\n    if (criteria) {\n      searchRequest.q.criteria = criteria;\n    }\n    const searchRequestEncoded: any = Object.assign({}, searchRequest);\n    // Prepare json string to be sent\n    searchRequestEncoded.q = JSON.stringify(searchRequest.q);\n    // Return\n    return searchRequestEncoded;\n  }\n\n  public resolveAccessObject(path, obj) {\n    return path.split('.').reduce(function(prev, curr) {\n      return prev ? prev[curr] : null;\n    }, obj || self);\n  }\n}\n"]}